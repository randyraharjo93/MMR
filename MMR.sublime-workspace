{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"D",
				"DEFAULT_SERVER_DATE_FORMAT	(instance)"
			],
			[
				"a",
				"akundetil"
			],
			[
				"mut",
				"multi	(function)"
			],
			[
				"tan",
				"tanggalterbit"
			],
			[
				"idak",
				"idakun"
			],
			[
				"akun",
				"akundetil	(statement)"
			],
			[
				"jurnal",
				"jurnaldisesuaikan	(statement)"
			],
			[
				"many2",
				"many2one	(class)"
			],
			[
				"all",
				"all_fixed_days	(forstmt)"
			],
			[
				"fal",
				"fal_ending_date"
			],
			[
				"fal_",
				"fal_fixed_days	(statement)"
			],
			[
				"in_",
				"in_invoice_forecast"
			],
			[
				"in",
				"in_sales_forecast"
			],
			[
				"holiday",
				"holiday_remaining	(statement)"
			],
			[
				"time",
				"timedelta	(class)"
			],
			[
				"job",
				"job_id"
			],
			[
				"contr",
				"contract"
			],
			[
				"empl",
				"employee_id"
			],
			[
				"emp",
				"employee"
			],
			[
				"depar",
				"department_id"
			],
			[
				"pro",
				"probability"
			],
			[
				"team",
				"team_id"
			],
			[
				"com",
				"company_list	(statement)"
			],
			[
				"att",
				"attribute"
			],
			[
				"oppor",
				"opportunity_id"
			],
			[
				"user",
				"user_timezone	(statement)"
			],
			[
				"nama",
				"namaproduk"
			],
			[
				"tim",
				"timesheet_id	(statement)"
			],
			[
				"ti",
				"timesheet_id	(statement)"
			],
			[
				"timeshee",
				"timesheet_id	(statement)"
			],
			[
				"accou",
				"account_analytic_list	(statement)"
			],
			[
				"acco",
				"account_analytic_list	(statement)"
			],
			[
				"selec",
				"selection"
			],
			[
				"parent",
				"parent_id"
			],
			[
				"web",
				"website"
			],
			[
				"re",
				"record_options"
			],
			[
				"recor",
				"record_options"
			],
			[
				"vale",
				"values	(param)"
			],
			[
				"tracking",
				"tracking_value_ids"
			],
			[
				"c",
				"company_ids"
			],
			[
				"Many2",
				"Many2many"
			],
			[
				"fal_cem",
				"fal_crm_project"
			],
			[
				"gleize",
				"gleize_field_ext"
			],
			[
				"st",
				"string"
			],
			[
				"attrib",
				"attributes"
			],
			[
				"fal_tech",
				"fal_technical_contact"
			],
			[
				"fal_t",
				"fal_technical_contact"
			],
			[
				"par",
				"partner_id"
			],
			[
				"at",
				"attrs"
			],
			[
				"req",
				"required"
			],
			[
				"child",
				"child_ids"
			],
			[
				"paren",
				"parent_id"
			],
			[
				"pa",
				"parent_id"
			],
			[
				"l",
				"log"
			],
			[
				"cons",
				"console"
			],
			[
				"get",
				"get_context"
			],
			[
				"partner",
				"partner_id"
			],
			[
				"parnter",
				"partner_id"
			],
			[
				"le",
				"margin-left"
			],
			[
				"col",
				"col-md-3"
			],
			[
				"survey",
				"survey_form_question"
			],
			[
				"t-",
				"t-call"
			],
			[
				"id",
				"parent_id"
			],
			[
				"mu",
				"multi"
			],
			[
				"fal_account_per",
				"fal_account_periods_lock	(class)"
			],
			[
				"fis",
				"fiscalyear_id"
			],
			[
				"compan",
				"company_id"
			],
			[
				"g",
				"gleize_web_ext"
			],
			[
				"field",
				"field_name	(forstmt)"
			],
			[
				"margin",
				"margin-left"
			],
			[
				"bor",
				"border-style"
			],
			[
				"border-riht",
				"border-right-width"
			],
			[
				"va",
				"value"
			],
			[
				"form",
				"form_two"
			],
			[
				"back",
				"background-color"
			],
			[
				"mar",
				"margin-left"
			],
			[
				"r",
				"row"
			],
			[
				"text-al",
				"text-align"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "\n\nSearching 3936 files for \"DEFAULT\"\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\data\\account_data.xml:\n   65              <field name=\"name\">Validated</field>\n   66              <field name=\"res_model\">account.invoice</field>\n   67:             <field name=\"default\" eval=\"False\"/>\n   68              <field name=\"description\">Invoice validated</field>\n   69          </record>\n   ..\n   71              <field name=\"name\">Paid</field>\n   72              <field name=\"res_model\">account.invoice</field>\n   73:             <field name=\"default\" eval=\"False\"/>\n   74              <field name=\"description\">Invoice paid</field>\n   75          </record>\n   ..\n   77              <field name=\"name\">Invoice Created</field>\n   78              <field name=\"res_model\">account.invoice</field>\n   79:             <field name=\"default\" eval=\"False\"/>\n   80              <field name=\"hidden\" eval=\"True\"/>\n   81              <field name=\"description\">Invoice Created</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\models\\account.py:\n    6  from openerp.osv import expression\n    7  from openerp.tools.float_utils import float_round as round\n    8: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT\n    9  from openerp.exceptions import UserError, ValidationError\n   10  from openerp import api, fields, models, _\n   ..\n   22          ('payable', 'Payable'),\n   23          ('liquidity', 'Liquidity'),\n   24:     ], required=True, default='other',\n   25          help=\"The 'Internal Type' is used for features available on \"\\\n   26          \"different types of accounts: liquidity type is for cash or bank accounts\"\\\n   ..\n   34  \n   35      name = fields.Char(required=True)\n   36:     applicability = fields.Selection([('accounts', 'Accounts'), ('taxes', 'Taxes')], required=True, default='accounts')\n   37      color = fields.Integer('Color Index')\n   38  \n   ..\n  100          help=\"Forces all moves for this account to have this account currency.\")\n  101      code = fields.Char(size=64, required=True, index=True)\n  102:     deprecated = fields.Boolean(index=True, default=False)\n  103      user_type_id = fields.Many2one('account.account.type', string='Type', required=True, oldname=\"user_type\", \n  104          help=\"Account Type is used for information purpose, to generate country-specific legal reports, and set the rules to close a fiscal year and generate opening entries.\")\n  ...\n  109          help='Last time the invoices & payments matching was performed on this account. It is set either if there\\'s not at least '\\\n  110          'an unreconciled debit and an unreconciled credit Or if you click the \"Done\" button.')\n  111:     reconcile = fields.Boolean(string='Allow Reconciliation', default=False,\n  112          help=\"Check this box if this account allows invoices & payments matching of journal items.\")\n  113:     tax_ids = fields.Many2many('account.tax', 'account_account_tax_default_rel',\n  114:         'account_id', 'tax_id', string='Default Taxes')\n  115      note = fields.Text('Internal Notes')\n  116      company_id = fields.Many2one('res.company', string='Company', required=True,\n  117:         default=lambda self: self.env['res.company']._company_default_get('account.account'))\n  118      tag_ids = fields.Many2many('account.account.tag', 'account_account_account_tag', string='Tags', help=\"Optional tags you may want to assign for custom reporting\")\n  119  \n  ...\n  149  \n  150      @api.one\n  151:     def copy(self, default=None):\n  152:         default = dict(default or {})\n  153:         default.update(code=_(\"%s (copy)\") % (self.code or ''))\n  154:         return super(AccountAccount, self).copy(default)\n  155  \n  156      @api.multi\n  ...\n  177      @api.multi\n  178      def mark_as_reconciled(self):\n  179:         return self.write({'last_time_entries_checked': time.strftime(DEFAULT_SERVER_DATETIME_FORMAT)})\n  180  \n  181      @api.multi\n  ...\n  195      _order = 'sequence, type, code'\n  196  \n  197:     def _default_inbound_payment_methods(self):\n  198          return self.env.ref('account.account_payment_method_manual_in')\n  199  \n  200:     def _default_outbound_payment_methods(self):\n  201          return self.env.ref('account.account_payment_method_manual_out')\n  202  \n  ...\n  218      account_control_ids = fields.Many2many('account.account', 'account_account_type_rel', 'journal_id', 'account_id', string='Accounts Allowed',\n  219          domain=[('deprecated', '=', False)])\n  220:     default_credit_account_id = fields.Many2one('account.account', string='Default Credit Account',\n  221:         domain=[('deprecated', '=', False)], help=\"It acts as a default account for credit amount\")\n  222:     default_debit_account_id = fields.Many2one('account.account', string='Default Debit Account',\n  223:         domain=[('deprecated', '=', False)], help=\"It acts as a default account for debit amount\")\n  224      update_posted = fields.Boolean(string='Allow Cancelling Entries',\n  225          help=\"Check this box if you want to allow the cancellation the entries related to this journal or of the invoice related to this journal\")\n  ...\n  234      #groups_id = fields.Many2many('res.groups', 'account_journal_group_rel', 'journal_id', 'group_id', string='Groups')\n  235      currency_id = fields.Many2one('res.currency', help='The currency used to enter statement', string=\"Currency\", oldname='currency')\n  236:     company_id = fields.Many2one('res.company', string='Company', required=True, index=1, default=lambda self: self.env.user.company_id,\n  237          help=\"Company related to this journal\")\n  238  \n  239:     refund_sequence = fields.Boolean(string='Dedicated Refund Sequence', help=\"Check this box if you don't want to share the same sequence for invoices and refunds made from this journal\", default=False)\n  240  \n  241      inbound_payment_method_ids = fields.Many2many('account.payment.method', 'account_journal_inbound_payment_method_rel', 'journal_id', 'inbound_payment_method',\n  242:         domain=[('payment_type', '=', 'inbound')], string='Debit Methods', default=lambda self: self._default_inbound_payment_methods(),\n  243          help=\"Means of payment for collecting money. Odoo modules offer various payments handling facilities, \"\n  244               \"but you can always use the 'Manual' payment method in order to manage payments outside of the software.\")\n  245      outbound_payment_method_ids = fields.Many2many('account.payment.method', 'account_journal_outbound_payment_method_rel', 'journal_id', 'outbound_payment_method',\n  246:         domain=[('payment_type', '=', 'outbound')], string='Payment Methods', default=lambda self: self._default_outbound_payment_methods(),\n  247          help=\"Means of payment for sending money. Odoo modules offer various payments handling facilities, \"\n  248               \"but you can always use the 'Manual' payment method in order to manage payments outside of the software.\")\n  ...\n  264  \n  265      @api.one\n  266:     @api.constrains('currency_id', 'default_credit_account_id', 'default_debit_account_id')\n  267      def _check_currency(self):\n  268          if self.currency_id:\n  269:             if self.default_credit_account_id and not self.default_credit_account_id.currency_id.id == self.currency_id.id:\n  270:                 raise UserError(_('Configuration error!\\nThe currency of the journal should be the same than the default credit account.'))\n  271:             if self.default_debit_account_id and not self.default_debit_account_id.currency_id.id == self.currency_id.id:\n  272:                 raise UserError(_('Configuration error!\\nThe currency of the journal should be the same than the default debit account.'))\n  273  \n  274      @api.one\n  ...\n  283                  raise ValidationError(_('The holder of a journal\\'s bank account must be the company (%s).') % self.company_id.name)\n  284  \n  285:     @api.onchange('default_debit_account_id')\n  286      def onchange_debit_account_id(self):\n  287:         if not self.default_credit_account_id:\n  288:             self.default_credit_account_id = self.default_debit_account_id\n  289  \n  290:     @api.onchange('default_credit_account_id')\n  291      def onchange_credit_account_id(self):\n  292:         if not self.default_debit_account_id:\n  293:             self.default_debit_account_id = self.default_credit_account_id\n  294  \n  295      @api.multi\n  ...\n  301  \n  302      @api.one\n  303:     def copy(self, default=None):\n  304:         default = dict(default or {})\n  305:         default.update(\n  306              code=_(\"%s (copy)\") % (self.code or ''),\n  307              name=_(\"%s (copy)\") % (self.name or ''))\n  308:         return super(AccountJournal, self).copy(default)\n  309  \n  310      @api.multi\n  ...\n  323                      journal.refund_sequence_id.write({'prefix': new_prefix})\n  324              if 'currency_id' in vals:\n  325:                 if not 'default_debit_account_id' in vals and self.default_debit_account_id:\n  326:                     self.default_debit_account_id.currency_id = vals['currency_id']\n  327:                 if not 'default_credit_account_id' in vals and self.default_credit_account_id:\n  328:                     self.default_credit_account_id.currency_id = vals['currency_id']\n  329          result = super(AccountJournal, self).write(vals)\n  330  \n  ...\n  362      def _prepare_liquidity_account(self, name, company, currency_id, type):\n  363          '''\n  364:         This function prepares the value to use for the creation of the default debit and credit accounts of a\n  365          liquidity journal (created through the wizard of generating COA from templates for example).\n  366  \n  ...\n  416                      raise UserError(_(\"Cannot generate an unused journal code. Please fill the 'Shortcode' field.\"))\n  417  \n  418:             # Create a default debit/credit account if not given\n  419:             default_account = vals.get('default_debit_account_id') or vals.get('default_credit_account_id')\n  420:             if not default_account:\n  421                  company = self.env['res.company'].browse(company_id)\n  422                  account_vals = self._prepare_liquidity_account(vals.get('name'), company, vals.get('currency_id'), vals.get('type'))\n  423:                 default_account = self.env['account.account'].create(account_vals)\n  424:                 vals['default_debit_account_id'] = default_account.id\n  425:                 vals['default_credit_account_id'] = default_account.id\n  426  \n  427          # We just need to create the relevant sequences according to the chosen options\n  ...\n  490  \n  491      name = fields.Char(required=True, translate=True)\n  492:     sequence = fields.Integer(default=10)\n  493  \n  494  class AccountTax(models.Model):\n  ...\n  498  \n  499      @api.model\n  500:     def _default_tax_group(self):\n  501          return self.env['account.tax.group'].search([], limit=1)\n  502  \n  503      name = fields.Char(string='Tax Name', required=True, translate=True)\n  504:     type_tax_use = fields.Selection([('sale', 'Sales'), ('purchase', 'Purchases'), ('none', 'None')], string='Tax Scope', required=True, default=\"sale\",\n  505          help=\"Determines where the tax is selectable. Note : 'None' means a tax can't be used by itself, however it can still be used in a group.\")\n  506:     amount_type = fields.Selection(default='percent', string=\"Tax Computation\", required=True, oldname='type',\n  507          selection=[('group', 'Group of Taxes'), ('fixed', 'Fixed'), ('percent', 'Percentage of Price'), ('division', 'Percentage of Price Tax Included')])\n  508:     active = fields.Boolean(default=True, help=\"Set active to false to hide the tax without removing it.\")\n  509:     company_id = fields.Many2one('res.company', string='Company', required=True, default=lambda self: self.env.user.company_id)\n  510      children_tax_ids = fields.Many2many('account.tax', 'account_tax_filiation_rel', 'parent_tax', 'child_tax', string='Children Taxes')\n  511:     sequence = fields.Integer(required=True, default=1,\n  512          help=\"The sequence field is used to define order in which the tax lines are applied.\")\n  513      amount = fields.Float(required=True, digits=(16, 4))\n  ...\n  517          help=\"Account that will be set on invoice tax lines for refunds. Leave empty to use the expense account.\", oldname='account_paid_id')\n  518      description = fields.Char(string='Label on Invoices')\n  519:     price_include = fields.Boolean(string='Included in Price', default=False,\n  520          help=\"Check this if the price you use on the product and invoices includes this tax.\")\n  521:     include_base_amount = fields.Boolean(string='Affect Base of Subsequent Taxes', default=False,\n  522          help=\"If set, taxes which are computed after this one will be computed based on the price tax included.\")\n  523      analytic = fields.Boolean(string=\"Include in Analytic Cost\", help=\"If set, the amount computed by this tax will be assigned to the same analytic account as the invoice line (if any)\")\n  524      tag_ids = fields.Many2many('account.account.tag', 'account_tax_account_tag', string='Tags', help=\"Optional tags you may want to assign for custom reporting\")\n  525:     tax_group_id = fields.Many2one('account.tax.group', string=\"Tax Group\", default=_default_tax_group, required=True)\n  526  \n  527      _sql_constraints = [\n  ...\n  536  \n  537      @api.one\n  538:     def copy(self, default=None):\n  539:         default = dict(default or {}, name=_(\"%s (Copy)\") % self.name)\n  540:         return super(AccountTax, self).copy(default=default)\n  541  \n  542      @api.model\n  ...\n  625              currency = company_id.currency_id\n  626          taxes = []\n  627:         # By default, for each tax, tax amount will first be computed\n  628          # and rounded at the 'Account' decimal precision for each\n  629          # PO/SO/invoice line and then these rounded amounts will be\n  ...\n  705  \n  706      name = fields.Char(string='Button Label', required=True)\n  707:     sequence = fields.Integer(required=True, default=10)\n  708:     has_second_line = fields.Boolean(string='Add a second line', default=False)\n  709:     company_id = fields.Many2one('res.company', string='Company', required=True, default=lambda self: self.env.user.company_id)\n  710  \n  711      account_id = fields.Many2one('account.account', string='Account', ondelete='cascade', domain=[('deprecated', '=', False)])\n  ...\n  715          ('fixed', 'Fixed'),\n  716          ('percentage', 'Percentage of balance')\n  717:         ], required=True, default='percentage')\n  718:     amount = fields.Float(digits=0, required=True, default=100.0, help=\"Fixed amount will count as a debit if it is negative, as a credit if it is positive.\")\n  719      tax_id = fields.Many2one('account.tax', string='Tax', ondelete='restrict', domain=[('type_tax_use', '=', 'purchase')])\n  720      analytic_account_id = fields.Many2one('account.analytic.account', string='Analytic Account', ondelete='set null', domain=[('account_type', '=', 'normal')])\n  ...\n  726          ('fixed', 'Fixed'),\n  727          ('percentage', 'Percentage of amount')\n  728:         ], string='Amount type', required=True, default='percentage')\n  729:     second_amount = fields.Float(string='Amount', digits=0, required=True, default=100.0, help=\"Fixed amount will count as a debit if it is negative, as a credit if it is positive.\")\n  730      second_tax_id = fields.Many2one('account.tax', string='Tax', ondelete='restrict', domain=[('type_tax_use', '=', 'purchase')])\n  731      second_analytic_account_id = fields.Many2one('account.analytic.account', string='Analytic Account', ondelete='set null', domain=[('account_type', '=', 'normal')])\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\models\\account_analytic_line.py:\n   39          if unit:\n   40              # price_get() will respect a 'uom' in its context, in order\n   41:             # to return a default price for those units\n   42              ctx['uom'] = unit.id\n   43  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\models\\account_bank_statement.py:\n   95  \n   96      @api.model\n   97:     def _default_journal(self):\n   98          journal_type = self.env.context.get('journal_type', False)\n   99:         company_id = self.env['res.company']._company_default_get('account.bank.statement').id\n  100          if journal_type:\n  101              journals = self.env['account.journal'].search([('type', '=', journal_type), ('company_id', '=', company_id)])\n  ...\n  116  \n  117      @api.model\n  118:     def _default_opening_balance(self):\n  119          #Search last bank statement and set current opening balance as closing balance of previous one\n  120:         journal_id = self._context.get('default_journal_id', False) or self._context.get('journal_id', False)\n  121          if journal_id:\n  122              return self._get_opening_balance(journal_id)\n  ...\n  129  \n  130      name = fields.Char(string='Reference', states={'open': [('readonly', False)]}, copy=False, readonly=True)\n  131:     date = fields.Date(required=True, states={'confirm': [('readonly', True)]}, select=True, copy=False, default=fields.Date.context_today)\n  132      date_done = fields.Datetime(string=\"Closed On\")\n  133:     balance_start = fields.Monetary(string='Starting Balance', states={'confirm': [('readonly', True)]}, default=_default_opening_balance)\n  134      balance_end_real = fields.Monetary('Ending Balance', states={'confirm': [('readonly', True)]})\n  135:     state = fields.Selection([('open', 'New'), ('confirm', 'Validated')], string='Status', required=True, readonly=True, copy=False, default='open')\n  136      currency_id = fields.Many2one('res.currency', compute='_compute_currency', oldname='currency', string=\"Currency\")\n  137:     journal_id = fields.Many2one('account.journal', string='Journal', required=True, states={'confirm': [('readonly', True)]}, default=_default_journal)\n  138      journal_type = fields.Selection(related='journal_id.type', help=\"Technical field used for usability purposes\")\n  139      company_id = fields.Many2one('res.company', related='journal_id.company_id', string='Company', store=True, readonly=True,\n  140:         default=lambda self: self.env['res.company']._company_default_get('account.bank.statement'))\n  141  \n  142      total_entry_encoding = fields.Monetary('Transactions Subtotal', compute='_end_balance', store=True, help=\"Total of transaction lines.\")\n  ...\n  147      move_line_ids = fields.One2many('account.move.line', 'statement_id', string='Entry lines', states={'confirm': [('readonly', True)]})\n  148      all_lines_reconciled = fields.Boolean(compute='_check_lines_reconciled')\n  149:     user_id = fields.Many2one('res.users', string='Responsible', required=False, default=lambda self: self.env.user)\n  150      cashbox_start_id = fields.Many2one('account.bank.statement.cashbox', string=\"Starting Cashbox\")\n  151      cashbox_end_id = fields.Many2one('account.bank.statement.cashbox', string=\"Ending Cashbox\")\n  ...\n  188      def create(self, vals):\n  189          if not vals.get('name'):\n  190:             journal_id = vals.get('journal_id', self._context.get('default_journal_id', False))\n  191              journal = self.env['account.journal'].browse(journal_id)\n  192              vals['name'] = journal.sequence_id.with_context(ir_sequence_date=vals.get('date')).next_by_id()\n  ...\n  358  \n  359      name = fields.Char(string='Memo', required=True)\n  360:     date = fields.Date(required=True, default=lambda self: self._context.get('date', fields.Date.context_today(self)))\n  361      amount = fields.Monetary(digits=0, currency_field='journal_currency_id')\n  362      journal_currency_id = fields.Many2one('res.currency', related='statement_id.currency_id',\n  ...\n  373      ref = fields.Char(string='Reference')\n  374      note = fields.Text(string='Notes')\n  375:     sequence = fields.Integer(index=True, help=\"Gives the sequence order when displaying a list of bank statement lines.\", default=1)\n  376      company_id = fields.Many2one('res.company', related='statement_id.company_id', string='Company', store=True, readonly=True)\n  377      journal_entry_ids = fields.One2many('account.move', 'statement_line_id', 'Journal Entries', copy=False, readonly=True)\n  ...\n  465              'journal_id': self.journal_id.id,\n  466              'statement_id': self.statement_id.id,\n  467:             'account_code': self.journal_id.default_debit_account_id.code,\n  468:             'account_name': self.journal_id.default_debit_account_id.name,\n  469              'partner_name': self.partner_id.name,\n  470              'communication_partner_name': self.partner_name,\n  ...\n  503          \"\"\"\n  504          # Domain to fetch registered payments (use case where you encode the payment before you get the bank statement)\n  505:         reconciliation_aml_accounts = [self.journal_id.default_credit_account_id.id, self.journal_id.default_debit_account_id.id]\n  506          domain_reconciliation = ['&', ('statement_id', '=', False), ('account_id', 'in', reconciliation_aml_accounts)]\n  507  \n  ...\n  712              'partner_id': self.partner_id and self.partner_id.id or False,\n  713              'account_id': amount >= 0 \\\n  714:                 and self.statement_id.journal_id.default_credit_account_id.id \\\n  715:                 or self.statement_id.journal_id.default_debit_account_id.id,\n  716              'credit': amount < 0 and -amount or 0.0,\n  717              'debit': amount > 0 and amount or 0.0,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\models\\account_invoice.py:\n   56  \n   57      @api.model\n   58:     def _default_journal(self):\n   59:         if self._context.get('default_journal_id', False):\n   60:             return self.env['account.journal'].browse(self._context.get('default_journal_id'))\n   61          inv_type = self._context.get('type', 'out_invoice')\n   62          inv_types = inv_type if isinstance(inv_type, list) else [inv_type]\n   ..\n   69  \n   70      @api.model\n   71:     def _default_currency(self):\n   72:         journal = self._default_journal()\n   73          return journal.currency_id or journal.company_id.currency_id\n   74  \n   ..\n  198              ('out_refund','Customer Refund'),\n  199              ('in_refund','Vendor Refund'),\n  200:         ], readonly=True, index=True, change_default=True,\n  201:         default=lambda self: self._context.get('type', 'out_invoice'),\n  202          track_visibility='always')\n  203  \n  204      number = fields.Char(related='move_id.name', store=True, readonly=True, copy=False)\n  205      move_name = fields.Char(string='Journal Entry', readonly=True,\n  206:         default=False, copy=False,\n  207          help=\"Technical field holding the number given to the invoice, automatically set when the invoice is validated then stored to set the same number again if the invoice is cancelled, set to draft and re-validated.\")\n  208      reference = fields.Char(string='Vendor Reference',\n  ...\n  210      reference_type = fields.Selection('_get_reference_type', string='Payment Reference',\n  211          required=True, readonly=True, states={'draft': [('readonly', False)]},\n  212:         default='none')\n  213      comment = fields.Text('Additional Information', readonly=True, states={'draft': [('readonly', False)]})\n  214  \n  ...\n  220              ('paid', 'Paid'),\n  221              ('cancel', 'Cancelled'),\n  222:         ], string='Status', index=True, readonly=True, default='draft',\n  223          track_visibility='onchange', copy=False,\n  224          help=\" * The 'Draft' status is used when a user is encoding a new and unconfirmed Invoice.\\n\"\n  ...\n  227               \" * The 'Paid' status is set automatically when the invoice is paid. Its related journal entries may or may not be reconciled.\\n\"\n  228               \" * The 'Cancelled' status is used when user cancel invoice.\")\n  229:     sent = fields.Boolean(readonly=True, default=False, copy=False,\n  230          help=\"It indicates that the invoice has been sent.\")\n  231      date_invoice = fields.Date(string='Invoice Date',\n  ...\n  239               \"term is not set on the invoice. If you keep the payment term and the due date empty, it \"\n  240               \"means direct payment.\")\n  241:     partner_id = fields.Many2one('res.partner', string='Partner', change_default=True,\n  242          required=True, readonly=True, states={'draft': [('readonly', False)]},\n  243          track_visibility='always')\n  ...\n  279      currency_id = fields.Many2one('res.currency', string='Currency',\n  280          required=True, readonly=True, states={'draft': [('readonly', False)]},\n  281:         default=_default_currency, track_visibility='always')\n  282      company_currency_id = fields.Many2one('res.currency', related='company_id.currency_id', readonly=True)\n  283      journal_id = fields.Many2one('account.journal', string='Journal',\n  284          required=True, readonly=True, states={'draft': [('readonly', False)]},\n  285:         default=_default_journal,\n  286          domain=\"[('type', 'in', {'out_invoice': ['sale'], 'out_refund': ['sale'], 'in_refund': ['purchase'], 'in_invoice': ['purchase']}.get(type, [])), ('company_id', '=', company_id)]\")\n  287:     company_id = fields.Many2one('res.company', string='Company', change_default=True,\n  288          required=True, readonly=True, states={'draft': [('readonly', False)]},\n  289:         default=lambda self: self.env['res.company']._company_default_get('account.invoice'))\n  290  \n  291      reconciled = fields.Boolean(string='Paid/Reconciled', store=True, readonly=True, compute='_compute_residual',\n  ...\n  305      user_id = fields.Many2one('res.users', string='Salesperson', track_visibility='onchange',\n  306          readonly=True, states={'draft': [('readonly', False)]},\n  307:         default=lambda self: self.env.user)\n  308      fiscal_position_id = fields.Many2one('account.fiscal.position', string='Fiscal Position', oldname='fiscal_position',\n  309          readonly=True, states={'draft': [('readonly', False)]})\n  ...\n  362      def action_invoice_sent(self):\n  363          \"\"\" Open a window to compose an email, with the edi invoice template\n  364:             message loaded by default\n  365          \"\"\"\n  366          self.ensure_one()\n  ...\n  368          compose_form = self.env.ref('mail.email_compose_message_wizard_form', False)\n  369          ctx = dict(\n  370:             default_model='account.invoice',\n  371:             default_res_id=self.id,\n  372:             default_use_template=bool(template),\n  373:             default_template_id=template.id,\n  374:             default_composition_mode='comment',\n  375              mark_invoice_as_sent=True,\n  376          )\n  ...\n  926  \n  927              :param pay_journal: journal in which the payment entry will be created\n  928:             :param pay_amount: amount of the payment to register, defaults to the residual of the invoice\n  929:             :param date: payment date, defaults to fields.Date.context_today(self)\n  930              :param writeoff_acc: account in which to create a writeoff if pay_amount < self.residual, so that the invoice is fully paid\n  931          \"\"\"\n  ...\n  980          currency = self.currency_id or self.company_id.currency_id\n  981          for line in self.tax_line_ids:\n  982:             res.setdefault(line.tax_id.tax_group_id, 0.0)\n  983              res[line.tax_id.tax_group_id] += line.amount\n  984          res = sorted(res.items(), key=lambda l: l[0].sequence)\n  ...\n 1023  \n 1024      @api.model\n 1025:     def _default_account(self):\n 1026          if self._context.get('journal_id'):\n 1027              journal = self.env['account.journal'].browse(self._context.get('journal_id'))\n 1028              if self._context.get('type') in ('out_invoice', 'in_refund'):\n 1029:                 return journal.default_credit_account_id.id\n 1030:             return journal.default_debit_account_id.id\n 1031  \n 1032      name = fields.Text(string='Description', required=True)\n 1033      origin = fields.Char(string='Source Document',\n 1034          help=\"Reference of the document that produced this invoice.\")\n 1035:     sequence = fields.Integer(default=10,\n 1036          help=\"Gives the sequence of this line when displaying the invoice.\")\n 1037      invoice_id = fields.Many2one('account.invoice', string='Invoice Reference',\n ....\n 1043      account_id = fields.Many2one('account.account', string='Account',\n 1044          required=True, domain=[('deprecated', '=', False)],\n 1045:         default=_default_account,\n 1046          help=\"The income or expense account related to the selected product.\")\n 1047      price_unit = fields.Monetary(string='Unit Price', required=True)\n ....\n 1052          help=\"Total amount in the currency of the company, negative for credit notes.\")\n 1053      quantity = fields.Float(string='Quantity', digits=dp.get_precision('Product Unit of Measure'),\n 1054:         required=True, default=1)\n 1055      discount = fields.Float(string='Discount (%)', digits=dp.get_precision('Discount'),\n 1056:         default=0.0)\n 1057      invoice_line_tax_ids = fields.Many2many('account.tax',\n 1058          'account_invoice_line_tax', 'invoice_line_id', 'tax_id',\n ....\n 1213      account_analytic_id = fields.Many2one('account.analytic.account', string='Analytic account')\n 1214      amount = fields.Monetary()\n 1215:     manual = fields.Boolean(default=True)\n 1216      sequence = fields.Integer(help=\"Gives the sequence order when displaying a list of invoice tax.\")\n 1217      company_id = fields.Many2one('res.company', string='Company', related='account_id.company_id', store=True, readonly=True)\n ....\n 1224      _order = \"name\"\n 1225  \n 1226:     def _default_line_ids(self):\n 1227          return [(0, 0, {'value': 'balance', 'value_amount': 0.0, 'sequence': 9, 'days': 0, 'option': 'day_after_invoice_date'})]\n 1228  \n 1229      name = fields.Char(string='Payment Term', translate=True, required=True)\n 1230:     active = fields.Boolean(default=True, help=\"If the active field is set to False, it will allow you to hide the payment term without removing it.\")\n 1231      note = fields.Text(string='Description on the Invoice', translate=True)\n 1232:     line_ids = fields.One2many('account.payment.term.line', 'payment_id', string='Terms', copy=True, default=_default_line_ids)\n 1233:     company_id = fields.Many2one('res.company', string='Company', required=True, default=lambda self: self.env.user.company_id)\n 1234  \n 1235      @api.constrains('line_ids')\n ....\n 1290              ('percent', 'Percent'),\n 1291              ('fixed', 'Fixed Amount')\n 1292:         ], string='Type', required=True, default='balance',\n 1293          help=\"Select here the kind of valuation related to this payment term line.\")\n 1294      value_amount = fields.Float(string='Value', digits=dp.get_precision('Payment Term'), help=\"For percent enter a ratio between 0-100.\")\n 1295:     days = fields.Integer(string='Number of Days', required=True, default=0)\n 1296      option = fields.Selection([\n 1297              ('day_after_invoice_date', 'Day(s) after the invoice date'),\n ....\n 1300              ('last_day_current_month', 'Last day of current month'),\n 1301          ],\n 1302:         default='day_after_invoice_date', required=True, string='Options'\n 1303          )\n 1304      payment_id = fields.Many2one('account.payment.term', string='Payment Term', required=True, index=True, ondelete='cascade')\n 1305:     sequence = fields.Integer(default=10, help=\"Gives the sequence order when displaying a list of payment term lines.\")\n 1306  \n 1307      @api.one\n ....\n 1322      def send_mail(self, auto_commit=False):\n 1323          context = self._context\n 1324:         if context.get('default_model') == 'account.invoice' and \\\n 1325:                 context.get('default_res_id') and context.get('mark_invoice_as_sent'):\n 1326:             invoice = self.env['account.invoice'].browse(context['default_res_id'])\n 1327              invoice = invoice.with_context(mail_post_autofollow=True)\n 1328              invoice.sent = True\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\models\\account_journal_dashboard.py:\n    5  \n    6  from openerp import models, api, _, fields\n    7: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT as DF\n    8  from openerp.tools.misc import formatLang\n    9  \n   ..\n   24      kanban_dashboard = fields.Text(compute='_kanban_dashboard')\n   25      kanban_dashboard_graph = fields.Text(compute='_kanban_dashboard_graph')\n   26:     show_on_dashboard = fields.Boolean(string='Show journal on dashboard', help=\"Whether this journal should be displayed on the dashboard or not\", default=True)\n   27  \n   28      @api.multi\n   ..\n  149                          number_to_reconcile += 1\n  150              # optimization to read sum of balance from account_move_line\n  151:             account_ids = tuple(filter(None, [self.default_debit_account_id.id, self.default_credit_account_id.id]))\n  152              if account_ids:\n  153                  query = \"\"\"SELECT sum(balance) FROM account_move_line WHERE account_id in %s;\"\"\"\n  ...\n  205          model = 'account.invoice'\n  206          if self.type == 'sale':\n  207:             ctx.update({'journal_type': self.type, 'default_type': 'out_invoice', 'type': 'out_invoice', 'default_journal_id': self.id})\n  208              if ctx.get('refund'):\n  209:                 ctx.update({'default_type':'out_refund', 'type':'out_refund'})\n  210              view_id = self.env.ref('account.invoice_form').id\n  211          elif self.type == 'purchase':\n  212:             ctx.update({'journal_type': self.type, 'default_type': 'in_invoice', 'type': 'in_invoice', 'default_journal_id': self.id})\n  213              if ctx.get('refund'):\n  214:                 ctx.update({'default_type': 'in_refund', 'type': 'in_refund'})\n  215              view_id = self.env.ref('account.invoice_supplier_form').id\n  216          else:\n  217:             ctx.update({'default_journal_id': self.id})\n  218              view_id = self.env.ref('account.view_move_form').id\n  219              model = 'account.move'\n  ...\n  231      def create_cash_statement(self):\n  232          ctx = self._context.copy()\n  233:         ctx.update({'journal_id': self.id, 'default_journal_id': self.id, 'default_journal_type': 'cash'})\n  234          return {\n  235              'name': _('Create cash statement'),\n  ...\n  292          ctx.update({\n  293              'journal_type': self.type,\n  294:             'default_journal_id': self.id,\n  295:             'search_default_journal_id': self.id,\n  296:             'default_type': invoice_type,\n  297              'type': invoice_type\n  298          })\n  ...\n  320          ctx = self._context.copy()\n  321          ctx.update({\n  322:             'default_payment_type': payment_type,\n  323:             'default_journal_id': self.id\n  324          })\n  325          action_rec = self.env['ir.model.data'].xmlid_to_object('account.action_account_payments')\n  ...\n  335          if not action_name:\n  336              return False\n  337:         ctx = dict(self.env.context, default_journal_id=self.id)\n  338:         if ctx.get('search_default_journal', False):\n  339:             ctx.update(search_default_journal_id=self.id)\n  340          ir_model_obj = self.pool['ir.model.data']\n  341          model, action_id = ir_model_obj.get_object_reference(self._cr, self._uid, 'account', action_name)\n  ...\n  354          action.update({\n  355              'views': [[False, 'form']],\n  356:             'context': \"{'default_journal_id': \" + str(self.id) + \"}\",\n  357          })\n  358          return action\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\models\\account_move.py:\n   66  \n   67      @api.multi\n   68:     def _get_default_journal(self):\n   69:         if self.env.context.get('default_journal_type'):\n   70:             return self.env['account.journal'].search([('type', '=', self.env.context['default_journal_type'])], limit=1).id\n   71  \n   72:     name = fields.Char(string='Number', required=True, copy=False, default='/')\n   73      ref = fields.Char(string='Reference', copy=False)\n   74:     date = fields.Date(required=True, states={'posted': [('readonly', True)]}, index=True, default=fields.Date.context_today)\n   75:     journal_id = fields.Many2one('account.journal', string='Journal', required=True, states={'posted': [('readonly', True)]}, default=_get_default_journal)\n   76      currency_id = fields.Many2one('res.currency', compute='_compute_currency', store=True, string=\"Currency\")\n   77      rate_diff_partial_rec_id = fields.Many2one('account.partial.reconcile', string='Exchange Rate Entry of', help=\"Technical field used to keep track of the origin of journal entries created in case of fluctuation of the currency exchange rate. This is needed when cancelling the source: it will post the inverse journal entry to cancel that part too.\")\n   78      state = fields.Selection([('draft', 'Unposted'), ('posted', 'Posted')], string='Status',\n   79:       required=True, readonly=True, copy=False, default='draft',\n   80        help='All manually created new journal entries are usually in the status \\'Unposted\\', '\n   81             'but you can set the option to skip that status on the related journal. '\n   ..\n   89      narration = fields.Text(string='Internal Note')\n   90      company_id = fields.Many2one('res.company', related='journal_id.company_id', string='Company', store=True, readonly=True,\n   91:         default=lambda self: self.env.user.company_id)\n   92      matched_percentage = fields.Float('Percentage Matched', compute='_compute_matched_percentage', digits=0, store=True, readonly=True, help=\"Technical field used in cash basis method\")\n   93      statement_line_id = fields.Many2one('account.bank.statement.line', string='Bank statement line reconciled with this entry', copy=False, readonly=True)\n   ..\n  198          reversed_moves = self.env['account.move']\n  199          for ac_move in self:\n  200:             reversed_move = ac_move.copy(default={'date': date,\n  201                  'journal_id': journal_id.id if journal_id else ac_move.journal_id.id,\n  202                  'ref': _('reversal of: ') + ac_move.name})\n  ...\n  277          currency = False\n  278          context = self._context or {}\n  279:         if context.get('default_journal_id', False):\n  280:             currency = self.env['account.journal'].browse(context['default_journal_id']).currency_id\n  281          return currency\n  282  \n  ...\n  326      product_uom_id = fields.Many2one('product.uom', string='Unit of Measure')\n  327      product_id = fields.Many2one('product.product', string='Product')\n  328:     debit = fields.Monetary(default=0.0, currency_field='company_currency_id')\n  329:     credit = fields.Monetary(default=0.0, currency_field='company_currency_id')\n  330:     balance = fields.Monetary(compute='_store_balance', store=True, currency_field='company_currency_id', default=0.0, help=\"Technical field holding the debit - credit in order to open meaningful graph views from reports\")\n  331:     debit_cash_basis = fields.Monetary(currency_field='company_currency_id', default=0.0, compute='_compute_cash_basis', store=True)\n  332:     credit_cash_basis = fields.Monetary(currency_field='company_currency_id', default=0.0, compute='_compute_cash_basis', store=True)\n  333:     balance_cash_basis = fields.Monetary(compute='_compute_cash_basis', store=True, currency_field='company_currency_id', default=0.0, help=\"Technical field holding the debit_cash_basis - credit_cash_basis in order to open meaningful graph views from reports\")\n  334:     amount_currency = fields.Monetary(default=0.0, help=\"The amount expressed in an optional other currency if it is a multi-currency entry.\")\n  335      company_currency_id = fields.Many2one('res.currency', related='company_id.currency_id', readonly=True,\n  336          help='Utility field to express amount currency', store=True)\n  337:     currency_id = fields.Many2one('res.currency', string='Currency', default=_get_currency,\n  338          help=\"The optional other currency if it is a multi-currency entry.\")\n  339      amount_residual = fields.Monetary(compute='_amount_residual', string='Residual Amount', store=True, currency_field='company_currency_id',\n  ...\n  342          help=\"The residual amount on a journal item expressed in its currency (possibly not the company currency).\")\n  343      account_id = fields.Many2one('account.account', string='Account', required=True, index=True,\n  344:         ondelete=\"cascade\", domain=[('deprecated', '=', False)], default=lambda self: self._context.get('account_id', False))\n  345      move_id = fields.Many2one('account.move', string='Journal Entry', ondelete=\"cascade\",\n  346          help=\"The move of this entry line.\", index=True, required=True, auto_join=True)\n  ...\n  356          help='Credit journal items that are matched with this journal item.')\n  357      journal_id = fields.Many2one('account.journal', related='move_id.journal_id', string='Journal',\n  358:         default=_get_journal, required=True, index=True, store=True, copy=False)\n  359:     blocked = fields.Boolean(string='No Follow-up', default=False,\n  360          help=\"You can check this box to mark this journal item as a litigation with the associated partner\")\n  361      date_maturity = fields.Date(string='Due date', index=True, required=True,\n  362          help=\"This field is used for payable and receivable journal entries. You can put the limit date for the payment of this line.\")\n  363:     date = fields.Date(related='move_id.date', string='Date', required=True, index=True, default=fields.Date.context_today, store=True, copy=False)\n  364      analytic_line_ids = fields.One2many('account.analytic.line', 'move_id', string='Analytic lines', oldname=\"analytic_lines\")\n  365      tax_ids = fields.Many2many('account.tax', string='Taxes')\n  ...\n  885          \"\"\" :param apply_taxes: set to False if you don't want vals['tax_ids'] to result in the creation of move lines for taxes and eventual\n  886                  adjustment of the line amount (in case of a tax included in price). This is useful for use cases where you don't want to\n  887:                 apply taxes in the default fashion (eg. taxes). You can also pass 'dont_create_taxes' in context.\n  888  \n  889              :context's key `check_move_validity`: check data consistency after move line creation. Eg. set to false to disable verification that the move\n  ...\n  911              context['date'] = m.date\n  912          #we need to treat the case where a value is given in the context for period_id as a string\n  913:         if not context.get('journal_id', False) and context.get('search_default_journal_id', False):\n  914:             context['journal_id'] = context.get('search_default_journal_id')\n  915          if 'date' not in context:\n  916              context['date'] = fields.Date.context_today(self)\n  ...\n 1226                          'debit': amount_diff > 0 and amount_diff or 0.0,\n 1227                          'credit': amount_diff < 0 and -amount_diff or 0.0,\n 1228:                         'account_id': amount_diff > 0 and rec.company_id.currency_exchange_journal_id.default_debit_account_id.id or rec.company_id.currency_exchange_journal_id.default_credit_account_id.id,\n 1229                          'move_id': move.id,\n 1230                          'currency_id': rec.currency_id.id,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\models\\account_payment.py:\n   40  \n   41      amount = fields.Monetary(string='Payment Amount', required=True)\n   42:     currency_id = fields.Many2one('res.currency', string='Currency', required=True, default=lambda self: self.env.user.company_id.currency_id)\n   43:     payment_date = fields.Date(string='Payment Date', default=fields.Date.context_today, required=True, copy=False)\n   44      communication = fields.Char(string='Memo')\n   45      journal_id = fields.Many2one('account.journal', string='Payment Method', required=True, domain=[('type', 'in', ('bank', 'cash'))])\n   ..\n   68          if self.journal_id:\n   69              self.currency_id = self.journal_id.currency_id or self.company_id.currency_id\n   70:             # Set default payment method (we consider the first to be the default one)\n   71              payment_methods = self.payment_type == 'inbound' and self.journal_id.inbound_payment_method_ids or self.journal_id.outbound_payment_method_ids\n   72              self.payment_method_id = payment_methods and payment_methods[0] or False\n   ..\n  111  \n  112      @api.model\n  113:     def default_get(self, fields):\n  114:         rec = super(account_register_payments, self).default_get(fields)\n  115          context = dict(self._context or {})\n  116          active_model = context.get('active_model')\n  ...\n  186      company_id = fields.Many2one(store=True)\n  187  \n  188:     name = fields.Char(readonly=True, copy=False, default=\"Draft Payment\") # The name is attributed upon post()\n  189:     state = fields.Selection([('draft', 'Draft'), ('posted', 'Posted'), ('sent', 'Sent'), ('reconciled', 'Reconciled')], readonly=True, default='draft', copy=False, string=\"Status\")\n  190  \n  191      payment_type = fields.Selection(selection_add=[('transfer', 'Internal Transfer')])\n  192      payment_reference = fields.Char(copy=False, readonly=True, help=\"Reference of the document used to issue this payment. Eg. check number, file name, etc.\")\n  193  \n  194:     # Money flows from the journal_id's default_debit_account_id or default_credit_account_id to the destination_account_id\n  195      destination_account_id = fields.Many2one('account.account', compute='_compute_destination_account_id', readonly=True)\n  196      # For money transfer, money goes from journal_id to a transfer account, then from the transfer account to destination_journal_id\n  ...\n  200      has_invoices = fields.Boolean(compute=\"_get_has_invoices\", help=\"Technical field used for usability purposes\")\n  201      payment_difference = fields.Monetary(compute='_compute_payment_difference', readonly=True)\n  202:     payment_difference_handling = fields.Selection([('open', 'Keep open'), ('reconcile', 'Mark invoice as fully paid')], default='open', string=\"Payment Difference\", copy=False)\n  203      writeoff_account_id = fields.Many2one('account.account', string=\"Difference Account\", domain=[('deprecated', '=', False)], copy=False)\n  204  \n  ...\n  230      def _onchange_payment_type(self):\n  231          if not self.invoice_ids:\n  232:             # Set default partner type for the payment type\n  233              if self.payment_type == 'inbound':\n  234                  self.partner_type = 'customer'\n  ...\n  244  \n  245      @api.model\n  246:     def default_get(self, fields):\n  247:         rec = super(account_payment, self).default_get(fields)\n  248:         invoice_defaults = self.resolve_2many_commands('invoice_ids', rec.get('invoice_ids'))\n  249:         if invoice_defaults and len(invoice_defaults) == 1:\n  250:             invoice = invoice_defaults[0]\n  251              rec['communication'] = invoice['reference']\n  252              rec['currency_id'] = invoice['currency_id'][0]\n  ...\n  307      def post(self):\n  308          \"\"\" Create the journal items for the payment and update the payment's state to 'posted'.\n  309:             A journal entry is created containing an item in the source liquidity account (selected journal's default_debit or default_credit)\n  310              and another in the destination reconciliable account (see _compute_destination_account_id).\n  311              If invoice_ids is not empty, there will be one reconciliable move line per invoice to reconcile with.\n  ...\n  390          dst_liquidity_aml_dict.update({\n  391              'name': _('Transfer from %s') % self.journal_id.name,\n  392:             'account_id': self.destination_journal_id.default_credit_account_id.id,\n  393              'currency_id': self.destination_journal_id.currency_id.id,\n  394              'payment_id': self.id,\n  ...\n  474          vals = {\n  475              'name': name,\n  476:             'account_id': self.payment_type in ('outbound','transfer') and self.journal_id.default_debit_account_id.id or self.journal_id.default_credit_account_id.id,\n  477              'payment_id': self.id,\n  478              'journal_id': self.journal_id.id,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\models\\chart_template.py:\n    6  from openerp.osv import expression\n    7  from openerp.tools.float_utils import float_round as round\n    8: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT\n    9  from openerp.exceptions import AccessError, UserError, ValidationError\n   10  import openerp.addons.decimal_precision as dp\n   ..\n   53          help=\"These types are defined according to your country. The type contains more information \"\\\n   54          \"about the account and its specificities.\")\n   55:     reconcile = fields.Boolean(string='Allow Invoices & payments Matching', default=False,\n   56          help=\"Check this option if you want the user to reconcile entries in this account.\")\n   57      note = fields.Text()\n   58:     tax_ids = fields.Many2many('account.tax.template', 'account_account_template_tax_rel', 'account_id', 'tax_id', string='Default Taxes')\n   59:     nocreate = fields.Boolean(string='Optional Create', default=False,\n   60:         help=\"If checked, the new chart of accounts will not contain this by default.\")\n   61      chart_template_id = fields.Many2one('account.chart.template', string='Chart Template',\n   62          help=\"This optional field allow you to link an account template to a specific chart template that may differ from the one its root parent belongs to. This allow you \"\n   ..\n   83      company_id = fields.Many2one('res.company', string='Company')\n   84      parent_id = fields.Many2one('account.chart.template', string='Parent Chart Template')\n   85:     code_digits = fields.Integer(string='# of Digits', required=True, default=6, help=\"No. of Digits to use for account code\")\n   86:     visible = fields.Boolean(string='Can be Visible?', default=True,\n   87          help=\"Set this to False if you don't want this template to be used actively in the wizard that generate Chart of Accounts from \"\n   88              \"templates, this is useful when you want to generate accounts of this template only when loading its child template.\")\n   89      currency_id = fields.Many2one('res.currency', string='Currency', required=True)\n   90:     use_anglo_saxon = fields.Boolean(string=\"Use Anglo-Saxon accounting\", default=False)\n   91:     complete_tax_set = fields.Boolean(string='Complete Set of Taxes', default=True,\n   92          help=\"This boolean helps you to choose if you want to propose to the user to encode the sale and purchase rates or choose from list \"\n   93              \"of taxes. This last choice assumes that the set of tax defined on this template is complete\")\n   ..\n  161      @api.multi\n  162      def _prepare_all_journals(self, acc_template_ref, company, journals_dict=None):\n  163:         def _get_default_account(journal_vals, type='debit'):\n  164:             # Get the default accounts\n  165:             default_account = False\n  166              if journal['type'] == 'sale':\n  167:                 default_account = acc_template_ref.get(self.property_account_income_categ_id.id)\n  168              elif journal['type'] == 'purchase':\n  169:                 default_account = acc_template_ref.get(self.property_account_expense_categ_id.id)\n  170              elif journal['type'] == 'general' and journal['code'] == _('EXCH'):\n  171                  if type=='credit':\n  172:                     default_account = acc_template_ref.get(self.income_currency_exchange_account_id.id)\n  173                  else:\n  174:                     default_account = acc_template_ref.get(self.expense_currency_exchange_account_id.id)\n  175:             return default_account\n  176  \n  177          journals = [{'name': _('Customer Invoices'), 'type': 'sale', 'code': _('INV'), 'favorite': True, 'sequence': 5},\n  ...\n  190                  'code': journal['code'],\n  191                  'company_id': company.id,\n  192:                 'default_credit_account_id': _get_default_account(journal, 'credit'),\n  193:                 'default_debit_account_id': _get_default_account(journal, 'debit'),\n  194                  'show_on_dashboard': journal['favorite'],\n  195              }\n  ...\n  406  \n  407      name = fields.Char(string='Tax Name', required=True)\n  408:     type_tax_use = fields.Selection([('sale', 'Sales'), ('purchase', 'Purchases'), ('none', 'None')], string='Tax Scope', required=True, default=\"sale\",\n  409          help=\"Determines where the tax is selectable. Note : 'None' means a tax can't be used by itself, however it can still be used in a group.\")\n  410:     amount_type = fields.Selection(default='percent', string=\"Tax Computation\", required=True,\n  411          selection=[('group', 'Group of Taxes'), ('fixed', 'Fixed'), ('percent', 'Percentage of Price'), ('division', 'Percentage of Price Tax Included')])\n  412:     active = fields.Boolean(default=True, help=\"Set active to false to hide the tax without removing it.\")\n  413:     company_id = fields.Many2one('res.company', string='Company', required=True, default=lambda self: self.env.user.company_id)\n  414      children_tax_ids = fields.Many2many('account.tax.template', 'account_tax_template_filiation_rel', 'parent_tax', 'child_tax', string='Children Taxes')\n  415:     sequence = fields.Integer(required=True, default=1,\n  416          help=\"The sequence field is used to define order in which the tax lines are applied.\")\n  417      amount = fields.Float(required=True, digits=(16, 4))\n  ...\n  421          help=\"Account that will be set on invoice tax lines for refunds. Leave empty to use the expense account.\", oldname='account_paid_id')\n  422      description = fields.Char(string='Display on Invoices')\n  423:     price_include = fields.Boolean(string='Included in Price', default=False,\n  424          help=\"Check this if the price you use on the product and invoices includes this tax.\")\n  425:     include_base_amount = fields.Boolean(string='Affect Subsequent Taxes', default=False,\n  426          help=\"If set, taxes which are computed after this one will be computed based on the price tax included.\")\n  427      analytic = fields.Boolean(string=\"Analytic Cost\", help=\"If set, the amount computed by this tax will be assigned to the same analytic account as the invoice line (if any)\")\n  ...\n  556      cash_account_code_prefix = fields.Char('Cash Accounts Prefix')\n  557      code_digits = fields.Integer(string='# of Digits', required=True, help=\"No. of Digits to use for account code\")\n  558:     sale_tax_id = fields.Many2one('account.tax.template', string='Default Sales Tax', oldname=\"sale_tax\")\n  559:     purchase_tax_id = fields.Many2one('account.tax.template', string='Default Purchase Tax', oldname=\"purchase_tax\")\n  560      sale_tax_rate = fields.Float(string='Sales Tax(%)')\n  561      use_anglo_saxon = fields.Boolean(string='Use Anglo-Saxon Accounting', related='chart_template_id.use_anglo_saxon')\n  ...\n  595              self.currency_id = currency_id\n  596              if self.chart_template_id.complete_tax_set:\n  597:             # default tax is given by the lowest sequence. For same sequence we will take the latest created as it will be the case for tax created while isntalling the generic chart of account\n  598                  chart_ids = self._get_chart_parent_ids(self.chart_template_id)\n  599                  base_tax_domain = [('chart_template_id', 'in', chart_ids)]\n  ...\n  604                  self.sale_tax_id = sale_tax.id\n  605                  self.purchase_tax_id = purchase_tax.id\n  606:                 res.setdefault('domain', {})\n  607                  res['domain']['sale_tax_id'] = repr(sale_tax_domain)\n  608                  res['domain']['purchase_tax_id'] = repr(purchase_tax_domain)\n  ...\n  618  \n  619      @api.model\n  620:     def default_get(self, fields):\n  621          context = self._context or {}\n  622:         res = super(WizardMultiChartsAccounts, self).default_get(fields)\n  623          tax_templ_obj = self.env['account.tax.template']\n  624          account_chart_template = self.env['account.chart.template']\n  ...\n  637          chart_templates = account_chart_template.search([('visible', '=', True)])\n  638          if chart_templates:\n  639:             #in order to set default chart which was last created set max of ids.\n  640              chart_id = max(chart_templates.ids)\n  641:             if context.get(\"default_charts\"):\n  642:                 model_data = self.env['ir.model.data'].search_read([('model', '=', 'account.chart.template'), ('module', '=', context.get(\"default_charts\"))], ['res_id'])\n  643                  if model_data:\n  644                      chart_id = model_data[0]['res_id']\n  ...\n  688          This function checks if the chosen chart template is configured as containing a full set of taxes, and if\n  689          it's not the case, it creates the templates for account.tax object accordingly to the provided sale/purchase rates.\n  690:         Then it saves the new tax templates as default taxes to use for this chart template.\n  691  \n  692          :param company_id: id of the company for wich the wizard is running\n  ...\n  745          acc_template_ref, taxes_ref = self.chart_template_id._install_template(company, code_digits=self.code_digits, transfer_account_id=self.transfer_account_id)\n  746  \n  747:         # write values of default taxes for product as super user\n  748          if self.sale_tax_id and taxes_ref:\n  749:             ir_values_obj.sudo().set_default('product.template', \"taxes_id\", [taxes_ref[self.sale_tax_id.id]], for_all_users=True, company_id=company.id)\n  750          if self.purchase_tax_id and taxes_ref:\n  751:             ir_values_obj.sudo().set_default('product.template', \"supplier_taxes_id\", [taxes_ref[self.purchase_tax_id.id]], for_all_users=True, company_id=company.id)\n  752  \n  753          # Create Bank journals\n  ...\n  766          '''\n  767          This function creates bank journals and its accounts for each line encoded in the field bank_account_ids of the\n  768:         wizard (which is currently only used to create a default bank and cash journal when the CoA is installed).\n  769  \n  770          :param company: the company for which the wizard is running.\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\models\\company.py:\n    9  \n   10      #TODO check all the options/fields are in the views (settings + company form view)\n   11:     fiscalyear_last_day = fields.Integer(default=31, required=True)\n   12:     fiscalyear_last_month = fields.Selection([(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')], default=12, required=True)\n   13      period_lock_date = fields.Date(string=\"Lock Date for Non-Advisers\", help=\"Only users with the 'Adviser' role can edit accounts prior to and inclusive of this date. Use it for period locking inside an open fiscal year, for example.\")\n   14      fiscalyear_lock_date = fields.Date(string=\"Lock Date\", help=\"No users, including Advisers, can edit accounts prior to and inclusive of this date. Use it for fiscal year locking for example.\")\n   15      transfer_account_id = fields.Many2one('account.account',\n   16          domain=lambda self: [('reconcile', '=', True), ('user_type_id.id', '=', self.env.ref('account.data_account_type_current_assets').id), ('deprecated', '=', False)], string=\"Inter-Banks Transfer Account\", help=\"Intermediary account used when moving money from a liquidity account to another\")\n   17:     expects_chart_of_accounts = fields.Boolean(string='Expects a Chart of Accounts', default=True)\n   18      chart_template_id = fields.Many2one('account.chart.template', help='The chart template for the company (if any)')\n   19      bank_account_code_prefix = fields.Char(string='Prefix of the bank accounts', oldname=\"bank_account_code_char\")\n   ..\n   23          ('round_per_line', 'Round per Line'),\n   24          ('round_globally', 'Round Globally'),\n   25:         ], default='round_per_line', string='Tax Calculation Rounding Method',\n   26          help=\"If you select 'Round per Line' : for each tax, the tax amount will first be computed and rounded for each PO/SO/invoice line and then these rounded amounts will be summed, leading to the total amount for that tax. If you select 'Round Globally': for each tax, the tax amount will be computed for each PO/SO/invoice line, then these amounts will be summed and eventually this total tax amount will be rounded. If you sell with tax included, you should choose 'Round per line' because you certainly want the sum of your tax-included line subtotals to be equal to the total amount with taxes.\")\n   27      paypal_account = fields.Char(string='Paypal Account', size=128, help=\"Paypal username (usually email) for receiving online payments.\")\n   28      currency_exchange_journal_id = fields.Many2one('account.journal', string=\"Exchange Gain or Loss Journal\", domain=[('type', '=', 'general')])\n   29:     income_currency_exchange_account_id = fields.Many2one('account.account', related='currency_exchange_journal_id.default_credit_account_id',\n   30          string=\"Gain Exchange Rate Account\", domain=\"[('internal_type', '=', 'other'), ('deprecated', '=', False), ('company_id', '=', id)]\")\n   31:     expense_currency_exchange_account_id = fields.Many2one('account.account', related='currency_exchange_journal_id.default_debit_account_id',\n   32          string=\"Loss Exchange Rate Account\", domain=\"[('internal_type', '=', 'other'), ('deprecated', '=', False), ('company_id', '=', id)]\")\n   33      anglo_saxon_accounting = fields.Boolean(string=\"Use anglo-saxon accounting\")\n   ..\n   37      bank_journal_ids = fields.One2many('account.journal', 'company_id', domain=[('type', '=', 'bank')], string='Bank Journals')\n   38      overdue_msg = fields.Text(string='Overdue Payments Message', translate=True,\n   39:         default='''Dear Sir/Madam,\n   40  \n   41  Our records indicate that some payments on your account are still due. Please find details below.\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\models\\partner.py:\n    5  \n    6  from openerp import api, fields, models, _\n    7: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT\n    8  from openerp.exceptions import ValidationError\n    9  \n   ..\n   16      sequence = fields.Integer()\n   17      name = fields.Char(string='Fiscal Position', required=True)\n   18:     active = fields.Boolean(default=True,\n   19          help=\"By unchecking the active field, you may hide a fiscal position without deleting it.\")\n   20      company_id = fields.Many2one('res.company', string='Company')\n   ..\n   29          help=\"Apply only if delivery or invocing country match the group.\")\n   30      state_ids = fields.Many2many('res.country.state', string='Federal States')\n   31:     zip_from = fields.Integer(string='Zip Range From', default=0)\n   32:     zip_to = fields.Integer(string='Zip Range To', default=0)\n   33      # To be used in hiding the 'Federal States' field('attrs' in view side) when selected 'Country' has 0 states.\n   34      states_count = fields.Integer(compute='_compute_states_count')\n   ..\n  390      @api.multi\n  391      def mark_as_reconciled(self):\n  392:         return self.write({'last_time_entries_checked': time.strftime(DEFAULT_SERVER_DATETIME_FORMAT)})\n  393  \n  394      @api.one\n  ...\n  415          string=\"Account Payable\", oldname=\"property_account_payable\",\n  416          domain=\"[('internal_type', '=', 'payable'), ('deprecated', '=', False)]\",\n  417:         help=\"This account will be used instead of the default one as the payable account for the current partner\",\n  418          required=True)\n  419      property_account_receivable_id = fields.Many2one('account.account', company_dependent=True,\n  420          string=\"Account Receivable\", oldname=\"property_account_receivable\",\n  421          domain=\"[('internal_type', '=', 'receivable'), ('deprecated', '=', False)]\",\n  422:         help=\"This account will be used instead of the default one as the receivable account for the current partner\",\n  423          required=True)\n  424      property_account_position_id = fields.Many2one('account.fiscal.position', company_dependent=True,\n  ...\n  427      property_payment_term_id = fields.Many2one('account.payment.term', company_dependent=True,\n  428          string ='Customer Payment Term',\n  429:         help=\"This payment term will be used instead of the default one for sale orders and customer invoices\", oldname=\"property_payment_term\")\n  430      property_supplier_payment_term_id = fields.Many2one('account.payment.term', company_dependent=True,\n  431           string ='Vendor Payment Term',\n  432:          help=\"This payment term will be used instead of the default one for purchase orders and vendor bills\", oldname=\"property_supplier_payment_term\")\n  433      ref_company_ids = fields.One2many('res.company', 'partner_id',\n  434          string='Companies that refers to partner', oldname=\"ref_companies\")\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\models\\product.py:\n   30          string=\"Income Account\", oldname=\"property_account_income\",\n   31          domain=[('deprecated', '=', False)],\n   32:         help=\"This account will be used for invoices instead of the default one to value sales for the current product.\")\n   33      property_account_expense_id = fields.Many2one('account.account', company_dependent=True,\n   34          string=\"Expense Account\", oldname=\"property_account_expense\",\n   35          domain=[('deprecated', '=', False)],\n   36:         help=\"This account will be used for invoices instead of the default one to value expenses for the current product.\")\n   37  \n   38      @api.multi\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\models\\res_config.py:\n    7  import openerp\n    8  from openerp import SUPERUSER_ID\n    9: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT as DF\n   10  from openerp import api, fields, models, _\n   11  from openerp.exceptions import UserError\n   ..\n   17  \n   18      company_id = fields.Many2one('res.company', string='Company', required=True,\n   19:         default=lambda self: self.env.user.company_id)\n   20:     has_default_company = fields.Boolean(readonly=True,\n   21:         default=lambda self: self._default_has_default_company())\n   22      expects_chart_of_accounts = fields.Boolean(related='company_id.expects_chart_of_accounts',\n   23          string='This company has its own chart of accounts',\n   24          help='Check this box if this company is a legal entity.')\n   25      currency_id = fields.Many2one('res.currency', related='company_id.currency_id', required=True,\n   26:         string='Default company currency', help=\"Main currency of the company.\")\n   27      paypal_account = fields.Char(related='company_id.paypal_account', size=128, string='Paypal account',\n   28          help=\"\"\"Paypal account (email) for receiving online payments (credit card, etc.)\n   ..\n   49               you should choose 'Round per line' because you certainly want the sum of your tax-included line\n   50               subtotals to be equal to the total amount with taxes.\"\"\")\n   51:     sale_tax_id = fields.Many2one('account.tax.template', string='Default sale tax', oldname=\"sale_tax\")\n   52:     purchase_tax_id = fields.Many2one('account.tax.template', string='Default purchase tax', oldname=\"purchase_tax\")\n   53      sale_tax_rate = fields.Float(string='Sales tax (%)')\n   54      purchase_tax_rate = fields.Float(string='Purchase tax (%)')\n   ..\n   65               the set of tax defined for the chosen template is complete''')\n   66  \n   67:     fiscalyear_last_day = fields.Integer(related='company_id.fiscalyear_last_day', default=31)\n   68:     fiscalyear_last_month = fields.Selection([(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')], related='company_id.fiscalyear_last_month', default=12)\n   69      period_lock_date = fields.Date(string=\"Lock Date for Non-Advisers\", related='company_id.period_lock_date', help=\"Only users with the 'Adviser' role can edit accounts prior to and inclusive of this date. Use it for period locking inside an open fiscal year, for example.\")\n   70      fiscalyear_lock_date = fields.Date(string=\"Lock Date\", related='company_id.fiscalyear_lock_date', help=\"No users, including Advisers, can edit accounts prior to and inclusive of this date. Use it for fiscal year locking for example.\")\n   ..\n  105               '-This installs the module account_reports_followup.')\n  106  \n  107:     default_sale_tax_id = fields.Many2one('account.tax', string=\"Default Sale Tax\", help=\"This sale tax will be assigned by default on new products.\", oldname=\"default_sale_tax\")\n  108:     default_purchase_tax_id = fields.Many2one('account.tax', string=\"Default Purchase Tax\", help=\"This purchase tax will be assigned by default on new products.\", oldname=\"default_purchase_tax\")\n  109  \n  110      module_l10n_us_check_printing = fields.Boolean(\"Allow check printing and deposits\")\n  ...\n  132  \n  133      @api.model\n  134:     def _default_has_default_company(self):\n  135          count = self.env['res.company'].search_count([])\n  136          return bool(count == 1)\n  ...\n  157              # update taxes\n  158              ir_values = self.env['ir.values']\n  159:             taxes_id = ir_values.get_default('product.template', 'taxes_id', company_id = self.company_id.id)\n  160:             supplier_taxes_id = ir_values.get_default('product.template', 'supplier_taxes_id', company_id = self.company_id.id)\n  161:             self.default_sale_tax_id = isinstance(taxes_id, list) and taxes_id[0] or taxes_id\n  162:             self.default_purchase_tax_id = isinstance(supplier_taxes_id, list) and supplier_taxes_id[0] or supplier_taxes_id\n  163          return {}\n  164  \n  ...\n  173              if self.chart_template_id.complete_tax_set:\n  174                  ir_values_obj = self.env['ir.values']\n  175:                 # default tax is given by the lowest sequence. For same sequence we will take the latest created as it will be the case for tax created while isntalling the generic chart of account\n  176                  sale_tax = tax_templ_obj.search(\n  177                      [('chart_template_id', '=', self.chart_template_id.id), ('type_tax_use', '=', 'sale')], limit=1,\n  ...\n  219          \"\"\" Set the product taxes if they have changed \"\"\"\n  220          ir_values_obj = self.env['ir.values']\n  221:         ir_values_obj.sudo().set_default('product.template', \"taxes_id\", [self.default_sale_tax_id.id] if self.default_sale_tax_id else False, for_all_users=True, company_id=self.company_id.id)\n  222:         ir_values_obj.sudo().set_default('product.template', \"supplier_taxes_id\", [self.default_purchase_tax_id.id] if self.default_purchase_tax_id else False, for_all_users=True, company_id=self.company_id.id)\n  223  \n  224      @api.multi\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\report\\account_aged_partner_balance.py:\n  162              total += float(r['total'] or 0.0)\n  163              for i in range(5) + ['direction']:\n  164:                 totals.setdefault(str(i), 0.0)\n  165                  totals[str(i)] += float(r[str(i)] or 0.0)\n  166          return res\n  ...\n  271              total += float(r['total'] or 0.0)\n  272              for i in range(5) + ['direction']:\n  273:                 totals.setdefault(str(i), 0.0)\n  274                  totals[str(i)] += float(r[str(i)] or 0.0)\n  275          return res\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\report\\account_financial_report.py:\n   42          ('account_type', 'Account Type'),\n   43          ('account_report', 'Report Value'),\n   44:         ], 'Type', default='sum')\n   45      account_ids = fields.Many2many('account.account', 'account_account_financial_report', 'report_line_id', 'account_id', 'Accounts')\n   46      account_report_id = fields.Many2one('account.financial.report', 'Report Value')\n   47      account_type_ids = fields.Many2many('account.account.type', 'account_account_financial_report_type', 'report_id', 'account_type_id', 'Account Types')\n   48:     sign = fields.Selection([(-1, 'Reverse balance sign'), (1, 'Preserve balance sign')], 'Sign on Reports', required=True, default=1,\n   49                              help='For accounts that are typically more debited than credited and that you would like to print as negative amounts in your reports, you should reverse the sign of the balance; e.g.: Expense account. The same applies for accounts that are typically more credited than debited and that you would like to print as positive amounts in your reports; e.g.: Income account.')\n   50      display_detail = fields.Selection([\n   ..\n   52          ('detail_flat', 'Display children flat'),\n   53          ('detail_with_hierarchy', 'Display children with hierarchy')\n   54:         ], 'Display details', default='detail_flat')\n   55      style_overwrite = fields.Selection([\n   56          (0, 'Automatic formatting'),\n   ..\n   61          (5, 'Italic Text (smaller)'),\n   62          (6, 'Smallest Text'),\n   63:         ], 'Financial Report Style', default=0,\n   64          help=\"You can set up here the format you want this record to be displayed. If you leave the automatic formatting, it will be computed based on the financial reports hierarchy (auto-computed field 'level').\")\n   65  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\report\\account_invoice_report_view.xml:\n  102          <field name=\"view_type\">form</field>\n  103          <field name=\"view_mode\">pivot,graph</field>\n  104:         <field name=\"context\">{'search_default_current':1, 'search_default_supplier':1, 'group_by':[], 'group_by_no_leaf':1, 'search_default_year': 1}</field>\n  105          <field name=\"search_view_id\" ref=\"view_account_invoice_report_search\"/>\n  106          <field name=\"help\">From this report, you can have an overview of the amount invoiced from your vendors. The search tool can also be used to personalise your Invoices reports and so, match this analysis to your needs.</field>\n  ...\n  111          <field name=\"view_type\">form</field>\n  112          <field name=\"view_mode\">pivot,graph</field>\n  113:         <field name=\"context\">{'search_default_current':1, 'search_default_customer':1, 'group_by':[], 'group_by_no_leaf':1, 'search_default_year': 1}</field>\n  114          <field name=\"search_view_id\" ref=\"view_account_invoice_report_search\"/>\n  115          <field name=\"help\">From this report, you can have an overview of the amount invoiced to your customers. The search tool can also be used to personalise your Invoices reports and so, match this analysis to your needs.</field>\n  ...\n  122          name=\"Monthly Turnover\"\n  123          groups=\"group_account_manager\"\n  124:         context=\"{'search_default_partner_id':[active_id], 'search_default_month':1,'search_default_user':1,'group_by_no_leaf':1,'group_by':[]}\"\n  125          res_model=\"account.invoice.report\"\n  126          src_model=\"res.partner\"\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\static\\src\\xml\\account_payment.xml:\n   80          </div>\n   81          <button class=\"btn btn-xs btn-primary js_unreconcile_payment pull-left\" t-att-payment-id=\"payment_id\" style=\"margin-top:5px; margin-bottom:5px;\">Unreconcile</button>\n   82:         <button class=\"btn btn-xs btn-default js_open_payment pull-right\" t-att-move-id=\"move_id\" style=\"margin-top:5px; margin-bottom:5px;\">Open Payment</button>\n   83      </t>\n   84  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\static\\src\\xml\\account_reconciliation.xml:\n   17              <div class=\"interface_options oe_form o_form\"></div>\n   18              <div class=\"reconciliation_lines_container\"></div>\n   19:             <div class=\"show_more_container\"><button class=\"show_more btn btn-default btn-sm\">Show more... (<span class=\"num_items_remaining\"></span> remaining)</button></div>\n   20              <p class='protip'>Tip : Hit ctrl-enter to reconcile all the balanced items in the sheet.</p>\n   21          </div></div></div>\n   ..\n   95  \n   96      <t t-name=\"preset_button\">\n   97:         <button type='button' class='btn btn-default preset' t-att-data-presetid=\"id\">\n   98              <t t-esc=\"name\"/>\n   99          </button>\n  ...\n  102      <t t-name=\"presets_dropdown\">\n  103          <div class=\"btn-group btn-group-sm\">\n  104:             <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">\n  105                  More <span class=\"caret\"></span>\n  106              </button>\n  ...\n  223          <t t-jquery=\".action_buttons\" t-operation=\"inner\">\n  224              <t t-if=\"single_statement or multiple_statements\">\n  225:                 <button class=\"button_back_to_statement btn btn-default btn-sm\">Go to bank statements</button>\n  226                  <button class=\"button_close_statement btn btn-primary btn-sm\">Close the statement<t t-if=\"multiple_statements\">s</t></button>\n  227              </t>\n  ...\n  231      <t t-name=\"bank_statement_reconciliation_line\" t-extend=\"reconciliation_line\">\n  232          <t t-jquery=\".accounting_view caption\" t-operation=\"inner\">\n  233:             <button class=\"button_ok btn btn-default btn-sm\"></button>\n  234              <span class=\"tip_reconciliation_not_balanced\">Select a partner or choose a counterpart</span>\n  235              <span t-if=\"! line.has_no_partner\" class=\"partner_name\">\n  ...\n  320      <t t-name=\"manual_reconciliation_line\" t-extend=\"reconciliation_line\">\n  321          <t t-jquery=\".accounting_view\" t-operation=\"before\">\n  322:             <button class=\"button_reconcile btn btn-default btn-sm\">Reconcile</button>\n  323          </t>\n  324          <t t-jquery=\".accounting_view caption\" t-operation=\"replace\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\test\\account_minimal_test.xml:\n  222              <field name=\"code\">TINV</field>\n  223              <field name=\"type\">sale</field>\n  224:             <field name=\"default_credit_account_id\" ref=\"a_sale\"/>\n  225:             <field name=\"default_debit_account_id\" ref=\"a_sale\"/>\n  226              <field name=\"refund_sequence\" eval=\"True\"/>\n  227          </record>\n  ...\n  231              <field name=\"code\">TEXJ</field>\n  232              <field name=\"type\">purchase</field>\n  233:             <field name=\"default_debit_account_id\" ref=\"a_expense\"/>\n  234:             <field name=\"default_credit_account_id\" ref=\"a_expense\"/>\n  235              <field name=\"refund_sequence\" eval=\"True\"/>\n  236          </record>\n  ...\n  246              <field name=\"code\">TBNK</field>\n  247              <field name=\"type\">bank</field>\n  248:             <field name=\"default_debit_account_id\" ref=\"bnk\"/>\n  249:             <field name=\"default_credit_account_id\" ref=\"bnk\"/>\n  250          </record>\n  251          <record id=\"cash_journal\" model=\"account.journal\">\n  ...\n  255              <field name=\"profit_account_id\" ref=\"rsa\" />\n  256              <field name=\"loss_account_id\" ref=\"rsa\" />\n  257:             <field name=\"default_debit_account_id\" ref=\"cash\"/>\n  258:             <field name=\"default_credit_account_id\" ref=\"cash\"/>\n  259          </record>\n  260          <record id=\"miscellaneous_journal\" model=\"account.journal\">\n  ...\n  268              <field name=\"code\">CUR</field>\n  269              <field name=\"type\">general</field>\n  270:             <field name=\"default_debit_account_id\" ref=\"income_fx_income\"/>\n  271:             <field name=\"default_credit_account_id\" ref=\"income_fx_expense\"/>\n  272              <field name=\"show_on_dashboard\" eval=\"False\"/>\n  273          </record>\n  ...\n  283              <field name=\"code\">TUBK</field>\n  284              <field name=\"type\">bank</field>\n  285:             <field name=\"default_debit_account_id\" ref=\"usd_bnk\"/>\n  286:             <field name=\"default_credit_account_id\" ref=\"usd_bnk\"/>\n  287              <field name=\"currency_id\" ref=\"base.USD\"/>\n  288              <field name=\"bank_account_id\" ref=\"bank_account_usd\"/>\n  ...\n  292          </record>\n  293          <!--\n  294:         Product income and expense accounts, default parameters\n  295          -->\n  296  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\tests\\test_account_move_closed_period.py:\n    2  from openerp.osv.orm import except_orm\n    3  from datetime import datetime, timedelta\n    4: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT\n    5  \n    6  class TestPeriodState(AccountingTestCase):\n    .\n   15          self.yesterday = datetime.now() - timedelta(1)\n   16          self.user_id = self.env['res.users'].browse(self.uid)\n   17:         self.user_id.company_id.write({'fiscalyear_lock_date': self.yesterday.strftime(DEFAULT_SERVER_DATE_FORMAT)})\n   18          self.sale_journal_id = self.env['account.journal'].search([('type', '=', 'sale')])[0]\n   19          self.account_id = self.env['account.account'].search([('internal_type', '=', 'receivable')])[0]\n   ..\n   25                  'name': '/',\n   26                  'journal_id': self.sale_journal_id.id,\n   27:                 'date': self.day_before_yesterday.strftime(DEFAULT_SERVER_DATE_FORMAT),\n   28                  'line_ids': [(0, 0, {\n   29                          'name': 'foo',\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\tests\\test_bank_statement_reconciliation.py:\n   78  \n   79      def create_statement_line(self, st_line_amount):\n   80:         journal = self.bs_model.with_context(journal_type='bank')._default_journal()\n   81          #journal = self.env.ref('l10n_be.bank_journal')\n   82          bank_stmt = self.bs_model.create({'journal_id': journal.id})\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\tests\\test_payment.py:\n   28  \n   29          self.bank_journal_euro = self.env['account.journal'].create({'name': 'Bank', 'type': 'bank', 'code': 'BNK67'})\n   30:         self.account_eur = self.bank_journal_euro.default_debit_account_id\n   31  \n   32          self.bank_journal_usd = self.env['account.journal'].create({'name': 'Bank US', 'type': 'bank', 'code': 'BNK68', 'currency_id': self.currency_usd_id})\n   33:         self.account_usd = self.bank_journal_usd.default_debit_account_id\n   34  \n   35          self.transfer_account = self.env['res.users'].browse(self.env.uid).company_id.transfer_account_id\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\tests\\test_reconciliation.py:\n   30  \n   31          self.bank_journal_euro = self.env['account.journal'].create({'name': 'Bank', 'type': 'bank', 'code': 'BNK67'})\n   32:         self.account_euro = self.bank_journal_euro.default_debit_account_id\n   33  \n   34          self.bank_journal_usd = self.env['account.journal'].create({'name': 'Bank US', 'type': 'bank', 'code': 'BNK68', 'currency_id': self.currency_usd_id})\n   35:         self.account_usd = self.bank_journal_usd.default_debit_account_id\n   36          \n   37          self.diff_income_account = self.env['res.users'].browse(self.env.uid).company_id.income_currency_exchange_account_id\n   ..\n  286          exchange_loss_line = None\n  287          for line in reconcile.line_id:\n  288:             res_account = result.setdefault(line.account_id, {'debit': 0.0, 'credit': 0.0, 'count': 0})\n  289              res_account['debit'] = res_account['debit'] + line.debit\n  290              res_account['credit'] = res_account['credit'] + line.credit\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\tests\\test_tax.py:\n   45          })\n   46          self.bank_journal = self.env['account.journal'].search([('type', '=', 'bank'), ('company_id', '=', self.account_manager.company_id.id)])[0]\n   47:         self.bank_account = self.bank_journal.default_debit_account_id\n   48          self.expense_account = self.env['account.account'].search([('user_type_id.type', '=', 'payable')], limit=1) #Should be done by onchange later\n   49  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\views\\account_invoice_view.xml:\n  171                                      </div>\n  172                                      <div class=\"col-xs-6\">\n  173:                                         <span t-attf-class=\"pull-right text-right label #{['draft', 'cancel'].indexOf(record.state.raw_value) > -1 ? 'label-default' : ['none'].indexOf(record.state.raw_value) > -1 ? 'label-danger' : ['proforma', 'proforma2', 'open'].indexOf(record.state.raw_value) > -1 ? 'label-warning' : ['paid'].indexOf(record.state.raw_value) > -1 ? 'label-success' : 'label-primary'}\"><t t-esc=\"record.state.value\"/></span>\n  174                                      </div>\n  175                                  </div>\n  ...\n  238                          <group>\n  239                              <field string=\"Vendor\" name=\"partner_id\"\n  240:                               context=\"{'default_customer': 0, 'search_default_supplier': 1, 'default_supplier': 1}\"\n  241                                domain=\"[('supplier', '=', True)]\"/>\n  242                              <field name=\"reference\" string=\"Vendor Reference\"/>\n  ...\n  313                                          attrs=\"{'readonly':[('move_name','!=',False)]}\"/>\n  314                                      <field domain=\"[('partner_id', '=', partner_id)]\" name=\"partner_bank_id\" invisible=\"1\"/>\n  315:                                     <field name=\"user_id\" string=\"Responsible\" context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'account.group_account_invoice']}\"/>\n  316                                      <field domain=\"[('company_id', '=', company_id), ('internal_type', '=', 'payable'), ('deprecated', '=', False)]\"\n  317                                  name=\"account_id\" groups=\"account.group_account_manager\"/>\n  ...\n  372                          <group>\n  373                              <field string=\"Customer\" name=\"partner_id\"\n  374:                                 context=\"{'search_default_customer':1, 'show_address': 1}\"\n  375                                  options='{\"always_reload\": True}'\n  376                                  domain=\"[('customer', '=', True)]\"/>\n  ...\n  380                              <field name=\"date_invoice\"/>\n  381                              <field name=\"move_name\" invisible=\"1\"/>\n  382:                             <field name=\"user_id\" groups=\"base.group_user\" context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'account.group_account_invoice']}\"/>\n  383                              <label for=\"currency_id\" groups=\"base.group_multi_currency\"/>\n  384                              <div groups=\"base.group_multi_currency\">\n  ...\n  391                      <notebook colspan=\"4\">\n  392                          <page string=\"Invoice Lines\">\n  393:                             <field name=\"invoice_line_ids\" nolabel=\"1\" widget=\"one2many_list\" mode=\"tree,kanban\" context=\"{'type': type, 'journal_id': journal_id, 'default_invoice_id': id}\">\n  394                                  <tree string=\"Invoice Lines\" editable=\"bottom\">\n  395                                      <field name=\"sequence\" widget=\"handle\"/>\n  ...\n  546              <field name=\"view_id\" ref=\"invoice_tree\"/>\n  547              <field name=\"domain\">[('type','in', ['out_invoice', 'out_refund']), ('state', 'not in', ['draft', 'cancel'])]</field>\n  548:             <field name=\"context\">{'default_type':'out_invoice', 'type':'out_invoice', 'journal_type': 'sale'}</field>\n  549              <field name=\"search_view_id\" ref=\"view_account_invoice_filter\"/>\n  550          </record>\n  ...\n  595              <field eval=\"False\" name=\"view_id\"/>\n  596              <field name=\"domain\">[('type','in',('out_invoice', 'out_refund'))]</field>\n  597:             <field name=\"context\">{'default_type':'out_invoice', 'type':'out_invoice', 'journal_type': 'sale'}</field>\n  598              <field name=\"search_view_id\" ref=\"view_account_invoice_filter\"/>\n  599              <field name=\"help\" type=\"html\">\n  ...\n  636              <field eval=\"False\" name=\"view_id\"/>\n  637              <field name=\"domain\">[('type','in',('in_invoice', 'in_refund'))]</field>\n  638:             <field name=\"context\">{'default_type': 'in_invoice', 'type': 'in_invoice', 'journal_type': 'purchase'}</field>\n  639              <field name=\"search_view_id\" ref=\"view_account_invoice_filter\"/>\n  640              <field name=\"help\" type=\"html\">\n  ...\n  667             id=\"act_account_journal_2_account_invoice_opened\"\n  668             name=\"Unpaid Invoices\"\n  669:            context=\"{'search_default_journal_id': [active_id], 'search_default_unpaid':1, 'default_journal_id': active_id}\"\n  670             domain=\"[('journal_id','=', active_id)]\"\n  671             res_model=\"account.invoice\"\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\views\\account_journal_dashboard_view.xml:\n   61                                  </div>\n   62                                  <div>\n   63:                                     <a type=\"object\" name=\"open_action_with_context\" context=\"{'action_name': 'action_bank_statement_line', 'search_default_journal': True}\">Search Operations</a>\n   64                                  </div>\n   65                                  <div>\n   ..\n  170                                  </div>\n  171                                  <div>\n  172:                                     <a type=\"object\" name=\"open_action\" context=\"{'action_name': 'action_move_journal_line', 'search_default_toreview': 1}\">Entries to Review</a>\n  173                                  </div>\n  174                                  <div>\n  ...\n  191                                  </div>\n  192                                  <div>\n  193:                                     <a type=\"object\" name=\"open_action_with_context\" context=\"{'action_name': 'action_validate_account_move', 'search_default_journal': True}\">Post All Entries</a>\n  194                                  </div>\n  195                              </div>\n  ...\n  215                              </t>\n  216                              <t t-if=\"journal_type == 'bank'\">\n  217:                                 <div name=\"bank_journal_default_cta\" t-if=\"! dashboard.bank_statements_source\">\n  218                                      <button t-if=\"dashboard.number_to_reconcile == 0\" type=\"object\" name=\"create_bank_statement\" class=\"btn btn-primary btn-sm\">New Statement</button>\n  219                                      <a t-if=\"dashboard.number_to_reconcile > 0\" type=\"object\" name=\"create_bank_statement\" class=\"oe_inline\">New Statement</a>\n  ...\n  261                              <div class=\"row\">\n  262                                  <div class=\"col-xs-6\">\n  263:                                     <a type=\"object\" name=\"open_action\" context=\"{'search_default_draft': '1', 'search_default_proforma': '1'}\">\n  264                                          <span t-if=\"journal_type == 'sale'\" title=\"Invoices to validate\"><t t-esc=\"dashboard.number_draft\"/> Invoices to validate</span>\n  265                                          <span t-if=\"journal_type == 'purchase'\" title=\"Draft bills\"><t t-esc=\"dashboard.number_draft\"/> Draft bills</span>\n  ...\n  272                              <div class=\"row\">\n  273                                  <div class=\"col-xs-6\">\n  274:                                     <a type=\"object\" name=\"open_action\" context=\"{'search_default_unpaid': '1'}\">\n  275                                          <span t-if=\"journal_type == 'sale'\" title=\"Awaiting payments\"><t t-esc=\"dashboard.number_waiting\"/>  Awaiting payments</span>\n  276                                          <span t-if=\"journal_type == 'purchase'\" title=\"Payments to do\"><t t-esc=\"dashboard.number_waiting\"/> Payments to do</span>\n  ...\n  299          <field name=\"view_mode\">kanban,form</field>\n  300          <field name=\"usage\">menu</field>\n  301:         <field name=\"context\">{'search_default_dashboard':1}</field>\n  302          <field name=\"domain\">[]</field>\n  303          <field name=\"help\" type=\"html\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\views\\account_payment_view.xml:\n   99                                  <field name=\"payment_type\" widget=\"radio\" attrs=\"{'readonly': [('state', '!=', 'draft')]}\"/>\n  100                                  <field name=\"partner_type\" nolabel=\"1\" widget=\"selection\" string=\"\" attrs=\"{'required': [('payment_type', 'in', ('inbound', 'outbound'))], 'invisible': [('payment_type', 'not in', ('inbound', 'outbound'))], 'readonly': [('state', '!=', 'draft')]}\"/>\n  101:                                 <field name=\"partner_id\" nolabel=\"1\" attrs=\"{'required': [('payment_type', 'in', ('inbound', 'outbound'))], 'invisible': [('payment_type', 'not in', ('inbound', 'outbound'))], 'readonly': [('state', '!=', 'draft')]}\" context=\"{'default_is_company': True, 'default_supplier': payment_type == 'outbound', 'default_customer': payment_type == 'inbound'}\"/>\n  102                                  <field name=\"journal_id\" widget=\"selection\" attrs=\"{'readonly': [('state', '!=', 'draft')]}\"/>\n  103                                  <field name=\"destination_journal_id\" widget=\"selection\" attrs=\"{'required': [('payment_type', '=', 'transfer')], 'invisible': [('payment_type', '!=', 'transfer')], 'readonly': [('state', '!=', 'draft')]}\"/>\n  ...\n  138              <field name=\"view_type\">form</field>\n  139              <field name=\"view_mode\">tree,form,graph</field>\n  140:             <field name=\"context\">{'default_payment_type': 'inbound'}</field>\n  141              <field name=\"domain\">[('partner_type', '=', 'customer')]</field>\n  142              <field name=\"view_id\" ref=\"view_account_payment_tree\"/>\n  ...\n  156              <field name=\"view_type\">form</field>\n  157              <field name=\"view_mode\">tree,form,graph</field>\n  158:             <field name=\"context\">{'default_payment_type': 'outbound'}</field>\n  159              <field name=\"domain\">[('partner_type', '=', 'supplier')]</field>\n  160              <field name=\"view_id\" ref=\"view_account_supplier_payment_tree\"/>\n  ...\n  212                      <footer>\n  213                          <button string='Validate' name=\"post\" type=\"object\" class=\"btn-primary\"/>\n  214:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n  215                      </footer>\n  216                  </form>\n  ...\n  224              <field name=\"view_mode\">form</field>\n  225              <field name=\"view_id\" ref=\"view_account_payment_invoice_form\"/>\n  226:             <field name=\"context\">{'default_invoice_ids': [(4, active_id, None)]}</field>\n  227              <field name=\"target\">new</field>\n  228          </record>\n  ...\n  255                      <footer>\n  256                          <button string='Validate' name=\"create_payment\" type=\"object\" class=\"btn-primary\"/>\n  257:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n  258                      </footer>\n  259                 </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\views\\account_view.xml:\n   18                               <field name=\"user_type_id\" widget=\"selection\"/>\n   19                               <field name=\"tax_ids\" widget=\"many2many_tags\"/>\n   20:                              <field name=\"tag_ids\" widget=\"many2many_tags\" domain=\"[('applicability', '!=', 'taxes')]\" context=\"{'default_applicability': 'accounts'}\"/>\n   21                               <field name=\"company_id\" options=\"{'no_create': True}\" groups=\"base.group_multi_company\"/>\n   22                               <field name=\"currency_id\" options=\"{'no_create': True}\" groups=\"base.group_multi_currency\"/>\n   ..\n  141              name=\"Unreconciled Entries\"\n  142              res_model=\"account.move.line\"\n  143:             context=\"{'search_default_account_id':[active_id], 'search_default_unreconciled':1, 'default_account_id': active_id}\"\n  144              src_model=\"account.account\"/>\n  145  \n  ...\n  147              id=\"action_move_line_select\"\n  148              name=\"Journal Items\"\n  149:             context=\"{'search_default_account_id': [active_id]}\"\n  150              res_model=\"account.move.line\"\n  151              src_model=\"account.account\"/>\n  ...\n  154              id=\"action_move_line_select_posted\"\n  155              name=\"Journal Items\"\n  156:             context=\"{'search_default_account_id': [active_id], 'search_default_posted': 1}\"\n  157              res_model=\"account.move.line\"\n  158              src_model=\"account.account\"/>\n  ...\n  161              id=\"action_move_line_select_by_type\"\n  162              name=\"Journal Items\"\n  163:             context=\"{'search_default_user_type_id': [active_id]}\"\n  164              res_model=\"account.move.line\"\n  165              src_model=\"account.account.type\"/>\n  ...\n  168              id=\"action_move_line_select_by_partner\"\n  169              name=\"Journal Items\"\n  170:             context=\"{'search_default_partner_id': [active_id]}\"\n  171              res_model=\"account.move.line\"\n  172              src_model=\"res.partner\"/>\n  ...\n  176              name=\"Net Tax Lines\"\n  177              res_model=\"account.move.line\"\n  178:             context=\"{'search_default_tax_ids': [active_id]}\"\n  179              src_model=\"account.tax\"/>\n  180  \n  ...\n  183              name=\"Tax Lines\"\n  184              res_model=\"account.move.line\"\n  185:             context=\"{'search_default_tax_line_id': [active_id]}\"\n  186              src_model=\"account.tax\"/>\n  187  \n  ...\n  190              name=\"Net Tax Lines\"\n  191              res_model=\"account.move.line\"\n  192:             context=\"{'search_default_tax_ids': [active_id], 'search_default_posted': 1}\"\n  193              src_model=\"account.tax\"/>\n  194  \n  ...\n  197              name=\"Tax Lines\"\n  198              res_model=\"account.move.line\"\n  199:             context=\"{'search_default_tax_line_id': [active_id], 'search_default_posted': 1}\"\n  200              src_model=\"account.tax\"/>\n  201  \n  ...\n  257                                      </group>\n  258                                      <group>\n  259:                                         <field name=\"default_debit_account_id\" domain=\"[('deprecated', '=', False)]\" />\n  260:                                         <field name=\"default_credit_account_id\" domain=\"[('deprecated', '=', False)]\" />\n  261                                          <field name=\"currency_id\" options=\"{'no_create': True}\" groups=\"base.group_multi_currency\"/>\n  262                                      </group>\n  ...\n  342                  (0, 0, {'view_mode': 'form', 'view_id': ref('view_account_bank_journal_form')})]\"/>\n  343              <field name=\"domain\">[('type', '=', 'bank')]</field>\n  344:             <field name=\"context\">{'default_type': 'bank', 'default_display_on_footer': True}</field>\n  345              <field name=\"help\" type=\"html\">\n  346                <p class=\"oe_view_nocontent_create\">\n  ...\n  374             id=\"act_account_journal_2_account_bank_statement\"\n  375             name=\"Bank statements\"\n  376:            context=\"{'search_default_journal_id': active_id, 'default_journal_id': active_id}\"\n  377             res_model=\"account.bank.statement\"\n  378             src_model=\"account.journal\"/>\n  ...\n  381             id=\"act_account_journal_2_account_move_line\"\n  382             name=\"Journal Items\"\n  383:            context=\"{'search_default_journal_id': active_id, 'default_journal_id': active_id}\"\n  384             res_model=\"account.move.line\"\n  385             src_model=\"account.journal\"/>\n  ...\n  403                      <footer>\n  404                          <button string=\"Confirm\" name=\"validate\" type=\"object\" class=\"btn-primary\"/>\n  405:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n  406                      </footer>\n  407                  </form>\n  ...\n  428                      <footer>\n  429                          <button string=\"Confirm\" name=\"validate\" type=\"object\" class=\"btn-primary\"/>\n  430:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n  431                      </footer>\n  432                  </div>\n  ...\n  549                                      <field name=\"ref\" attrs=\"{'readonly' : [('journal_entry_ids', '!=', [])] }\"/>\n  550                                      <field name=\"partner_id\" domain=\"['|',('parent_id','=',False),('is_company','=',True)]\"\n  551:                                          context=\"{'default_supplier': 1}\"\n  552                                           attrs=\"{'readonly' : [('journal_entry_ids', '!=', [])] }\"/>\n  553                                      <field name=\"name\" attrs=\"{'readonly' : [('journal_entry_ids', '!=', [])] }\"/>\n  ...\n  934                                      <field name=\"description\" attrs=\"{'invisible':[('amount_type','=', 'group')]}\"/>\n  935                                      <field name=\"tax_group_id\"/>\n  936:                                     <field name=\"tag_ids\" domain=\"[('applicability', '!=', 'accounts')]\" widget=\"many2many_tags\" context=\"{'default_applicability': 'taxes'}\"/>\n  937                                      <field name=\"analytic\" attrs=\"{'invisible':[('amount_type','=', 'group')]}\" groups=\"analytic.group_analytic_accounting\" />\n  938                                      <field name=\"company_id\" options=\"{'no_create': True}\" groups=\"base.group_multi_company\"/>\n  ...\n 1029                              </page>\n 1030                              <page string=\"Analytic Lines\" groups=\"analytic.group_analytic_accounting\">\n 1031:                                 <field name=\"analytic_line_ids\" context=\"{'default_general_account_id':account_id, 'default_name': name, 'default_date':date, 'amount': (debit or 0.0)-(credit or 0.0)}\"/>\n 1032                              </page>\n 1033                          </notebook>\n ....\n 1166              <field name=\"name\">Journal Items</field>\n 1167              <field name=\"res_model\">account.move.line</field>\n 1168:             <field name=\"context\">{'search_default_partner_id': [active_id], 'default_partner_id': active_id}</field>\n 1169              <field name=\"view_id\" ref=\"view_move_line_tree\"/>\n 1170          </record>\n ....\n 1174              <field name=\"view_mode\">graph,pivot</field>\n 1175              <field name=\"view_id\" ref=\"account_move_line_graph_date\"/>\n 1176:             <field name=\"context\">{'search_default_account_id': [active_id]}</field>\n 1177              <field name=\"res_model\">account.move.line</field>\n 1178          </record>\n ....\n 1182              <field name=\"view_mode\">graph,pivot</field>\n 1183              <field name=\"view_id\" ref=\"account_move_line_graph_date\"/>\n 1184:             <field name=\"context\">{'search_default_account_id': [active_id], 'search_default_posted': 1}</field>\n 1185              <field name=\"res_model\">account.move.line</field>\n 1186          </record>\n ....\n 1190              <field name=\"view_mode\">graph,pivot</field>\n 1191              <field name=\"view_id\" ref=\"account_move_line_graph_date_cash_basis\"/>\n 1192:             <field name=\"context\">{'search_default_account_id': [active_id]}</field>\n 1193              <field name=\"res_model\">account.move.line</field>\n 1194          </record>\n ....\n 1198              <field name=\"view_mode\">graph,pivot</field>\n 1199              <field name=\"view_id\" ref=\"account_move_line_graph_date_cash_basis\"/>\n 1200:             <field name=\"context\">{'search_default_account_id': [active_id], 'search_default_posted': 1}</field>\n 1201              <field name=\"res_model\">account.move.line</field>\n 1202          </record>\n ....\n 1289                      <filter string=\"Posted\" domain=\"[('state','=','posted')]\" help=\"Posted Journal Entries\"/>\n 1290                      <separator/>\n 1291:                     <filter string=\"Sales\" domain=\"[('journal_id.type','=','sale')]\" context=\"{'default_journal_type': 'sale'}\"/>\n 1292:                     <filter string=\"Purchases\" domain=\"[('journal_id.type','=','purchase')]\" context=\"{'default_journal_type': 'purchase'}\"/>\n 1293:                     <filter string=\"Bank Operations\" domain=\"[('journal_id.type','=','bank')]\" context=\"{'default_journal_type': 'bank'}\"/>\n 1294:                     <filter string=\"Cash Operations\" domain=\"[('journal_id.type','=','cash')]\" context=\"{'default_journal_type': 'cash'}\"/>\n 1295:                     <filter string=\"Miscellaneous Operations\" domain=\"[('journal_id.type','=','general')]\" name=\"misc_filter\" context=\"{'default_journal_type': 'general'}\"/>\n 1296                      <separator/>\n 1297                      <field name=\"partner_id\"/>\n ....\n 1314              <field name=\"view_id\" ref=\"view_move_tree\"/>\n 1315              <field name=\"search_view_id\" ref=\"view_account_move_filter\"/>\n 1316:             <field name=\"context\">{'search_default_misc_filter':1}</field>\n 1317              <field name=\"help\" type=\"html\">\n 1318                <p class=\"oe_view_nocontent_create\">\n ....\n 1349              id=\"act_account_move_to_account_move_line_open\"\n 1350              name=\"Journal Items\"\n 1351:             context=\"{'search_default_move_id': active_id, 'default_move_id': active_id}\"\n 1352              res_model=\"account.move.line\"\n 1353              src_model=\"account.move\"/>\n ....\n 1449                          <field name=\"user_type_id\" widget=\"selection\"/>\n 1450                          <field name=\"currency_id\" options=\"{'no_create': True}\" groups=\"base.group_multi_currency\"/>\n 1451:                         <field name=\"tag_ids\" domain=\"[('applicability', '!=', 'taxes')]\" widget=\"many2many_tags\" context=\"{'default_applicability': 'accounts'}\"/>\n 1452                          <field name=\"reconcile\"/>\n 1453                          <field name=\"chart_template_id\"/>\n 1454                      </group>\n 1455:                     <separator string=\"Default Taxes\"/>\n 1456                      <field name=\"tax_ids\"/>\n 1457                      <separator string=\"Notes\"/>\n ....\n 1509                          <field name=\"transfer_account_id\"/>\n 1510                      </group>\n 1511:                     <separator string=\"Default Taxes\" colspan=\"4\"/>\n 1512                      <field name=\"tax_template_ids\" colspan=\"4\"  nolabel=\"1\"/>\n 1513                      <separator string=\"Properties\" colspan=\"4\"/>\n ....\n 1613                                  </group>\n 1614                                  <group>\n 1615:                                     <field name=\"tag_ids\" domain=\"[('applicability', '!=', 'accounts')]\" widget=\"many2many_tags\" context=\"{'default_applicability': 'taxes'}\"/>\n 1616                                      <field name=\"active\" groups=\"base.group_no_one\"/>\n 1617                                      <field name=\"company_id\" options=\"{'no_create': True}\" groups=\"base.group_multi_company\"/>\n ....\n 1670                          </group>\n 1671                          <group invisible=\"1\">\n 1672:                             <field name=\"company_id\" options=\"{'no_create': True}\"/> <!-- we assume that this wizard will be run only by administrators and as this field may cause problem if hidden (because of the default company of the user removed from the selection because already configured), we simply choosed to remove the group \"multi company\" of it -->\n 1673                              <field name=\"currency_id\" class=\"oe_inline\"/>\n 1674                              <field name=\"use_anglo_saxon\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\views\\partner_view.xml:\n   81  \n   82          <record id=\"action_open_partner_analytic_accounts\" model=\"ir.actions.act_window\">\n   83:             <field name=\"context\">{'search_default_partner_id': [active_id], 'default_partner_id': active_id}</field>\n   84              <field name=\"name\">Analytic Accountss</field>\n   85              <field name=\"res_model\">account.analytic.account</field>\n   ..\n  100                          name=\"%(account.action_invoice_refund_out_tree)d\"\n  101                          attrs=\"{'invisible': [('customer', '=', False)]}\"\n  102:                         context=\"{'search_default_partner_id': active_id,'default_partner_id': active_id}\">\n  103                          <div class=\"o_form_field o_stat_info\">\n  104                              <span class=\"o_stat_value\"><field name=\"total_invoiced\" widget='monetary' options=\"{'currency_field': 'currency_id'}\"/></span>\n  ...\n  113                              <button type=\"action\" class=\"btn-link\"\n  114                                  name=\"%(base.action_res_partner_bank_account_form)d\"\n  115:                                 context=\"{'search_default_partner_id': active_id, 'default_partner_id': active_id}\">\n  116                                  <field string=\"Bank account(s)\" name=\"bank_account_count\" widget=\"statinfo\"/>\n  117                              </button>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\views\\res_config_view.xml:\n    6              <field name=\"res_model\">ir.module.module</field>\n    7              <field name=\"view_mode\">kanban,tree,form</field>\n    8:             <field name=\"context\" eval=\"{'search_default_category_id': ref('base.module_category_localization_account_charts')}\"/>\n    9              <field name=\"search_view_id\" ref=\"base.view_module_filter\"/>\n   10          </record>\n   ..\n   19                          <button string=\"Cancel\" type=\"object\" name=\"cancel\" class=\"oe_link\"/>\n   20                      </header>\n   21:                     <field name=\"has_default_company\" invisible=\"1\" />\n   22                      <field name=\"has_chart_of_accounts\" invisible=\"1\"/>\n   23                      <field name=\"complete_tax_set\" invisible=\"1\"/>\n   ..\n   25                          <label for=\"id\" string=\"Company\"/>\n   26                          <div>\n   27:                             <div attrs=\"{'invisible': [('has_default_company', '=', True)]}\">\n   28                                  <field name=\"company_id\"\n   29                                      options=\"{'no_create': True}\"\n   ..\n  209                          <div name=\"invoice_taxes\">\n  210                              <div>\n  211:                                 <label for=\"default_sale_tax_id\"/>\n  212:                                 <field name=\"default_sale_tax_id\"\n  213                                      domain=\"[('type_tax_use', 'in', ('sale', 'all')), ('company_id', '=', company_id)]\"\n  214                                      class=\"oe_inline\"/>\n  215                              </div>\n  216                              <div>\n  217:                                 <label for=\"default_purchase_tax_id\"/>\n  218:                                 <field name=\"default_purchase_tax_id\"\n  219                                      domain=\"[('type_tax_use', 'in', ('purchase', 'all')), ('company_id', '=', company_id)]\"\n  220                                      class=\"oe_inline\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\views\\web_planner_data.xml:\n  171                          <ul>\n  172                              <li><a t-att-href=\"prepare_backend_url('account.action_tax_form')\">Review existing Taxes</a></li>\n  173:                             <li><a t-att-href=\"prepare_backend_url('account.action_account_config')\">Set the default Sales and Purchase taxes</a></li>\n  174                          </ul>\n  175                      </p>\n  ...\n  199                      </p>\n  200                      <p>\n  201:                         Most currencies are already created by default. If you plan\n  202                          to use some of them, you should check their <strong>Active</strong>\n  203                          field.\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\wizard\\account_financial_report.py:\n   18  \n   19      enable_filter = fields.Boolean(string='Enable Comparison')\n   20:     account_report_id = fields.Many2one('account.financial.report', string='Account Reports', required=True, default=_get_account_report)\n   21      label_filter = fields.Char(string='Column Label', help=\"This label will be displayed on report to show the balance computed for the given comparison filter.\")\n   22:     filter_cmp = fields.Selection([('filter_no', 'No Filters'), ('filter_date', 'Date')], string='Filter by', required=True, default='filter_no')\n   23      date_from_cmp = fields.Date(string='Start Date')\n   24      date_to_cmp = fields.Date(string='End Date')\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\wizard\\account_financial_report_view.xml:\n   40          <field name=\"view_id\" ref=\"accounting_report_view\"/>\n   41          <field name=\"target\">new</field>\n   42:         <field name=\"context\" eval=\"{'default_account_report_id':ref('account.account_financial_report_balancesheet0')}\"/>\n   43      </record>\n   44  \n   ..\n   53          <field name=\"view_id\" ref=\"accounting_report_view\"/>\n   54          <field name=\"target\">new</field>\n   55:         <field name=\"context\" eval=\"{'default_account_report_id':ref('account.account_financial_report_profitandloss0')}\"/>\n   56      </record>\n   57  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\wizard\\account_invoice_refund.py:\n   21          return ''\n   22  \n   23:     date_invoice = fields.Date(string='Refund Date', default=fields.Date.context_today, required=True)\n   24      date = fields.Date(string='Accounting Date')\n   25:     description = fields.Char(string='Reason', required=True, default=_get_reason)\n   26      refund_only = fields.Boolean(string='Technical field to hide filter_refund in case invoice is partially paid', compute='_get_refund_only')\n   27      filter_refund = fields.Selection([('refund', 'Create a draft refund'), ('cancel', 'Cancel: create refund and reconcile'), ('modify', 'Modify: create refund, reconcile and create a new draft invoice')],\n   28:         default='refund', string='Refund Method', required=True, help='Refund base on this type. You can not Modify and Cancel if the invoice is already reconciled')\n   29  \n   30      @api.depends('date_invoice')\n   ..\n   69                          if line.account_id.id == inv.account_id.id:\n   70                              to_reconcile_lines += line\n   71:                             to_reconcile_ids.setdefault(line.account_id.id, []).append(line.id)\n   72                          if line.reconciled:\n   73                              line.remove_move_reconcile()\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\wizard\\account_invoice_refund_view.xml:\n   42                      <footer>\n   43                          <button string='Create Refund' name=\"invoice_refund\" type=\"object\" class=\"btn-primary\"/>\n   44:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   45                      </footer>\n   46                 </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\wizard\\account_invoice_state_view.xml:\n   14                      </p>\n   15                      <footer>\n   16:                         <button string=\"Confirm Invoices\" name=\"invoice_confirm\" type=\"object\" default_focus=\"1\" class=\"btn-primary\"/>\n   17:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   18                      </footer>\n   19                  </form>\n   ..\n   33                  <form string=\"Cancel Selected Invoices\">\n   34                      <footer>\n   35:                         <button string=\"Cancel Invoices\" name=\"invoice_cancel\" type=\"object\" default_focus=\"1\" class=\"btn-primary\"/>\n   36:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   37                      </footer>\n   38                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\wizard\\account_move_reversal.py:\n    9      _description = 'Account move reversal'\n   10  \n   11:     date = fields.Date(string='Reversal date', default=fields.Date.context_today, required=True)\n   12      journal_id = fields.Many2one('account.journal', string='Use Specific Journal', help='If empty, uses the journal of the journal entry to be reversed.')\n   13  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\wizard\\account_move_reversal_view.xml:\n   14                      <footer>\n   15                          <button string=\"Reverse Moves\" name=\"reverse_moves\" type=\"object\" class=\"btn-primary\"/>\n   16:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   17                      </footer>\n   18                 </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\wizard\\account_reconcile.py:\n   14      debit = fields.Float(string='Debit amount', readonly=True, digits=0)\n   15      writeoff = fields.Float(string='Write-Off amount', readonly=True, digits=0)\n   16:     company_id = fields.Many2one('res.company', string='Company', required=True, default=lambda self: self.env.user.company_id)\n   17  \n   18      @api.model\n   19:     def default_get(self, fields):\n   20:         res = super(AccountMoveLineReconcile, self).default_get(fields)\n   21          data = self.trans_rec_get()\n   22          if 'trans_nbr' in fields:\n   ..\n   69      journal_id = fields.Many2one('account.journal', string='Write-Off Journal', required=True)\n   70      writeoff_acc_id = fields.Many2one('account.account', string='Write-Off account', required=True, domain=[('deprecated', '=', False)])\n   71:     date_p = fields.Date(string='Date', default=fields.Date.context_today)\n   72:     comment = fields.Char(required=True, default='Write-off')\n   73      analytic_id = fields.Many2one('account.analytic.account', string='Analytic Account', domain=[('account_type', '=', 'normal')])\n   74  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\wizard\\account_reconcile_view.xml:\n   18                      </group>\n   19                      <footer>\n   20:                         <button string=\"Reconcile\" name=\"trans_rec_reconcile_full\" type=\"object\" default_focus=\"1\" attrs=\"{'invisible':[('writeoff','!=',0)]}\" class=\"btn-primary\"/>\n   21                          <button string=\"Reconcile With Write-Off\" name=\"trans_rec_addendum_writeoff\" type=\"object\" attrs=\"{'invisible':[('writeoff','=',0)]}\" class=\"btn-primary\"/>\n   22                          <button string=\"Partial Reconcile\" name=\"trans_rec_reconcile_partial_reconcile\" type=\"object\" attrs=\"{'invisible':['|',('writeoff','=',0),('trans_nbr','&lt;',2)]}\" class=\"btn-primary\"/>\n   23:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   24                      </footer>\n   25                 </form>\n   ..\n   58                      </group>\n   59                      <footer>\n   60:                         <button string=\"Reconcile\" name=\"trans_rec_reconcile\" type=\"object\" default_focus=\"1\" class=\"btn-primary\"/>\n   61:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   62                      </footer>\n   63                 </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\wizard\\account_report_aged_partner_balance.py:\n   14      _description = 'Account Aged Trial balance Report'\n   15  \n   16:     period_length = fields.Integer(string='Period Length (days)', required=True, default=30)\n   17      journal_ids = fields.Many2many('account.journal', string='Journals', required=True)\n   18:     date_from = fields.Date(default=lambda *a: time.strftime('%Y-%m-%d'))\n   19  \n   20      def _print_report(self, data):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\wizard\\account_report_aged_partner_balance_view.xml:\n   18                  <field name=\"journal_ids\" required=\"0\" invisible=\"1\"/>\n   19                  <footer>\n   20:                     <button name=\"check_report\" string=\"Print\" type=\"object\" default_focus=\"1\" class=\"oe_highlight\"/>\n   21                      or\n   22                      <button string=\"Cancel\" class=\"oe_link\" special=\"cancel\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\wizard\\account_report_common.py:\n    8      _description = \"Account Common Report\"\n    9  \n   10:     company_id = fields.Many2one('res.company', string='Company', readonly=True, default=lambda self: self.env.user.company_id)\n   11:     journal_ids = fields.Many2many('account.journal', string='Journals', required=True, default=lambda self: self.env['account.journal'].search([]))\n   12      date_from = fields.Date(string='Start Date')\n   13      date_to = fields.Date(string='End Date')\n   14      target_move = fields.Selection([('posted', 'All Posted Entries'),\n   15                                      ('all', 'All Entries'),\n   16:                                     ], string='Target Moves', required=True, default='posted')\n   17  \n   18      def _build_contexts(self, data):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\wizard\\account_report_common_account.py:\n   11      display_account = fields.Selection([('all','All'), ('movement','With movements'), \n   12                                          ('not_zero','With balance is not equal to 0'),], \n   13:                                         string='Display Accounts', required=True, default='movement')\n   14  \n   15      @api.multi\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\wizard\\account_report_common_partner.py:\n   12                                          ('supplier', 'Payable Accounts'),\n   13                                          ('customer_supplier', 'Receivable and Payable Accounts')\n   14:                                       ], string=\"Partner's\", required=True, default='customer')\n   15  \n   16      def pre_print_report(self, data):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\wizard\\account_report_common_view.xml:\n   17              </group>\n   18              <footer>\n   19:                 <button name=\"check_report\" string=\"Print\" type=\"object\" default_focus=\"1\" class=\"oe_highlight\"/>\n   20                  or \n   21                  <button string=\"Cancel\" class=\"oe_link\" special=\"cancel\" />\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\wizard\\account_report_general_ledger.py:\n   12      initial_balance = fields.Boolean(string='Include Initial Balances',\n   13                                      help='If you selected date, this field allow you to add a row to display the amount of debit/credit/balance that precedes the filter you\\'ve set.')\n   14:     sortby = fields.Selection([('sort_date', 'Date'), ('sort_journal_partner', 'Journal & Partner')], string='Sort by', required=True, default='sort_date')\n   15      journal_ids = fields.Many2many('account.journal', 'account_report_general_ledger_journal_rel', 'account_id', 'journal_id', string='Journals', required=True)\n   16  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\wizard\\account_report_trial_balance.py:\n    9      _description = 'Trial Balance Report'\n   10  \n   11:     journal_ids = fields.Many2many('account.journal', 'account_balance_report_journal_rel', 'account_id', 'journal_id', string='Journals', required=True, default=[])\n   12  \n   13      def _print_report(self, data):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\wizard\\account_unreconcile_view.xml:\n   11                  <label string=\"If you unreconcile transactions, you must also verify all the actions that are linked to those transactions because they will not be disabled\"/>\n   12                  <footer>\n   13:                     <button string=\"Unreconcile\" name=\"trans_unrec\" type=\"object\" default_focus=\"1\" class=\"btn-primary\"/>\n   14:                     <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   15                  </footer>\n   16              </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\wizard\\account_validate_move_view.xml:\n   11                      <label string=\"All selected journal entries will be validated and posted. You won't be able to modify them afterwards.\"/>\n   12                      <footer>\n   13:                         <button string=\"Post Journal Entries\" name=\"validate_move\" type=\"object\" default_focus=\"1\" class=\"btn-primary\"/>\n   14:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   15                      </footer>\n   16                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account\\wizard\\pos_box.xml:\n   14                      <footer>\n   15                          <button name=\"run\" string=\"Put Money In\" type=\"object\" class=\"btn-primary\"/>\n   16:                         <button special=\"cancel\" string=\"Cancel\" class=\"btn-default\"/>\n   17                      </footer>\n   18                  </form>\n   ..\n   42                      <footer>\n   43                          <button name=\"run\" string=\"Take Money Out\" type=\"object\" class=\"btn-primary\"/>\n   44:                         <button class=\"btn-default\" special=\"cancel\" string=\"Cancel\" />\n   45                      </footer>\n   46                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_analytic_default\\__init__.py:\n    2  # Part of Odoo. See LICENSE file for full copyright and licensing details.\n    3  \n    4: import account_analytic_default\n    5  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_analytic_default\\__openerp__.py:\n    3  \n    4  {\n    5:     'name': 'Account Analytic Defaults',\n    6      'version': '1.0',\n    7      'category': 'Accounting & Finance',\n    8      'description': \"\"\"\n    9: Set default values for your analytic accounts.\n   10  ==============================================\n   11  \n   ..\n   22      'data': [\n   23          'security/ir.model.access.csv', \n   24:         'security/account_analytic_default_security.xml', \n   25:         'account_analytic_default_view.xml'\n   26      ],\n   27      'demo': [],\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_analytic_default\\account_analytic_default.py:\n    7  from openerp import api\n    8  \n    9: class account_analytic_default(osv.osv):\n   10:     _name = \"account.analytic.default\"\n   11      _description = \"Analytic Distribution\"\n   12      _rec_name = \"analytic_id\"\n   ..\n   15          'sequence': fields.integer('Sequence', help=\"Gives the sequence order when displaying a list of analytic distribution\"),\n   16          'analytic_id': fields.many2one('account.analytic.account', 'Analytic Account', domain=[('account_type', '=', 'normal')]),\n   17:         'product_id': fields.many2one('product.product', 'Product', ondelete='cascade', help=\"Select a product which will use analytic account specified in analytic default (e.g. create new customer invoice or Sales order if we select this product, it will automatically take this as an analytic account)\"),\n   18:         'partner_id': fields.many2one('res.partner', 'Partner', ondelete='cascade', help=\"Select a partner which will use analytic account specified in analytic default (e.g. create new customer invoice or Sales order if we select this partner, it will automatically take this as an analytic account)\"),\n   19:         'user_id': fields.many2one('res.users', 'User', ondelete='cascade', help=\"Select a user which will use analytic account specified in analytic default.\"),\n   20:         'company_id': fields.many2one('res.company', 'Company', ondelete='cascade', help=\"Select a company which will use analytic account specified in analytic default (e.g. create new customer invoice or Sales order if we select this company, it will automatically take this as an analytic account)\"),\n   21:         'date_start': fields.date('Start Date', help=\"Default start date for this Analytic Account.\"),\n   22:         'date_stop': fields.date('End Date', help=\"Default end date for this Analytic Account.\"),\n   23      }\n   24  \n   ..\n   63      def _onchange_product_id(self):\n   64          res = super(account_invoice_line, self)._onchange_product_id()\n   65:         rec = self.env['account.analytic.default'].account_get(self.product_id.id, self.invoice_id.partner_id.id, self._uid,\n   66                                                                 time.strftime('%Y-%m-%d'), company_id=self.company_id.id, context=self._context)\n   67          if rec:\n   ..\n   77      def _get_account_analytic_invoice(self, cursor, user, picking, move_line):\n   78          partner_id = picking.partner_id and picking.partner_id.id or False\n   79:         rec = self.pool.get('account.analytic.default').account_get(cursor, user, move_line.product_id.id, partner_id, user, time.strftime('%Y-%m-%d'))\n   80  \n   81          if rec:\n   ..\n   91      def _prepare_invoice_line(self, qty):\n   92          res = super(sale_order_line, self)._prepare_invoice_line(qty)\n   93:         default_analytic_account = self.env['account.analytic.default'].account_get(self.product_id.id, self.order_id.partner_id.id, self.order_id.user_id.id, time.strftime('%Y-%m-%d'))\n   94:         if default_analytic_account:\n   95:             res.update({'account_analytic_id': default_analytic_account.analytic_id.id})\n   96          return res\n   97  \n   ..\n  100      _inherit = 'product.product'\n  101      def _rules_count(self, cr, uid, ids, field_name, arg, context=None):\n  102:         Analytic = self.pool['account.analytic.default']\n  103          return {\n  104              product_id: Analytic.search_count(cr, uid, [('product_id', '=', product_id)], context=context)\n  ...\n  126      def action_view_rules(self, cr, uid, ids, context=None):\n  127          products = self._get_products(cr, uid, ids, context=context)\n  128:         result = self._get_act_window_dict(cr, uid, 'account_analytic_default.action_product_default_list', context=context)\n  129          result['domain'] = \"[('product_id','in',[\" + ','.join(map(str, products)) + \"])]\"\n  130          # Remove context so it is not going to filter on product_id with active_id of template\n  ...\n  137  \n  138      def _create_invoice_line_from_vals(self, cr, uid, move, invoice_line_vals, context=None):\n  139:         # It will set the default analtyic account on the invoice line\n  140          partner_id = self.pool['account.invoice'].browse(cr, uid, invoice_line_vals.get('invoice_id'), context=context).partner_id.id\n  141          if 'account_analytic_id' not in invoice_line_vals or not invoice_line_vals.get('account_analytic_id'):\n  142:             rec = self.pool['account.analytic.default'].account_get(cr, uid, move.product_id.id, partner_id, uid, time.strftime('%Y-%m-%d'), company_id=move.company_id.id, context=context)\n  143              if rec:\n  144                  invoice_line_vals.update({'account_analytic_id': rec.analytic_id.id})\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_analytic_default\\account_analytic_default_view.xml:\n    2  <openerp>\n    3      <data>\n    4:         <record id=\"view_account_analytic_default_tree\" model=\"ir.ui.view\">\n    5:             <field name=\"name\">account.analytic.default.tree</field>\n    6:             <field name=\"model\">account.analytic.default</field>\n    7              <field name=\"arch\" type=\"xml\">\n    8:                 <tree string=\"Analytic Defaults\">\n    9                      <field name=\"sequence\"/>\n   10                      <field name=\"analytic_id\" required=\"0\" groups=\"analytic.group_analytic_accounting\"/>\n   ..\n   19          </record>\n   20  \n   21:         <record id=\"view_account_analytic_default_form\" model=\"ir.ui.view\">\n   22:             <field name=\"name\">account.analytic.default.form</field>\n   23:             <field name=\"model\">account.analytic.default</field>\n   24              <field name=\"arch\" type=\"xml\">\n   25:                 <form string=\"Analytic Defaults\">\n   26                      <group col=\"4\">\n   27                          <field name=\"analytic_id\" required=\"1\" groups=\"analytic.group_analytic_accounting\"/>\n   ..\n   30                          <field name=\"product_id\"/>\n   31                          <field name=\"partner_id\"/>\n   32:                         <field name=\"user_id\" context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'account.group_account_invoice', 'base.group_sale_salesman']}\"/>\n   33                          <field name=\"company_id\" options=\"{'no_create': True}\" groups=\"base.group_multi_company\"/>\n   34                          <field name=\"date_start\"/>\n   ..\n   39          </record>\n   40  \n   41:         <record id=\"view_account_analytic_default_form_search\" model=\"ir.ui.view\">\n   42:             <field name=\"name\">account.analytic.default.search</field>\n   43:             <field name=\"model\">account.analytic.default</field>\n   44              <field name=\"arch\" type=\"xml\">\n   45                  <search string=\"Accounts\">\n   ..\n   61          </record>\n   62  \n   63:         <record id=\"action_analytic_default_list\" model=\"ir.actions.act_window\">\n   64:             <field name=\"name\">Analytic Defaults</field>\n   65:             <field name=\"res_model\">account.analytic.default</field>\n   66              <field name=\"view_type\">form</field>\n   67              <field name=\"view_mode\">tree,form</field>\n   68:             <field name=\"search_view_id\" ref=\"view_account_analytic_default_form_search\"/>\n   69:             <field name=\"context\">{\"search_default_current\":1}</field>\n   70          </record>\n   71          \n   72:         <record id=\"action_product_default_list\" model=\"ir.actions.act_window\">\n   73:             <field name=\"name\">Analytic Defaults</field>\n   74:             <field name=\"res_model\">account.analytic.default</field>\n   75:             <field name=\"context\">{'search_default_product_id': [active_id], 'default_product_id': active_id}</field>\n   76          </record>\n   77:         <record model=\"ir.ui.view\" id=\"product_form_view_default_analytic_button\">\n   78              <field name=\"name\">product.product.stock.move</field>\n   79              <field name=\"model\">product.product</field>\n   ..\n   81              <field name=\"arch\" type=\"xml\">\n   82                  <div name=\"button_box\" position=\"inside\">\n   83:                     <button class=\"oe_stat_button\" name= \"%(action_product_default_list)d\" type=\"action\" \n   84                          groups=\"analytic.group_analytic_accounting\" icon=\"fa-bookmark-o\">\n   85                          <field string=\"Analytic Rules\" name=\"rules_count\" widget=\"statinfo\" />\n   ..\n   89          </record>\n   90          \n   91:         <record model=\"ir.ui.view\" id=\"product_template_view_default_analytic_button\">\n   92              <field name=\"name\">product.template.stock.move</field>\n   93              <field name=\"model\">product.template</field>\n   ..\n  108              res_model=\"account.move.line\"\n  109              src_model=\"account.account\"\n  110:             context=\"{'search_default_account_id': [active_id], 'default_account_id': active_id}\"\n  111              />\n  112  \n  113          <menuitem\n  114:             action=\"action_analytic_default_list\"\n  115:             id=\"menu_analytic_default_list\"\n  116              parent=\"account.menu_analytic_accounting\"/>\n  117  \n  ...\n  120              name=\"Analytic Rules\"\n  121              id=\"analytic_rule_action_partner\"\n  122:             res_model=\"account.analytic.default\"\n  123              src_model=\"res.partner\"\n  124:             context=\"{'search_default_partner_id': [active_id], 'default_partner_id': active_id}\"\n  125              groups=\"analytic.group_analytic_accounting\"/>\n  126  \n  ...\n  128              name=\"Analytic Rules\"\n  129              id=\"analytic_rule_action_user\"\n  130:             res_model=\"account.analytic.default\"\n  131              src_model=\"res.users\"\n  132:             context=\"{'search_default_user_id': [active_id], 'default_user_id': active_id}\"\n  133              groups=\"analytic.group_analytic_accounting\"/>\n  134  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_analytic_default\\security\\account_analytic_default_security.xml:\n    3      <data noupdate=\"1\">\n    4  \n    5:     <record id=\"analytic_default_comp_rule\" model=\"ir.rule\">\n    6:         <field name=\"name\">Analytic Default multi company rule</field>\n    7:         <field name=\"model_id\" ref=\"model_account_analytic_default\"/>\n    8          <field eval=\"True\" name=\"global\"/>\n    9          <field name=\"domain_force\">['|',('company_id','=',False),('company_id','child_of',[user.company_id.id])]</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_asset\\account_asset.py:\n    6  from openerp import api, fields, models, _\n    7  from openerp.exceptions import UserError, ValidationError\n    8: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT as DF\n    9  \n   10  \n   ..\n   13      _description = 'Asset category'\n   14  \n   15:     active = fields.Boolean(default=True)\n   16      name = fields.Char(required=True, index=True, string=\"Asset Type\")\n   17      account_analytic_id = fields.Many2one('account.analytic.account', string='Analytic Account', domain=[('account_type', '=', 'normal')])\n   ..\n   20      account_depreciation_id = fields.Many2one('account.account', string='Depreciation Account', required=True, domain=[('internal_type','=','other'), ('deprecated', '=', False)])\n   21      journal_id = fields.Many2one('account.journal', string='Journal', required=True)\n   22:     company_id = fields.Many2one('res.company', string='Company', required=True, default=lambda self: self.env['res.company']._company_default_get('account.asset.category'))\n   23:     method = fields.Selection([('linear', 'Linear'), ('degressive', 'Degressive')], string='Computation Method', required=True, default='linear',\n   24          help=\"Choose the method to use to compute the amount of depreciation lines.\\n\"\n   25              \"  * Linear: Calculated on basis of: Gross Value / Number of Depreciations\\n\"\n   26              \"  * Degressive: Calculated on basis of: Residual Value * Degressive Factor\")\n   27:     method_number = fields.Integer(string='Number of Depreciations', default=5, help=\"The number of depreciations needed to depreciate your asset\")\n   28:     method_period = fields.Integer(string='Period Length', default=1, help=\"State here the time between 2 depreciations, in months\", required=True)\n   29:     method_progress_factor = fields.Float('Degressive Factor', default=0.3)\n   30:     method_time = fields.Selection([('number', 'Number of Depreciations'), ('end', 'Ending Date')], string='Time Method', required=True, default='number',\n   31          help=\"Choose the method to use to compute the dates and number of depreciation lines.\\n\"\n   32             \"  * Number of Depreciations: Fix the number of depreciation lines and the time between 2 depreciations.\\n\"\n   ..\n   35      prorata = fields.Boolean(string='Prorata Temporis', help='Indicates that the first depreciation entry for this asset have to be done from the purchase date instead of the first of January')\n   36      open_asset = fields.Boolean(string='Post Journal Entries', help=\"Check this if you want to automatically confirm the assets of this category when created by invoices.\")\n   37:     type = fields.Selection([('sale', 'Sale: Revenue Recognition'), ('purchase', 'Purchase: Asset')], required=True, index=True, default='purchase')\n   38  \n   39      @api.onchange('type')\n   ..\n   57      value = fields.Float(string='Gross Value', required=True, readonly=True, digits=0, states={'draft': [('readonly', False)]}, oldname='purchase_value')\n   58      currency_id = fields.Many2one('res.currency', string='Currency', required=True, readonly=True, states={'draft': [('readonly', False)]},\n   59:         default=lambda self: self.env.user.company_id.currency_id.id)\n   60      company_id = fields.Many2one('res.company', string='Company', required=True, readonly=True, states={'draft': [('readonly', False)]},\n   61:         default=lambda self: self.env['res.company']._company_default_get('account.asset.asset'))\n   62      note = fields.Text()\n   63:     category_id = fields.Many2one('account.asset.category', string='Category', required=True, change_default=True, readonly=True, states={'draft': [('readonly', False)]})\n   64:     date = fields.Date(string='Date', required=True, readonly=True, states={'draft': [('readonly', False)]}, default=fields.Date.context_today, oldname=\"purchase_date\")\n   65:     state = fields.Selection([('draft', 'Draft'), ('open', 'Running'), ('close', 'Close')], 'Status', required=True, copy=False, default='draft',\n   66          help=\"When an asset is created, the status is 'Draft'.\\n\"\n   67              \"If the asset is confirmed, the status goes in 'Running' and the depreciation lines can be posted in the accounting.\\n\"\n   68              \"You can manually close an asset when the depreciation is over. If the last line of depreciation is posted, the asset automatically goes in that status.\")\n   69:     active = fields.Boolean(default=True)\n   70      partner_id = fields.Many2one('res.partner', string='Partner', readonly=True, states={'draft': [('readonly', False)]})\n   71:     method = fields.Selection([('linear', 'Linear'), ('degressive', 'Degressive')], string='Computation Method', required=True, readonly=True, states={'draft': [('readonly', False)]}, default='linear',\n   72          help=\"Choose the method to use to compute the amount of depreciation lines.\\n  * Linear: Calculated on basis of: Gross Value / Number of Depreciations\\n\"\n   73              \"  * Degressive: Calculated on basis of: Residual Value * Degressive Factor\")\n   74:     method_number = fields.Integer(string='Number of Depreciations', readonly=True, states={'draft': [('readonly', False)]}, default=5, help=\"The number of depreciations needed to depreciate your asset\")\n   75:     method_period = fields.Integer(string='Number of Months in a Period', required=True, readonly=True, default=12, states={'draft': [('readonly', False)]},\n   76          help=\"The amount of time between two depreciations, in months\")\n   77      method_end = fields.Date(string='Ending Date', readonly=True, states={'draft': [('readonly', False)]})\n   78:     method_progress_factor = fields.Float(string='Degressive Factor', readonly=True, default=0.3, states={'draft': [('readonly', False)]})\n   79      value_residual = fields.Float(compute='_amount_residual', method=True, digits=0, string='Residual Value')\n   80:     method_time = fields.Selection([('number', 'Number of Depreciations'), ('end', 'Ending Date')], string='Time Method', required=True, readonly=True, default='number', states={'draft': [('readonly', False)]},\n   81          help=\"Choose the method to use to compute the dates and number of depreciation lines.\\n\"\n   82               \"  * Number of Depreciations: Fix the number of depreciation lines and the time between 2 depreciations.\\n\"\n   ..\n  342  \n  343      @api.multi\n  344:     def copy_data(self, default=None):\n  345:         if default is None:\n  346:             default = {}\n  347:         default['name'] = self.name + _(' (copy)')\n  348:         return super(AccountAssetAsset, self).copy_data(default)[0]\n  349  \n  350      @api.multi\n  ...\n  377              'view_id': False,\n  378              'type': 'ir.actions.act_window',\n  379:             'context': dict(self.env.context or {}, search_default_asset_id=self.id, default_asset_id=self.id),\n  380          }\n  381  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_asset\\account_asset_invoice.py:\n    5  from openerp import api, fields, models\n    6  import openerp.addons.decimal_precision as dp\n    7: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT as DF\n    8  \n    9  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_asset\\views\\account_asset_invoice_view.xml:\n    9          <field name=\"arch\" type=\"xml\">\n   10              <xpath expr=\"//field[@name='invoice_line_ids']/tree/field[@name='quantity']\" position=\"before\">\n   11:                 <field string=\"Asset Category\" name=\"asset_category_id\" domain=\"[('type','=','purchase')]\" context=\"{'default_type':'purchase'}\"/>\n   12              </xpath>\n   13          </field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_asset\\views\\account_asset_view.xml:\n  113                      <group>\n  114                          <group>\n  115:                             <field name=\"category_id\" domain=\"[('type', '=', 'purchase')]\" context=\"{'default_type': 'purchase'}\" help=\"Category of asset\"/>\n  116                              <field name=\"code\"/>\n  117                              <field name=\"date\" help=\"Date of asset\"/>\n  ...\n  236                  <field name=\"asset_category_id\"\n  237                      domain=\"[('type', '=', 'purchase')]\"\n  238:                     context=\"{'default_type': 'purchase'}\"/>\n  239              </field>\n  240          </field>\n  ...\n  284          <field name=\"view_type\">form</field>\n  285          <field name=\"view_mode\">tree,form</field>\n  286:         <field name=\"context\">{'default_type': 'purchase'}</field>\n  287      </record>\n  288  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_asset\\wizard\\account_asset_change_duration.py:\n   42  \n   43      @api.model\n   44:     def default_get(self, fields):\n   45:         res = super(AssetModify, self).default_get(fields)\n   46          asset_id = self.env.context.get('active_id')\n   47          asset = self.env['account.asset.asset'].browse(asset_id)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_asset\\wizard\\account_asset_change_duration_view.xml:\n   23                  <footer>\n   24                      <button name=\"modify\" string=\"Modify\" type=\"object\" class=\"btn-primary\"/>\n   25:                     <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   26                  </footer>\n   27              </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_asset\\wizard\\wizard_asset_compute.py:\n    7      _description = \"asset.depreciation.confirmation.wizard\"\n    8  \n    9:     date = fields.Date('Account Date', required=True, help=\"Choose the period for which you want to automatically post the depreciation lines of running assets\", default=fields.Date.context_today)\n   10  \n   11      @api.multi\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_asset\\wizard\\wizard_asset_compute_view.xml:\n   17                  <footer>\n   18                      <button string=\"Generate Entries\" name=\"asset_compute\" type=\"object\" class=\"btn-primary\"/>\n   19:                     <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   20                  </footer>\n   21              </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_bank_statement_import\\account_bank_statement_import.py:\n   72              'context': {\n   73                  'statement_import_transient_id': self.env.context['active_id'],\n   74:                 'default_bank_acc_number': account_number,\n   75:                 'default_name': _('Bank') + ' ' + account_number,\n   76:                 'default_currency_id': currency and currency.id or False,\n   77:                 'default_type': 'bank',\n   78              }\n   79          }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_bank_statement_import\\account_bank_statement_import_view.xml:\n   16                      <footer>\n   17                          <button name=\"import_file\" string=\"_Import\" type=\"object\" class=\"btn-primary\" />\n   18:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   19                      </footer>\n   20                  </form>\n   ..\n   37          <field name=\"inherit_id\" ref=\"account.account_journal_dashboard_kanban_view\"/>\n   38          <field name=\"arch\" type=\"xml\">\n   39:             <xpath expr='//div[@name=\"bank_journal_default_cta\"]' position='inside'>\n   40                  <br t-if=\"dashboard.number_to_reconcile == 0\"/><button t-if=\"dashboard.number_to_reconcile == 0\" type=\"object\" name=\"import_statement\" class=\"btn btn-primary btn-sm\">Import Statement</button>\n   41                  <a t-if=\"dashboard.number_to_reconcile > 0\" type=\"object\" name=\"import_statement\" class=\"oe_inline\">Import Statement</a>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_bank_statement_import\\wizard\\journal_creation.xml:\n   23                      <footer>\n   24                          <button name=\"create_journal\" string=\"OK\" type=\"object\" class=\"btn-primary\"/>\n   25:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   26                      </footer>\n   27                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_budget\\account_budget.py:\n    5  \n    6  from openerp.osv import fields, osv\n    7: from openerp.tools import ustr, DEFAULT_SERVER_DATE_FORMAT\n    8  from openerp.tools.translate import _\n    9  from openerp.exceptions import UserError\n   ..\n   19  \n   20  def strToDatetime(strdate):\n   21:     return datetime.strptime(strdate, DEFAULT_SERVER_DATE_FORMAT)\n   22  \n   23  # ---------------------------------------------------------\n   ..\n   33          'company_id': fields.many2one('res.company', 'Company', required=True),\n   34      }\n   35:     _defaults = {\n   36:         'company_id': lambda self, cr, uid, c: self.pool.get('res.company')._company_default_get(cr, uid, 'account.budget.post', context=c)\n   37      }\n   38      _order = \"name\"\n   ..\n   55      }\n   56  \n   57:     _defaults = {\n   58          'state': 'draft',\n   59          'creating_user_id': lambda self, cr, uid, context: uid,\n   60:         'company_id': lambda self, cr, uid, c: self.pool.get('res.company')._company_default_get(cr, uid, 'account.budget.post', context=c)\n   61      }\n   62  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_budget\\account_budget_view.xml:\n   82                          <group>\n   83                              <group>\n   84:                                 <field name=\"creating_user_id\" attrs=\"{'readonly':[('state','!=','draft')]}\" context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'account.group_account_user']}\"/>\n   85                              </group>\n   86                              <group>\n   ..\n   95                          <notebook>\n   96                              <page string=\"Budget Lines\">\n   97:                                 <field name=\"crossovered_budget_line\" context=\"{'default_date_from': date_from,'default_date_to': date_to}\" colspan=\"4\" nolabel=\"1\" attrs=\"{'readonly':[('state','!=','draft')]}\">\n   98                                      <tree string=\"Budget Lines\">\n   99                                          <field name=\"general_budget_id\"/>\n  ...\n  263          <!--  Shortcuts -->\n  264          <act_window name=\"Budget Items\"\n  265:             context=\"{'search_default_analytic_account_id': [active_id], 'default_analytic_account_id': active_id}\"\n  266              res_model=\"crossovered.budget.lines\"\n  267              src_model=\"account.analytic.account\"\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_budget\\tests\\test_theoreticalamount.py:\n    4  \n    5  from openerp.tests.common import TransactionCase\n    6: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT\n    7  \n    8  \n    .\n   41      def test_01(self):\n   42          \"\"\"Start\"\"\"\n   43:         date = datetime.strptime('2014-01-01 00:00:00', DEFAULT_SERVER_DATETIME_FORMAT)\n   44          self.mock_datetime.now.return_value = date\n   45          self.assertAlmostEqual(self.line.theoritical_amount, 0)\n   ..\n   47      def test_02(self):\n   48          \"\"\"After 24 hours\"\"\"\n   49:         date = datetime.strptime('2014-01-02 00:00:00', DEFAULT_SERVER_DATETIME_FORMAT)\n   50          self.mock_datetime.now.return_value = date\n   51          self.assertAlmostEqual(self.line.theoritical_amount, -1)\n   ..\n   53      def test_03(self):\n   54          \"\"\"After 36 hours\"\"\"\n   55:         date = datetime.strptime('2014-01-02 12:00:00', DEFAULT_SERVER_DATETIME_FORMAT)\n   56          self.mock_datetime.now.return_value = date\n   57          self.assertAlmostEqual(self.line.theoritical_amount, -1.5)\n   ..\n   59      def test_04(self):\n   60          \"\"\"After 48 hours\"\"\"\n   61:         date = datetime.strptime('2014-01-03 00:00:00', DEFAULT_SERVER_DATETIME_FORMAT)\n   62          self.mock_datetime.now.return_value = date\n   63          self.assertAlmostEqual(self.line.theoritical_amount, -2)\n   ..\n   65      def test_05(self):\n   66          \"\"\"After 10 days\"\"\"\n   67:         date = datetime.strptime('2014-01-11 00:00:00', DEFAULT_SERVER_DATETIME_FORMAT)\n   68          self.mock_datetime.now.return_value = date\n   69          self.assertAlmostEqual(self.line.theoritical_amount, -10)\n   ..\n   71      def test_06(self):\n   72          \"\"\"After 50 days\"\"\"\n   73:         date = datetime.strptime('2014-02-20 00:00:00', DEFAULT_SERVER_DATETIME_FORMAT)\n   74          self.mock_datetime.now.return_value = date\n   75          self.assertAlmostEqual(self.line.theoritical_amount, -50)\n   ..\n   77      def test_07(self):\n   78          \"\"\"After 182 days, exactly half of the budget line\"\"\"\n   79:         date = datetime.strptime('2014-07-02 00:00:00', DEFAULT_SERVER_DATETIME_FORMAT)\n   80          self.mock_datetime.now.return_value = date\n   81          self.assertAlmostEqual(self.line.theoritical_amount, -182)\n   ..\n   83      def test_08(self):\n   84          \"\"\"After 308 days at noon\"\"\"\n   85:         date = datetime.strptime('2014-11-05 12:00:00', DEFAULT_SERVER_DATETIME_FORMAT)  # remember, remember\n   86          self.mock_datetime.now.return_value = date\n   87          self.assertAlmostEqual(self.line.theoritical_amount, -308.5)\n   ..\n   89      def test_09(self):\n   90          \"\"\"One day before\"\"\"\n   91:         date = datetime.strptime('2014-12-30 00:00:00', DEFAULT_SERVER_DATETIME_FORMAT)\n   92          self.mock_datetime.now.return_value = date\n   93          self.assertAlmostEqual(self.line.theoritical_amount, -363)\n   ..\n   95      def test_10(self):\n   96          \"\"\"At last\"\"\"\n   97:         date = datetime.strptime('2014-12-31 00:00:00', DEFAULT_SERVER_DATETIME_FORMAT)\n   98          self.mock_datetime.now.return_value = date\n   99          self.assertAlmostEqual(self.line.theoritical_amount, -364)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_budget\\wizard\\account_budget_analytic.py:\n   14          'date_to': fields.date('End of period', required=True),\n   15      }\n   16:     _defaults = {\n   17          'date_from': lambda *a: time.strftime('%Y-01-01'),\n   18          'date_to': lambda *a: time.strftime('%Y-%m-%d'),\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_budget\\wizard\\account_budget_analytic_view.xml:\n   13                       </group>\n   14                       <footer>\n   15:                          <button name=\"check_report\" string=\"Print\" type=\"object\" default_focus=\"1\" class=\"btn-primary\"/>\n   16:                          <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   17                       </footer>\n   18                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_budget\\wizard\\account_budget_crossovered_report.py:\n   14          'date_to': fields.date('End of period', required=True),\n   15      }\n   16:     _defaults = {\n   17          'date_from': lambda *a: time.strftime('%Y-01-01'),\n   18          'date_to': lambda *a: time.strftime('%Y-%m-%d'),\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_budget\\wizard\\account_budget_crossovered_report_view.xml:\n   13                      </group>\n   14                       <footer>\n   15:                          <button name=\"check_report\" string=\"Print\" type=\"object\" default_focus=\"1\" class=\"btn-primary\"/>\n   16:                          <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   17                       </footer>\n   18                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_budget\\wizard\\account_budget_crossovered_summary_report.py:\n   16          'date_to': fields.date('End of period', required=True),\n   17      }\n   18:     _defaults = {\n   19          'date_from': lambda *a: time.strftime('%Y-01-01'),\n   20          'date_to': lambda *a: time.strftime('%Y-%m-%d'),\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_budget\\wizard\\account_budget_crossovered_summary_report_view.xml:\n   13                      </group>\n   14                       <footer>\n   15:                          <button name=\"check_report\" string=\"Print\" type=\"object\" default_focus=\"1\" class=\"btn-primary\"/>\n   16:                          <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   17                       </footer>\n   18                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_budget\\wizard\\account_budget_report.py:\n   14          'date_to': fields.date('End of period', required=True),\n   15      }\n   16:     _defaults = {\n   17          'date_from': lambda *a: time.strftime('%Y-01-01'),\n   18          'date_to': lambda *a: time.strftime('%Y-%m-%d'),\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_budget\\wizard\\account_budget_report_view.xml:\n   13                </group>\n   14                <footer>\n   15:                   <button name=\"check_report\" string=\"Print\" type=\"object\" default_focus=\"1\" class=\"btn-primary\"/>\n   16:                   <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   17                </footer>\n   18            </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_check_printing\\account_journal.py:\n   28              self.check_sequence_id.sudo().number_next_actual = self.check_next_number\n   29  \n   30:     check_manual_sequencing = fields.Boolean('Manual Numbering', default=False,\n   31          help=\"Check this option if your pre-printed checks are not numbered.\")\n   32      check_sequence_id = fields.Many2one('ir.sequence', 'Check Sequence', readonly=True, copy=False,\n   ..\n   45  \n   46      @api.one\n   47:     def copy(self, default=None):\n   48:         rec = super(AccountJournal, self).copy(default)\n   49          rec._create_check_sequence()\n   50          return rec\n   ..\n   61          })\n   62  \n   63:     def _default_outbound_payment_methods(self):\n   64:         methods = super(AccountJournal, self)._default_outbound_payment_methods()\n   65          return methods + self.env.ref('account_check_printing.account_payment_method_check')\n   66  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_check_printing\\account_journal_dashboard.py:\n   27              'context': dict(\n   28                  self.env.context,\n   29:                 search_default_checks_to_send=1,\n   30                  journal_id=self.id,\n   31:                 default_journal_id=self.id,\n   32:                 default_payment_type='outbound',\n   33:                 default_payment_method_id=self.env.ref('account_check_printing.account_payment_method_check').id,\n   34              ),\n   35          }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_check_printing\\account_payment.py:\n   13      check_manual_sequencing = fields.Boolean(related='journal_id.check_manual_sequencing')\n   14      # Note: a check_number == 0 means that it will be attributed when the check is printed\n   15:     check_number = fields.Integer(string=\"Check Number\", readonly=True, copy=False, default=0,\n   16          help=\"Number of the check corresponding to this payment. If your pre-printed check are not already numbered, \"\n   17               \"you can manage the numbering in the journal configuration page.\")\n   ..\n  120                  'context': {\n  121                      'payment_ids': self.ids,\n  122:                     'default_next_check_number': next_check_number,\n  123                  }\n  124              }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_extra_reports\\wizard\\account_report_print_journal.py:\n    9      _description = \"Account Print Journal\"\n   10  \n   11:     sort_selection = fields.Selection([('date', 'Date'), ('move_name', 'Journal Entry Number'),], 'Entries Sorted by', required=True, default='move_name')\n   12:     journal_ids = fields.Many2many('account.journal', string='Journals', required=True, default=lambda self: self.env['account.journal'].search([('type', 'in', ['sale', 'purchase'])]))\n   13  \n   14      def _print_report(self, data):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_tax_python\\account_tax_python.py:\n    9      amount_type = fields.Selection(selection_add=[('code', 'Python Code')])\n   10  \n   11:     python_compute = fields.Text(string='Python Code', default=\"result = price_unit * 0.10\",\n   12          help=\"Compute the amount of the tax by setting the variable 'result'.\\n\\n\"\n   13              \":param base_amount: float, actual amount on which the tax is applied\\n\"\n   ..\n   17              \":param product: product.product recordset singleton or None\\n\"\n   18              \":param partner: res.partner recordset singleton or None\")\n   19:     python_applicable = fields.Text(string='Applicable Code', default=\"result = True\",\n   20          help=\"Determine if the tax will be applied by setting the variable 'result' to True or False.\\n\\n\"\n   21              \":param price_unit: float\\n\"\n   ..\n   60      amount_type = fields.Selection(selection_add=[('code', 'Python Code')])\n   61  \n   62:     python_compute = fields.Text(string='Python Code', default=\"result = price_unit * 0.10\",\n   63          help=\"Compute the amount of the tax by setting the variable 'result'.\\n\\n\"\n   64              \":param base_amount: float, actual amount on which the tax is applied\\n\"\n   ..\n   67              \":param product: product.product recordset singleton or None\\n\"\n   68              \":param partner: res.partner recordset singleton or None\")\n   69:     python_applicable = fields.Text(string='Applicable Code', default=\"result = True\",\n   70          help=\"Determine if the tax will be applied by setting the variable 'result' to True or False.\\n\\n\"\n   71              \":param price_unit: float\\n\"\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_test\\account_test.py:\n    2  from openerp import fields, models\n    3  \n    4: CODE_EXEC_DEFAULT = '''\\\n    5  res = []\n    6  cr.execute(\"select id, code from account_journal\")\n    .\n   17      name = fields.Char(string='Test Name', required=True, index=True, translate=True)\n   18      desc = fields.Text(string='Test Description', index=True, translate=True)\n   19:     code_exec = fields.Text(string='Python code', required=True, default=CODE_EXEC_DEFAULT)\n   20:     active = fields.Boolean(default=True)\n   21:     sequence = fields.Integer(default=10)\n   22  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_voucher\\account_voucher.py:\n   37  \n   38      @api.model\n   39:     def _default_journal(self):\n   40          voucher_type = self._context.get('voucher_type', 'sale')\n   41          company_id = self._context.get('company_id', self.env.user.company_id.id)\n   ..\n   70  \n   71      voucher_type = fields.Selection([('sale', 'Sale'), ('purchase', 'Purchase')], string='Type', readonly=True, states={'draft': [('readonly', False)]}, oldname=\"type\")\n   72:     name = fields.Char('Payment Reference', readonly=True, states={'draft': [('readonly', False)]}, default='')\n   73      date = fields.Date(readonly=True, select=True, states={'draft': [('readonly', False)]},\n   74:                            help=\"Effective date for accounting entries\", copy=False, default=fields.Date.context_today)\n   75:     journal_id = fields.Many2one('account.journal', 'Journal', required=True, readonly=True, states={'draft': [('readonly', False)]}, default=_default_journal)\n   76      account_id = fields.Many2one('account.account', 'Account', required=True, readonly=True, states={'draft': [('readonly', False)]}, domain=\"[('deprecated', '=', False), ('internal_type','=', (pay_now == 'pay_now' and 'liquidity' or 'receivable'))]\")\n   77      line_ids = fields.One2many('account.voucher.line', 'voucher_id', 'Voucher Lines',\n   ..\n   79                                     states={'draft': [('readonly', False)]})\n   80      narration = fields.Text('Notes', readonly=True, states={'draft': [('readonly', False)]})\n   81:     currency_id = fields.Many2one('res.currency', compute='_get_journal_currency', string='Currency', readonly=True, required=True, default=lambda self: self._get_currency())\n   82:     company_id = fields.Many2one('res.company', 'Company', required=True, readonly=True, states={'draft': [('readonly', False)]}, related='journal_id.company_id', default=lambda self: self._get_company())\n   83      state = fields.Selection(\n   84              [('draft', 'Draft'),\n   ..\n   86               ('proforma', 'Pro-forma'),\n   87               ('posted', 'Posted')\n   88:             ], 'Status', readonly=True, track_visibility='onchange', copy=False, default='draft',\n   89              help=\" * The 'Draft' status is used when a user is encoding a new and unconfirmed Voucher.\\n\"\n   90                   \" * The 'Pro-forma' status is used when the voucher does not have a voucher number.\\n\"\n   ..\n   98      number = fields.Char(readonly=True, copy=False)\n   99      move_id = fields.Many2one('account.move', 'Journal Entry', copy=False)\n  100:     partner_id = fields.Many2one('res.partner', 'Partner', change_default=1, readonly=True, states={'draft': [('readonly', False)]})\n  101      paid = fields.Boolean(compute='_check_paid', help=\"The Voucher has been totally paid.\")\n  102      pay_now = fields.Selection([\n  103              ('pay_now', 'Pay Directly'),\n  104              ('pay_later', 'Pay Later'),\n  105:         ], 'Payment', select=True, readonly=True, states={'draft': [('readonly', False)]}, default='pay_later')\n  106      date_due = fields.Date('Due Date', readonly=True, select=True, states={'draft': [('readonly', False)]})\n  107  \n  ...\n  110          if self.pay_now == 'pay_now':\n  111              liq_journal = self.env['account.journal'].search([('type', 'in', ('bank', 'cash'))], limit=1)\n  112:             self.account_id = liq_journal.default_debit_account_id \\\n  113:                 if self.voucher_type == 'sale' else liq_journal.default_credit_account_id\n  114          else:\n  115              if self.partner_id:\n  ...\n  117                      if self.voucher_type == 'sale' else self.partner_id.property_account_payable_id\n  118              else:\n  119:                 self.account_id = self.journal_id.default_debit_account_id \\\n  120:                     if self.voucher_type == 'sale' else self.journal_id.default_credit_account_id\n  121  \n  122      @api.multi\n  ...\n  230                  continue\n  231              # convert the amount set on the voucher line into the currency of the voucher's company\n  232:             # this calls res_curreny.compute() with the right context, so that it will take either the rate on the voucher if it is relevant or will use the default behaviour\n  233              amount = self._convert_amount(line.price_unit*line.quantity)\n  234              move_line = {\n  ...\n  315  \n  316      name = fields.Text(string='Description', required=True)\n  317:     sequence = fields.Integer(default=10,\n  318          help=\"Gives the sequence of this line when displaying the voucher.\")\n  319      voucher_id = fields.Many2one('account.voucher', 'Voucher', required=1, ondelete='cascade')\n  ...\n  327          store=True, readonly=True, compute='_compute_subtotal')\n  328      quantity = fields.Float(digits=dp.get_precision('Product Unit of Measure'),\n  329:         required=True, default=1)\n  330      account_analytic_id = fields.Many2one('account.analytic.account', 'Analytic Account')\n  331      company_id = fields.Many2one('res.company', related='voucher_id.company_id', string='Company', store=True, readonly=True)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_voucher\\account_voucher_data.xml:\n   18              <field name=\"name\">Status Change</field>\n   19              <field name=\"res_model\">account.voucher</field>\n   20:             <field name=\"default\" eval=\"False\"/>\n   21              <field name=\"description\">Status changed</field>\n   22          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_voucher\\account_voucher_view.xml:\n   59                                      </div>\n   60                                      <div class=\"col-xs-6\">\n   61:                                         <span t-attf-class=\"pull-right text-right label #{['draft', 'cancel'].indexOf(record.state.raw_value) > -1 ? 'label-default' : ['none'].indexOf(record.state.raw_value) > -1 ? 'label-danger' : ['proforma'].indexOf(record.state.raw_value) > -1 ? 'label-warning' : ['posted'].indexOf(record.state.raw_value) > -1 ? 'label-success' : 'label-primary'}\"><t t-esc=\"record.state.value\"/></span>\n   62                                      </div>\n   63                                  </div>\n   ..\n  152              id=\"act_journal_voucher_open\"\n  153              name=\"Voucher Entries\"\n  154:             context=\"{'search_default_journal_id': active_id, 'default_journal_id': active_id}\"\n  155              res_model=\"account.voucher\"\n  156              src_model=\"account.journal\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\account_voucher\\voucher_sales_purchase_view.xml:\n   66                              <field name=\"currency_id\" invisible=\"True\"/>\n   67                              <field name=\"company_id\" options=\"{'no_create': True}\" groups=\"base.group_multi_company\"/>\n   68:                             <field name=\"partner_id\" domain=\"[('customer','=',True)]\" string=\"Customer\" context=\"{'search_default_customer':1, 'show_address': 1}\" options='{\"always_reload\": True}'/>\n   69                              <field name=\"pay_now\" required=\"1\"/>\n   70                              <field name=\"account_id\"/>\n   ..\n  125              <field name=\"view_mode\">tree,kanban</field>\n  126              <field name=\"domain\">[('journal_id.type','=','sale'), ('voucher_type','=','sale')]</field>\n  127:             <field name=\"context\">{'default_voucher_type': 'sale', 'voucher_type': 'sale'}</field>\n  128              <field name=\"view_id\" eval=\"view_voucher_tree\"/>\n  129              <field name=\"search_view_id\" ref=\"view_voucher_filter_sale\"/>\n  ...\n  176                      <group>\n  177                          <group>\n  178:                             <field name=\"partner_id\" domain=\"[('supplier','=',True)]\" string=\"Vendor\" context=\"{'default_customer': 0, 'search_default_supplier': 1, 'default_supplier': 1}\" />\n  179                              <field name=\"pay_now\" required=\"1\"/>\n  180                              <field name=\"account_id\"/>\n  ...\n  243              <field name=\"view_mode\">tree,kanban</field>\n  244              <field name=\"domain\">[('journal_id.type','=','purchase'), ('voucher_type','=','purchase')]</field>\n  245:             <field name=\"context\">{'default_voucher_type': 'purchase', 'voucher_type': 'purchase'}</field>\n  246              <field name=\"view_id\" eval=\"view_voucher_tree_purchase\"/>\n  247              <field name=\"search_view_id\" eval=\"view_voucher_filter_vendor\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\analytic\\models\\analytic.py:\n   48          ('normal', 'Active'),\n   49          ('closed', 'Archived')\n   50:         ], string='State', required=True, default='normal')\n   51  \n   52      tag_ids = fields.Many2many('account.analytic.tag', 'account_analytic_account_tag_rel', 'account_id', 'tag_id', string='Tags', copy=True)\n   53      line_ids = fields.One2many('account.analytic.line', 'account_id', string=\"Analytic Lines\")\n   54  \n   55:     company_id = fields.Many2one('res.company', string='Company', required=True, default=lambda self: self.env.user.company_id)\n   56  \n   57      # use auto_join to speed up name_search call\n   ..\n   93  \n   94      @api.model\n   95:     def _default_user(self):\n   96          return self.env.context.get('user_id', self.env.user.id)\n   97  \n   98      name = fields.Char('Description', required=True)\n   99:     date = fields.Date('Date', required=True, index=True, default=fields.Date.context_today)\n  100:     amount = fields.Monetary('Amount', required=True, default=0.0)\n  101:     unit_amount = fields.Float('Quantity', default=0.0)\n  102      account_id = fields.Many2one('account.analytic.account', 'Analytic Account', required=True, ondelete='restrict', index=True)\n  103      partner_id = fields.Many2one('res.partner', string='Partner')\n  104:     user_id = fields.Many2one('res.users', string='User', default=_default_user)\n  105  \n  106      tag_ids = fields.Many2many('account.analytic.tag', 'account_analytic_line_tag_rel', 'line_id', 'tag_id', string='Tags', copy=True)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\analytic\\views\\analytic_view.xml:\n   19          \n   20          <record model=\"ir.actions.act_window\" id=\"account_analytic_line_action\">\n   21:             <field name=\"context\">{'search_default_group_date': 1, 'search_default_group_journal': 1, 'default_account_id': active_id}</field>\n   22              <field name=\"domain\">[('account_id','=', active_id)]</field>\n   23              <field name=\"name\">Costs &amp; Revenues</field>\n   ..\n  150              <field name=\"view_mode\">tree,form</field>\n  151              <field name=\"search_view_id\" ref=\"view_account_analytic_account_search\"/>\n  152:             <field name=\"context\">{'search_default_active':1}</field>\n  153              <field name=\"view_id\" ref=\"view_account_analytic_account_list\"/>\n  154              <field name=\"help\" type=\"html\">\n  ...\n  164              <field name=\"res_model\">account.analytic.account</field>\n  165              <field name=\"search_view_id\" ref=\"view_account_analytic_account_search\"/>\n  166:             <field name=\"context\">{'search_default_active':1}</field>\n  167              <field name=\"view_type\">form</field>\n  168              <field name=\"view_mode\">tree,form</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\analytic\\wizard\\account_analytic_chart_view.xml:\n   15                      <footer>\n   16                          <button name=\"analytic_account_chart_open_window\" string=\"Open Charts\" type=\"object\" class=\"btn-primary\"/>\n   17:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   18                      </footer>\n   19                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\anonymization\\anonymization.py:\n  198          return res\n  199  \n  200:     _defaults = {\n  201          'state': lambda *a: 'clear',\n  202      }\n  ...\n  277          return summary\n  278  \n  279:     def default_get(self, cr, uid, fields_list, context=None):\n  280          res = {}\n  281          res['name'] = '.pickle'\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\auth_crypt\\__openerp__.py:\n   11  ===================\n   12  \n   13: Replaces the default password storage with a strong cryptographic\n   14  hash.\n   15  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\auth_crypt\\auth_crypt.py:\n   11  _logger = logging.getLogger(__name__)\n   12  \n   13: default_crypt_context = CryptContext(\n   14:     # kdf which can be verified by the context. The default encryption kdf is\n   15      # the first of the list\n   16      ['pbkdf2_sha512', 'md5_crypt'],\n   ..\n   18      # will indicate that the stored hash should be replaced by a more recent\n   19      # algorithm. Passlib 1.6 supports an `auto` value which deprecates any\n   20:     # algorithm but the default, but Ubuntu LTS only provides 1.5 so far.\n   21      deprecated=['md5_crypt'],\n   22  )\n   ..\n   90          \"\"\" Passlib CryptContext instance used to encrypt and verify\n   91          passwords. Can be overridden if technical, legal or political matters\n   92:         require different kdfs than the provided default.\n   93  \n   94          Requires a CryptContext as deprecation and upgrade notices are used\n   95          internally\n   96          \"\"\"\n   97:         return default_crypt_context\n   98  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\auth_ldap\\users_ldap.py:\n  184                  values['active'] = True\n  185                  user_id = user_obj.copy(cr, SUPERUSER_ID, conf['user'],\n  186:                                         default=values)\n  187              else:\n  188                  user_id = user_obj.create(cr, SUPERUSER_ID, values)\n  ...\n  212                   \"otherwise all authentication attempts will fail.\"),\n  213      }\n  214:     _defaults = {\n  215          'ldap_server': '127.0.0.1',\n  216          'ldap_server_port': 389,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\auth_oauth\\auth_oauth.py:\n   20          'sequence' : fields.integer(),\n   21      }\n   22:     _defaults = {\n   23          'enabled' : False,\n   24          'css_class' : \"zocial\",\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\auth_oauth\\res_config.py:\n   15      }\n   16  \n   17:     def default_get(self, cr, uid, fields, context=None):\n   18:         res = super(base_config_settings, self).default_get(cr, uid, fields, context=context)\n   19          res.update(self.get_oauth_providers(cr, uid, fields, context=context))\n   20          return res\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\auth_signup\\auth_signup_data.xml:\n    3      <data noupdate=\"1\">\n    4  \n    5:         <!-- Default template user for new users signing in -->\n    6:         <record id=\"default_template_user\" model=\"res.users\">\n    7              <field name=\"name\">Template User</field>\n    8              <field name=\"login\">portaltemplate</field>\n    9              <field name=\"active\" eval=\"False\"/>\n   10:             <!-- Avoid auto-including this user in any default group, just like a typical portal member -->\n   11              <field name=\"groups_id\" eval=\"[(6, 0,  [ref('base.group_portal')])]\"/>\n   12              <!-- allow signuped users to have a alias -->\n   ..\n   14          </record>\n   15  \n   16:         <record id=\"default_template_user_config\" model=\"ir.config_parameter\">\n   17              <field name=\"key\">auth_signup.template_user_id</field>\n   18:             <field name=\"value\" ref=\"default_template_user\"/>\n   19          </record>\n   20  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\auth_signup\\controllers\\main.py:\n   91                  token_infos = res_partner.signup_retrieve_info(request.cr, openerp.SUPERUSER_ID, qcontext.get('token'))\n   92                  for k, v in token_infos.items():\n   93:                     qcontext.setdefault(k, v)\n   94              except:\n   95                  qcontext['error'] = _(\"Invalid signup token\")\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\auth_signup\\res_config.py:\n   17      }\n   18  \n   19:     def get_default_auth_signup_template_user_id(self, cr, uid, fields, context=None):\n   20          icp = self.pool.get('ir.config_parameter')\n   21          # we use safe_eval on the result, since the value of the parameter is a nonempty string\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\auth_signup\\res_users.py:\n    8  from openerp.addons.base.ir.ir_mail_server import MailDeliveryException\n    9  from openerp.osv import osv, fields\n   10: from openerp.tools.misc import DEFAULT_SERVER_DATETIME_FORMAT, ustr\n   11  from ast import literal_eval\n   12  from openerp.tools.translate import _\n   ..\n   23  def now(**kwargs):\n   24      dt = datetime.now() + timedelta(**kwargs)\n   25:     return dt.strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n   26  \n   27  \n   ..\n  302          return user_id\n  303  \n  304:     def copy(self, cr, uid, id, default=None, context=None):\n  305:         if not default or not default.get('email'):\n  306              # avoid sending email to the user we are duplicating\n  307              context = dict(context or {}, reset_password=False)\n  308:         return super(res_users, self).copy(cr, uid, id, default=default, context=context)\n  309  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\barcodes\\__openerp__.py:\n   14  Most barcode scanners will work out of the box.\n   15  However, make sure the scanner uses the same keyboard layout as the device it's plugged in.\n   16: Either by setting the device's keyboard layout to US QWERTY (default value for most readers)\n   17  or by changing the scanner's keyboard layout (check the manual).\n   18  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\barcodes\\barcodes.py:\n   27      }\n   28  \n   29:     _defaults = {\n   30          'upc_ean_conv': 'always',\n   31      }\n   ..\n  201      }\n  202  \n  203:     _defaults = {\n  204          'type': 'product',\n  205          'pattern': '.*',\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\barcodes\\data\\barcodes_data.xml:\n    2  <openerp>\n    3      <data>\n    4:     	<record id=\"default_barcode_nomenclature\" model=\"barcode.nomenclature\">\n    5:             <field name=\"name\">Default Nomenclature</field>\n    6          </record>\n    7  \n    8          <record id=\"barcode_rule_product\" model=\"barcode.rule\">\n    9              <field name=\"name\">Product Barcodes</field>\n   10:             <field name=\"barcode_nomenclature_id\" ref=\"default_barcode_nomenclature\"/>\n   11              <field name=\"sequence\">90</field>\n   12              <field name=\"type\">product</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\__init__.py:\n   12      \"\"\"Rewrite ICP's to force groups\"\"\"\n   13      from openerp import SUPERUSER_ID\n   14:     from openerp.addons.base.ir.ir_config_parameter import _default_parameters\n   15      ICP = registry['ir.config_parameter']\n   16:     for k, func in _default_parameters.items():\n   17          v = ICP.get_param(cr, SUPERUSER_ID, k)\n   18          _, g = func()\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\base_data.xml:\n   24          <function name=\"install_lang\" model=\"res.lang\"/>\n   25  \n   26:         <record id=\"main_partner\" model=\"res.partner\" context=\"{'default_is_company': True}\">\n   27              <field name=\"name\">My Company</field>\n   28              <field name=\"company_id\" eval=\"None\"/>\n   ..\n  101              <field name=\"login\">public</field>\n  102              <field name=\"password\"></field>\n  103:             <!-- Avoid auto-including this demo user in any default group -->\n  104              <field name=\"groups_id\" eval=\"[(6,0,[])]\"/>\n  105              <field name=\"image\" type=\"base64\" file=\"base/static/img/public_user-image.png\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\ir\\ir_actions.py:\n   42              translate=True),\n   43      }\n   44:     _defaults = {\n   45          'usage': lambda *a: False,\n   46      }\n   ..\n  243          'report_rml_content': fields.function(_report_content, fnct_inv=_report_content_inv, type='binary', string='RML Content'),\n  244      }\n  245:     _defaults = {\n  246          'type': 'ir.actions.report.xml',\n  247          'multi': False,\n  ...\n  289                      is one of the possible values for ir.ui.view.type and view_id\n  290                      is the ID of a specific view to use for this mode, or False for\n  291:                     the default one.\n  292          \"\"\"\n  293          res = {}\n  ...\n  321              help=\"Optional domain filtering of the destination data, as a Python expression\"),\n  322          'context': fields.char('Context Value', required=True,\n  323:             help=\"Context dictionary as Python expression, empty by default (Default: {})\"),\n  324          'res_id': fields.integer('Record ID', help=\"Database ID of record to open in form view, when ``view_mode`` is set to 'form' only\"),\n  325          'res_model': fields.char('Destination Model', required=True,\n  ...\n  329          'target': fields.selection([('current','Current Window'),('new','New Window'),('inline','Inline Edit'),('inlineview','Inline View')], 'Target Window'),\n  330          'view_mode': fields.char('View Mode', required=True,\n  331:             help=\"Comma-separated list of allowed view modes, such as 'form', 'tree', 'calendar', etc. (Default: tree,form)\"),\n  332          'view_type': fields.selection((('tree','Tree'),('form','Form')), string='View Type', required=True,\n  333              help=\"View type: Tree type to use for the tree view, set to 'tree' for a hierarchical tree view, or 'form' for a regular list view\"),\n  ...\n  339                      \"when displaying the result of an action, federating view mode, views and \" \\\n  340                      \"reference view. The result is returned as an ordered list of pairs (view_id,view_mode).\"),\n  341:         'limit': fields.integer('Limit', help='Default limit for the list view'),\n  342          'auto_refresh': fields.integer('Auto-Refresh',\n  343              help='Add an auto-refresh on the view'),\n  ...\n  351      }\n  352  \n  353:     _defaults = {\n  354          'type': 'ir.actions.act_window',\n  355          'view_type': 'form',\n  ...\n  440              help=\"If set to true, the action will not be displayed on the right toolbar of a form view.\"),\n  441      }\n  442:     _defaults = {\n  443          'multi': False,\n  444      }\n  ...\n  454      _inherit = 'ir.actions.actions'\n  455      _table = 'ir_actions'\n  456:     _defaults = {\n  457          'type': 'ir.actions.act_window_close',\n  458      }\n  ...\n  475          )\n  476      }\n  477:     _defaults = {\n  478          'type': 'ir.actions.act_url',\n  479          'target': 'new'\n  ...\n  633      }\n  634  \n  635:     _defaults = {\n  636          'state': 'code',\n  637          'condition': 'True',\n  ...\n 1114              ('value', 'Value'),\n 1115              ('equation', 'Python expression')\n 1116:         ], 'Evaluation Type', required=True, change_default=True),\n 1117      }\n 1118  \n 1119:     _defaults = {\n 1120          'type': 'value',\n 1121      }\n ....\n 1159          'note': fields.text('Text', translate=True),\n 1160      }\n 1161:     _defaults={\n 1162          'state': 'open',\n 1163          'sequence': 10,\n ....\n 1191          if act_type != 'ir.actions.act_window':\n 1192              return res\n 1193:         res.setdefault('context','{}')\n 1194  \n 1195          # Open a specific record when res_id is provided in the context\n ....\n 1278              help=\"Optional model, mostly used for needactions.\"),\n 1279          'context': fields.char('Context Value', required=True,\n 1280:             help=\"Context dictionary as Python expression, empty by default (Default: {})\"),\n 1281          'params': fields.function(_get_params, fnct_inv=_set_params,\n 1282                                    type='binary', \n ....\n 1286          'params_store': fields.binary(\"Params storage\", readonly=True)\n 1287      }\n 1288:     _defaults = {\n 1289          'type': 'ir.actions.client',\n 1290          'context': '{}',\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\ir\\ir_attachment.py:\n   33  \n   34  def guess_mimetype(bin_data):\n   35:     # by default, guess the type using the magic number of file hex signature (like magic, but more limited)\n   36      # see http://www.filesignatures.net/ for file signatures\n   37      mapping = (\n   ..\n   75      location pseudo uri (example: hdfs://hadoppserver)\n   76  \n   77:     The default implementation is the file:dirname location that stores files\n   78      on the local filesystem using name based on their sha1 hash\n   79      \"\"\"\n   ..\n  244          \"\"\" compute the mimetype of the given values\n  245              :param values : dict of values to create or write an ir_attachment\n  246:             :return mime : string indicating the mimetype, or application/octet-stream by default\n  247          \"\"\"\n  248          mimetype = 'application/octet-stream'\n  ...\n  281          'create_date': fields.datetime('Date Created', readonly=True),\n  282          'create_uid':  fields.many2one('res.users', 'Owner', readonly=True),\n  283:         'company_id': fields.many2one('res.company', 'Company', change_default=True),\n  284          'type': fields.selection( [ ('url','URL'), ('binary','File'), ],\n  285:                 'Type', help=\"You can either upload a file from your computer or copy/paste an internet link to your file\", required=True, change_default=True),\n  286          'url': fields.char('Url', size=1024),\n  287          # al: We keep shitty field names for backward compatibility with document\n  ...\n  297      }\n  298  \n  299:     _defaults = {\n  300          'type': 'binary',\n  301          'file_size': 0,\n  302          'mimetype' : False,\n  303:         'company_id': lambda s,cr,uid,c: s.pool.get('res.company')._company_default_get(cr, uid, 'ir.attachment', context=c),\n  304      }\n  305  \n  ...\n  329                          require_employee = True\n  330                      continue\n  331:                 res_ids.setdefault(rmod,set()).add(rid)\n  332          if values:\n  333              if values.get('res_model') and values.get('res_id'):\n  334:                 res_ids.setdefault(values['res_model'],set()).add(values['res_id'])\n  335  \n  336          ima = self.pool.get('ir.model.access')\n  ...\n  390                  continue\n  391              # model_attachments = { 'model': { 'res_id': [id1,id2] } }\n  392:             model_attachments.setdefault(target_dict['res_model'],{}).setdefault(target_dict['res_id'] or 0, set()).add(target_dict['id'])\n  393  \n  394          # To avoid multiple queries for each attachment found, checks are\n  ...\n  431          return super(ir_attachment, self).write(cr, uid, ids, vals, context)\n  432  \n  433:     def copy(self, cr, uid, id, default=None, context=None):\n  434          self.check(cr, uid, [id], 'write', context=context)\n  435:         return super(ir_attachment, self).copy(cr, uid, id, default, context)\n  436  \n  437      def unlink(self, cr, uid, ids, context=None):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\ir\\ir_config_parameter.py:\n   15  A dictionary holding some configuration parameters to be initialized when the database is created.\n   16  \"\"\"\n   17: _default_parameters = {\n   18      \"database.secret\": lambda: (str(uuid.uuid4()), ['base.group_erp_manager']),\n   19      \"database.uuid\": lambda: (str(uuid.uuid1()), []),\n   20:     \"database.create_date\": lambda: (datetime.datetime.now().strftime(misc.DEFAULT_SERVER_DATETIME_FORMAT), ['base.group_user']),\n   21      \"web.base.url\": lambda: (\"http://localhost:%s\" % config.get('xmlrpc_port'), []),\n   22  }\n   ..\n   41      def init(self, cr, force=False):\n   42          \"\"\"\n   43:         Initializes the parameters listed in _default_parameters.\n   44          It overrides existing parameters if force is ``True``.\n   45          \"\"\"\n   46:         for key, func in _default_parameters.iteritems():\n   47              # force=True skips search and always performs the 'if' body (because ids=False)\n   48              ids = not force and self.search(cr, SUPERUSER_ID, [('key','=',key)])\n   ..\n   51                  self.set_param(cr, SUPERUSER_ID, key, value, groups=groups)\n   52  \n   53:     def get_param(self, cr, uid, key, default=False, context=None):\n   54          \"\"\"Retrieve the value for a given key.\n   55  \n   56          :param string key: The key of the parameter value to retrieve.\n   57:         :param string default: default value if parameter is missing.\n   58:         :return: The value of the parameter, or ``default`` if it does not exist.\n   59          :rtype: string\n   60          \"\"\"\n   61          result = self._get_param(cr, uid, key)\n   62          if result is None:\n   63:             return default\n   64          return result\n   65  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\ir\\ir_cron.py:\n   12  from openerp import SUPERUSER_ID, netsvc, api\n   13  from openerp.osv import fields, osv\n   14: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT\n   15  from openerp.tools.safe_eval import safe_eval as eval\n   16  from openerp.tools.translate import _\n   ..\n   61      }\n   62  \n   63:     _defaults = {\n   64:         'nextcall' : lambda *a: time.strftime(DEFAULT_SERVER_DATETIME_FORMAT),\n   65          'priority' : 5,\n   66          'user_id' : lambda obj,cr,uid,context: uid,\n   ..\n  152              with api.Environment.manage():\n  153                  now = fields.datetime.context_timestamp(job_cr, job['user_id'], datetime.now())\n  154:                 nextcall = fields.datetime.context_timestamp(job_cr, job['user_id'], datetime.strptime(job['nextcall'], DEFAULT_SERVER_DATETIME_FORMAT))\n  155                  numbercall = job['numbercall']\n  156  \n  ...\n  168                      addsql = ', active=False'\n  169                  cron_cr.execute(\"UPDATE ir_cron SET nextcall=%s, numbercall=%s\"+addsql+\" WHERE id=%s\",\n  170:                            (nextcall.astimezone(pytz.UTC).strftime(DEFAULT_SERVER_DATETIME_FORMAT), numbercall, job['id']))\n  171                  self.invalidate_cache(job_cr, SUPERUSER_ID)\n  172  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\ir\\ir_fields.py:\n    9  \n   10  from openerp import models, fields, api, _\n   11: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT, DEFAULT_SERVER_DATETIME_FORMAT, ustr\n   12  \n   13  REFERENCING_FIELDS = {None, 'id', '.id'}\n   ..\n  100          value acceptable for a write() on the field ``field``.\n  101  \n  102:         By default, tries to get a method on itself with a name matching the\n  103          pattern ``_$fromtype_to_$field.type`` and returns it.\n  104  \n  ...\n  201      def _str_to_date(self, model, field, value):\n  202          try:\n  203:             time.strptime(value, DEFAULT_SERVER_DATE_FORMAT)\n  204              return value, []\n  205          except ValueError:\n  ...\n  246          dt = input_tz.localize(parsed_value, is_dst=False)\n  247          # And convert to UTC before reformatting for writing\n  248:         return dt.astimezone(pytz.UTC).strftime(DEFAULT_SERVER_DATETIME_FORMAT), []\n  249  \n  250      @api.model\n  ...\n  253          # Cache translations so they don't have to be reloaded from scratch on\n  254          # every row of the file\n  255:         tnx_cache = self._cr.cache.setdefault(self._name, {})\n  256:         if tnx_cache.setdefault(types, {}) and src in tnx_cache[types]:\n  257              return tnx_cache[types][src]\n  258  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\ir\\ir_filters.py:\n   14          return cr.fetchall()\n   15  \n   16:     def copy(self, cr, uid, id, default=None, context=None):\n   17          name = self.read(cr, uid, [id], ['name'])[0]['name']\n   18:         default.update({'name':_('%s (copy)') % name})\n   19:         return super(ir_filters, self).copy(cr, uid, id, default, context)\n   20  \n   21      def _get_action_domain(self, cr, uid, action_id=None):\n   ..\n   36              a contextual action.\n   37          :return: list of :meth:`~osv.read`-like dicts containing the\n   38:             ``name``, ``is_default``, ``domain``, ``user_id`` (m2o tuple),\n   39              ``action_id`` (m2o tuple) and ``context`` of the matching ``ir.filters``.\n   40          \"\"\"\n   ..\n   46              [('model_id','=',model),('user_id','in',[uid, False])])\n   47          my_filters = self.read(cr, uid, filter_ids,\n   48:             ['name', 'is_default', 'domain', 'context', 'user_id', 'sort'], context=context)\n   49          return my_filters\n   50  \n   51:     def _check_global_default(self, cr, uid, vals, matching_filters, context=None):\n   52:         \"\"\" _check_global_default(cursor, UID, dict, list(dict), dict) -> None\n   53  \n   54:         Checks if there is a global default for the model_id requested.\n   55  \n   56:         If there is, and the default is different than the record being written\n   57:         (-> we're not updating the current global default), raise an error\n   58:         to avoid users unknowingly overwriting existing global defaults (they\n   59:         have to explicitly remove the current default before setting a new one)\n   60  \n   61          This method should only be called if ``vals`` is trying to set\n   62:         ``is_default``\n   63  \n   64:         :raises openerp.exceptions.Warning: if there is an existing default and\n   65                                              we're not updating it\n   66          \"\"\"\n   67          action_domain = self._get_action_domain(cr, uid, vals.get('action_id'))\n   68:         existing_default = self.search(cr, uid, action_domain + [\n   69              ('model_id', '=', vals['model_id']),\n   70              ('user_id', '=', False),\n   71:             ('is_default', '=', True)], context=context)\n   72  \n   73:         if not existing_default: return\n   74          if matching_filters and \\\n   75:            (matching_filters[0]['id'] == existing_default[0]):\n   76              return\n   77  \n   78          raise exceptions.Warning(\n   79:             _(\"There is already a shared filter set as default for %(model)s, delete or change it before setting a new default\") % {\n   80                  'model': vals['model_id']\n   81              })\n   ..\n   92                                  if (f['user_id'] and f['user_id'][0]) == vals.get('user_id', False)]\n   93  \n   94:         if vals.get('is_default'):\n   95              if vals.get('user_id'):\n   96:                 # Setting new default: any other default that belongs to the user\n   97                  # should be turned off\n   98                  action_domain = self._get_action_domain(cr, uid, action_id)\n   ..\n  100                          ('model_id', '=', vals['model_id']),\n  101                          ('user_id', '=', vals['user_id']),\n  102:                         ('is_default', '=', True),\n  103                      ], context=context)\n  104                  if act_ids:\n  105:                     self.write(cr, uid, act_ids, {'is_default': False}, context=context)\n  106              else:\n  107:                 self._check_global_default(\n  108                      cr, uid, vals, matching_filters, context=None)\n  109  \n  ...\n  142          'sort': fields.text('Sort', required=True),\n  143          'model_id': fields.selection(_list_all_models, 'Model', required=True),\n  144:         'is_default': fields.boolean('Default filter'),\n  145          'action_id': fields.many2one('ir.actions.actions', 'Action', ondelete='cascade',\n  146                                       help=\"The menu action this filter applies to. \"\n  ...\n  149          'active': fields.boolean('Active')\n  150      }\n  151:     _defaults = {\n  152          'domain': '[]',\n  153          'context':'{}',\n  154          'sort': '[]',\n  155          'user_id': lambda self,cr,uid,context=None: uid,\n  156:         'is_default': False,\n  157          'active': True\n  158      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\ir\\ir_filters.xml:\n   20                          <field name=\"user_id\"/>\n   21                          <field name=\"model_id\"/>\n   22:                         <field name=\"is_default\"/>\n   23                          <field name=\"action_id\"/>\n   24                          <field name=\"active\"/>\n   ..\n   40                      <field name=\"model_id\"/>\n   41                      <field name=\"user_id\"/>\n   42:                     <field name=\"is_default\"/>\n   43                      <field name=\"action_id\"/>\n   44                      <field name=\"domain\" groups=\"base.group_no_one\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\ir\\ir_http.py:\n  124  \n  125              response = werkzeug.wrappers.Response()\n  126:             server_format = openerp.tools.misc.DEFAULT_SERVER_DATETIME_FORMAT\n  127              try:\n  128                  response.last_modified = datetime.datetime.strptime(wdate, server_format + '.%f')\n  ...\n  221              return \"attachment; filename*=UTF-8''%s\" % escaped\n  222  \n  223:     def binary_content(self, xmlid=None, model='ir.attachment', id=None, field='datas', unique=False, filename=None, filename_field='datas_fname', download=False, mimetype=None, default_mimetype='application/octet-stream', env=None):\n  224          \"\"\" Get file, attachment or downloadable content\n  225  \n  226:         If the ``xmlid`` and ``id`` parameter is omitted, fetches the default value for the\n  227:         binary field (via ``default_get``), otherwise fetches the field for\n  228          that precise record.\n  229  \n  ...\n  237          :param bool download: apply headers to download the file\n  238          :param str mimetype: mintype of the field (for headers)\n  239:         :param str default_mimetype: default mintype if no mintype found\n  240:         :param Environment env: by default use request.env\n  241          :returns: (status, headers, content)\n  242          \"\"\"\n  ...\n  302                  mimetype = mimetypes.guess_type(filename)[0]\n  303              if not mimetype:\n  304:                 mimetype = default_mimetype\n  305          headers.append(('Content-Type', mimetype))\n  306  \n  ...\n  312          headers.append(('Cache-Control', 'max-age=%s' % (STATIC_CACHE if unique else 0)))\n  313  \n  314:         # content-disposition default name\n  315          if download:\n  316              headers.append(('Content-Disposition', self.content_disposition(filename)))\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\ir\\ir_mail_server.py:\n  155                                                   \"- None: SMTP sessions are done in cleartext.\\n\"\n  156                                                   \"- TLS (STARTTLS): TLS encryption is requested at start of SMTP session (Recommended)\\n\"\n  157:                                                  \"- SSL/TLS: SMTP sessions are encrypted with SSL/TLS through a dedicated port (default: 465)\"),\n  158          'smtp_debug': fields.boolean('Debugging', help=\"If enabled, the full output of SMTP sessions will \"\n  159                                                         \"be written to the server log at DEBUG level\"\n  160                                                         \"(this is very verbose and may include confidential info!)\"),\n  161          'sequence': fields.integer('Priority', help=\"When no specific mail server is requested for a mail, the highest priority one \"\n  162:                                                     \"is used. Default priority is 10 (smaller number = higher priority)\"),\n  163          'active': fields.boolean('Active')\n  164      }\n  165  \n  166:     _defaults = {\n  167           'smtp_port': 25,\n  168           'active': True,\n  ...\n  247             :param list email_to: list of recipient addresses (to be joined with commas) \n  248             :param string subject: email subject (no pre-encoding/quoting necessary)\n  249:            :param string body: email body, of the type ``subtype`` (by default, plaintext).\n  250                                 If html subtype is used, the message will be automatically converted\n  251                                 to plaintext and wrapped in multipart/alternative, unless an explicit\n  ...\n  257                                      e.g. \"12345-crm.lead\".\n  258             :param string subtype: optional mime subtype for the text body (usually 'plain' or 'html'),\n  259:                                   must match the format of the ``body`` parameter. Default is 'plain',\n  260                                    making the content part of the mail \"text/plain\".\n  261             :param string subtype_alternative: optional mime subtype of ``body_alternative`` (usually 'plain'\n  262:                                               or 'html'). Default is 'plain'.\n  263             :param list attachments: list of (filename, filecontents) pairs, where filecontents is a string\n  264                                      containing the bytes of the attachment\n  ...\n  336                  part = MIMEBase('application', \"octet-stream\")\n  337  \n  338:                 # The default RFC2231 encoding of Message.add_header() works in Thunderbird but not GMail\n  339                  # so we fix it by using RFC2047 encoding for the filename instead.\n  340                  part.set_param('name', filename_rfc2047)\n  ...\n  346          return msg\n  347  \n  348:     def _get_default_bounce_address(self, cr, uid, context=None):\n  349:         '''Compute the default bounce address.\n  350  \n  351:         The default bounce address is used to set the envelop address if no\n  352          envelop address is provided in the message.  It is formed by properly\n  353          joining the parameters \"mail.catchall.alias\" and\n  354          \"mail.catchall.domain\".\n  355  \n  356:         If \"mail.catchall.alias\" is not set it defaults to \"postmaster-odoo\".\n  357  \n  358          If \"mail.catchall.domain\" is not set, return None.\n  ...\n  361          get_param = self.pool['ir.config_parameter'].get_param\n  362          postmaster = get_param(cr, SUPERUSER_ID, 'mail.bounce.alias',\n  363:                                default='postmaster-odoo',\n  364                                 context=context,)\n  365          domain = get_param(cr, SUPERUSER_ID, 'mail.catchall.domain', context=context)\n  ...\n  376  \n  377          If the mail_server_id is provided, sends using this mail server, ignoring other smtp_* arguments.\n  378:         If mail_server_id is None and smtp_server is None, use the default mail server (highest priority).\n  379          If mail_server_id is None and smtp_server is not None, use the provided smtp_* arguments.\n  380          If both mail_server_id and smtp_server are None, look for an 'smtp_server' value in server config,\n  ...\n  382  \n  383          :param message: the email.message.Message to send. The envelope sender will be extracted from the\n  384:                         ``Return-Path`` (if present), or will be set to the default bounce address.\n  385                          The envelope recipients will be extracted from the combined list of ``To``,\n  386                          ``CC`` and ``BCC`` headers.\n  ...\n  395                   MailDeliveryException and logs root cause.\n  396          \"\"\"\n  397:         # Use the default bounce address **only if** no Return-Path was\n  398          # provided by caller.  Caller may be using Variable Envelope Return\n  399          # Path (VERP) to detect no-longer valid email addresses.\n  400          smtp_from = message['Return-Path']\n  401          if not smtp_from:\n  402:             smtp_from = self._get_default_bounce_address(cr, uid, context=context)\n  403          if not smtp_from:\n  404              smtp_from = message['From']\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\ir\\ir_model.py:\n    2  \n    3  # Part of Odoo. See LICENSE file for full copyright and licensing details.\n    4: from collections import defaultdict\n    5  import logging\n    6  import re\n    .\n   88      }\n   89  \n   90:     _defaults = {\n   91          'model': 'x_',\n   92          'state': 'manual',\n   ..\n  254      }\n  255      _rec_name='field_description'\n  256:     _defaults = {\n  257          'selection': \"\",\n  258          'domain': \"[]\",\n  ...\n  342      @api.model\n  343      def _custom_many2many_names(self, model_name, comodel_name):\n  344:         \"\"\" Return default names for the table and columns of a custom many2many field. \"\"\"\n  345          rel1 = self.env[model_name]._table\n  346          rel2 = self.env[comodel_name]._table\n  ...\n  692          'perm_unlink': fields.boolean('Delete Access'),\n  693      }\n  694:     _defaults = {\n  695          'active': True,\n  696      }\n  ...\n  878  \n  879      def name_get(self, cr, uid, ids, context=None):\n  880:         bymodel = defaultdict(dict)\n  881          names = {}\n  882  \n  ...\n  915          'date_init': fields.datetime('Init Date')\n  916      }\n  917:     _defaults = {\n  918          'date_init': fields.datetime.now,\n  919          'date_update': fields.datetime.now,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\ir\\ir_model_view.xml:\n   15                      <footer>\n   16                          <button name=\"menu_create\" string=\"Create _Menu\" type=\"object\" class=\"btn-primary\"/>\n   17:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   18                      </footer>\n   19                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\ir\\ir_qweb.py:\n   98  \n   99      def safe_eval(self, expr):\n  100:         locals_dict = collections.defaultdict(lambda: None)\n  101          locals_dict.update(self)\n  102          locals_dict.pop('cr', None)\n  ...\n  476          cr, uid, context = [getattr(qwebcontext, attr) for attr in ('cr', 'uid', 'context')]\n  477          bundle = AssetsBundle(xmlid, cr=cr, uid=uid, context=context, registry=self.pool)\n  478:         css = self.get_attr_bool(template_attributes.get('css'), default=True)\n  479:         js = self.get_attr_bool(template_attributes.get('js'), default=True)\n  480:         async = self.get_attr_bool(template_attributes.get('async'), default=False)\n  481          return bundle.to_html(css=css, js=js, debug=bool(qwebcontext.get('debug')), async=async, qwebcontext=qwebcontext)\n  482  \n  ...\n  516          ``t-field``.\n  517  \n  518:         By default, tries to get the model named\n  519          :samp:`ir.qweb.field.{field_type}`, falling back on ``ir.qweb.field``.\n  520  \n  ...\n  532          return self.pool.get(widget_model) or self.pool['ir.qweb.widget']\n  533  \n  534:     def get_attr_bool(self, attr, default=False):\n  535          if attr:\n  536              attr = attr.lower()\n  ...\n  539              elif attr in ('true', '1'):\n  540                  return True\n  541:         return default\n  542  \n  543  #--------------------------------------------------------------------\n  ...\n  566          parent.\n  567  \n  568:         The default attributes are:\n  569  \n  570          * ``model``, the name of the record's model\n  ...\n  618          of configuration values.\n  619  \n  620:         A default configuration key is ``widget`` which can override the\n  621          field's own ``_type``.\n  622          \"\"\"\n  ...\n  657          \"\"\" render_element(cr, uid, source_element, t_att, g_att, qweb_context, content)\n  658  \n  659:         Final rendering hook, by default just calls ir.qweb's ``render_element``\n  660          \"\"\"\n  661          return self.qweb_object().render_element(\n  ...\n  726          if isinstance(value, basestring):\n  727              value = datetime.datetime.strptime(\n  728:                 value[:10], openerp.tools.DEFAULT_SERVER_DATE_FORMAT)\n  729  \n  730          if options and 'format' in options:\n  ...\n  749          if isinstance(value, basestring):\n  750              value = datetime.datetime.strptime(\n  751:                 value, openerp.tools.DEFAULT_SERVER_DATETIME_FORMAT)\n  752          value = fields.datetime.context_timestamp(\n  753              cr, uid, timestamp=value, context=context)\n  ...\n  866  \n  867          # lang.format mandates a sprintf-style format. These formats are non-\n  868:         # minimal (they have a default fixed precision instead), and\n  869:         # lang.format will not set one by default. currency.round will not\n  870          # provide one either. So we need to generate a precision value\n  871          # (integer > 0) from the currency's rounding (a float generally < 1.0).\n  ...\n  953  \n  954      def value_to_html(self, cr, uid, value, field, options=None, context=None):\n  955:         parse_format = openerp.tools.DEFAULT_SERVER_DATETIME_FORMAT\n  956          locale = babel.Locale.parse(\n  957              self.user_lang(cr, uid, context=context).code)\n  ...\n 1484                  return datetime.datetime.fromtimestamp(os.path.getmtime(self._filename))\n 1485              elif self._ir_attach:\n 1486:                 server_format = openerp.tools.misc.DEFAULT_SERVER_DATETIME_FORMAT\n 1487                  last_update = self._ir_attach['__last_update']\n 1488                  try:\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\ir\\ir_rule.py:\n   70      _order = 'model_id DESC'\n   71  \n   72:     _defaults = {\n   73          'active': True,\n   74          'perm_read': True,\n   ..\n  114                  for group in rule.groups:\n  115                      if group in user.groups_id:\n  116:                         group_domains.setdefault(group, []).append(dom)\n  117                  if not rule.groups:\n  118                      global_domains.append(dom)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\ir\\ir_sequence.py:\n   31          names.append(n)\n   32      names = ','.join(names)\n   33:     # RESTRICT is the default; it prevents dropping the sequence if an\n   34      # object depends on it.\n   35      cr.execute(\"DROP SEQUENCE IF EXISTS %s RESTRICT \" % names)\n   ..\n  101      implementation = fields.Selection(\n  102          [('standard', 'Standard'), ('no_gap', 'No gap')],\n  103:         'Implementation', required=True, default='standard',\n  104          help=\"Two sequence object implementations are offered: Standard \"\n  105          \"and 'No gap'. The later is slower than the former but forbids any\"\n  106          \" gap in the sequence (while they are possible in the former).\")\n  107:     active = fields.Boolean(default=True)\n  108      prefix = fields.Char(help=\"Prefix value of the record for the sequence\")\n  109      suffix = fields.Char(help=\"Suffix value of the record for the sequence\")\n  110:     number_next = fields.Integer('Next Number', required=True, default=1, help=\"Next number of this sequence\")\n  111      number_next_actual = fields.Integer(compute='_get_number_next_actual', inverse='_set_number_next_actual',\n  112:                                         required=True, string='Next Number', default=1,\n  113                                          help=\"Next number that will be used. This number can be incremented \"\n  114                                          \"frequently so the displayed value might already be obsolete\")\n  115:     number_increment = fields.Integer('Step', required=True, default=1,\n  116                                        help=\"The next number of the sequence will be incremented by this number\")\n  117:     padding = fields.Integer('Sequence Size', required=True, default=0,\n  118                               help=\"Odoo will automatically adds some '0' on the left of the \"\n  119                               \"'Next Number' to get the required padding size.\")\n  120      company_id = fields.Many2one('res.company', 'Company',\n  121:                                  default=lambda s: s.env['res.company']._company_default_get('ir.sequence'))\n  122      use_date_range = fields.Boolean('Use subsequences per date_range')\n  123      date_range_ids = fields.One2many('ir.sequence.date_range', 'sequence_id', 'Subsequences')\n  ...\n  337      date_to = fields.Date('To', required=True)\n  338      sequence_id = fields.Many2one(\"ir.sequence\", 'Main Sequence', required=True, ondelete='cascade')\n  339:     number_next = fields.Integer('Next Number', required=True, default=1, help=\"Next number of this sequence\")\n  340      number_next_actual = fields.Integer(compute='_get_number_next_actual', inverse='_set_number_next_actual',\n  341:                                         required=True, string='Next Number', default=1,\n  342                                          help=\"Next number that will be used. This number can be incremented \"\n  343                                          \"frequently so the displayed value might already be obsolete\")\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\ir\\ir_translation.py:\n    2  # Part of Odoo. See LICENSE file for full copyright and licensing details.\n    3  \n    4: from collections import defaultdict\n    5  from difflib import get_close_matches\n    6  import logging\n    .\n  254      }\n  255  \n  256:     _defaults = {\n  257          'state': 'to_translate',\n  258      }\n  ...\n  509          # collect translated field records (model_ids) and other translations\n  510          trans_ids = []\n  511:         model_ids = defaultdict(list)\n  512:         model_fields = defaultdict(list)\n  513          for trans in self:\n  514              if trans.type == 'model':\n  ...\n  548      def write(self, vals):\n  549          if vals.get('value'):\n  550:             vals.setdefault('state', 'translated')\n  551              ttype = vals.get('type') or self[:1].type\n  552              if ttype == 'model':\n  ...\n  557                  vals['value'] = field.check_trans_value(vals['value'])\n  558          elif vals.get('src') or not vals.get('value', True):\n  559:             vals.setdefault('state', 'to_translate')\n  560          self.check('write')\n  561          result = super(ir_translation, self.sudo()).write(vals)\n  ...\n  663              if not fld.related:\n  664                  action['context'] = {\n  665:                     'search_default_name': \"%s,%s\" % (fld.model_name, fld.name),\n  666                  }\n  667          return action\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\ir\\ir_ui_menu.py:\n  148          return result\n  149  \n  150:     def copy(self, cr, uid, id, default=None, context=None):\n  151:         res = super(ir_ui_menu, self).copy(cr, uid, id, default=default, context=context)\n  152          datas=self.read(cr,uid,[res],['name'])[0]\n  153          rex=re.compile('\\([0-9]+\\)')\n  ...\n  292                  parent = False\n  293              if parent in menu_items_map:\n  294:                 menu_items_map[parent].setdefault(\n  295                      'children', []).append(menu_item)\n  296  \n  297          # sort by sequence a tree using parent_id\n  298          for menu_item in menu_items:\n  299:             menu_item.setdefault('children', []).sort(\n  300                  key=operator.itemgetter('sequence'))\n  301  \n  ...\n  334          (osv.osv._check_recursion, 'Error ! You can not create recursive Menu.', ['parent_id'])\n  335      ]\n  336:     _defaults = {\n  337          'sequence': 10,\n  338      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\ir\\ir_ui_menu_view.xml:\n   28                                   in the context to see all submenus! -->\n   29                              <field name=\"child_id\"\n   30:                                     context=\"{'default_parent_id': active_id}\">\n   31                                  <tree string=\"Menu\">\n   32                                      <field name=\"sequence\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\ir\\ir_ui_view.py:\n  229              help=\"\"\"Only applies if this view inherits from an other one (inherit_id is not False/Null).\n  230  \n  231: * if extension (default), if this view is requested the closest primary view\n  232    is looked up (via inherit_id), then all views inheriting from it with this\n  233    view's model are applied\n  ...\n  243               \"\"\"),\n  244      }\n  245:     _defaults = {\n  246          'mode': 'primary',\n  247          'active': True,\n  ...\n  329              cr.execute('CREATE INDEX ir_ui_view_model_type_inherit_id ON ir_ui_view (model, inherit_id)')\n  330  \n  331:     def _compute_defaults(self, cr, uid, values, context=None):\n  332          if 'inherit_id' in values:\n  333:             values.setdefault(\n  334                  'mode', 'extension' if values['inherit_id'] else 'primary')\n  335          return values\n  ...\n  348          return super(view, self).create(\n  349              cr, uid,\n  350:             self._compute_defaults(cr, uid, values, context=context),\n  351              context=context)\n  352  \n  ...\n  371          ret = super(view, self).write(\n  372              cr, uid, ids,\n  373:             self._compute_defaults(cr, uid, vals, context=context),\n  374              context)\n  375          return ret\n  ...\n  381              view.write({'active': not view.active})\n  382  \n  383:     # default view selection\n  384:     def default_view(self, cr, uid, model, view_type, context=None):\n  385:         \"\"\" Fetches the default view for the provided (model, view_type) pair:\n  386           primary view with the lowest priority.\n  387  \n  388          :param str model:\n  389          :param int view_type:\n  390:         :return: id of the default view of False if none found\n  391          :rtype: int\n  392          \"\"\"\n  ...\n  624          # if view_id is not a root view, climb back to the top.\n  625          base = v = self.browse(cr, uid, view_id, context=context)\n  626:         check_view_ids = context.setdefault('check_view_ids', [])\n  627          while v.mode != 'primary':\n  628              # Add inherited views to the list of loading forced views\n  ...\n  802          \"\"\"\n  803          # map each field object to its corresponding nodes in arch\n  804:         field_nodes = collections.defaultdict(list)\n  805  \n  806          def collect(node, model):\n  ...\n  893                      node.set(action, 'false')\n  894          if node.tag in ('kanban'):\n  895:             group_by_name = node.get('default_group_by')\n  896              if group_by_name in Model._fields:\n  897                  group_by_field = Model._fields[group_by_name]\n  ...\n  995                  # TODO: collections.Counter if remove p2.6 compat\n  996                  # running index by tag type, for XPath query generation\n  997:                 indexes = collections.defaultdict(lambda: 0)\n  998                  for child in e.iterchildren(tag=etree.Element):\n  999                      if child.get('data-oe-xpath'):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\ir\\ir_ui_view_view.xml:\n   34                          </page>\n   35                          <page name=\"inherit_children\" string=\"Inherited Views\">\n   36:                             <field name=\"inherit_children_ids\" context=\"{'default_model':model,'default_type':type,'default_inherit_id':active_id,'default_mode':'extension'}\">\n   37                                  <tree>\n   38                                      <field name=\"priority\"/>\n   ..\n   90              <field name=\"res_model\">ir.ui.view</field>\n   91              <field name=\"view_id\" ref=\"view_view_tree\"/>\n   92:             <field name=\"context\">{'search_default_active': 1}</field>\n   93              <field name=\"help\">Views allows you to personalize each view of Odoo. You can add new fields, move fields, rename them or delete the ones that you do not need.</field>\n   94          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\ir\\ir_values.py:\n   23  \n   24  class ir_values(osv.osv):\n   25:     \"\"\"Holds internal model-specific action bindings and user-defined default\n   26         field values. definitions. This is a legacy internal model, mixing\n   27         two different concepts, and will likely be updated or replaced in a\n   ..\n   32         by the ``key`` column:\n   33  \n   34:         * 'default': user-defined default values, used when creating new\n   35            records of this model:\n   36          * 'action': binding of an action to a particular *action slot* of\n   ..\n   41         of the entry. The possible values are:\n   42  \n   43:         * for 'default' entries: an optional condition restricting the\n   44:           cases where this particular default value will be applicable,\n   45            or ``False`` for no condition\n   46          * for 'action' entries: the ``key2`` qualifier is one of the available\n   ..\n   65         should be executed.\n   66  \n   67:        .. rubric:: Usage: default values\n   68         \n   69:        The ``'default'`` entries are usually defined manually by the\n   70:        users, and set by their UI clients calling :meth:`~.set_default`.\n   71:        These default values are then automatically used by the\n   72         ORM every time a new record is about to be created, i.e. when\n   73:        :meth:`~openerp.osv.osv.osv.default_get`\n   74         or :meth:`~openerp.osv.osv.osv.create` are called.\n   75  \n   ..\n   88          for record in self.browse(cursor, user, ids, context=context):\n   89              value = record[name[:-9]]\n   90:             if record.key == 'default' and value:\n   91:                 # default values are pickled on the fly\n   92                  try:\n   93                      value = str(pickle.loads(value))\n   ..\n  104              del ctx[self.CONCURRENCY_CHECK_FIELD]\n  105          record = self.browse(cursor, user, id, context=context)\n  106:         if record.key == 'default':\n  107:             # default values are pickled on the fly\n  108              value = pickle.dumps(value)\n  109          self.write(cursor, user, id, {name[:-9]: value}, context=ctx)\n  ...\n  138                                           \"automatically set the correct reference\"),\n  139  \n  140:         'value': fields.text('Value', help=\"Default value (pickled) or reference to an action\"),\n  141          'value_unpickle': fields.function(_value_unpickle, fnct_inv=_value_pickle,\n  142                                            type='text',\n  143:                                           string='Default value or action reference'),\n  144:         'key': fields.selection([('action','Action'),('default','Default')],\n  145                                  'Type', select=True, required=True,\n  146                                  help=\"- Action: an action attached to one slot of the given model\\n\"\n  147:                                      \"- Default: a default value for a model field\"),\n  148          'key2' : fields.char('Qualifier', select=True,\n  149                               help=\"For actions, one of the possible action slots: \\n\"\n  ...\n  152                                    \"  - client_action_relate\\n\"\n  153                                    \"  - tree_but_open\\n\"\n  154:                                   \"For defaults, an optional condition\"\n  155                               ,),\n  156          'res_id': fields.integer('Record ID', select=True,\n  ...\n  162                                        help=\"If set, action binding only applies for this company\")\n  163      }\n  164:     _defaults = {\n  165          'key': 'action',\n  166          'key2': 'tree_but_open',\n  ...\n  188          return res\n  189  \n  190:     def set_default(self, cr, uid, model, field_name, value, for_all_users=True, company_id=False, condition=False):\n  191:         \"\"\"Defines a default value for the given model and field_name. Any previous\n  192:            default for the same scope (model, field_name, value, for_all_users, company_id, condition)\n  193             will be replaced and lost in the process.\n  194  \n  195:            Defaults can be later retrieved via :meth:`~.get_defaults`, which will return\n  196:            the highest priority default for any given field. Defaults that are more specific\n  197             have a higher priority, in the following order (highest to lowest):\n  198  \n  ...\n  203  \n  204             :param string model: model name\n  205:            :param string field_name: field name to which the default applies\n  206:            :param value: the default field value to set\n  207             :type value: any serializable Python value\n  208:            :param bool for_all_users: whether the default should apply to everybody or only\n  209                                        the user calling the method\n  210:            :param int company_id: optional ID of the company to which the default should\n  211:                                   apply. If omitted, the default will be global. If True\n  212                                    is passed, the current user's company will be used.\n  213             :param string condition: optional condition specification that can be used to\n  214:                                     restrict the applicability of the default values\n  215                                      (e.g. based on another field's value). This is an\n  216                                      opaque string as far as the API is concerned, but client\n  ...\n  229              company_id = user.company_id.id\n  230  \n  231:         # remove existing defaults for the same scope\n  232          search_criteria = [\n  233:             ('key', '=', 'default'),\n  234              ('key2', '=', condition and condition[:200]),\n  235              ('model', '=', model),\n  ...\n  244              'value': pickle.dumps(value),\n  245              'model': model,\n  246:             'key': 'default',\n  247              'key2': condition and condition[:200],\n  248              'user_id': False if for_all_users else uid,\n  ...\n  250          })\n  251  \n  252:     def get_default(self, cr, uid, model, field_name, for_all_users=True, company_id=False, condition=False):\n  253:         \"\"\" Return the default value defined for model, field_name, users, company and condition.\n  254:             Return ``None`` if no such default exists.\n  255          \"\"\"\n  256          search_criteria = [\n  257:             ('key', '=', 'default'),\n  258              ('key2', '=', condition and condition[:200]),\n  259              ('model', '=', model),\n  ...\n  262              ('company_id','=', company_id)\n  263              ]\n  264:         defaults = self.browse(cr, uid, self.search(cr, uid, search_criteria))\n  265:         return pickle.loads(defaults[0].value.encode('utf-8')) if defaults else None\n  266  \n  267:     def get_defaults(self, cr, uid, model, condition=False):\n  268:         \"\"\"Returns any default values that are defined for the current model and user,\n  269             (and match ``condition``, if specified), previously registered via\n  270:            :meth:`~.set_default`.\n  271  \n  272:            Defaults are global to a model, not field-specific, but an optional\n  273:            ``condition`` can be provided to restrict matching default values\n  274             to those that were defined for the same condition (usually based\n  275             on another field's value).\n  276  \n  277:            Default values also have priorities depending on whom they apply\n  278             to: only the highest priority value will be returned for any\n  279:            field. See :meth:`~.set_default` for more details.\n  280  \n  281             :param string model: model name\n  282             :param string condition: optional condition specification that can be used to\n  283:                                     restrict the applicability of the default values\n  284                                      (e.g. based on another field's value). This is an\n  285                                      opaque string as far as the API is concerned, but client\n  ...\n  289                                      so values that share the same first 200 characters always\n  290                                      match)\n  291:            :return: list of default values tuples of the form ``(id, field_name, value)``\n  292:                     (``id`` is the ID of the default entry, usually irrelevant)\n  293          \"\"\"\n  294          # use a direct SQL query for performance reasons,\n  ...\n  304                        %s\n  305                     ORDER BY v.user_id, u.company_id\"\"\"\n  306:         params = ('default', model, uid, uid)\n  307          if condition:\n  308              query %= 'AND v.key2 = %s'\n  ...\n  312          cr.execute(query, params)\n  313  \n  314:         # keep only the highest priority default for each field\n  315:         defaults = {}\n  316          for row in cr.dictfetchall():\n  317:             defaults.setdefault(row['name'],\n  318                  (row['id'], row['name'], pickle.loads(row['value'].encode('utf-8'))))\n  319:         return defaults.values()\n  320  \n  321:     # use ormcache: this is called a lot by BaseModel.default_get()!\n  322      @tools.ormcache('uid', 'model', 'condition')\n  323:     def get_defaults_dict(self, cr, uid, model, condition=False):\n  324          \"\"\" Returns a dictionary mapping field names with their corresponding\n  325:             default value. This method simply improves the returned value of\n  326:             :meth:`~.get_defaults`.\n  327          \"\"\"\n  328:         return dict((f, v) for i, f, v in self.get_defaults(cr, uid, model, condition))\n  329  \n  330      def set_action(self, cr, uid, name, action_slot, model, action, res_id=False):\n  ...\n  384                                specific record of the model, not all records.\n  385             :return: list of action tuples of the form ``(id, name, action_def)``,\n  386:                     where ``id`` is the ID of the default entry, ``name`` is the\n  387                      action label, and ``action_def`` is a dict containing the\n  388                      action definition as obtained by calling\n  ...\n  456      # Backards-compatibility adapter layer to retrofit into split API\n  457      def set(self, cr, uid, key, key2, name, models, value, replace=True, isobject=False, meta=False, preserve_user=False, company=False):\n  458:         \"\"\"Deprecated legacy method to set default values and bind actions to models' action slots.\n  459:            Now dispatches to the newer API methods according to the value of ``key``: :meth:`~.set_default`\n  460:            (``key=='default'``) or :meth:`~.set_action` (``key == 'action'``).\n  461  \n  462:           :deprecated: As of v6.1, ``set_default()`` or ``set_action()`` should be used directly.\n  463          \"\"\"\n  464:         assert key in ['default', 'action'], \"ir.values entry keys must be in ['default','action']\"\n  465:         if key == 'default':\n  466              def do_set(model,res_id):\n  467:                 return self.set_default(cr, uid, model, field_name=name, value=value,\n  468                                          for_all_users=(not preserve_user), company_id=company,\n  469                                          condition=key2)\n  ...\n  474  \n  475      def get(self, cr, uid, key, key2, models, meta=False, context=None, res_id_req=False, without_user=True, key2_req=True):\n  476:         \"\"\"Deprecated legacy method to get the list of default values or actions bound to models' action slots.\n  477:            Now dispatches to the newer API methods according to the value of ``key``: :meth:`~.get_defaults`\n  478:            (``key=='default'``) or :meth:`~.get_actions` (``key == 'action'``)\n  479  \n  480:           :deprecated: As of v6.1, ``get_defaults()`` or ``get_actions()`` should be used directly.\n  481  \n  482          \"\"\"\n  483:         assert key in ['default', 'action'], \"ir.values entry keys must be in ['default','action']\"\n  484:         if key == 'default':\n  485              def do_get(model,res_id):\n  486:                 return self.get_defaults(cr, uid, model, condition=key2)\n  487          elif key == 'action':\n  488              def do_get(model,res_id):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\ir\\ir_values_view.xml:\n   25          </record>\n   26  \n   27:         <record id=\"values_view_form_defaults\" model=\"ir.ui.view\">\n   28:             <field name=\"name\">ir.values.form.defaults</field>\n   29              <field name=\"model\">ir.values</field>\n   30              <field name=\"arch\" type=\"xml\">\n   31:                 <form string=\"User-defined Defaults\">\n   32                      <group>\n   33                          <group>\n   ..\n   41                              <field name=\"company_id\" groups=\"base.group_multi_company\"/>\n   42                          </group>\n   43:                         <separator string=\"Default value or action reference\"/>\n   44                          <field name=\"value_unpickle\" nolabel=\"1\" colspan=\"2\"/>\n   45                      </group>\n   ..\n   52              <field name=\"model\">ir.values</field>\n   53              <field name=\"arch\" type=\"xml\">\n   54:                 <tree string=\"Action Bindings/Defaults\">\n   55                      <field name=\"name\"/>\n   56                      <field name=\"model\"/>\n   ..\n   84              <field name=\"search_view_id\" ref=\"values_view_search_action\"/>\n   85              <field name=\"domain\">[('key','=','action')]</field>\n   86:             <field name=\"context\">{'default_key':'action'}</field>\n   87          </record>\n   88          <record model=\"ir.actions.act_window.view\" id=\"action_values_tree_view\">\n   ..\n  100          <menuitem action=\"act_values_form_action\" id=\"menu_values_form_action\" parent=\"next_id_6\"/>\n  101  \n  102:         <record id=\"act_values_form_defaults\" model=\"ir.actions.act_window\">\n  103:             <field name=\"name\">User-defined Defaults</field>\n  104              <field name=\"type\">ir.actions.act_window</field>\n  105              <field name=\"res_model\">ir.values</field>\n  ...\n  107              <field name=\"view_mode\">tree,form</field>\n  108              <field name=\"search_view_id\" ref=\"values_view_search_action\"/>\n  109:             <field name=\"domain\">[('key','=','default')]</field>\n  110:             <field name=\"context\">{'default_key':'default','default_key2':''}</field>\n  111          </record>\n  112:         <record model=\"ir.actions.act_window.view\" id=\"action_values_defaults_tree_view\">\n  113              <field name=\"sequence\" eval=\"1\"/>\n  114              <field name=\"view_mode\">tree</field>\n  115              <field name=\"view_id\" ref=\"values_view_tree_action\"/>\n  116:             <field name=\"act_window_id\" ref=\"act_values_form_defaults\"/>\n  117          </record>\n  118:         <record model=\"ir.actions.act_window.view\" id=\"action_values_defaults_form_view\">\n  119              <field name=\"sequence\" eval=\"2\"/>\n  120              <field name=\"view_mode\">form</field>\n  121:             <field name=\"view_id\" ref=\"values_view_form_defaults\"/>\n  122:             <field name=\"act_window_id\" ref=\"act_values_form_defaults\"/>\n  123          </record>\n  124:         <menuitem action=\"act_values_form_defaults\" id=\"menu_values_form_defaults\" parent=\"next_id_6\"/>\n  125  \n  126      </data>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\module\\module.py:\n   95      _order = 'name'\n   96  \n   97:     _defaults = {\n   98          'visible': 1,\n   99      }\n  ...\n  109      \"\"\"\n  110  \n  111:     default_priority = 870\n  112  \n  113      def apply(self):\n  ...\n  173  \n  174      def _get_latest_version(self, cr, uid, ids, field_name=None, arg=None, context=None):\n  175:         default_version = modules.adapt_version('1.0')\n  176:         res = dict.fromkeys(ids, default_version)\n  177          for m in self.browse(cr, uid, ids):\n  178:             res[m.id] = self.get_module_info(m.name).get('version', default_version)\n  179          return res\n  180  \n  ...\n  300      }\n  301  \n  302:     _defaults = {\n  303          'state': 'uninstalled',\n  304          'sequence': 100,\n  ...\n  641          res = [0, 0]    # [update, add]\n  642  \n  643:         default_version = modules.adapt_version('1.0')\n  644          known_mods = self.browse(cr, uid, self.search(cr, uid, []))\n  645          known_mods_names = dict([(m.name, m) for m in known_mods])\n  ...\n  660                  if terp.get('installable', True) and mod.state == 'uninstallable':\n  661                      updated_values['state'] = 'uninstalled'\n  662:                 if parse_version(terp.get('version', default_version)) > parse_version(mod.latest_version or default_version):\n  663                      res[0] += 1\n  664                  if updated_values:\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\module\\module_view.xml:\n   83                              <button name=\"button_immediate_install\" states=\"uninstalled\" string=\"Install\" type=\"object\" class=\"btn btn-primary\"/>\n   84                              <button name=\"button_immediate_upgrade\" states=\"installed\" string=\"Upgrade\" type=\"object\" class=\"btn btn-primary\"/>\n   85:                             <button name=\"button_uninstall\" states=\"installed\" string=\"Uninstall\" type=\"object\"  class=\"btn btn-default\"/>\n   86:                             <button name=\"button_uninstall_cancel\" states=\"to remove\" string=\"Cancel Uninstall\" type=\"object\" class=\"btn btn-default\"/>\n   87:                             <button name=\"button_upgrade_cancel\" states=\"to upgrade\" string=\"Cancel Upgrade\" type=\"object\" class=\"btn btn-default\"/>\n   88:                             <button name=\"button_install_cancel\" states=\"to install\" string=\"Cancel Install\" type=\"object\" class=\"btn btn-default\"/>\n   89                          </div>\n   90                      </div>\n   ..\n  172                            </p>\n  173                            <button type=\"object\" class=\"btn btn-primary pull-right btn-sm\" name=\"button_immediate_install\" states=\"uninstalled\">Install</button>\n  174:                           <button type=\"button\" t-if=\"installed\" class=\"btn btn-default pull-right btn-sm disabled\" disabled=\"disabled\">Installed</button>\n  175                          </div>\n  176                        </div>\n  ...\n  185              <field name=\"view_type\">form</field>\n  186              <field name=\"view_mode\">kanban,tree,form</field>\n  187:             <field name=\"context\">{'search_default_app':1}</field>\n  188              <field name=\"search_view_id\" ref=\"view_module_filter\"/>\n  189              <field name=\"help\" type=\"html\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\module\\wizard\\base_export_language.py:\n   33                                         ('get', 'get')])        # get the file\n   34      }\n   35:     _defaults = { \n   36          'state': 'choose',\n   37          'lang': NEW_LANG_KEY,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\module\\wizard\\base_export_language_view.xml:\n   35                      <footer states=\"choose\">\n   36                          <button name=\"act_getfile\" string=\"Export\" type=\"object\" class=\"btn-primary\"/>\n   37:                         <button special=\"cancel\" string=\"Cancel\" type=\"object\" class=\"btn-default\"/>\n   38                      </footer>\n   39                      <footer states=\"get\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\module\\wizard\\base_import_language_view.xml:\n   17                      <footer>\n   18                          <button name=\"import_lang\" string=\"_Import\" type=\"object\" class=\"btn-primary\"/>\n   19:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   20                      </footer>\n   21                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\module\\wizard\\base_language_install.py:\n   16          'state':fields.selection([('init','init'),('done','done')], 'Status', readonly=True),\n   17      }\n   18:     _defaults = {\n   19          'state': 'init',\n   20          'overwrite': False\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\module\\wizard\\base_language_install_view.xml:\n   19                      <footer states=\"init\">\n   20                          <button name=\"lang_install\" string=\"Load\" type=\"object\" class=\"btn-primary\"/>\n   21:                         <button special=\"cancel\" string=\"Cancel\" class=\"btn-default\"/>\n   22                      </footer>\n   23                      <footer states=\"done\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\module\\wizard\\base_module_update.py:\n    9      updated = fields.Integer('Number of modules updated', readonly=True)\n   10      added = fields.Integer('Number of modules added', readonly=True)\n   11:     state = fields.Selection([('init', 'init'), ('done', 'done')], 'Status', readonly=True, default='init')\n   12  \n   13      @api.one\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\module\\wizard\\base_module_update_view.xml:\n   20                          <div states=\"init\">\n   21                              <button name=\"update_module\" string=\"Update\" type=\"object\" class=\"btn-primary\"/>\n   22:                             <button special=\"cancel\" string=\"Cancel\" class=\"btn-default\"/>\n   23                          </div>\n   24                          <div states=\"done\">\n   25                              <button name=\"action_module_open\" string=\"Open Apps\" type=\"object\" class=\"btn-primary\"/>\n   26:                             <button special=\"cancel\" string=\"Close\" class=\"btn-default\"/>\n   27                          </div>\n   28                      </footer>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\module\\wizard\\base_module_upgrade.py:\n   34                                  <footer>\n   35                                      <button name=\"config\" string=\"Start Configuration\" type=\"object\" class=\"btn-primary\"/>\n   36:                                     <button special=\"cancel\" string=\"Close\" class=\"btn-default\"/>\n   37                                  </footer>\n   38                               </form>'''\n   ..\n   46          return ids\n   47  \n   48:     def default_get(self, cr, uid, fields, context=None):\n   49          mod_obj = self.pool.get('ir.module.module')\n   50          ids = self.get_module_list(cr, uid, context=context)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\module\\wizard\\base_module_upgrade_view.xml:\n   15                      <footer>\n   16                          <button name=\"upgrade_module\" string=\"Confirm\" type=\"object\" class=\"btn-primary\"/>\n   17:                         <button string=\"Cancel\" class=\"btn-default\" name=\"upgrade_module_cancel\" type=\"object\"/>\n   18                      </footer>\n   19                  </form>\n   ..\n   48                      <footer>\n   49                          <button name=\"config\" string=\"Start configuration\" type=\"object\" class=\"btn-primary\"/>\n   50:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   51                      </footer>\n   52                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\module\\wizard\\base_update_translations.py:\n   33          return {'type': 'ir.actions.act_window_close'}\n   34  \n   35:     def default_get(self, cr, uid, fields, context=None):\n   36          if context is None:\n   37              context = {}\n   38:         res = super(base_update_translations, self).default_get(cr, uid, fields, context=context)\n   39          \n   40          if context.get('active_model') != \"res.lang\":\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\module\\wizard\\base_update_translations_view.xml:\n   12                      <footer>\n   13                          <button name=\"act_update\" string=\"Update\" type=\"object\" class=\"btn-primary\"/>\n   14:                         <button special=\"cancel\" string=\"Cancel\" type=\"object\" class=\"btn-default\"/>\n   15                      </footer>\n   16                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\report\\corporate_odt_header.xml:\n    9  	</office:font-face-decls>\n   10  	<office:styles>\n   11: 		<style:default-style style:family=\"graphic\">\n   12  			<style:graphic-properties draw:shadow-offset-x=\"0.3cm\" draw:shadow-offset-y=\"0.3cm\" draw:start-line-spacing-horizontal=\"0.283cm\" draw:start-line-spacing-vertical=\"0.283cm\" draw:end-line-spacing-horizontal=\"0.283cm\" draw:end-line-spacing-vertical=\"0.283cm\" style:flow-with-text=\"true\"/>\n   13  			<style:paragraph-properties style:text-autospace=\"ideograph-alpha\" style:line-break=\"strict\" style:writing-mode=\"lr-tb\" style:font-independent-line-spacing=\"false\">\n   ..\n   15  			</style:paragraph-properties>\n   16  			<style:text-properties style:use-window-font-color=\"true\" fo:font-size=\"12pt\" fo:language=\"en\" fo:country=\"IN\" style:letter-kerning=\"true\" style:font-size-asian=\"10.5pt\" style:language-asian=\"zxx\" style:country-asian=\"none\" style:font-size-complex=\"12pt\" style:language-complex=\"zxx\" style:country-complex=\"none\"/>\n   17: 		</style:default-style>\n   18: 		<style:default-style style:family=\"paragraph\">\n   19  			<style:paragraph-properties fo:hyphenation-ladder-count=\"no-limit\" style:text-autospace=\"ideograph-alpha\" style:punctuation-wrap=\"hanging\" style:line-break=\"strict\" style:tab-stop-distance=\"1.251cm\" style:writing-mode=\"page\"/>\n   20  			<style:text-properties style:use-window-font-color=\"true\" style:font-name=\"Times\" fo:font-size=\"12pt\" fo:language=\"en\" fo:country=\"IN\" style:letter-kerning=\"true\" style:font-name-asian=\"DejaVu Sans\" style:font-size-asian=\"10.5pt\" style:language-asian=\"zxx\" style:country-asian=\"none\" style:font-name-complex=\"DejaVu Sans\" style:font-size-complex=\"12pt\" style:language-complex=\"zxx\" style:country-complex=\"none\" fo:hyphenate=\"false\" fo:hyphenation-remain-char-count=\"2\" fo:hyphenation-push-char-count=\"2\"/>\n   21: 		</style:default-style>\n   22: 		<style:default-style style:family=\"table\">\n   23  			<style:table-properties table:border-model=\"collapsing\"/>\n   24: 		</style:default-style>\n   25: 		<style:default-style style:family=\"table-row\">\n   26  			<style:table-row-properties fo:keep-together=\"always\"/>\n   27: 		</style:default-style>\n   28  		<style:style style:name=\"Standard\" style:family=\"paragraph\" style:class=\"text\"/>\n   29  			<style:style style:name=\"Text_20_body\" style:display-name=\"Text body\" style:family=\"paragraph\" style:parent-style-name=\"Standard\" style:class=\"text\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\report\\corporate_sxw_header.xml:\n    9      </office:font-decls>\n   10      <office:styles>\n   11:         <style:default-style style:family=\"graphics\">\n   12              <style:properties draw:shadow-offset-x=\"0.3cm\" draw:shadow-offset-y=\"0.3cm\" draw:start-line-spacing-horizontal=\"0.283cm\" draw:start-line-spacing-vertical=\"0.283cm\" draw:end-line-spacing-horizontal=\"0.283cm\" draw:end-line-spacing-vertical=\"0.283cm\" style:text-autospace=\"ideograph-alpha\" style:line-break=\"strict\" style:writing-mode=\"lr-tb\" style:font-independent-line-spacing=\"false\" style:use-window-font-color=\"true\" fo:font-size=\"12pt\" fo:language=\"en\" fo:country=\"IN\" style:letter-kerning=\"true\" style:font-size-asian=\"10.5pt\" style:language-asian=\"zxx\" style:country-asian=\"none\" style:font-size-complex=\"12pt\" style:language-complex=\"zxx\" style:country-complex=\"none\">\n   13                  <style:tab-stops/>\n   14              </style:properties>\n   15:         </style:default-style>\n   16:         <style:default-style style:family=\"paragraph\">\n   17              <style:properties fo:hyphenation-ladder-count=\"no-limit\" style:text-autospace=\"ideograph-alpha\" style:punctuation-wrap=\"hanging\" style:line-break=\"strict\" style:tab-stop-distance=\"1.251cm\" style:writing-mode=\"page\" style:use-window-font-color=\"true\" style:font-name=\"Times\" fo:font-size=\"12pt\" fo:language=\"en\" fo:country=\"IN\" style:letter-kerning=\"true\" style:font-name-asian=\"DejaVu Sans\" style:font-size-asian=\"10.5pt\" style:language-asian=\"zxx\" style:country-asian=\"none\" style:font-name-complex=\"DejaVu Sans\" style:font-size-complex=\"12pt\" style:language-complex=\"zxx\" style:country-complex=\"none\" fo:hyphenate=\"false\" fo:hyphenation-remain-char-count=\"2\" fo:hyphenation-push-char-count=\"2\"/>\n   18:         </style:default-style>\n   19:         <style:default-style style:family=\"table\">\n   20              <style:properties table:border-model=\"collapsing\"/>\n   21:         </style:default-style>\n   22:         <style:default-style style:family=\"table-row\">\n   23              <style:properties fo:keep-together=\"always\"/>\n   24:         </style:default-style>\n   25          <style:style style:name=\"Standard\" style:family=\"paragraph\" style:class=\"text\"/>\n   26          <style:style style:name=\"Text body\" style:family=\"paragraph\" style:parent-style-name=\"Standard\" style:class=\"text\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\res\\ir_property.py:\n   33          'name': fields.char('Name', select=1),\n   34  \n   35:         'res_id': fields.char('Resource', help=\"If not set, acts as a default value for new resources\", select=1),\n   36          'company_id': fields.many2one('res.company', 'Company', select=1),\n   37          'fields_id': fields.many2one('ir.model.fields', 'Field', ondelete='cascade', required=True, select=1),\n   ..\n   60      }\n   61  \n   62:     _defaults = {\n   63          'type': 'many2one',\n   64      }\n   ..\n   76                  type_ = prop.type\n   77              else:\n   78:                 type_ = self._defaults['type']\n   79  \n   80          field = TYPE2FIELD.get(type_)\n   ..\n  151          if not cid:\n  152              company = self.pool.get('res.company')\n  153:             cid = company._company_default_get(cr, uid, model, res[0], context=context)\n  154  \n  155          return [('fields_id', '=', res[0]), ('company_id', 'in', [cid, False])]\n  ...\n  168              return dict.fromkeys(ids, False)\n  169  \n  170:         # retrieve the values for the given ids and the default value, too\n  171          refs = {('%s,%s' % (model, id)): id for id in ids}\n  172          refs[False] = False\n  ...\n  182                  result[id] = self.get_by_record(prop)\n  183  \n  184:         # set the default value to the ids that are not in result\n  185:         default_value = result.pop(False, False)\n  186          for id in ids:\n  187:             result.setdefault(id, default_value)\n  188  \n  189          return result\n  ...\n  204              raise Exception()\n  205  \n  206:         # retrieve the default value for the field\n  207:         default_value = clean(self.get(name, model))\n  208  \n  209          # retrieve the properties corresponding to the given record ids\n  210          self._cr.execute(\"SELECT id FROM ir_model_fields WHERE name=%s AND model=%s\", (name, model))\n  211          field_id = self._cr.fetchone()[0]\n  212:         company_id = self.env.context.get('force_company') or self.env['res.company']._company_default_get(model, field_id).id\n  213          refs = {('%s,%s' % (model, id)): id for id in values}\n  214          props = self.search([\n  ...\n  222              id = refs.pop(prop.res_id)\n  223              value = clean(values[id])\n  224:             if value == default_value:\n  225                  prop.unlink()\n  226              elif value != clean(prop.get_by_record(prop)):\n  ...\n  230          for ref, id in refs.iteritems():\n  231              value = clean(values[id])\n  232:             if value != default_value:\n  233                  self.create({\n  234                      'fields_id': field_id,\n  ...\n  243      def search_multi(self, name, model, operator, value):\n  244          \"\"\" Return a domain for the records that match the given condition. \"\"\"\n  245:         default_matches = False\n  246          include_zero = False\n  247  \n  ...\n  255                  # if searching properties not set, search those not in those set\n  256                  if value is False:\n  257:                     default_matches = True\n  258              elif operator in ('!=', '<=', '<', '>', '>='):\n  259                  value = makeref(value)\n  ...\n  301                  good_ids.append(int(res_id))\n  302              else:\n  303:                 default_matches = True\n  304  \n  305          if include_zero:\n  306              return [('id', 'not in', good_ids)]\n  307:         elif default_matches:\n  308              # exclude all records with a property that does not match\n  309              all_ids = []\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\res\\res_bank.py:\n   27      phone = fields.Char()\n   28      fax = fields.Char()\n   29:     active = fields.Boolean(default=True)\n   30      bic = fields.Char('Bank Identifier Code', select=True, help=\"Sometimes called BIC or Swift.\")\n   31  \n   ..\n   65      sequence = fields.Integer()\n   66      currency_id = fields.Many2one('res.currency', string='Currency')\n   67:     company_id = fields.Many2one('res.company', 'Company', default=lambda self: self.env.user.company_id, ondelete='cascade')\n   68  \n   69      _sql_constraints = [\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\res\\res_company.py:\n   60          'partner_id': fields.many2one('res.partner', 'Partner', required=True),\n   61          'rml_header': fields.text('RML Header', required=True),\n   62:         'rml_header1': fields.char('Company Tagline', help=\"Appears by default on the top right corner of your printed documents (report header).\"),\n   63          'rml_header2': fields.text('RML Internal Header', required=True),\n   64          'rml_header3': fields.text('RML Internal Header for Landscape Reports', required=True),\n   ..\n   67          'custom_footer': fields.boolean('Custom Footer', help=\"Check this to define the report footer manually.  Otherwise it will be filled in automatically.\"),\n   68          'font': fields.many2one('res.font', string=\"Font\", domain=[('mode', 'in', ('Normal', 'Regular', 'all', 'Book'))],\n   69:             help=\"Set the font into the report header, it will be used as default font in the RML reports of the user company\"),\n   70          'logo': fields.related('partner_id', 'image', string=\"Logo\", type=\"binary\"),\n   71          # logo_web: do not store in attachments, since the image is retrieved in SQL for\n   ..\n  117          \n  118      def onchange_font_name(self, cr, uid, ids, font, rml_header, rml_header2, rml_header3, context=None):\n  119:         \"\"\" To change default header style of all <para> and drawstring. \"\"\"\n  120  \n  121          def _change_header(header,font):\n  122:             \"\"\" Replace default fontname use in header and setfont tag \"\"\"\n  123              \n  124:             default_para = re.sub('fontName.?=.?\".*\"', 'fontName=\"%s\"'% font, header)\n  125:             return re.sub('(<setFont.?name.?=.?)(\".*?\")(.)', '\\g<1>\"%s\"\\g<3>'% font, default_para)\n  126          \n  127          if not font:\n  ...\n  157  \n  158      @api.returns('self')\n  159:     def _company_default_get(self, cr, uid, object=False, field=False, context=None):\n  160          \"\"\"\n  161:         Returns the default company (the user's company)\n  162          The 'object' and 'field' arguments are ignored but left here for\n  163          backward compatibility and potential override.\n  ...\n  228      <frame id=\"first\" x1=\"28.0\" y1=\"28.0\" width=\"%s\" height=\"%s\"/>\n  229      <stylesheet>\n  230:        <!-- Set here the default font to use for all <para> tags -->\n  231         <paraStyle name='Normal' fontName=\"DejaVuSans\"/>\n  232      </stylesheet>\n  ...\n  240          <stroke color=\"#000000\"/>\n  241          <lines>%s</lines>\n  242:         <!-- Set here the default font to use for all <drawString> tags -->\n  243          <!-- don't forget to change the 2 other occurence of <setFont> above if needed --> \n  244          <setFont name=\"DejaVuSans\" size=\"8\"/>\n  ...\n  266          <frame id=\"first\" x1=\"1.3cm\" y1=\"3.0cm\" height=\"%s\" width=\"19.0cm\"/>\n  267           <stylesheet>\n  268:             <!-- Set here the default font to use for all <para> tags -->\n  269              <paraStyle name='Normal' fontName=\"DejaVuSans\"/>\n  270              <paraStyle name=\"main_footer\" fontSize=\"8.0\" alignment=\"CENTER\"/>\n  ...\n  272           </stylesheet>\n  273          <pageGraphics>\n  274:             <!-- Set here the default font to use for all <drawString> tags -->\n  275              <setFont name=\"DejaVuSans\" size=\"8\"/>\n  276              <!-- You Logo - Change X,Y,Width and Height -->\n  ...\n  320          return self.pool.get(\"res.font\").font_scan(cr, uid, context=context)\n  321  \n  322:     _defaults = {\n  323          'currency_id': _get_euro,\n  324          'rml_paper_format': 'a4',\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\res\\res_config.py:\n   96  \n   97      def next(self, cr, uid, ids, context=None):\n   98:         \"\"\" Returns the next todo action to execute (using the default\n   99          sort order)\n  100          \"\"\"\n  ...\n  118          ``cancel`` should be overloaded instead of ``action_skip``. As with\n  119          ``execute``, if it returns an action dictionary that action is\n  120:         executed in stead of the default (going to the next configuration item)\n  121  \n  122:         The default implementation is a NOOP.\n  123  \n  124:         ``cancel`` is also called by the default implementation of\n  125          ``action_cancel``.\n  126          \"\"\"\n  ...\n  334                      self.already_installed(cr, uid, context))\n  335  \n  336:     def default_get(self, cr, uid, fields_list, context=None):\n  337:         ''' If an addon is already installed, check it by default\n  338          '''\n  339:         defaults = super(res_config_installer, self).default_get(\n  340              cr, uid, fields_list, context=context)\n  341  \n  342:         return dict(defaults,\n  343                      **dict.fromkeys(\n  344                          self.already_installed(cr, uid, context=context),\n  ...\n  378  class res_config_settings(osv.osv_memory, res_config_module_installation_mixin):\n  379      \"\"\" Base configuration wizard for application settings.  It provides support for setting\n  380:         default values, assigning groups to employee users, and installing modules.\n  381          To make such a 'settings' wizard, define a model like::\n  382  \n  ...\n  385                  _inherit = 'res.config.settings'\n  386                  _columns = {\n  387:                     'default_foo': fields.type(..., default_model='my.model'),\n  388                      'group_bar': fields.boolean(..., group='base.group_user', implied_group='my.group'),\n  389                      'module_baz': fields.boolean(...),\n  ...\n  393          The method ``execute`` provides some support based on a naming convention:\n  394  \n  395:         *   For a field like 'default_XXX', ``execute`` sets the (global) default value of\n  396:             the field 'XXX' in the model named by ``default_model`` to the field's value.\n  397  \n  398          *   For a boolean field like 'group_XXX', ``execute`` adds/removes 'implied_group'\n  399              to/from the implied groups of 'group', depending on the field's value.\n  400:             By default 'group' is the group Employee.  Groups are given by their xml id.\n  401              The attribute 'group' may contain several xml ids, separated by commas.\n  402  \n  ...\n  404              ``execute`` adds/removes 'implied_group' to/from the implied groups of 'group', \n  405              depending on the field's value.\n  406:             By default 'group' is the group Employee.  Groups are given by their xml id.\n  407              The attribute 'group' may contain several xml ids, separated by commas.\n  408  \n  ...\n  418              of those fields.\n  419  \n  420:         The method ``default_get`` retrieves values that reflect the current status of the\n  421:         fields like 'default_XXX', 'group_XXX' and 'module_XXX'.  It also invokes all methods\n  422:         with a name that starts with 'get_default_'; such methods can be defined to provide\n  423          current values for other fields.\n  424      \"\"\"\n  ...\n  478          \"\"\" return a dictionary with the fields classified by category::\n  479  \n  480:                 {   'default': [('default_foo', 'model', 'foo'), ...],\n  481                      'group':   [('group_bar', [browse_group], browse_implied_group), ...],\n  482                      'module':  [('module_baz', browse_module), ...],\n  ...\n  490              return ir_model_data.get_object(cr, uid, mod, xml, context=context)\n  491  \n  492:         defaults, groups, modules, others = [], [], [], []\n  493          for name, field in self._columns.items():\n  494:             if name.startswith('default_') and hasattr(field, 'default_model'):\n  495:                 defaults.append((name, field.default_model, name[8:]))\n  496              elif name.startswith('group_') and (isinstance(field, fields.boolean) or isinstance(field, fields.selection)) \\\n  497                   and hasattr(field, 'implied_group'):\n  ...\n  505                  others.append(name)\n  506  \n  507:         return {'default': defaults, 'group': groups, 'module': modules, 'other': others}\n  508  \n  509:     def default_get(self, cr, uid, fields, context=None):\n  510          ir_values = self.pool['ir.values']\n  511          classified = self._get_classified_fields(cr, uid, context)\n  512  \n  513:         res = super(res_config_settings, self).default_get(cr, uid, fields, context)\n  514  \n  515:         # defaults: take the corresponding default value they set\n  516:         for name, model, field in classified['default']:\n  517:             value = ir_values.get_default(cr, uid, model, field)\n  518              if value is not None:\n  519                  res[name] = value\n  ...\n  529                  res[name] = int(res[name])\n  530  \n  531:         # other fields: call all methods that start with 'get_default_'\n  532          for method in dir(self):\n  533:             if method.startswith('get_default_'):\n  534                  res.update(getattr(self, method)(cr, uid, fields, context))\n  535  \n  ...\n  552          config = self.browse(cr, uid, ids[0], context)\n  553  \n  554:         # default values fields\n  555:         for name, model, field in classified['default']:\n  556:             ir_values.set_default(cr, SUPERUSER_ID, model, field, config[name])\n  557  \n  558          # group fields: modify group / implied groups\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\res\\res_config.xml:\n   11                      <footer>\n   12                          <button name=\"action_next\" type=\"object\" string=\"Apply\" class=\"btn-primary\"/>\n   13:                         <button name=\"action_skip\" type=\"object\" special=\"cancel\" string=\"Cancel\" class=\"btn-default\"/>\n   14                      </footer>\n   15                  </form>\n   ..\n   25                      <footer>\n   26                          <button name=\"action_next\" type=\"object\" string=\"Install Apps\" class=\"btn-primary\"/>\n   27:                         <button string=\"Skip\" class=\"btn-default\" special=\"cancel\" />\n   28                      </footer>\n   29                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\res\\res_country.py:\n   54              'The code of the country must be unique !')\n   55      ]\n   56:     _defaults = {\n   57          'address_format': \"%(street)s\\n%(street2)s\\n%(city)s %(state_code)s %(zip)s\\n%(country_name)s\",\n   58      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\res\\res_currency.py:\n   68          'position': fields.selection([('after','After Amount'),('before','Before Amount')], 'Symbol Position', help=\"Determines where the currency symbol should be placed after or before the amount.\")\n   69      }\n   70:     _defaults = {\n   71          'active': 1,\n   72          'position' : 'after',\n   ..\n  105          return [(x['id'], tools.ustr(x['name'])) for x in reads]\n  106  \n  107:     def copy(self, cr, uid, id, default=None, context=None):\n  108          if context is None:\n  109              context = {}\n  110:         if not default:\n  111:             default = {}\n  112:         default.update(name=_(\"%s (copy)\")\n  113                         % (self.browse(cr, uid, id, context=context).name))\n  114          return super(res_currency, self).copy(\n  115:             cr, uid, id, default=default, context=context)\n  116  \n  117      @api.v8\n  ...\n  273          'company_id': fields.many2one('res.company', 'Company')\n  274      }\n  275:     _defaults = {\n  276          'name': lambda *a: time.strftime('%Y-%m-%d 00:00:00'),\n  277      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\res\\res_currency_view.xml:\n   30             view_id='view_currency_rate_tree'\n   31             domain=\"[('currency_id','=', active_id)]\"\n   32:            context=\"{'default_currency_id': active_id}\"\n   33             res_model=\"res.currency.rate\"/>\n   34  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\res\\res_font.py:\n   20  _logger = logging.getLogger(__name__)\n   21  \n   22: # Alternatives for the [broken] builtin PDF fonts. Default order chosen to match\n   23  # the pre-v8 mapping from openerp.report.render.rml2pdf.customfonts.CustomTTFonts.\n   24  # Format: [ (BuiltinFontFamily, mode, [AlternativeFontName, ...]), ...]\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\res\\res_lang.py:\n   26  \n   27          This method is called from openerp/addons/base/base_data.xml to load\n   28:         some language and set it as the default for every partners. The\n   29          language is set via tools.config by the RPC 'create' method on the\n   30          'db' object. This is a fragile solution and something else should be\n   ..\n   39              self.load_lang(cr, uid, lang)\n   40          ir_values_obj = self.pool.get('ir.values')\n   41:         default_value = ir_values_obj.get(cr, uid, 'default', False, ['res.partner'])\n   42:         if not default_value:\n   43:             ir_values_obj.set(cr, uid, 'default', False, 'lang', ['res.partner'], lang)\n   44          return True\n   45  \n   ..\n   56                  continue\n   57          if fail:\n   58:             lc = locale.getdefaultlocale()[0]\n   59:             msg = 'Unable to get information for locale %s. Information from the default locale (%s) have been used.'\n   60              _logger.warning(msg, lang, lc)\n   61  \n   ..\n  122          return True\n  123  \n  124:     def _get_default_date_format(self, cursor, user, context=None):\n  125          return '%m/%d/%Y'\n  126  \n  127:     def _get_default_time_format(self, cursor, user, context=None):\n  128          return '%H:%M:%S'\n  129  \n  ...\n  141          'thousands_sep':fields.char('Thousands Separator'),\n  142      }\n  143:     _defaults = {\n  144          'active': 1,\n  145          'translatable': 0,\n  146          'direction': 'ltr',\n  147:         'date_format':_get_default_date_format,\n  148:         'time_format':_get_default_time_format,\n  149          'grouping': '[]',\n  150          'decimal_point': '.',\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\res\\res_partner.py:\n   72      def name_get(self, cr, uid, ids, context=None):\n   73          \"\"\" Return the categories' display name, including their direct\n   74:             parent by default.\n   75  \n   76              If ``context['partner_category_display']`` is ``'short'``, the short\n   77              version of the category name (without the direct parent) is used.\n   78:             The default is the long version.\n   79          \"\"\"\n   80          if not isinstance(ids, list):\n   ..\n  126          (osv.osv._check_recursion, 'Error ! You can not create recursive tags.', ['parent_id'])\n  127      ]\n  128:     _defaults = {\n  129          'active': 1,\n  130      }\n  ...\n  237          'street': fields.char('Street'),\n  238          'street2': fields.char('Street2'),\n  239:         'zip': fields.char('Zip', size=24, change_default=True),\n  240          'city': fields.char('City'),\n  241          'state_id': fields.many2one(\"res.country.state\", 'State', ondelete='restrict'),\n  ...\n  272      image = openerp.fields.Binary(\"Image\", attachment=True,\n  273          help=\"This field holds the image used as avatar for this contact, limited to 1024x1024px\",\n  274:         default=lambda self: self._get_default_image(False, True))\n  275      image_medium = openerp.fields.Binary(\"Medium-sized image\",\n  276          compute='_compute_images', inverse='_inverse_image_medium', store=True, attachment=True,\n  ...\n  299  \n  300      @api.model\n  301:     def _default_category(self):\n  302          category_id = self.env.context.get('category_id', False)\n  303          return [category_id] if category_id else False\n  304  \n  305      @api.model\n  306:     def _get_default_image(self, is_company, colorize=False):\n  307          if getattr(threading.currentThread(), 'testing', False) or self.env.context.get('install_mode'):\n  308              return False\n  ...\n  328  \n  329      @api.model\n  330:     def _default_company(self):\n  331:         return self.env['res.company']._company_default_get('res.partner')\n  332  \n  333:     _defaults = {\n  334          'active': True,\n  335          'lang': api.model(lambda self: self.env.lang),\n  336          'tz': api.model(lambda self: self.env.context.get('tz', False)),\n  337          'customer': True,\n  338:         'category_id': _default_category,\n  339:         'company_id': _default_company,\n  340          'color': 0,\n  341          'is_company': False,\n  ...\n  354  \n  355      @api.one\n  356:     def copy(self, default=None):\n  357:         default = dict(default or {})\n  358:         default['name'] = _('%s (copy)') % self.name\n  359:         return super(res_partner, self).copy(default)\n  360  \n  361      def onchange_parent_id(self, cr, uid, ids, parent_id, context=None):\n  ...\n  467          just as if those were all modeled as fields.related to the parent \"\"\"\n  468          # 1. From UPSTREAM: sync from parent\n  469:         if update_values.get('parent_id') or update_values.get('type', 'contact'):  # TDE/ fp change to check, get default value not sure\n  470              # 1a. Commercial fields: sync if parent changed\n  471              if update_values.get('parent_id'):\n  ...\n  549          # function field not correctly triggered at create -> remove me when\n  550          # migrating to the new API\n  551:         c_type = vals.get('company_type', self._context.get('default_company_type'))\n  552:         is_company = vals.get('is_company', self._context.get('default_is_company'))\n  553          if c_type:\n  554              vals['is_company'] = c_type == 'company'\n  ...\n  611          \"\"\" Supported syntax:\n  612              - 'Raoul <raoul@grosbedon.fr>': will find name and email address\n  613:             - otherwise: default, everything is set as the name \"\"\"\n  614          emails = tools.email_split(text.replace(' ',','))\n  615          if emails:\n  ...\n  733          through descendants within company boundaries (stop at entities flagged ``is_company``)\n  734          then continuing the search at the ancestors that are within the same company boundaries.\n  735:         Defaults to partners of type ``'default'`` when the exact type is not found, or to the\n  736:         provided partner itself if no type ``'default'`` is found either. \"\"\"\n  737          adr_pref = set(adr_pref or [])\n  738          if 'contact' not in adr_pref:\n  ...\n  763                  current_partner = current_partner.parent_id\n  764  \n  765:         # default to type 'contact' or the partner itself\n  766:         default = result.get('contact', ids and ids[0] or False)\n  767          for adr_type in adr_pref:\n  768:             result[adr_type] = result.get(adr_type) or default\n  769          return result\n  770  \n  ...\n  789  \n  790          :param address: browse record of the res.partner to format\n  791:         :returns: the address formatted in a display that fit its country habits (or the default ones\n  792              if not country is specified)\n  793          :rtype: string\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\res\\res_partner_view.xml:\n   80                          <field name=\"company_type\" options=\"{'horizontal': true}\" class=\"oe_edit_only\" widget=\"radio\"/>\n   81                          <h1>\n   82:                             <field name=\"name\" default_focus=\"1\" placeholder=\"Name\" attrs=\"{'required' : [('type', '=', 'contact')]}\"/>\n   83                          </h1>\n   84                          <field name=\"parent_id\"\n   85                              placeholder=\"Company\"\n   86:                             domain=\"[('is_company', '=', True)]\" context=\"{'default_is_company': True}\"\n   87                              attrs=\"{'invisible': [('is_company','=', True)]}\"/>\n   88                      </div>\n   ..\n  159                              options=\"{'horizontal': true}\"/>\n  160                          <h1>\n  161:                             <field name=\"name\" default_focus=\"1\" placeholder=\"Name\" attrs=\"{'required' : [('type', '=', 'contact')]}\"/>\n  162                          </h1>\n  163                          <div class=\"o_row\">\n  164                              <field name=\"parent_id\"\n  165                                  placeholder=\"Company\"\n  166:                                 domain=\"[('is_company', '=', True)]\" context=\"{'default_is_company': True, 'default_supplier': supplier, 'default_customer': customer}\"\n  167                                  attrs=\"{'invisible': [('is_company','=', True),('parent_id', '=', False)]}\"\n  168                                  on_change=\"onchange_parent_id(parent_id)\"/>\n  ...\n  212                      <notebook colspan=\"4\">\n  213                          <page string=\"Contacts &amp; Addresses\" autofocus=\"autofocus\">\n  214:                             <field name=\"child_ids\" mode=\"kanban\" context=\"{'default_parent_id': active_id, 'default_street': street, 'default_street2': street2, 'default_city': city, 'default_state_id': state_id, 'default_zip': zip, 'default_country_id': country_id, 'default_supplier': supplier, 'default_customer': customer, 'default_lang': lang,}\">\n  215                                  <kanban>\n  216                                      <field name=\"color\"/>\n  ...\n  314                                      <field name=\"customer\"/>\n  315                                      <field name=\"user_id\" \n  316:                                         context=\"{'default_groups_ref': ['base.group_partner_manager']}\"/>\n  317                                  </group>\n  318                                  <group string=\"Purchase\" name=\"purchase\">\n  ...\n  435              <field name=\"view_type\">form</field>\n  436              <field name=\"view_mode\">kanban,tree,form</field>\n  437:             <field name=\"context\">{\"search_default_customer\":1}</field>\n  438              <field name=\"search_view_id\" ref=\"view_res_partner_filter\"/>\n  439              <field name=\"help\" type=\"html\">\n  ...\n  475              <field name=\"view_mode\">kanban,tree,form</field>\n  476              <field name=\"domain\">[]</field>\n  477:             <field name=\"context\">{'default_customer':1, 'search_default_customer':1}</field>\n  478              <field name=\"filter\" eval=\"True\"/>\n  479              <field name=\"help\" type=\"html\">\n  ...\n  495              <field name=\"domain\">[]</field>\n  496              <field name=\"view_mode\">kanban,tree,form</field>\n  497:             <field name=\"context\">{'search_default_supplier': 1,'default_customer': 0,'default_supplier': 1}</field>\n  498              <field name=\"filter\" eval=\"True\"/>\n  499              <field name=\"help\" type=\"html\">\n  ...\n  514              <field name=\"view_type\">form</field>\n  515              <field name=\"domain\">[('employee','=',1)]</field>\n  516:             <field name=\"context\">{'default_customer':0, 'default_supplier':0 , 'default_employee':1}</field>\n  517              <field name=\"filter\" eval=\"True\"/>\n  518          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\res\\res_request.py:\n   17          'priority': fields.integer('Priority'),\n   18      }\n   19:     _defaults = {\n   20          'priority': 5,\n   21      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\res\\res_users.py:\n  107          return super(res_groups, self).search(cr, uid, args, offset, limit, order, context, count)\n  108  \n  109:     def copy(self, cr, uid, id, default=None, context=None):\n  110          group_name = self.read(cr, uid, [id], ['name'])[0]['name']\n  111:         default.update({'name': _('%s (copy)')%group_name})\n  112:         return super(res_groups, self).copy(cr, uid, id, default, context)\n  113  \n  114      def write(self, cr, uid, ids, vals, context=None):\n  ...\n  248          if not uid2:\n  249              uid2 = uid\n  250:         # Use read() to compute default company, and pass load=_classic_write to\n  251          # avoid useless name_get() calls. This will avoid prefetching fields\n  252:         # while computing default values for new db columns, as the\n  253          # db backend may not be fully initialized yet.\n  254          user_data = self.pool['res.users'].read(cr, uid, uid2, ['company_id'],\n  ...\n  276          return result\n  277  \n  278:     _defaults = {\n  279          'password': '',\n  280          'active': True,\n  ...\n  370                  if user.partner_id.company_id and user.partner_id.company_id.id != values['company_id']: \n  371                      user.partner_id.write({'company_id': user.company_id.id})\n  372:             # clear default ir values when company changes\n  373:             self.pool['ir.values'].get_defaults_dict.clear_cache(self.pool['ir.values'])\n  374          # clear caches linked to the users\n  375          self.pool['ir.model.access'].call_cache_clearing_methods(cr)\n  ...\n  407          return self.name_get(cr, user, ids, context=context)\n  408  \n  409:     def copy(self, cr, uid, id, default=None, context=None):\n  410          user2copy = self.read(cr, uid, [id], ['login','name'])[0]\n  411:         default = dict(default or {})\n  412:         if ('name' not in default) and ('partner_id' not in default):\n  413:             default['name'] = _(\"%s (copy)\") % user2copy['name']\n  414:         if 'login' not in default:\n  415:             default['login'] = _(\"%s (copy)\") % user2copy['login']\n  416:         return super(res_users, self).copy(cr, uid, id, default, context)\n  417  \n  418      @tools.ormcache('uid')\n  ...\n  451          # only create new records to avoid any side-effect on concurrent transactions\n  452          # extra records will be deleted by the periodical garbage collection\n  453:         self.pool['res.users.log'].create(cr, uid, {}) # populated by defaults\n  454  \n  455      def _login(self, db, login, password):\n  ...\n  504              # empty passwords disallowed for obvious security reasons\n  505              raise openerp.exceptions.AccessDenied()\n  506:         if self.__uid_cache.setdefault(db, {}).get(uid) == passwd:\n  507              return\n  508          cr = self.pool.cursor()\n  ...\n  837          for g in self.browse(cr, uid, gids, context):\n  838              if g.category_id:\n  839:                 by_app.setdefault(g.category_id, []).append(g)\n  840              else:\n  841                  others.append(g)\n  ...\n  885          return values1\n  886  \n  887:     def default_get(self, cr, uid, fields, context=None):\n  888          group_fields, fields = partition(is_reified_group, fields)\n  889          fields1 = (fields + ['groups_id']) if group_fields else fields\n  890:         values = super(users_view, self).default_get(cr, uid, fields1, context)\n  891          self._add_reified_groups(group_fields, values)\n  892  \n  893:         # add \"default_groups_ref\" inside the context to set default value for group_id with xml values\n  894:         if 'groups_id' in fields and isinstance(context.get(\"default_groups_ref\"), list):\n  895              groups = []\n  896              ir_model_data = self.pool.get('ir.model.data')\n  897:             for group_xml_id in context[\"default_groups_ref\"]:\n  898                  group_split = group_xml_id.split('.')\n  899                  if len(group_split) != 2:\n  900:                     raise UserError(_('Invalid context default_groups_ref value (model.name_id) : \"%s\"') % group_xml_id)\n  901                  try:\n  902                      temp, group_id = ir_model_data.get_object_reference(cr, uid, group_split[0], group_split[1])\n  ...\n  985      }\n  986  \n  987:     def _default_user_ids(self, cr, uid, context=None):\n  988          if context is None:\n  989              context = {}\n  ...\n  995          ]\n  996  \n  997:     _defaults = {\n  998:         'user_ids': _default_user_ids,\n  999      }\n 1000  \n ....\n 1027          'new_passwd': fields.char('New Password'),\n 1028      }\n 1029:     _defaults = {\n 1030          'new_passwd': '',\n 1031      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\res\\res_users_view.xml:\n   12                      <footer>\n   13                          <button string=\"Change Password\" name=\"change_password_button\" type=\"object\" class=\"btn-primary\"/>\n   14:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   15                      </footer>\n   16                  </form>\n   ..\n   61                      <notebook>\n   62                          <page string=\"Users\">\n   63:                             <field name=\"users\" context=\"{'search_default_no_share':1}\"/>\n   64                          </page>\n   65                          <page string=\"Inherited\">\n   ..\n  118              <field name=\"res_model\">res.groups</field>\n  119              <field name=\"view_type\">form</field>\n  120:             <field name=\"context\">{'search_default_no_share': 1}</field>\n  121:             <field name=\"help\">A group is a set of functional areas that will be assigned to the user in order to give them access and rights to specific applications and tasks in the system. You can create custom groups or edit the ones existing by default in order to customize the view of the menu that users will be able to see. Whether they can have a read, write, create and delete access right can be managed from here.</field>\n  122          </record>\n  123          <menuitem action=\"action_res_groups\" id=\"menu_action_res_groups\" parent=\"base.menu_users\" groups=\"base.group_no_one\" sequence=\"3\"/>\n  ...\n  261              <field name=\"view_id\" ref=\"view_users_tree\"/>\n  262              <field name=\"search_view_id\" ref=\"view_users_search\"/>\n  263:             <field name=\"context\">{'search_default_no_share': 1}</field>\n  264              <field name=\"help\">Create and manage users that will connect to the system. Users can be deactivated should there be a period of time during which they will/should not connect to the system. You can assign them groups in order to give them specific access to the applications they need to use in the system.</field>\n  265          </record>\n  ...\n  302                      <footer>\n  303                          <button name=\"preference_save\" type=\"object\" string=\"Save\" class=\"btn-primary\"/>\n  304:                         <button name=\"preference_cancel\" string=\"Cancel\" special=\"cancel\" class=\"btn-default\"/>\n  305                      </footer>\n  306                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\security\\base_security.xml:\n   97              <!--\n   98                  Show partners from ancestors and descendants companies\n   99:                 (or company-less), this is usually a better default for\n  100                  multicompany setups.\n  101              -->\n  ...\n  114          </record>\n  115  \n  116:         <record model=\"ir.rule\" id=\"ir_values_default_rule\">\n  117:             <field name=\"name\">Defaults: alter personal values only</field>\n  118              <field name=\"model_id\" ref=\"model_ir_values\"/>\n  119:             <field name=\"domain_force\">[('key','=','default'),('user_id','=',user.id)]</field>\n  120              <field name=\"perm_read\" eval=\"False\"/>\n  121          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\tests\\test_base.py:\n   53              ('ryu+giga-Sushi@aizubange.fukushima.jp', True),\n   54          ]:\n   55:             partner_id, dummy = self.res_partner.name_create(cr, uid, name, context={'default_active': active})\n   56          partners = self.res_partner.name_search(cr, uid, 'Raoul')\n   57          self.assertEqual(len(partners), 2, 'Incorrect search number result for name_search')\n   ..\n   71                                                                                'type': 'contact'}))\n   72          p1 = self.res_partner.browse(cr, uid, self.res_partner.name_create(cr, uid, 'Denis Bladesmith <denis.bladesmith@ghoststep.com>')[0])\n   73:         self.assertEqual(p1.type, 'contact', 'Default type must be \"contact\"')\n   74          p1phone = '123456789#34'\n   75          p1.write({'phone': p1phone,\n   ..\n  115          cr, uid = self.cr, self.uid\n  116          ironshield = self.res_partner.browse(cr, uid, self.res_partner.name_create(cr, uid, 'IronShield')[0])\n  117:         self.assertFalse(ironshield.is_company, 'Partners are not companies by default')\n  118:         self.assertEqual(ironshield.type, 'contact', 'Default type must be \"contact\"')\n  119          ironshield.write({'type': 'contact'})\n  120          p1 = self.res_partner.browse(cr, uid, self.res_partner.create(cr, uid,\n  ...\n  122                                                                         'street': 'Strongarm Avenue, 12',\n  123                                                                         'parent_id': ironshield.id}))\n  124:         self.assertEquals(p1.type, 'contact', 'Default type must be \"contact\", not the copied parent type')\n  125          ironshield.refresh()\n  126          self.assertEqual(ironshield.street, p1.street, 'Address fields should be copied to company')\n  ...\n  189                            'invoice': branch2.id,\n  190                            'contact': branch2.id,\n  191:                           'other': branch2.id}, 'Invalid address resolution. Company is the first encountered contact, therefore default for unfound addresses.')\n  192  \n  193          # go up then down through siblings\n  ...\n  206                            'invoice': leaf23.id,\n  207                            'contact': leaf23.id,\n  208:                           'other': leaf23.id}, 'Invalid address resolution, `default` should only override if no partner with specific type exists')\n  209  \n  210          # empty adr_pref means only 'contact'\n  ...\n  318          self.assertEqual(['Nab', 'Eve', 'Bob', 'Alice'], [g['name'] for g in groups_data], 'Incorrect ordering of the list')\n  319  \n  320:         # group on int field, default ordering\n  321          groups_data = self.res_users.read_group(cr, uid, domain, fields=['color'], groupby='color')\n  322          self.assertEqual([-3, 0, 1, 2, 3, 6], [g['color'] for g in groups_data], 'Incorrect ordering of the list')\n  ...\n  333          self.assertEqual([1, 2, 1, 2], [g['name_count'] for g in groups_data], 'Incorrect number of results')\n  334  \n  335:         # group on inherited date column (res_partner.date) -> Year-Month, default ordering\n  336          groups_data = self.res_users.read_group(cr, uid, domain, fields=['function', 'color', 'date'], groupby=['date'])\n  337          self.assertEqual(len(groups_data), 4, \"Incorrect number of results when grouping on a field\")\n  ...\n  345          self.assertEqual([3, 1, 1, 1], [g['date_count'] for g in groups_data], 'Incorrect number of results')\n  346  \n  347:         # group on inherited many2one (res_partner.title), default order\n  348          groups_data = self.res_users.read_group(cr, uid, domain, fields=['function', 'color', 'title'], groupby=['title'])\n  349          self.assertEqual(len(groups_data), 2, \"Incorrect number of results when grouping on a field\")\n  ...\n  447      def test_103_duplicate_record_fr(self):\n  448          cr, uid = self.cr, self.uid\n  449:         self.new_fr_cat_id = self.res_category.copy(cr, uid, self.cat_id, default={'name': 'Clients (copie)'}, context={'lang':'fr_FR'})\n  450  \n  451          no_context_cat = self.res_category.browse(cr, uid, self.new_fr_cat_id)\n  ...\n  453  \n  454          fr_context_cat = self.res_category.browse(cr, uid, self.new_fr_cat_id, context={'lang':'fr_FR'})\n  455:         self.assertEqual(fr_context_cat.name, 'Clients (copie)', \"Did not used default value for translated value\")\n  456  \n  457      def test_104_orderby_translated_field(self):\n  ...\n  498      at_install = False\n  499  \n  500:     def test_default_norun(self):\n  501          self.fail(\"An unmarket test in a non-at-install case should not run\")\n  502  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\tests\\test_func.py:\n   36              del frozen_vals['name']\n   37  \n   38:         # check update, setdefault, pop, popitem, clear\n   39          with self.assertRaises(Exception):\n   40              frozen_vals.update({'surname': 'Jack'})\n   ..\n   42              frozen_vals.update({'name': 'Jack'})\n   43          with self.assertRaises(Exception):\n   44:             frozen_vals.setdefault('surname', 'Jack')\n   45          with self.assertRaises(Exception):\n   46              frozen_vals.pop('surname', 'Jack')\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\tests\\test_ir_actions.py:\n  266          self.assertFalse(run_res, 'ir_actions_server: create record action correctly finished should return False')\n  267          # Test: new partner created\n  268:         pids = self.res_partner.search(cr, uid, [('name', 'ilike', 'TestingPartner (copy)')])  # currently res_partner overrides default['name'] whatever its value\n  269          self.assertEqual(len(pids), 1, 'ir_actions_server: TODO')\n  270          partner = self.res_partner.browse(cr, uid, pids[0])\n  ...\n  391  \n  392          # Test: new partner created\n  393:         pids = self.res_partner.search(cr, uid, [('name', 'ilike', 'TestingPartner (copy)')])  # currently res_partner overrides default['name'] whatever its value\n  394          self.assertEqual(len(pids), 1, 'ir_actions_server: TODO')\n  395          # Test: action returned\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\tests\\test_ir_filters.py:\n   35  \n   36          self.assertItemsEqual(map(noid, filters), [\n   37:             dict(name='a', is_default=False, user_id=self.USER, domain='[]', context='{}', sort='[]'),\n   38:             dict(name='b', is_default=False, user_id=self.USER, domain='[]', context='{}', sort='[]'),\n   39:             dict(name='c', is_default=False, user_id=self.USER, domain='[]', context='{}', sort='[]'),\n   40:             dict(name='d', is_default=False, user_id=self.USER, domain='[]', context='{}', sort='[]'),\n   41          ])\n   42  \n   ..\n   54  \n   55          self.assertItemsEqual(map(noid, filters), [\n   56:             dict(name='a', is_default=False, user_id=False, domain='[]', context='{}', sort='[]'),\n   57:             dict(name='b', is_default=False, user_id=False, domain='[]', context='{}', sort='[]'),\n   58:             dict(name='c', is_default=False, user_id=False, domain='[]', context='{}', sort='[]'),\n   59:             dict(name='d', is_default=False, user_id=False, domain='[]', context='{}', sort='[]'),\n   60          ])\n   61  \n   ..\n   72  \n   73          self.assertItemsEqual(map(noid, filters), [\n   74:             dict(name='a', is_default=False, user_id=False, domain='[]', context='{}', sort='[]'),\n   75:             dict(name='c', is_default=False, user_id=self.USER, domain='[]', context='{}', sort='[]'),\n   76          ])\n   77  \n   78: class TestOwnDefaults(FiltersCase):\n   79      def setUp(self):\n   80:         super(TestOwnDefaults, self).setUp()\n   81          self.USER = self.registry('res.users').name_search(self.cr, self.uid, 'demo')[0]\n   82          self.USER_ID = self.USER[0]                 \n   ..\n   84      def test_new_no_filter(self):\n   85          \"\"\"\n   86:         When creating a @is_default filter with no existing filter, that new\n   87:         filter gets the default flag\n   88          \"\"\"\n   89          Filters = self.registry('ir.filters')\n   ..\n   92              'model_id': 'ir.filters',\n   93              'user_id': self.USER_ID,\n   94:             'is_default': True,\n   95          })\n   96          filters = Filters.get_filters(self.cr, self.USER_ID, 'ir.filters')\n   97  \n   98          self.assertItemsEqual(map(noid, filters), [\n   99:             dict(name='a', user_id=self.USER, is_default=True,\n  100                   domain='[]', context='{}', sort='[]')\n  101          ])\n  102  \n  103:     def test_new_filter_not_default(self):\n  104          \"\"\"\n  105:         When creating a @is_default filter with existing non-default filters,\n  106          the new filter gets the flag\n  107          \"\"\"\n  ...\n  117              'model_id': 'ir.filters',\n  118              'user_id': self.USER_ID,\n  119:             'is_default': True,\n  120          })\n  121          filters = Filters.get_filters(self.cr, self.USER_ID, 'ir.filters')\n  122  \n  123          self.assertItemsEqual(map(noid, filters), [\n  124:             dict(name='a', user_id=self.USER, is_default=False, domain='[]', context='{}', sort='[]'),\n  125:             dict(name='b', user_id=self.USER, is_default=False, domain='[]', context='{}', sort='[]'),\n  126:             dict(name='c', user_id=self.USER, is_default=True, domain='[]', context='{}', sort='[]'),\n  127          ])\n  128  \n  129:     def test_new_filter_existing_default(self):\n  130          \"\"\"\n  131:         When creating a @is_default filter where an existing filter is already\n  132:         @is_default, the flag should be *moved* from the old to the new filter\n  133          \"\"\"\n  134          self.build(\n  135              'ir.filters',\n  136              dict(name='a', user_id=self.USER_ID, model_id='ir.filters'),\n  137:             dict(name='b', is_default=True, user_id=self.USER_ID, model_id='ir.filters'),\n  138          )\n  139  \n  ...\n  143              'model_id': 'ir.filters',\n  144              'user_id': self.USER_ID,\n  145:             'is_default': True,\n  146          })\n  147          filters = Filters.get_filters(self.cr, self.USER_ID, 'ir.filters')\n  148  \n  149          self.assertItemsEqual(map(noid, filters), [\n  150:             dict(name='a', user_id=self.USER, is_default=False, domain='[]', context='{}', sort='[]'),\n  151:             dict(name='b', user_id=self.USER, is_default=False, domain='[]', context='{}', sort='[]'),\n  152:             dict(name='c', user_id=self.USER, is_default=True, domain='[]', context='{}', sort='[]'),\n  153          ])\n  154  \n  155:     def test_update_filter_set_default(self):\n  156          \"\"\"\n  157:         When updating an existing filter to @is_default, if an other filter\n  158          already has the flag the flag should be moved\n  159          \"\"\"\n  ...\n  161              'ir.filters',\n  162              dict(name='a', user_id=self.USER_ID, model_id='ir.filters'),\n  163:             dict(name='b', is_default=True, user_id=self.USER_ID, model_id='ir.filters'),\n  164          )\n  165  \n  ...\n  169              'model_id': 'ir.filters',\n  170              'user_id': self.USER_ID,\n  171:             'is_default': True,\n  172          })\n  173          filters = Filters.get_filters(self.cr, self.USER_ID, 'ir.filters')\n  174  \n  175          self.assertItemsEqual(map(noid, filters), [\n  176:             dict(name='a', user_id=self.USER, is_default=True, domain='[]', context='{}', sort='[]'),\n  177:             dict(name='b', user_id=self.USER, is_default=False, domain='[]', context='{}', sort='[]'),\n  178          ])\n  179  \n  180: class TestGlobalDefaults(FiltersCase):\n  181      def setUp(self):\n  182:         super(TestGlobalDefaults, self).setUp()\n  183          self.USER = self.registry('res.users').name_search(self.cr, self.uid, 'demo')[0]\n  184          self.USER_ID = self.USER[0]\n  185  \n  186:     def test_new_filter_not_default(self):\n  187          \"\"\"\n  188:         When creating a @is_default filter with existing non-default filters,\n  189          the new filter gets the flag\n  190          \"\"\"\n  ...\n  200              'model_id': 'ir.filters',\n  201              'user_id': False,\n  202:             'is_default': True,\n  203          })\n  204          filters = Filters.get_filters(self.cr, self.USER_ID, 'ir.filters')\n  205  \n  206          self.assertItemsEqual(map(noid, filters), [\n  207:             dict(name='a', user_id=False, is_default=False, domain='[]', context='{}', sort='[]'),\n  208:             dict(name='b', user_id=False, is_default=False, domain='[]', context='{}', sort='[]'),\n  209:             dict(name='c', user_id=False, is_default=True, domain='[]', context='{}', sort='[]'),\n  210          ])\n  211  \n  212:     def test_new_filter_existing_default(self):\n  213          \"\"\"\n  214:         When creating a @is_default filter where an existing filter is already\n  215:         @is_default, an error should be generated\n  216          \"\"\"\n  217          self.build(\n  218              'ir.filters',\n  219              dict(name='a', user_id=False, model_id='ir.filters'),\n  220:             dict(name='b', is_default=True, user_id=False, model_id='ir.filters'),\n  221          )\n  222  \n  ...\n  227                  'model_id': 'ir.filters',\n  228                  'user_id': False,\n  229:                 'is_default': True,\n  230              })\n  231  \n  232:     def test_update_filter_set_default(self):\n  233          \"\"\"\n  234:         When updating an existing filter to @is_default, if an other filter\n  235          already has the flag an error should be generated\n  236          \"\"\"\n  ...\n  238              'ir.filters',\n  239              dict(name='a', user_id=False, model_id='ir.filters'),\n  240:             dict(name='b', is_default=True, user_id=False, model_id='ir.filters'),\n  241          )\n  242  \n  ...\n  248                  'model_id': 'ir.filters',\n  249                  'user_id': False,\n  250:                 'is_default': True,\n  251              })\n  252  \n  253:     def test_update_default_filter(self):\n  254          \"\"\"\n  255:         Replacing the current default global filter should not generate any error\n  256          \"\"\"\n  257          self.build(\n  258              'ir.filters',\n  259              dict(name='a', user_id=False, model_id='ir.filters'),\n  260:             dict(name='b', is_default=True, user_id=False, model_id='ir.filters'),\n  261          )\n  262  \n  ...\n  268              'user_id': False,\n  269              'context': context_value,\n  270:             'is_default': True,\n  271          })\n  272          filters = Filters.get_filters(self.cr, self.USER_ID, 'ir.filters')\n  273  \n  274          self.assertItemsEqual(map(noid, filters), [\n  275:             dict(name='a', user_id=False, is_default=False, domain='[]', context='{}', sort='[]'),\n  276:             dict(name='b', user_id=False, is_default=True, domain='[]', context=context_value, sort='[]'),\n  277          ])\n  278  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\tests\\test_ir_sequence.py:\n  104          cr0 = cursor()\n  105          cr1 = cursor()\n  106:         cr1._default_log_exceptions = False # Prevent logging a traceback\n  107          with self.assertRaises(psycopg2.OperationalError) as e:\n  108              n0 = registry('ir.sequence').next_by_code(cr0, ADMIN_USER_ID, 'test_sequence_type_2', {})\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\tests\\test_ir_values.py:\n    6  \n    7      def test_00(self):\n    8:         # Create some default value for some (non-existing) model, for all users.\n    9  \n   10          ir_values = self.registry('ir.values')\n   11          # use the old API\n   12:         ir_values.set(self.cr, self.uid, 'default', False, 'my_test_field',\n   13              ['unexisting_model'], 'global value')\n   14          # use the new API\n   15:         ir_values.set_default(self.cr, self.uid, 'other_unexisting_model',\n   16              'my_other_test_field', 'conditional value', condition='foo=bar')\n   17  \n   ..\n   22          # d is a list of triplets (id, name, value)\n   23          # Old API\n   24:         d = ir_values.get(self.cr, self.uid, 'default', False, ['unexisting_model'])\n   25          assert len(d) == 1, \"Only one single value should be retrieved for this model\"\n   26:         assert d[0][1] == 'my_test_field', \"Can't retrieve the created default value. (1)\"\n   27:         assert d[0][2] == 'global value', \"Can't retrieve the created default value. (2)\"\n   28  \n   29          # New API, Conditional version\n   30:         d = ir_values.get_defaults(self.cr, self.uid, 'other_unexisting_model')\n   31          assert len(d) == 0, \"No value should be retrieved, the condition is not met\"\n   32:         d = ir_values.get_defaults(self.cr, self.uid, 'other_unexisting_model', condition=\"foo=eggs\")\n   33:         assert len(d) == 0, 'Condition is not met either, no defaults should be returned'\n   34:         d = ir_values.get_defaults(self.cr, self.uid, 'other_unexisting_model', condition=\"foo=bar\")\n   35          assert len(d) == 1, \"Only one single value should be retrieved\"\n   36:         assert d[0][1] == 'my_other_test_field', \"Can't retrieve the created default value. (5)\"\n   37:         assert d[0][2] == 'conditional value', \"Can't retrieve the created default value. (6)\"\n   38  \n   39          # Do it again but for a specific user.\n   40  \n   41          ir_values = self.registry('ir.values')\n   42:         ir_values.set(self.cr, self.uid, 'default', False, 'my_test_field',['unexisting_model'], 'specific value', preserve_user=True)\n   43  \n   44          # Retrieve it and check it is the one for the current user.\n   45          ir_values = self.registry('ir.values')\n   46:         d = ir_values.get(self.cr, self.uid, 'default', False, ['unexisting_model'])\n   47:         assert len(d) == 1, \"Only one default must be returned per field\"\n   48:         assert d[0][1] == 'my_test_field', \"Can't retrieve the created default value.\"\n   49:         assert d[0][2] == 'specific value', \"Can't retrieve the created default value.\"\n   50  \n   51          # Create some action bindings for a non-existing model.\n   52  \n   53          act_id_1 = self.ref('base.act_values_form_action')\n   54:         act_id_2 = self.ref('base.act_values_form_defaults')\n   55          act_id_3 = self.ref('base.action_res_company_form')\n   56  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\tests\\test_mail_examples.py:\n 1143  </li>\n 1144  <li><p class=\"first\">Faster and Improved Search view: Search drawer now appears on top of the results, and is open\n 1145: by default in reporting views</p>\n 1146  </li>\n 1147  <li><p class=\"first\">Improved User Interface:</p>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\tests\\test_orm.py:\n    1: from collections import defaultdict\n    2  from openerp.tools import mute_logger\n    3  from openerp.tests import common\n    .\n  135  \n  136          all_partners = []\n  137:         partners_by_day = defaultdict(set)\n  138:         partners_by_month = defaultdict(set)\n  139:         partners_by_year = defaultdict(set)\n  140  \n  141          for name, date in partners.items():\n  ...\n  198          self.user = self.registry('res.users')\n  199  \n  200:     def test_default(self):\n  201:         \"\"\" `default_get` cannot return a dictionary or a new id \"\"\"\n  202:         defaults = self.user.default_get(self.cr, UID, ['partner_id'])\n  203:         if 'partner_id' in defaults:\n  204:             self.assertIsInstance(defaults['partner_id'], (bool, int, long))\n  205  \n  206      def test_create(self):\n  ...\n  266      @mute_logger('openerp.models')\n  267      def test_copy_with_ancestor(self):\n  268:         \"\"\" copying a user with 'parent_id' in defaults should not duplicate the partner \"\"\"\n  269          foo_id = self.user.create(self.cr, UID, {'name': 'Foo', 'login': 'foo', 'password': 'foo',\n  270                                                   'login_date': '2016-01-01', 'signature': 'XXX'})\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\tests\\test_search.py:\n   12          # Create 6 partners with a given name, and a given creation order to\n   13          # ensure the order of their ID. Some are set as unactive to verify they\n   14:         # are by default excluded from the searches and to provide a second\n   15          # `order` argument.\n   16  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\tests\\test_views.py:\n  178              'arch': arch or self.arch_for(name, parent=parent),\n  179              'inherit_id': parent,\n  180:             'priority': 5, # higher than default views\n  181          })\n  182          self.ids[name] = view_id\n  ...\n  226              [(self.arch_for('A111', parent=True), self.ids['A111'])])\n  227  \n  228:     def test_default_view(self):\n  229:         default = self.View.default_view(\n  230              self.cr, self.uid, model=self.model, view_type='form')\n  231:         self.assertEqual(default, self.ids['A'])\n  232  \n  233:         default_tree = self.View.default_view(\n  234              self.cr, self.uid, model=self.model, view_type='tree')\n  235:         self.assertEqual(default_tree, self.ids['C'])\n  236  \n  237:     def test_no_default_view(self):\n  238          self.assertFalse(\n  239:             self.View.default_view(\n  240                  self.cr, self.uid, model='does.not.exist', view_type='form'))\n  241  \n  242          self.assertFalse(\n  243:             self.View.default_view(\n  244                  self.cr, self.uid, model=self.model, view_type='graph'))\n  245  \n  ...\n  316  \n  317      def test_insert_inside(self):\n  318:         default = Field(Field(name=\"inserted\"), name=\"target\")\n  319          spec = Field(Field(name=\"inserted 2\"), name=\"target\", position='inside')\n  320  \n  321          self.View.apply_inheritance_specs(self.cr, self.uid,\n  322                                            self.base_arch,\n  323:                                           default, None)\n  324          self.View.apply_inheritance_specs(self.cr, self.uid,\n  325                                            self.base_arch,\n  ...\n  645          \"\"\"Insert view into database via a query to passtrough validation\"\"\"\n  646          kw.pop('id', None)\n  647:         kw.setdefault('mode', 'extension' if kw.get('inherit_id') else 'primary')\n  648:         kw.setdefault('active', True)\n  649  \n  650          keys = sorted(kw.keys())\n  ...\n  714                      <footer>\n  715                          <button name=\"action_next\" type=\"object\" string=\"Next button\" class=\"btn-primary\"/>\n  716:                         <button string=\"Skip\" special=\"cancel\" class=\"btn-default\"/>\n  717                      </footer>\n  718                  </form>\n  ...\n  784                      <footer>\n  785                          <button name=\"action_next\" type=\"object\" string=\"Next button\" class=\"btn-primary\"/>\n  786:                         <button string=\"Skip\" special=\"cancel\" class=\"btn-default\"/>\n  787                      </footer>\n  788                  </form>\n  ...\n  907          view.write({'mode': 'extension'})\n  908  \n  909:     def testDefaultExtensionToPrimary(self):\n  910          \"\"\"\n  911          An extension view can be converted to primary\n  ...\n  919          view.write({'mode': 'primary'})\n  920  \n  921: class TestDefaultView(ViewCase):\n  922:     def testDefaultViewBase(self):\n  923          self.create({\n  924              'inherit_id': False,\n  ...\n  934          })\n  935  \n  936:         default = self.Views.default_view(self.cr, self.uid, False, 'qweb')\n  937          self.assertEqual(\n  938:             default, v2,\n  939:             \"default_view should get the view with the lowest priority for \"\n  940              \"a (model, view_type) pair\"\n  941          )\n  942  \n  943:     def testDefaultViewPrimary(self):\n  944          v1 = self.create({\n  945              'inherit_id': False,\n  ...\n  961          })\n  962  \n  963:         default = self.Views.default_view(self.cr, self.uid, False, 'qweb')\n  964          self.assertEqual(\n  965:             default, v3,\n  966:             \"default_view should get the view with the lowest priority for \"\n  967              \"a (model, view_type) pair in all the primary tables\"\n  968          )\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\workflow\\workflow.py:\n   17          'activities': fields.one2many('workflow.activity', 'wkf_id', 'Activities'),\n   18      }\n   19:     _defaults = {\n   20          'on_create': lambda *a: True\n   21      }\n   ..\n   72          'in_transitions': fields.one2many('workflow.transition', 'act_to', 'Incoming Transitions'),\n   73      }\n   74:     _defaults = {\n   75          'kind': lambda *a: 'dummy',\n   76          'join_mode': lambda *a: 'XOR',\n   ..\n  107          'wkf_id': fields.related('act_from','wkf_id', type='many2one', relation='workflow', string='Workflow', select=True),\n  108      }\n  109:     _defaults = {\n  110          'condition': lambda *a: 'True',\n  111          'sequence': 10,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base\\workflow\\workflow_view.xml:\n   53              <field name=\"signal\"/>\n   54            </arrow>\n   55:           <label string=\"When customizing a workflow, be sure you do not modify an existing node or arrow, but rather add new nodes or arrows. If you absolutly need to modify a node or arrow, you can only change fields that are empty or set to the default value. If you don't do that, your customization will be overwrited at the next update or upgrade to a future version of Odoo.\"/>\n   56          </diagram>\n   57        </field>\n   ..\n  301        <field name=\"view_type\">form</field>\n  302        <field name=\"view_id\" ref=\"view_workflow_instance_tree\"/>\n  303:       <field name=\"context\">{'search_default_active':1}</field>\n  304        <field name=\"search_view_id\" ref=\"view_workflow_instance_search\"/>\n  305      </record>\n  ...\n  362        <field name=\"view_type\">form</field>\n  363        <field name=\"view_id\" ref=\"view_workflow_workitem_tree\"/>\n  364:       <field name=\"context\">{'search_default_active':1}</field>\n  365        <field name=\"search_view_id\" ref=\"view_workflow_workitem_search\"/>\n  366      </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base_action_rule\\base_action_rule.py:\n    2  # Part of Odoo. See LICENSE file for full copyright and licensing details.\n    3  \n    4: from collections import defaultdict\n    5  from datetime import datetime\n    6  from dateutil.relativedelta import relativedelta\n    .\n   14  from openerp.modules.registry import RegistryManager\n   15  from openerp.osv import fields, osv\n   16: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT\n   17  from openerp.tools.safe_eval import safe_eval as eval\n   18  \n   ..\n   32      if ' ' not in date_str:\n   33          date_str = date_str + \" 00:00:00\"\n   34:     return datetime.strptime(date_str, DEFAULT_SERVER_DATETIME_FORMAT)\n   35  \n   36  \n   ..\n   97      CRITICAL_FIELDS = ['model_id', 'active', 'kind', 'on_change_fields']\n   98  \n   99:     _defaults = {\n  100          'active': True,\n  101          'trg_date_range_type': 'day',\n  ...\n  179          # remaining records as done (to avoid recursive processing)\n  180          action_done = self._context['__action_done']\n  181:         records -= action_done.setdefault(self, records.browse())\n  182          if not records:\n  183              return\n  ...\n  294                          self.update(self._convert_to_cache(res['value'], validate=False))\n  295                      if res and 'domain' in res:\n  296:                         result.setdefault('domain', {}).update(res['domain'])\n  297                      if res and 'warning' in res:\n  298                          result['warning'] = res['warning']\n  ...\n  301              return base_action_rule_onchange\n  302  \n  303:         patched_models = defaultdict(set)\n  304          def patch(model, name, method):\n  305              \"\"\" Patch method `name` on `model`, unless it has been patched already. \"\"\"\n  ...\n  447                          _logger.error(traceback.format_exc())\n  448  \n  449:             action.write({'last_run': now.strftime(DEFAULT_SERVER_DATETIME_FORMAT)})\n  450  \n  451              if automatic:\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base_action_rule\\base_action_rule_view.xml:\n   35                                          <div class=\"oe_edit_only oe_inline\">Set selection based on a search filter:\n   36                                              <field name=\"filter_pre_id\" domain=\"[('model_id', '=', model), '|', ('user_id', '=', uid), ('user_id', '=', False)]\"\n   37:                                                 class=\"oe_inline\" context=\"{'default_model_id': model, 'default_active': False, 'active_test': False}\"\n   38                                                  on_change=\"onchange_filter_pre_id(filter_pre_id, context)\"/></div>\n   39                                      </div>\n   ..\n   44                                          <div class=\"oe_edit_only oe_inline\">Set selection based on a search filter:\n   45                                              <field name=\"filter_id\" domain=\"[('model_id', '=', model), '|', ('user_id', '=', uid), ('user_id', '=', False)]\"\n   46:                                                 class=\"oe_inline\" context=\"{'default_model_id': model, 'default_active': False, 'active_test': False}\"\n   47                                                  on_change=\"onchange_filter_id(filter_id, context)\"/></div>\n   48                                      </div>\n   ..\n   75                                  </group>\n   76                                  <group name=\"action_server\" string=\"Server actions to run\">\n   77:                                     <field name=\"server_action_ids\" domain=\"[('model_id','=', model_id)]\" nolabel=\"1\" context=\"{'default_model_id': model_id}\">\n   78                                          <tree string=\"Server Actions\">\n   79                                              <field name=\"sequence\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base_action_rule\\test_models.py:\n   28      }\n   29  \n   30:     _defaults = {\n   31          'state' : 'draft',\n   32          'active' : True,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base_gengo\\controller\\gengo_callback.py:\n   15      def get_gengo_key(self, cr):\n   16          icp = request.registry['ir.config_parameter']\n   17:         return icp.get_param(cr, SUPERUSER_ID, request.registry['base.gengo.translations'].GENGO_KEY, default=\"\")\n   18  \n   19      @http.route('/website/gengo_callback', type='http', auth='none')\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base_gengo\\res_company.py:\n   16      }\n   17  \n   18:     _defaults = {\n   19          \"gengo_auto_approve\": True,\n   20      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base_gengo\\wizard\\base_gengo_translations.py:\n   19      _logger.warning('Gengo library not found, Gengo features disabled. If you plan to use it, please install the gengo library from http://pypi.python.org/pypi/gengo')\n   20  \n   21: GENGO_DEFAULT_LIMIT = 20\n   22  \n   23  \n   ..\n   34          'sync_limit': fields.integer(\"No. of terms to sync\"),\n   35      }\n   36:     _defaults = {\n   37          'sync_type': 'both',\n   38          'sync_limit': 20\n   ..\n   41      def init(self, cr):\n   42          icp = self.pool['ir.config_parameter']\n   43:         if not icp.get_param(cr, SUPERUSER_ID, self.GENGO_KEY, default=None):\n   44              icp.set_param(cr, SUPERUSER_ID, self.GENGO_KEY, str(uuid.uuid4()), groups=self.GROUPS)\n   45  \n   46      def get_gengo_key(self, cr):\n   47          icp = self.pool['ir.config_parameter']\n   48:         return icp.get_param(cr, SUPERUSER_ID, self.GENGO_KEY, default=\"Undefined\")\n   49  \n   50      def gengo_authentication(self, cr, uid, context=None):\n   ..\n  100          return {'type': 'ir.actions.act_window_close'}\n  101  \n  102:     def _sync_response(self, cr, uid, limit=GENGO_DEFAULT_LIMIT, context=None):\n  103          \"\"\"\n  104          This method will be called by cron services to get translations from\n  ...\n  223          return True\n  224  \n  225:     def _sync_request(self, cr, uid, limit=GENGO_DEFAULT_LIMIT, context=None):\n  226          \"\"\"\n  227          This scheduler will send a job request to the gengo , which terms are\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base_gengo\\wizard\\base_gengo_translations_view.xml:\n   20                      <footer>\n   21                          <button name=\"act_update\" string=\"Send\" type=\"object\" class=\"btn-primary\"/>\n   22:                         <button name=\"act_cancel\" special=\"cancel\" string=\"Cancel\" type=\"object\" class=\"btn-default\"/>\n   23                      </footer>\n   24                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base_import\\models.py:\n   16  from openerp.osv import orm, fields\n   17  from openerp.tools.translate import _\n   18: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT, \\\n   19:     DEFAULT_SERVER_DATETIME_FORMAT\n   20  \n   21  FIELDS_RECURSION_LIMIT = 2\n   ..\n  194                          cell.value, book.datemode))\n  195                      values.append(\n  196:                         dt.strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n  197                          if is_datetime\n  198:                         else dt.strftime(DEFAULT_SERVER_DATE_FORMAT)\n  199                      )\n  200                  elif cell.ctype is xlrd.XL_CELL_BOOLEAN:\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base_import\\static\\src\\xml\\import.xml:\n  104                          displayed correctly?</a></dt>\n  105                      <dd>\n  106:                         <p>By default the Import preview is set on commas as \n  107                          field separators and quotation marks as text \n  108                          delimiters. If your csv file does not have these \n  ...\n  271                      <dd>\n  272                          <p>If you do not set all fields in your CSV file, \n  273:                         Odoo will assign the default value for every non \n  274                          defined fields. But if you\n  275                          set fields with empty values in your CSV file, Odoo \n  276                          will set the EMPTY value in the field, instead of \n  277:                         assigning the default value.</p>\n  278                      </dd>\n  279                  </dl>\n  ...\n  354          <button type=\"button\" class=\"btn btn-sm btn-primary o_import_button o_import_validate\"\n  355                  disabled=\"disabled\">Validate</button>\n  356:         <button type=\"button\" class=\"btn btn-sm btn-default o_import_button o_import_import\"\n  357                  disabled=\"disabled\">Import</button>\n  358:         <button type=\"button\" class=\"btn btn-sm btn-default o_import_cancel\">Cancel</button>\n  359      </t>\n  360  \n  ...\n  415      <t t-extend=\"ListView.buttons\">\n  416          <t t-if='widget.options.import_enabled' t-jquery=\"button.o_list_button_add\" t-operation=\"after\">\n  417:             <button type=\"button\" class=\"btn btn-sm btn-default o_list_button_import\">\n  418                  Import\n  419              </button>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base_import\\test_models.py:\n   58          'value': fields.integer()\n   59      }\n   60:     _defaults = {\n   61          'value': 42\n   62      }\n   ..\n   74          'value': fields.integer()\n   75      }\n   76:     _defaults = {\n   77          'value': 42\n   78      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base_import\\tests\\test_cases.py:\n  489          \"\"\"\n  490          Ensure big fields (e.g. b64-encoded image data) can be imported and\n  491:         we're not hitting limits of the default CSV parser config\n  492          \"\"\"\n  493          import csv, cStringIO\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base_import_module\\models\\base_import_module.py:\n   16      }\n   17  \n   18:     _defaults = {\n   19          'state': 'init',\n   20          'force': False,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base_import_module\\models\\ir_module.py:\n   19      _inherit = \"ir.module.module\"\n   20  \n   21:     imported = fields.Boolean(string=\"Imported Module\", default=False)\n   22  \n   23      def import_module(self, cr, uid, module, path, force=False, context=None):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base_import_module\\views\\base_import_module.xml:\n   22                          <div states=\"init\">\n   23                              <button name=\"import_module\" string=\"Import App\" type=\"object\" class=\"btn-primary\"/>\n   24:                             <button special=\"cancel\" string=\"Cancel\" class=\"btn-default\"/>\n   25                          </div>\n   26                          <div states=\"done\">\n   27                              <button name=\"action_module_open\" string=\"Open Modules\" type=\"object\" class=\"btn-primary\"/>\n   28:                             <button special=\"cancel\" string=\"Close\" class=\"btn-default\"/>\n   29                          </div>\n   30                      </footer>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base_setup\\base_setup.py:\n   25          ], 'How do you call a Customer', required=True ),\n   26      }\n   27:     _defaults={\n   28          'partner' :'Customer',\n   29      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base_setup\\res_config.py:\n   43          }\n   44  \n   45:     def get_default_company_share_partner(self, cr, uid, ids, fields, context=None):\n   46          partner_rule = self.pool['ir.model.data'].xmlid_to_object(cr, uid, 'base.res_partner_rule', context=context)\n   47          return {\n   ..\n   49          }\n   50  \n   51:     def set_default_company_share_partner(self, cr, uid, ids, context=None):\n   52          partner_rule = self.pool['ir.model.data'].xmlid_to_object(cr, uid, 'base.res_partner_rule', context=context)\n   53          for wizard in self.browse(cr, uid, ids, context=context):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base_vat\\__openerp__.py:\n   17  There are two different levels of VAT number validation:\n   18  --------------------------------------------------------\n   19:     * By default, a simple off-line check is performed using the known validation\n   20        rules for the country, usually a simple check digit. This is quick and \n   21        always available, but allows numbers that are perhaps not truly allocated,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\base_vat\\base_vat.py:\n   74                          getattr(vatnumber, check_func_name, None)\n   75          if not check_func:\n   76:             # No VAT validation available, default to check that the country code exists\n   77              if country_code.upper() == 'EU':\n   78                  # Foreign companies that trade with non-enterprises in the EU\n   ..\n  114  \n  115      def _construct_constraint_msg(self, cr, uid, ids, context=None):\n  116:         def default_vat_check(cn, vn):\n  117:             # by default, a VAT number is valid if:\n  118              #  it starts with 2 letters\n  119              #  has more than 3 characters\n  ...\n  122          vat_no = \"'CC##' (CC=Country Code, ##=VAT Number)\"\n  123          error_partner = self.browse(cr, uid, ids, context=context)\n  124:         if default_vat_check(vat_country, vat_number):\n  125              vat_no = _ref_vat[vat_country] if vat_country in _ref_vat else vat_no\n  126              if self.pool['res.users'].browse(cr, uid, uid).company_id.vat_check_vies:\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\board\\board.py:\n  141          }\n  142  \n  143:     def _default_menu_parent_id(self, cr, uid, context=None):\n  144          _, menu_id = self.pool.get('ir.model.data').get_object_reference(cr, uid, 'base', 'menu_reporting_dashboard')\n  145          return menu_id\n  ...\n  153      }\n  154  \n  155:     _defaults = {\n  156:         'menu_parent_id': _default_menu_parent_id,\n  157      }\n  158  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\board\\board_view.xml:\n   13                  <footer>\n   14                      <button string=\"Create\" name=\"board_create\" type=\"object\" class=\"btn-primary\"/>\n   15:                     <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   16                  </footer>\n   17             </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\bus\\models\\bus.py:\n   10  import openerp\n   11  from openerp import api, fields, models\n   12: from openerp.tools.misc import DEFAULT_SERVER_DATETIME_FORMAT\n   13  \n   14  _logger = logging.getLogger(__name__)\n   ..\n   40      def gc(self):\n   41          timeout_ago = datetime.datetime.utcnow()-datetime.timedelta(seconds=TIMEOUT*2)\n   42:         domain = [('create_date', '<', timeout_ago.strftime(DEFAULT_SERVER_DATETIME_FORMAT))]\n   43          return self.sudo().search(domain).unlink()\n   44  \n   ..\n   77          if last == 0:\n   78              timeout_ago = datetime.datetime.utcnow()-datetime.timedelta(seconds=TIMEOUT)\n   79:             domain = [('create_date', '>', timeout_ago.strftime(DEFAULT_SERVER_DATETIME_FORMAT))]\n   80          else:  # else returns the unread notifications\n   81              domain = [('id', '>', last)]\n   ..\n  131              event = self.Event()\n  132              for channel in channels:\n  133:                 self.channels.setdefault(hashable(channel), []).append(event)\n  134              try:\n  135                  event.wait(timeout=timeout)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\bus\\models\\bus_presence.py:\n    5  from openerp import api, fields, models\n    6  from openerp import tools\n    7: from openerp.tools.misc import DEFAULT_SERVER_DATETIME_FORMAT\n    8  \n    9  from openerp.addons.bus.models.bus import TIMEOUT\n   ..\n   27  \n   28      user_id = fields.Many2one('res.users', 'Users', required=True, index=True, ondelete='cascade')\n   29:     last_poll = fields.Datetime('Last Poll', default=lambda self: fields.Datetime.now())\n   30:     last_presence = fields.Datetime('Last Presence', default=lambda self: fields.Datetime.now())\n   31:     status = fields.Selection([('online', 'Online'), ('away', 'Away'), ('offline', 'Offline')], 'IM Status', default='offline')\n   32  \n   33      @api.model\n   ..\n   40          last_presence = datetime.datetime.now() - datetime.timedelta(milliseconds=inactivity_period)\n   41          values = {\n   42:             'last_poll': time.strftime(DEFAULT_SERVER_DATETIME_FORMAT),\n   43          }\n   44          # update the presence or a create a new one\n   45          if not presence:  # create a new presence for the user\n   46              values['user_id'] = self._uid\n   47:             values['last_presence'] = last_presence.strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n   48              self.create(values)\n   49          else:  # update the last_presence if necessary, and write values\n   50:             if datetime.datetime.strptime(presence.last_presence, DEFAULT_SERVER_DATETIME_FORMAT) < last_presence:\n   51:                 values['last_presence'] = last_presence.strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n   52              # Hide transaction serialization errors, which can be ignored, the presence update is not essential\n   53              with tools.mute_logger('openerp.sql_db'):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\calendar\\calendar.py:\n   17  from openerp import tools, SUPERUSER_ID\n   18  from openerp.osv import fields, osv\n   19: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT, DEFAULT_SERVER_DATETIME_FORMAT\n   20  from openerp.tools.translate import _\n   21  from openerp.http import request\n   ..\n   40              real_id = res[0]\n   41              if with_date:\n   42:                 real_date = time.strftime(DEFAULT_SERVER_DATETIME_FORMAT, time.strptime(res[1], \"%Y%m%d%H%M%S\"))\n   43:                 start = datetime.strptime(real_date, DEFAULT_SERVER_DATETIME_FORMAT)\n   44                  end = start + timedelta(hours=with_date)\n   45:                 return (int(real_id), real_date, end.strftime(DEFAULT_SERVER_DATETIME_FORMAT))\n   46              return int(real_id)\n   47      return calendar_id and int(calendar_id) or calendar_id\n   ..\n   99          'event_id': fields.many2one('calendar.event', 'Meeting linked', ondelete='cascade'),\n  100      }\n  101:     _defaults = {\n  102          'state': 'needsAction',\n  103      }\n  104  \n  105:     def copy(self, cr, uid, id, default=None, context=None):\n  106          raise UserError(_('You cannot duplicate a calendar attendee.'))\n  107  \n  ...\n  142          if not event_obj.start or not event_obj.stop:\n  143              raise UserError(_(\"First you have to specify the date of the invitation.\"))\n  144:         event.add('created').value = ics_datetime(time.strftime(DEFAULT_SERVER_DATETIME_FORMAT))\n  145          event.add('dtstart').value = ics_datetime(event_obj.start, event_obj.allday)\n  146          event.add('dtend').value = ics_datetime(event_obj.stop, event_obj.allday)\n  ...\n  183          res = False\n  184  \n  185:         if self.pool['ir.config_parameter'].get_param(cr, uid, 'calendar.block_mail', default=False) or context.get(\"no_mail_to_attendees\"):\n  186              return res\n  187  \n  ...\n  208              'action_id': self.pool['ir.actions.act_window'].search(cr, uid, [('view_id', '=', act_id)], context=context)[0],\n  209              'dbname': cr.dbname,\n  210:             'base_url': self.pool['ir.config_parameter'].get_param(cr, uid, 'web.base.url', default='http://localhost:8069', context=context)\n  211          })\n  212  \n  ...\n  435  \n  436          icp = self.pool['ir.config_parameter']\n  437:         last_notif_mail = icp.get_param(cr, SUPERUSER_ID, 'calendar.last_notif_mail', default=False) or now\n  438  \n  439          try:\n  ...\n  474                          break\n  475              else:\n  476:                 in_date_format = datetime.strptime(curEvent.start, DEFAULT_SERVER_DATETIME_FORMAT)\n  477                  last_found = self.do_check_alarm_for_one_date(cr, uid, in_date_format, curEvent, max_delta, 0, after=last_notif_mail, notif=False, missing=True, context=context)\n  478                  for alert in last_found:\n  ...\n  507                          break\n  508              else:\n  509:                 in_date_format = datetime.strptime(curEvent.start, DEFAULT_SERVER_DATETIME_FORMAT)\n  510                  LastFound = self.do_check_alarm_for_one_date(cr, uid, in_date_format, curEvent, max_delta, ajax_check_every_seconds, after=partner['calendar_last_notif_ack'], mail=False, context=context)\n  511                  if LastFound:\n  ...\n  550                  'message': message,\n  551                  'timer': delta,\n  552:                 'notify_at': alert['notify_at'].strftime(DEFAULT_SERVER_DATETIME_FORMAT),\n  553              }\n  554  \n  ...\n  580      }\n  581  \n  582:     _defaults = {\n  583          'type': 'email',\n  584          'duration': 1,\n  ...\n  680  \n  681          timezone = pytz.timezone(context.get('tz') or 'UTC')\n  682:         startdate = pytz.UTC.localize(datetime.strptime(event.start, DEFAULT_SERVER_DATETIME_FORMAT))  # Add \"+hh:mm\" timezone\n  683          if not startdate:\n  684              startdate = datetime.now()\n  ...\n  711              }[data['rrule_type']]\n  712  \n  713:             deadline = datetime.strptime(data['stop'], tools.DEFAULT_SERVER_DATETIME_FORMAT)\n  714              return deadline + relativedelta(**{delay: count * mult})\n  715          return final_date\n  ...\n  757  \n  758          tz = context.get('tz', False)\n  759:         if not tz:  # tz can have a value False, so dont do it in the default value of get !\n  760              context['tz'] = self.pool.get('res.users').read(cr, SUPERUSER_ID, uid, ['tz'])['tz']\n  761              tz = context['tz']\n  ...\n  763  \n  764          format_date, format_time = self.get_date_formats(cr, uid, context=context)\n  765:         date = fields.datetime.context_timestamp(cr, uid, datetime.strptime(start, tools.DEFAULT_SERVER_DATETIME_FORMAT), context=context)\n  766:         date_deadline = fields.datetime.context_timestamp(cr, uid, datetime.strptime(stop, tools.DEFAULT_SERVER_DATETIME_FORMAT), context=context)\n  767          event_date = date.strftime(format_date)\n  768          display_time = date.strftime(format_time)\n  ...\n  937      }\n  938  \n  939:     def _get_default_partners(self, cr, uid, ctx=None):\n  940          ret = [self.pool['res.users'].browse(cr, uid, uid, context=ctx).partner_id.id]\n  941          active_id = ctx.get('active_id')\n  ...\n  945          return ret\n  946  \n  947:     _defaults = {\n  948          'end_type': 'count',\n  949          'count': 1,\n  ...\n  957          'active': 1,\n  958          'user_id': lambda self, cr, uid, ctx: uid,\n  959:         'partner_ids': _get_default_partners,\n  960      }\n  961  \n  ...\n  980              startdatetime = startdatetime or start\n  981              if startdatetime:\n  982:                 start = datetime.strptime(startdatetime, DEFAULT_SERVER_DATETIME_FORMAT)\n  983:                 value['start_date'] = datetime.strftime(start, DEFAULT_SERVER_DATE_FORMAT)\n  984  \n  985              enddatetime = enddatetime or end\n  986              if enddatetime:\n  987:                 end = datetime.strptime(enddatetime, DEFAULT_SERVER_DATETIME_FORMAT)\n  988:                 value['stop_date'] = datetime.strftime(end, DEFAULT_SERVER_DATE_FORMAT)\n  989          else:  # from date to datetime\n  990              user = self.pool['res.users'].browse(cr, uid, uid, context)\n  ...\n  996                  startdate = startdate.replace(hour=8)  # Set 8 AM in localtime\n  997                  startdate = startdate.astimezone(pytz.utc)  # Convert to UTC\n  998:                 value['start_datetime'] = datetime.strftime(startdate, DEFAULT_SERVER_DATETIME_FORMAT)\n  999              elif start:\n 1000                  value['start_datetime'] = start\n 1001  \n 1002              if endtime:\n 1003:                 end = datetime.strptime(endtime.split(' ')[0], DEFAULT_SERVER_DATE_FORMAT)\n 1004                  enddate = tz.localize(end).replace(hour=18).astimezone(pytz.utc)\n 1005  \n 1006:                 value['stop_datetime'] = datetime.strftime(enddate, DEFAULT_SERVER_DATETIME_FORMAT)\n 1007              elif end:\n 1008                  value['stop_datetime'] = end\n ....\n 1014          if not (start and duration):\n 1015              return value\n 1016:         start = datetime.strptime(start, DEFAULT_SERVER_DATETIME_FORMAT)\n 1017:         value['stop_date'] = (start + timedelta(hours=duration)).strftime(DEFAULT_SERVER_DATE_FORMAT)\n 1018:         value['stop'] = (start + timedelta(hours=duration)).strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n 1019:         value['stop_datetime'] = (start + timedelta(hours=duration)).strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n 1020:         value['start_date'] = start.strftime(DEFAULT_SERVER_DATE_FORMAT)\n 1021:         value['start'] = start.strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n 1022          return {'value': value}\n 1023  \n ....\n 1036          if allday:\n 1037              if fromtype == 'start' and start:\n 1038:                 start = datetime.strptime(start, DEFAULT_SERVER_DATE_FORMAT)\n 1039:                 value['start_datetime'] = datetime.strftime(start, DEFAULT_SERVER_DATETIME_FORMAT)\n 1040:                 value['start'] = datetime.strftime(start, DEFAULT_SERVER_DATETIME_FORMAT)\n 1041  \n 1042              if fromtype == 'stop' and end:\n 1043:                 end = datetime.strptime(end, DEFAULT_SERVER_DATE_FORMAT)\n 1044:                 value['stop_datetime'] = datetime.strftime(end, DEFAULT_SERVER_DATETIME_FORMAT)\n 1045:                 value['stop'] = datetime.strftime(end, DEFAULT_SERVER_DATETIME_FORMAT)\n 1046  \n 1047          return {'value': value}\n ....\n 1296          day_list = ['mo', 'tu', 'we', 'th', 'fr', 'sa', 'su']\n 1297          rrule_type = ['yearly', 'monthly', 'weekly', 'daily']\n 1298:         r = rrule.rrulestr(rule, dtstart=datetime.strptime(date_start, DEFAULT_SERVER_DATETIME_FORMAT))\n 1299  \n 1300          if r._freq > 0 and r._freq < 4:\n ....\n 1302          data['count'] = r._count\n 1303          data['interval'] = r._interval\n 1304:         data['final_date'] = r._until and r._until.strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n 1305          #repeat weekly\n 1306          if r._byweekday:\n ....\n 1377      def _needaction_domain_get(self, cr, uid, context=None):\n 1378          return [\n 1379:             ('stop', '<=', time.strftime(DEFAULT_SERVER_DATE_FORMAT + ' 23:59:59')),\n 1380:             ('start', '>=', time.strftime(DEFAULT_SERVER_DATE_FORMAT + ' 00:00:00')),\n 1381              ('user_id', '=', uid),\n 1382          ]\n ....\n 1386          if isinstance(thread_id, basestring):\n 1387              thread_id = get_real_ids(thread_id)\n 1388:         if context.get('default_date'):\n 1389:             del context['default_date']\n 1390          return super(calendar_event, self).message_post(cr, uid, thread_id, context=context, **kwargs)\n 1391  \n ....\n 1495          return res\n 1496  \n 1497:     def copy(self, cr, uid, id, default=None, context=None):\n 1498:         default = default or {}\n 1499:         self._set_date(cr, uid, default, id=default.get('id'), context=context)\n 1500:         return super(calendar_event, self).copy(cr, uid, calendar_id2real_id(id), default, context)\n 1501  \n 1502      def _detach_one_event(self, cr, uid, id, values=dict(), context=None):\n ....\n 1513                  rrule='',\n 1514                  recurrency=False,\n 1515:                 final_date=datetime.strptime(data.get('start'), DEFAULT_SERVER_DATETIME_FORMAT if data['allday'] else DEFAULT_SERVER_DATETIME_FORMAT) + timedelta(hours=values.get('duration', False) or data.get('duration'))\n 1516              )\n 1517  \n ....\n 1519              if data.get('id'):\n 1520                  del(data['id'])\n 1521:             new_id = self.copy(cr, uid, real_event_id, default=data, context=context)\n 1522              return new_id\n 1523  \n ....\n 1746              order = context.get('order', self._order)\n 1747              for virtual_id in self.pool[doc_model].get_recurrent_ids(cr, uid, doc_dict.keys(), [], order=order, context=context):\n 1748:                 doc_dict.setdefault(virtual_id, doc_dict[get_real_ids(virtual_id)])\n 1749          return super(mail_message, self)._find_allowed_model_wise(cr, uid, doc_model, doc_dict, context=context)\n 1750  \n ....\n 1801      _inherit = 'mail.wizard.invite'\n 1802  \n 1803:     def default_get(self, cr, uid, fields, context=None):\n 1804          '''\n 1805          in case someone clicked on 'invite others' wizard in the followers widget, transform virtual ids in real ids\n 1806          '''\n 1807:         if 'default_res_id' in context:\n 1808:             context = dict(context, default_res_id=get_real_ids(context['default_res_id']))\n 1809:         result = super(invite_wizard, self).default_get(cr, uid, fields, context=context)\n 1810          if 'res_id' in result:\n 1811              result['res_id'] = get_real_ids(result['res_id'])\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\calendar\\calendar_data.xml:\n    8              <field name=\"res_model\">calendar.event</field>\n    9              <field name=\"description\">Warning, a mandatory field has been modified since the creation of this event</field>\n   10:             <field name=\"default\" eval=\"False\"/>\n   11          </record>\n   12          <record model=\"calendar.alarm\" id=\"alarm_notif_1\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\calendar\\contacts.py:\n   14          'name': fields.related('partner_id', 'display_name', type='char', string='Partner Contact Name', readonly=True),\n   15       }\n   16:     _defaults = {\n   17          'user_id': lambda self, cr, uid, ctx: uid,\n   18          'active' : True,        \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\claim_from_delivery\\claim_delivery_view.xml:\n    7              <field name=\"view_type\">form</field>\n    8              <field name=\"view_id\" ref=\"crm_claim.crm_case_claims_tree_view\"/>\n    9:             <field name=\"context\">{'default_ref': 'stock.picking,'+str(context.get('active_id', False))}</field>\n   10              <field name=\"domain\">[('ref','=','stock.picking,'+str(context.get('active_id',False)))]</field>\n   11          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\base_partner_merge.py:\n  113      }\n  114  \n  115:     def default_get(self, cr, uid, fields, context=None):\n  116          if context is None:\n  117              context = {}\n  118:         res = super(MergePartnerAutomatic, self).default_get(cr, uid, fields, context)\n  119          if context.get('active_model') == 'res.partner' and context.get('active_ids'):\n  120              partner_ids = context['active_ids']\n  ...\n  124          return res\n  125  \n  126:     _defaults = {\n  127          'state': 'option'\n  128      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\base_partner_merge_view.xml:\n   11              view_mode=\"form\"\n   12              name=\"Deduplicate Contact\"\n   13:             context=\"{'default_state': 'option'}\"\n   14          />\n   15  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\crm_data.xml:\n   19          </record>\n   20  \n   21:         <!--default alias for leads-->\n   22          <record id=\"mail_alias_lead_info\" model=\"mail.alias\">\n   23              <field name=\"alias_name\">info</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\crm_lead.py:\n   60      _mail_mass_mailing = _('Leads / Opportunities')\n   61  \n   62:     def _get_default_probability(self, cr, uid, context=None):\n   63:         \"\"\" Gives default probability \"\"\"\n   64:         stage_id = self._get_default_stage_id(cr, uid, context=None)\n   65          if stage_id:\n   66              return self.pool['crm.stage'].browse(cr, uid, stage_id, context=context).probability\n   ..\n   68              return 10\n   69  \n   70:     def _get_default_stage_id(self, cr, uid, context=None):\n   71:         \"\"\" Gives default stage_id \"\"\"\n   72:         team_id = self.pool['crm.team']._get_default_team_id(cr, SUPERUSER_ID, context=context, user_id=uid)\n   73          return self.stage_find(cr, uid, [], team_id, [('fold', '=', False)], context=context)\n   74  \n   ..\n   79          if context is None:\n   80              context = {}\n   81:         return context.get('default_type')\n   82  \n   83      def _read_group_stage_ids(self, cr, uid, ids, domain, read_group_order=None, access_rights_uid=None, context=None):\n   ..\n   90          # retrieve team_id from the context and write the domain\n   91          # - ('id', 'in', 'ids'): add columns that should be present\n   92:         # - OR ('fold', '=', False): add default columns that are not folded\n   93          # - OR ('team_ids', '=', team_id), ('fold', '=', False) if team_id: add team columns that are not folded\n   94          search_domain = []\n   95:         team_id = context and context.get('default_team_id') or False\n   96          if team_id:\n   97              search_domain += ['|', ('team_ids', '=', team_id)]\n   ..\n  170          'email_from': fields.char('Email', size=128, help=\"Email address of the contact\", select=1),\n  171          'team_id': fields.many2one('crm.team', 'Sales Team', oldname='section_id',\n  172:                         select=True, track_visibility='onchange', help='When sending mails, the default email address is taken from the sales team.'),\n  173          'create_date': fields.datetime('Creation Date', readonly=True),\n  174          'email_cc': fields.text('Global CC', help=\"These email addresses will be added to the CC field of all inbound and outbound emails for this record before being sent. Separate multiple email addresses with a comma\"),\n  ...\n  226          'street': fields.char('Street'),\n  227          'street2': fields.char('Street2'),\n  228:         'zip': fields.char('Zip', change_default=True, size=24),\n  229          'city': fields.char('City'),\n  230          'state_id': fields.many2one(\"res.country.state\", 'State'),\n  ...\n  240      }\n  241  \n  242:     _defaults = {\n  243          'active': 1,\n  244          'type': lambda s, cr, uid, c: 'lead' if s.pool['res.users'].has_group(cr, uid, 'crm.group_use_lead') else 'opportunity',\n  245          'user_id': lambda s, cr, uid, c: uid,\n  246:         'stage_id': lambda s, cr, uid, c: s._get_default_stage_id(cr, uid, c),\n  247:         'team_id': lambda s, cr, uid, c: s.pool['crm.team']._get_default_team_id(cr, SUPERUSER_ID, context=c, user_id=uid),\n  248:         'company_id': lambda s, cr, uid, c: s.pool.get('res.company')._company_default_get(cr, uid, 'crm.lead', context=c),\n  249          'priority': lambda *a: crm_stage.AVAILABLE_PRIORITIES[0][0],\n  250:         'probability': lambda s, cr, uid, c: s._get_default_probability(cr, uid, c),\n  251          'color': 0,\n  252          'date_last_stage_update': fields.datetime.now,\n  ...\n  295              if user_id in team.member_ids.ids:\n  296                  return {}\n  297:         team_id = self.pool['crm.team']._get_default_team_id(cr, uid, context=context, user_id=user_id)\n  298          return {'value': {'team_id': team_id}}\n  299  \n  ...\n  303              - type: stage type must be the same or 'both'\n  304              - team_id: if set, stages must belong to this team or\n  305:               be a default stage; if not set, stages must be default\n  306                stages\n  307          \"\"\"\n  ...\n  315          team_ids = set()\n  316          types = ['both']\n  317:         if not cases and context.get('default_type'):\n  318:             ctx_type = context.get('default_type')\n  319              types += [ctx_type]\n  320          if team_id:\n  ...\n  387                  date_action = False\n  388                  if next_activity.days:\n  389:                     date_action = (datetime.now() + timedelta(days=next_activity.days)).strftime(tools.DEFAULT_SERVER_DATETIME_FORMAT),\n  390                  lead.write({\n  391                      'next_activity_id': next_activity.id,\n  ...\n  432          date_action = False\n  433          if activity.days:\n  434:             date_action = (datetime.now() + timedelta(days=activity.days)).strftime(tools.DEFAULT_SERVER_DATETIME_FORMAT)\n  435          return {'value': {\n  436              'next_activity_1': activity.activity_1_id and activity.activity_1_id.name or False,\n  ...\n  834                        (False, 'calendar'), (False, 'graph')],\n  835              'type': 'ir.actions.act_window',\n  836:             'context': {'default_type': 'opportunity'}\n  837          }\n  838  \n  ...\n  868              partner_ids.append(lead.partner_id.id)\n  869          res['context'] = {\n  870:             'search_default_opportunity_id': lead.type == 'opportunity' and lead.id or False,\n  871:             'default_opportunity_id': lead.type == 'opportunity' and lead.id or False,\n  872:             'default_partner_id': lead.partner_id and lead.partner_id.id or False,\n  873:             'default_partner_ids': partner_ids,\n  874:             'default_team_id': lead.team_id and lead.team_id.id or False,\n  875:             'default_name': lead.name,\n  876          }\n  877          return res\n  ...\n  879      def create(self, cr, uid, vals, context=None):\n  880          context = dict(context or {})\n  881:         if vals.get('type') and not context.get('default_type'):\n  882:             context['default_type'] = vals.get('type')\n  883:         if vals.get('team_id') and not context.get('default_team_id'):\n  884:             context['default_team_id'] = vals.get('team_id')\n  885          if vals.get('user_id') and 'date_open' not in vals:\n  886              vals['date_open'] = fields.datetime.now()\n  ...\n  904          return super(crm_lead, self).write(cr, uid, ids, vals, context=context)\n  905  \n  906:     def copy(self, cr, uid, id, default=None, context=None):\n  907:         if not default:\n  908:             default = {}\n  909          if not context:\n  910              context = {}\n  911          lead = self.browse(cr, uid, id, context=context)\n  912          local_context = dict(context)\n  913:         local_context.setdefault('default_type', lead.type)\n  914:         local_context.setdefault('default_team_id', lead.team_id.id)\n  915          if lead.type == 'opportunity':\n  916:             default['date_open'] = fields.datetime.now()\n  917          else:\n  918:             default['date_open'] = False\n  919:         return super(crm_lead, self).copy(cr, uid, id, default, context=local_context)\n  920  \n  921      def get_empty_list_help(self, cr, uid, help, context=None):\n  922          context = dict(context or {})\n  923          context['empty_list_help_model'] = 'crm.team'\n  924:         context['empty_list_help_id'] = context.get('default_team_id', None)\n  925          context['empty_list_help_document_name'] = _(\"opportunities\")\n  926          if help:\n  ...\n  986  \n  987      @api.cr_uid_context\n  988:     def message_get_reply_to(self, cr, uid, ids, default=None, context=None):\n  989          \"\"\" Override to get the reply_to of the parent project. \"\"\"\n  990          leads = self.browse(cr, SUPERUSER_ID, ids, context=context)\n  991          team_ids = set([lead.team_id.id for lead in leads if lead.team_id])\n  992:         aliases = self.pool['crm.team'].message_get_reply_to(cr, uid, list(team_ids), default=default, context=context)\n  993          return dict((lead.id, aliases.get(lead.team_id and lead.team_id.id or 0, False)) for lead in leads)\n  994  \n  ...\n 1020          if custom_values is None:\n 1021              custom_values = {}\n 1022:         defaults = {\n 1023              'name':  msg.get('subject') or _(\"No Subject\"),\n 1024              'email_from': msg.get('from'),\n ....\n 1028          }\n 1029          if msg.get('author_id'):\n 1030:             defaults.update(self.on_change_partner_id(cr, uid, None, msg.get('author_id'), context=context)['value'])\n 1031          if msg.get('priority') in dict(crm_stage.AVAILABLE_PRIORITIES):\n 1032:             defaults['priority'] = msg.get('priority')\n 1033:         defaults.update(custom_values)\n 1034:         return super(crm_lead, self).message_new(cr, uid, msg, custom_values=defaults, context=context)\n 1035  \n 1036      def message_update(self, cr, uid, ids, msg, update_vals=None, context=None):\n ....\n 1063          else:\n 1064              duration = str(duration)\n 1065:         meet_date = datetime.strptime(meeting_date, tools.DEFAULT_SERVER_DATETIME_FORMAT)\n 1066:         meeting_usertime = fields.datetime.context_timestamp(cr, uid, meet_date, context=context).strftime(tools.DEFAULT_SERVER_DATETIME_FORMAT)\n 1067          html_time = \"<time datetime='%s+00:00'>%s</time>\" % (meeting_date, meeting_usertime)\n 1068          message = _(\"Meeting scheduled at '%s'<br> Subject: %s <br> Duration: %s hour(s)\") % (html_time, meeting_subject, duration)\n ....\n 1124              # Expected closing\n 1125              if opp['date_deadline']:\n 1126:                 date_deadline = datetime.strptime(opp['date_deadline'], tools.DEFAULT_SERVER_DATE_FORMAT).date()\n 1127  \n 1128                  if date_deadline == date.today():\n ....\n 1135              # Next activities\n 1136              if opp['next_activity_id'] and opp['date_action']:\n 1137:                 date_action = datetime.strptime(opp['date_action'], tools.DEFAULT_SERVER_DATE_FORMAT).date()\n 1138  \n 1139                  if date_action == date.today():\n ....\n 1146              # Won in Opportunities\n 1147              if opp['date_closed']:\n 1148:                 date_closed = datetime.strptime(opp['date_closed'], tools.DEFAULT_SERVER_DATETIME_FORMAT).date()\n 1149  \n 1150                  if date_closed <= date.today() and date_closed >= date.today().replace(day=1):\n ....\n 1180          for act in activites_done:\n 1181              if act['date']:\n 1182:                 date_act = datetime.strptime(act['date'], tools.DEFAULT_SERVER_DATETIME_FORMAT).date()\n 1183                  if date_act <= date.today() and date_act >= date.today().replace(day=1):\n 1184                          res['done']['this_month'] += 1\n ....\n 1187  \n 1188          # Meetings\n 1189:         min_date = datetime.now().strftime(tools.DEFAULT_SERVER_DATETIME_FORMAT)\n 1190:         max_date = (datetime.now() + timedelta(days=8)).strftime(tools.DEFAULT_SERVER_DATETIME_FORMAT)\n 1191          meetings_domain = [\n 1192              ('start', '>=', min_date),\n ....\n 1197          for meeting in meetings:\n 1198              if meeting['start']:\n 1199:                 start = datetime.strptime(meeting['start'], tools.DEFAULT_SERVER_DATETIME_FORMAT).date()\n 1200  \n 1201                  if start == date.today():\n ....\n 1245      }\n 1246  \n 1247:     _defaults = {\n 1248          'active': True,\n 1249      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\crm_lead_data.xml:\n    8              <field name=\"hidden\" eval=\"True\"/>\n    9              <field name=\"res_model\">crm.lead</field>\n   10:             <field name=\"default\" eval=\"False\"/>\n   11              <field name=\"description\">Lead created</field>\n   12          </record>\n   ..\n   14              <field name=\"name\">Stage Changed</field>\n   15              <field name=\"res_model\">crm.lead</field>\n   16:             <field name=\"default\" eval=\"False\"/>\n   17              <field name=\"description\">Stage changed</field>\n   18          </record>\n   ..\n   20              <field name=\"name\">Opportunity Won</field>\n   21              <field name=\"res_model\">crm.lead</field>\n   22:             <field name=\"default\" eval=\"False\"/>\n   23              <field name=\"description\">Opportunity won</field>\n   24          </record>\n   ..\n   26              <field name=\"name\">Opportunity Lost</field>\n   27              <field name=\"res_model\">crm.lead</field>\n   28:             <field name=\"default\" eval=\"False\"/>\n   29              <field name=\"description\">Opportunity lost</field>\n   30          </record>\n   ..\n   34              <field name=\"sequence\">10</field>\n   35              <field name=\"res_model\">crm.team</field>\n   36:             <field name=\"default\" eval=\"False\"/>\n   37              <field name=\"parent_id\" eval=\"ref('mt_lead_create')\"/>\n   38              <field name=\"relation_field\">team_id</field>\n   ..\n   56              <field name=\"sequence\">13</field>\n   57              <field name=\"res_model\">crm.team</field>\n   58:             <field name=\"default\" eval=\"False\"/>\n   59              <field name=\"parent_id\" eval=\"ref('mt_lead_lost')\"/>\n   60              <field name=\"relation_field\">team_id</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\crm_lead_menu.xml:\n   11          <field name=\"search_view_id\" ref=\"crm.view_crm_case_leads_filter\"/>\n   12          <field name=\"context\">{\n   13:                 'default_type':'lead',\n   14:                 'search_default_type': 'lead',\n   15                  'stage_type':'lead',\n   16                  'needaction_menu_ref': 'crm.menu_crm_opportunities',\n   17:                 'search_default_to_process':1,\n   18              }\n   19          </field>\n   ..\n   38          <field name=\"context\">{\n   39                  'stage_type': 'opportunity',\n   40:                 'default_type': 'opportunity',\n   41:                 'default_user_id': uid\n   42              }\n   43          </field>\n   ..\n   70          <field name=\"context\">{\n   71                  'stage_type': 'opportunity',\n   72:                 'default_type': 'opportunity',\n   73:                 'default_user_id': uid,\n   74:                 'search_default_assigned_to_me': 1,\n   75  }</field>\n   76          <field name=\"search_view_id\" ref=\"crm.view_crm_case_opportunities_filter\"/>\n   ..\n  124          <field name=\"domain\">[('type','=','opportunity')]</field>\n  125          <field name=\"context\">{\n  126:                 'default_type': 'opportunity',\n  127:                 'default_user_id': uid,\n  128:                 'search_default_assigned_to_me': 1\n  129              }\n  130          </field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\crm_lead_view.xml:\n   94                  res_model=\"calendar.event\"\n   95                  view_mode=\"tree,form,calendar\"\n   96:                 context=\"{'default_duration': 4.0, 'default_opportunity_id': active_id}\"\n   97                  view_type=\"form\"/>\n   98  \n   ..\n  134                                  on_change=\"on_change_partner_id(partner_id)\"\n  135                                  options='{\"create_name_field\": \"name\"}'\n  136:                                 context=\"{'default_name': contact_name, 'default_street': street, 'default_city': city, 'default_state_id': state_id, 'default_zip': zip, 'default_country_id': country_id, 'default_function': function, 'default_phone': phone, 'default_mobile': mobile, 'default_fax': fax, 'default_email': email_from, 'default_user_id': user_id, 'default_team_id': team_id}\" groups=\"base.group_no_one\"/>\n  137                              <field name=\"partner_name\" string=\"Company Name\"/>\n  138                              <label for=\"street\" string=\"Address\"/>\n  ...\n  160                          <group>\n  161                              <field name=\"user_id\" on_change=\"on_change_user(user_id, context)\"\n  162:                                 context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'base.group_sale_salesman_all_leads'], 'team_id': team_id}\"/>\n  163                              <field name=\"team_id\" widget=\"selection\" domain=\"[('use_leads','=',True)]\"/>\n  164                              <field name=\"type\" invisible=\"1\"/>\n  ...\n  277              <field name=\"model\">crm.lead</field>\n  278              <field name=\"arch\" type=\"xml\">\n  279:                 <kanban default_group_by=\"stage_id\" class=\"o_kanban_small_column\">\n  280                      <field name=\"stage_id\" options='{\"group_by_tooltip\": {\"requirements\": \"Description\", \"legend_priority\": \"Use of stars\"}}'/>\n  281                      <field name=\"color\"/>\n  ...\n  401                          <button name=\"%(crm.crm_lead_lost_action)d\" string=\"Mark Lost\"\n  402                                  type=\"action\" class=\"oe_highlight\"\n  403:                                 context=\"{'default_lead_id': active_id}\"\n  404                                  attrs=\"{'invisible': [('active', '=', False)]}\"/>\n  405                          <field name=\"stage_id\" widget=\"statusbar\" clickable=\"True\"\n  ...\n  454                                      on_change=\"on_change_partner_id(partner_id)\"\n  455                                      string=\"Customer\"\n  456:                                     context=\"{'default_name': partner_name, 'default_email': email_from, 'default_phone': phone}\"/>\n  457                                  <field name=\"email_from\" string=\"Email\" widget=\"email\"/>\n  458                                  <field name=\"phone\" widget=\"phone\"/>\n  ...\n  498  \n  499                              <group>\n  500:                                 <field name=\"user_id\" on_change=\"on_change_user(user_id, context)\" context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'base.group_sale_salesman_all_leads'], 'team_id': team_id}\"/>\n  501                                  <field name=\"team_id\" widget=\"selection\"/>\n  502                              </group>\n  ...\n  657              <field name=\"model\">crm.lead</field>\n  658              <field name=\"arch\" type=\"xml\">\n  659:                 <tree string=\"Next Activity\" decoration-danger=\"date_action and (date_action &lt; current_date)\" default_order=\"date_action\">\n  660                      <field name=\"name\"/>\n  661                      <field name=\"partner_id\"/>\n  ...\n  682                  id=\"crm.action_lead_mass_mail\"\n  683                  context=\"{\n  684:                             'default_composition_mode': 'mass_mail',\n  685:                             'default_email_to':'{($object.email or \\'\\')|safe}',\n  686:                             'default_use_template': True,\n  687:                             'default_template_id': ref('crm.email_template_opportunity_mail'),\n  688                          }\"\n  689                  groups=\"base.group_sale_salesman\"\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\crm_stage.py:\n   23      _order = \"sequence\"\n   24  \n   25:     def _default_team_ids(self, cr, uid, context=None):\n   26:         return context.get('default_team_id') and [(6, 0, [context['default_team_id']])] or False\n   27  \n   28      _columns = {\n   29          'name': fields.char('Stage Name', required=True, translate=True),\n   30          'sequence': fields.integer('Sequence', help=\"Used to order stages. Lower is better.\"),\n   31:         'probability': fields.float('Probability (%)', required=True, help=\"This percentage depicts the default/average probability of the Case for this stage to be a success\"),\n   32          'on_change': fields.boolean('Change Probability Automatically', help=\"Setting this stage will change the probability automatically on the opportunity.\"),\n   33          'requirements': fields.text('Requirements', help=\"Enter here the internal requirements for this stage (ex: Offer sent to customer). It will appear as a tooltip over the stage's name.\"),\n   ..\n   45      }\n   46  \n   47:     _defaults = {\n   48          'sequence': 1,\n   49          'probability': 10.0,\n   50:         'team_ids': _default_team_ids,\n   51          'fold': False,\n   52          'type': 'both',\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\data\\crm_stage_data.xml:\n   30          <field name=\"type\">opportunity</field>\n   31      </record>\n   32:     <!-- Update data sales team with default stages -->\n   33      <record model=\"crm.team\" id=\"sales_team.team_sales_department\">\n   34          <field name=\"stage_ids\" eval=\"[(4, ref('stage_lead1')), (4, ref('stage_lead2')), (4, ref('stage_lead3')), (4, ref('stage_lead5'))]\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\data\\sales_config_settings_data.xml:\n    2  <odoo>\n    3  \n    4:     <function id=\"default_generate_sales_team_alias\"\n    5:         model=\"ir.values\" name=\"set_default\"\n    6          eval=\"('sales.config.settings', 'generate_sales_team_alias', True)\"/>\n    7  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\models\\crm_activity.py:\n   25      _order = \"sequence\"\n   26  \n   27:     days = fields.Integer('Number of days', default=0,\n   28                            help='Number of days before executing the action, allowing you to plan the date of the action.')\n   29:     sequence = fields.Integer('Sequence', default=0)\n   30      team_id = fields.Many2one('crm.team', string='Sales Team')\n   31      subtype_id = fields.Many2one('mail.message.subtype', string='Message Subtype', required=True, ondelete='cascade')\n   ..\n   37      def create(self, values):\n   38          ''' Override to set the res_model of inherited subtype to crm.lead.\n   39:         This cannot be achieved using a default on res_model field because\n   40          of the inherits. Indeed a new field would be created. However the\n   41          field on the subtype would still exist. Being void, the subtype\n   42          will be present for every model in Odoo. That's quite an issue. '''\n   43:         if not values.get('res_model') and 'default_res_model' not in self._context:\n   44              values['res_model'] = 'crm.lead'\n   45:         if 'internal' not in values and 'default_internal' not in self._context:\n   46              values['internal'] = True\n   47          return super(CrmActivity, self).create(values)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\report\\crm_activity_report_view.xml:\n   68             <field name=\"view_type\">form</field>\n   69             <field name=\"view_mode\">pivot,graph</field>\n   70:            <field name=\"context\">{'search_default_team_id': active_id}</field>\n   71             <field name=\"domain\">[]</field>\n   72         </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\report\\crm_opportunity_report_view.xml:\n  153               <field name=\"view_type\">form</field>\n  154               <field name=\"view_mode\">pivot,graph</field>\n  155:              <field name=\"context\">{'search_default_opportunity': True, 'search_default_current': True, 'active_test': True, 'search_default_my': True}</field>\n  156              <field name=\"view_ids\" \n  157                     eval=\"[(5, 0, 0),\n  ...\n  172               <field name=\"view_type\">form</field>\n  173               <field name=\"view_mode\">graph,pivot</field>\n  174:              <field name=\"context\">{'search_default_opportunity': True, 'search_default_current': True, 'active_test': True, 'search_default_my': True}</field>\n  175              <field name=\"view_ids\" \n  176                     eval=\"[(5, 0, 0),\n  ...\n  189              <field name=\"view_type\">form</field>\n  190              <field name=\"view_mode\">pivot,graph</field>\n  191:             <field name=\"context\">{'search_default_current': True, 'active_test': True}</field>\n  192              <field name=\"view_ids\" \n  193                     eval=\"[(5, 0, 0),\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\res_config.py:\n   14              \"Automatically generate an email alias at the sales team creation\",\n   15              help=\"Odoo will generate an email alias based on the sales team name\"),\n   16:         'alias_prefix': fields.char('Default Alias Name for Leads'),\n   17          'alias_domain' : fields.char('Alias Domain'),\n   18          'group_use_lead': fields.selection([\n   ..\n   26      }\n   27  \n   28:     _defaults = {\n   29          'alias_domain': lambda self, cr, uid, context: self.pool[\"ir.config_parameter\"].get_param(cr, uid, \"mail.catchall.domain\", context=context),\n   30      }\n   31  \n   32:     def _find_default_lead_alias_id(self, cr, uid, context=None):\n   33          alias_id = self.pool['ir.model.data'].xmlid_to_res_id(cr, uid, 'crm.mail_alias_lead_info')\n   34          if not alias_id:\n   ..\n   39                      ('alias_parent_model_id.model', '=', 'crm.team'),\n   40                      ('alias_parent_thread_id', '=', False),\n   41:                     ('alias_defaults', '=', '{}')\n   42                  ], context=context)\n   43              alias_id = alias_ids and alias_ids[0] or False\n   44          return alias_id\n   45  \n   46:     def get_default_generate_sales_team_alias(self, cr, uid, ids, context=None):\n   47:         return {'generate_sales_team_alias': self.pool['ir.values'].get_default(\n   48              cr, uid, 'sales.config.settings', 'generate_sales_team_alias')}\n   49  \n   50:     def set_default_generate_sales_team_alias(self, cr, uid, ids, context=None):\n   51          config_value = self.browse(cr, uid, ids, context=context).generate_sales_team_alias\n   52:         self.pool['ir.values'].set_default(cr, uid, 'sales.config.settings', 'generate_sales_team_alias', config_value)\n   53  \n   54:     def get_default_alias_prefix(self, cr, uid, ids, context=None):\n   55          alias_name = False\n   56:         alias_id = self._find_default_lead_alias_id(cr, uid, context=context)\n   57          if alias_id:\n   58              alias_name = self.pool['mail.alias'].browse(cr, uid, alias_id, context=context).alias_name\n   59          return {'alias_prefix': alias_name}\n   60  \n   61:     def set_default_alias_prefix(self, cr, uid, ids, context=None):\n   62          mail_alias = self.pool['mail.alias']\n   63          for record in self.browse(cr, uid, ids, context=context):\n   64:             alias_id = self._find_default_lead_alias_id(cr, uid, context=context)\n   65              if not alias_id:\n   66                  create_ctx = dict(context, alias_model_name='crm.lead', alias_parent_model_name='crm.team')\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\res_partner.py:\n   74          res = self.pool.get('ir.actions.act_window').for_xml_id(cr, uid, 'calendar', 'action_calendar_event', context)\n   75          res['context'] = {\n   76:             'search_default_partner_ids': context['partner_name'],\n   77:             'default_partner_ids': partner_ids,\n   78          }\n   79          return res\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\res_partner_view.xml:\n    9              <field name=\"res_model\">calendar.event</field>\n   10              <field name=\"view_mode\">calendar,tree,form</field>\n   11:             <field name=\"context\">{'default_partner_ids': [active_id], 'search_default_partner_ids': [active_id]}</field>\n   12          </record>\n   13  \n   ..\n   19              <field name=\"domain\">[('type','=','opportunity')]</field>\n   20              <field name=\"context\">{\n   21:                 'search_default_partner_id': active_id,\n   22                  'stage_type': 'opportunity', \n   23:                 'default_type': 'opportunity'\n   24              }</field>\n   25              <field name=\"view_id\" eval=\"False\"/>\n   ..\n   91                              name=\"%(crm.crm_lead_opportunities)d\"\n   92                              icon=\"fa-star\"\n   93:                             context=\"{'search_default_partner_id': active_id}\">\n   94                              <field string=\"Opportunities\" name=\"opportunity_count\" widget=\"statinfo\"/>\n   95                          </button>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\sales_team.py:\n   10      _inherits = {'mail.alias': 'alias_id'}\n   11  \n   12:     def _get_default_stage_ids(self, cr, uid, context=None):\n   13          return [\n   14              (0, 0, {\n   ..\n   65          \"\"\"Installation hook to create aliases for all lead and avoid constraint errors.\"\"\"\n   66          return self.pool.get('mail.alias').migrate_to_alias(cr, self._name, self._table, super(crm_team, self)._auto_init,\n   67:             'crm.lead', self._columns['alias_id'], 'name', alias_prefix='Lead+', alias_defaults={}, context=context)\n   68  \n   69:     _defaults = {\n   70:         'stage_ids': _get_default_stage_ids,\n   71          'use_opportunities': True,\n   72      }\n   ..\n   77          return {'value': {'alias_name': False}}\n   78  \n   79:     def _get_alias_defaults_values(self, cr, uid, ids, context=None):\n   80          res = dict.fromkeys(ids, False)\n   81          is_group_use_lead = self.pool['res.users'].has_group(cr, uid, 'crm.group_use_lead')\n   82          for team in self.browse(cr, uid, ids, context=context):\n   83:             alias_defaults = eval(team.alias_defaults)\n   84:             alias_defaults.update({\n   85                  'type': 'lead' if is_group_use_lead and team.use_leads else 'opportunity',\n   86                  'team_id': team.id,\n   87              })\n   88              res[team.id] = {\n   89:                 'alias_defaults': alias_defaults,\n   90                  'alias_parent_thread_id': team.id,\n   91              }\n   ..\n   96              context = {}\n   97          create_context = dict(context, alias_model_name='crm.lead', alias_parent_model_name=self._name)\n   98:         generate_alias_name = self.pool['ir.values'].get_default(cr, uid, 'sales.config.settings', 'generate_sales_team_alias')\n   99          if generate_alias_name and not vals.get('alias_name'):\n  100              vals['alias_name'] = vals.get('name')\n  101          team_id = super(crm_team, self).create(cr, uid, vals, context=create_context)\n  102          self.write(cr, uid, [team_id],\n  103:                    self._get_alias_defaults_values(cr, uid, [team_id], context=context)[team_id],\n  104                     context=context)\n  105          return team_id\n  ...\n  107      def write(self, cr, uid, ids, vals, context=None):\n  108          res = super(crm_team, self).write(cr, uid, ids, vals, context=context)\n  109:         if vals.get('use_leads') or vals.get('alias_defaults'):\n  110:             alias_res = self._get_alias_defaults_values(cr, uid, ids, context=context)\n  111              for team_id, values in alias_res.iteritems():\n  112                  super(crm_team, self).write(cr, uid, [team_id], values, context=context)\n  ...\n  138  </p>\"\"\"\n  139              if user_team_id:\n  140:                 action['help'] += \"<p>As you don't belong to any sales team, Odoo opens the first one by default.</p>\"\n  141  \n  142          action_context = eval(action['context'], {'uid': uid})\n  143          if user_team_id:\n  144              action_context.update({\n  145:                 'default_team_id': user_team_id,\n  146:                 'search_default_team_id': user_team_id\n  147              })\n  148  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\sales_team_dashboard.xml:\n    8          <field name=\"domain\">[('type','=','opportunity')]</field>\n    9          <field name=\"context\">{\n   10:                 'search_default_team_id': [active_id],\n   11:                 'default_team_id': active_id,\n   12                  'stage_type': 'opportunity',\n   13:                 'default_type': 'opportunity',\n   14:                 'default_user_id': uid,\n   15          }\n   16          </field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\sales_team_view.xml:\n   13              <field name=\"search_view_id\" ref=\"crm.view_crm_case_leads_filter\"/>\n   14              <field name=\"context\">{\n   15:                     'search_default_team_id': [active_id],\n   16:                     'default_team_id': active_id,\n   17:                     'default_type': 'lead',\n   18                      'stage_type': 'lead',\n   19                  }\n   ..\n   42              <field name=\"search_view_id\" ref=\"crm.view_crm_case_opportunities_filter\"/>\n   43              <field name=\"context\">{\n   44:                     'search_default_team_id': [active_id],\n   45:                     'default_team_id': active_id,\n   46                      'stage_type': 'opportunity',\n   47:                     'default_type': 'opportunity',\n   48:                     'default_user_id': uid,\n   49                  }\n   50              </field>\n   ..\n   64             <field name=\"name\">Leads Analysis</field>\n   65             <field name=\"res_model\">crm.opportunity.report</field>\n   66:            <field name=\"context\">{\"search_default_month\":1}</field>\n   67             <field name=\"view_mode\">pivot,graph</field>\n   68             <field name=\"view_id\" ref=\"crm.crm_opportunity_report_view_pivot_lead\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\web_planner_data.xml:\n  142                                          Examples:\n  143                                          <select id=\"input_element_pipeline\">\n  144:                                             <option value=\"odoo_default\">Odoo Default</option>\n  145                                              <option value=\"solution_selling\">Solution Selling</option>\n  146                                              <option value=\"b2c\">B2C</option>\n  ...\n  361                                      <h4><strong>Standard quotation</strong> <span class=\"small\">(products or services)</span></h4>\n  362                                      <span>\n  363:                                         <li>This is the default configuration, there is nothing to setup.</li>\n  364                                      </span>\n  365                                      <br/>\n  ...\n  630                              <div class=\"well well-sm text-center relative\">\n  631                                  <p>\n  632:                                     This email address has been preconfigured as the default\n  633                                      for your sales department.<br/>\n  634                                      <a t-att-href=\"prepare_backend_url('base_setup.action_sale_config')\">(you can change it here)</a>\n  ...\n  639                          <div class=\"col-md-4 text-center\">\n  640                              <div class=\"well well-lg\">\n  641:                                 <h4><span class=\"label label-default text-center odoo_purple\">Incoming email</span></h4>\n  642                                  <span class=\"fa fa-angle-down fa-2x\"></span>\n  643:                                 <h4><span class=\"label label-default text-center odoo_purple\">Lead</span></h4>\n  644                                  <span class=\"fa fa-angle-down fa-2x\"></span>\n  645:                                 <h4><span class=\"label label-default text-center odoo_purple\">Opportunity</span></h4>\n  646                                  <span class=\"fa fa-angle-down fa-2x\"></span>\n  647:                                 <h4><span class=\"label label-default text-center odoo_purple\">Quotation</span></h4>\n  648                              </div>\n  649                          </div>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\wizard\\crm_lead_lost_view.xml:\n   12                      <footer>\n   13                          <button name=\"action_lost_reason_apply\" string=\"Submit\" type=\"object\" class=\"btn btn-sm btn-primary\"/>\n   14:                         <button string=\"Cancel\" class=\"btn btn-sm btn-default\" special=\"cancel\"/>\n   15                      </footer>\n   16                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\wizard\\crm_lead_to_opportunity.py:\n   31          return self.pool.get('crm.lead')._get_duplicated_leads_by_emails(cr, uid, partner_id, email, include_lost=include_lost, context=context)\n   32  \n   33:     def default_get(self, cr, uid, fields, context=None):\n   34          \"\"\"\n   35:         Default get for name, opportunity_ids.\n   36          If there is an exisitng partner link to the lead, find all existing\n   37          opportunities links with this partner to merge all information together\n   ..\n   39          lead_obj = self.pool.get('crm.lead')\n   40  \n   41:         res = super(crm_lead2opportunity_partner, self).default_get(cr, uid, fields, context=context)\n   42          if context.get('active_id'):\n   43              tomerge = [int(context['active_id'])]\n   ..\n  187      }\n  188  \n  189:     _defaults = {\n  190          'deduplicate': True,\n  191      }\n  192  \n  193:     def default_get(self, cr, uid, fields, context=None):\n  194:         res = super(crm_lead2opportunity_mass_convert, self).default_get(cr, uid, fields, context)\n  195          if 'partner_id' in fields:\n  196:             # avoid forcing the partner of the first lead as default\n  197              res['partner_id'] = False\n  198          if 'action' in fields:\n  ...\n  219              duplicated_leads = self._get_duplicated_leads(cr, uid, partner_id, email)\n  220              if len(duplicated_leads) > 1:\n  221:                 partners_duplicated_leads.setdefault((partner_id, email), []).extend(duplicated_leads)\n  222          leads_with_duplicates = []\n  223          for lead in active_leads:\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\wizard\\crm_lead_to_opportunity_view.xml:\n   39                      <footer>\n   40                          <button name=\"action_apply\" string=\"Create Opportunity\" type=\"object\" class=\"btn-primary\"/>\n   41:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   42                      </footer>\n   43                  </form>\n   ..\n   88                      <footer>\n   89                          <button name=\"mass_convert\" string=\"Convert to Opportunities\" type=\"object\" class=\"btn-primary\"/>\n   90:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   91                      </footer>\n   92                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\wizard\\crm_merge_opportunities.py:\n   41              return lead_obj.redirect_lead_view(cr, uid, merge_id, context=context)\n   42  \n   43:     def default_get(self, cr, uid, fields, context=None):\n   44          \"\"\"\n   45          Use active_ids from the context to fetch the leads/opps to merge.\n   ..\n   49              context = {}\n   50          record_ids = context.get('active_ids', False)\n   51:         res = super(crm_merge_opportunity, self).default_get(cr, uid, fields, context=context)\n   52  \n   53          if record_ids:\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\wizard\\crm_merge_opportunities_view.xml:\n   30                      <footer>\n   31                          <button name=\"action_merge\" type=\"object\" string=\"Merge\" class=\"btn-primary\"/>\n   32:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   33                      </footer>\n   34                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm\\wizard\\crm_partner_binding.py:\n   66          return partner_id\n   67  \n   68:     def default_get(self, cr, uid, fields, context=None):\n   69:         res = super(crm_partner_binding, self).default_get(cr, uid, fields, context=context)\n   70          partner_id = self._find_matching_partner(cr, uid, context=context)\n   71  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm_claim\\crm_claim.py:\n   25          'team_ids':fields.many2many('crm.team', 'crm_team_claim_stage_rel', 'stage_id', 'team_id', string='Teams',\n   26                          help=\"Link between stages and sales teams. When set, this limitate the current stage to the selected sales teams.\"),\n   27:         'case_default': fields.boolean('Common to All Teams',\n   28:                         help=\"If you check this field, this stage will be proposed by default on each sales team. It will not assign this stage to existing teams.\"),\n   29      }\n   30  \n   31:     _defaults = {\n   32          'sequence': lambda *args: 1,\n   33      }\n   ..\n   41      _inherit = ['mail.thread']\n   42  \n   43:     def _get_default_stage_id(self, cr, uid, context=None):\n   44:         \"\"\" Gives default stage_id \"\"\"\n   45:         team_id = self.pool['crm.team']._get_default_team_id(cr, uid, context=context)\n   46          return self.stage_find(cr, uid, [], team_id, [('sequence', '=', '1')], context=context)\n   47  \n   ..\n   75          'partner_phone': fields.char('Phone'),\n   76          'stage_id': fields.many2one ('crm.claim.stage', 'Stage', track_visibility='onchange',\n   77:                 domain=\"['|', ('team_ids', '=', team_id), ('case_default', '=', True)]\"),\n   78          'cause': fields.text('Root Cause'),\n   79      }\n   80  \n   81:     _defaults = {\n   82          'user_id': lambda s, cr, uid, c: uid,\n   83:         'team_id': lambda s, cr, uid, c: s.pool['crm.team']._get_default_team_id(cr, uid, context=c),\n   84          'date': fields.datetime.now,\n   85:         'company_id': lambda s, cr, uid, c: s.pool.get('res.company')._company_default_get(cr, uid, 'crm.case', context=c),\n   86          'priority': '1',\n   87          'active': lambda *a: 1,\n   88:         'stage_id': lambda s, cr, uid, c: s._get_default_stage_id(cr, uid, c)\n   89      }\n   90  \n   ..\n   93              Parameter of the stage search taken from the lead:\n   94              - team_id: if set, stages must belong to this team or\n   95:               be a default case\n   96          \"\"\"\n   97          if isinstance(cases, (int, long)):\n   ..\n  104              if claim.team_id:\n  105                  team_ids.append(claim.team_id.id)\n  106:         # OR all team_ids and OR with case_default\n  107          search_domain = []\n  108          if team_ids:\n  ...\n  110              for team_id in team_ids:\n  111                  search_domain.append(('team_ids', '=', team_id))\n  112:         search_domain.append(('case_default', '=', True))\n  113          # AND with the domain in parameter\n  114          search_domain += list(domain)\n  ...\n  130      def create(self, cr, uid, vals, context=None):\n  131          context = dict(context or {})\n  132:         if vals.get('team_id') and not context.get('default_team_id'):\n  133:             context['default_team_id'] = vals.get('team_id')\n  134  \n  135          # context: no_log, because subtype already handle this\n  136          return super(crm_claim, self).create(cr, uid, vals, context=context)\n  137  \n  138:     def copy(self, cr, uid, id, default=None, context=None):\n  139          claim = self.browse(cr, uid, id, context=context)\n  140:         default = dict(default or {},\n  141:             stage_id = self._get_default_stage_id(cr, uid, context=context),\n  142              name = _('%s (copy)') % claim.name)\n  143:         return super(crm_claim, self).copy(cr, uid, id, default, context=context)\n  144  \n  145      # -------------------------------------------------------\n  ...\n  155              custom_values = {}\n  156          desc = html2plaintext(msg.get('body')) if msg.get('body') else ''\n  157:         defaults = {\n  158              'name': msg.get('subject') or _(\"No Subject\"),\n  159              'description': desc,\n  ...\n  163          }\n  164          if msg.get('priority'):\n  165:             defaults['priority'] = msg.get('priority')\n  166:         defaults.update(custom_values)\n  167:         return super(crm_claim, self).message_new(cr, uid, msg, custom_values=defaults, context=context)\n  168  \n  169  class res_partner(osv.osv):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm_claim\\crm_claim_data.xml:\n   41              <field name=\"name\">New</field>\n   42              <field name=\"sequence\">1</field>\n   43:             <field name=\"case_default\" eval=\"True\"/>\n   44          </record>\n   45          <record model=\"crm.claim.stage\" id=\"stage_claim5\">\n   46              <field name=\"name\">In Progress</field>\n   47              <field name=\"sequence\">27</field>\n   48:             <field name=\"case_default\" eval=\"True\"/>\n   49          </record>\n   50          <record model=\"crm.claim.stage\" id=\"stage_claim2\">\n   51              <field name=\"name\">Settled</field>\n   52              <field name=\"sequence\">28</field>\n   53:             <field name=\"case_default\" eval=\"True\"/>\n   54          </record>\n   55          <record model=\"crm.claim.stage\" id=\"stage_claim3\">\n   56              <field name=\"name\">Rejected</field>\n   57              <field name=\"sequence\">29</field>\n   58:             <field name=\"case_default\" eval=\"True\"/>\n   59          </record>\n   60          \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm_claim\\crm_claim_menu.xml:\n   17              <field name=\"view_mode\">tree,calendar,form</field>\n   18              <field name=\"view_id\" ref=\"crm_case_claims_tree_view\"/>\n   19:             <field name=\"context\">{\"search_default_user_id\":uid, \"stage_type\":'claim'}</field>\n   20              <field name=\"search_view_id\" ref=\"crm_claim.view_crm_case_claims_filter\"/>\n   21              <field name=\"help\" type=\"html\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm_claim\\crm_claim_view.xml:\n   72                      <group col=\"4\">\n   73                          <field name=\"name\"/>\n   74:                         <field name=\"case_default\"/>\n   75                          <field name=\"sequence\"/>\n   76                      </group>\n   ..\n  130                      </group>\n  131                      <group colspan=\"4\" col=\"4\"  groups=\"base.group_user\">\n  132:                         <field name=\"user_id\" context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'base.group_sale_salesman_all_leads']}\"/>\n  133                          <field name=\"priority\" widget=\"priority\"/>\n  134                          <field name=\"team_id\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm_claim\\report\\crm_claim_report_view.xml:\n   83              <field name=\"view_type\">form</field>\n   84              <field name=\"view_mode\">pivot,graph</field>\n   85:             <field name=\"context\">{\"search_default_year\":1,\"search_default_User\":1,\"search_default_This Month\":1,'group_by_no_leaf':1,'group_by':[]}</field>\n   86              <field name=\"search_view_id\" ref=\"view_report_crm_claim_filter\"/>\n   87              <field name=\"view_id\"></field>  <!-- force empty -->\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm_claim\\res_partner_view.xml:\n   12                  <div name=\"button_box\" position=\"inside\">\n   13                      <button class=\"oe_stat_button\" type=\"action\" \n   14:                         context=\"{'search_default_partner_id': active_id, 'default_partner_id': active_id}\"\n   15                          name=\"%(crm_claim_category_claim0)d\" icon=\"fa-comments\" groups=\"base.group_sale_salesman\">\n   16                          <field string=\"Claims\" name=\"claim_count\" widget=\"statinfo\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm_partner_assign\\crm_lead_view.xml:\n   27                                  attrs=\"{'invisible':[('partner_assigned_id','=',False)]}\"\n   28                                  name=\"%(crm_lead_forward_to_partner_act)d\"\n   29:                                 context=\"{'default_composition_mode': 'forward','hide_forward_type': 1 , 'default_partner_ids': [partner_assigned_id]}\"/>\n   30                          </group>\n   31                      </page>\n   ..\n   88                                  attrs=\"{'invisible':[('partner_assigned_id','=',False)]}\"\n   89                                  name=\"%(crm_lead_forward_to_partner_act)d\"\n   90:                                 context=\"{'default_composition_mode': 'forward','hide_forward_type': 1 , 'default_partner_ids': [partner_assigned_id]}\"/>\n   91                          </group>\n   92                      </page>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm_partner_assign\\crm_partner_assign.py:\n   19              help=\"Gives the probability to assign a lead to this partner. (0 means no assignation.)\"),\n   20      }\n   21:     _defaults = {\n   22          'active': lambda *args: 1,\n   23          'partner_weight':1\n   ..\n   53          ),\n   54      }\n   55:     _defaults = {\n   56          'partner_weight': lambda *args: 0\n   57      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm_partner_assign\\report\\crm_lead_report_view.xml:\n   71              <field name=\"res_model\">crm.lead.report.assign</field>\n   72              <field name=\"view_type\">form</field>\n   73:             <field name=\"context\">{'default_type': 'opportunity', 'group_by_no_leaf':1,'group_by':[]}</field>\n   74              <field name=\"view_mode\">pivot,graph</field>\n   75              <field name=\"domain\">[('type', '=', 'opportunity')]</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm_partner_assign\\wizard\\crm_channel_interested.py:\n   16          'comment': fields.text('Comment', help=\"What are the elements that have led to this decision?\", required=True),\n   17      }\n   18:     _defaults = {\n   19          'interested': lambda self, cr, uid, c: c.get('interested', True),\n   20          'contacted': False,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm_partner_assign\\wizard\\crm_channel_interested_view.xml:\n   28                      <footer>\n   29                          <button name=\"action_confirm\" string=\"Confirm\" type=\"object\" class=\"btn-primary\"/>\n   30:                         <button string=\"Cancel\" special=\"cancel\" class=\"btn-default\"/>\n   31                      </footer>\n   32              	</form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm_partner_assign\\wizard\\crm_forward_to_partner.py:\n   30                  }\n   31  \n   32:     def default_get(self, cr, uid, fields, context=None):\n   33          if context is None:\n   34              context = {}\n   ..\n   39          except ValueError:\n   40              template_id = False\n   41:         res = super(crm_lead_forward_to_partner, self).default_get(cr, uid, fields, context=context)\n   42          active_ids = context.get('active_ids')\n   43:         default_composition_mode = context.get('default_composition_mode')\n   44          res['assignation_lines'] = []\n   45          if template_id:\n   ..\n   47          if active_ids:\n   48              lead_ids = lead_obj.browse(cr, uid, active_ids, context=context)\n   49:             if default_composition_mode == 'mass_mail':\n   50                  partner_assigned_ids = lead_obj.search_geo_partner(cr, uid, active_ids, context=context)\n   51              else:\n   ..\n  142      }\n  143  \n  144:     _defaults = {\n  145          'forward_type': lambda self, cr, uid, c: c.get('forward_type') or 'single',\n  146      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm_partner_assign\\wizard\\crm_forward_to_partner_view.xml:\n   32                      <footer>\n   33                          <button name=\"action_forward\" string=\"Send\" type=\"object\" class=\"btn-primary\"/>\n   34:                         <button string=\"Cancel\" special=\"cancel\" class=\"btn-default\"/>\n   35                      </footer>\n   36                  </form>\n   ..\n   51              src_model=\"crm.lead\" view_mode=\"form\" target=\"new\" view_type=\"form\"\n   52              groups=\"base.group_sale_manager\"\n   53:             context=\"{'default_composition_mode' : 'mass_mail'}\" view_id=\"crm_lead_forward_to_partner_form\" />\n   54  \n   55      </data>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm_project_issue\\project_issue.py:\n   13      }\n   14  \n   15:     _defaults = {\n   16          \"lead_id\": lambda self, cr, uid, context=None: context.get('active_id')\n   17      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\crm_project_issue\\project_issue_view.xml:\n   23                  <footer>\n   24                      <button type=\"object\" name=\"action_lead_to_project_issue\" string=\"Create Issue\" class=\"btn-primary\"/>\n   25:                     <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   26                  </footer>\n   27              </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\decimal_precision\\decimal_precision.py:\n   14          'digits': fields.integer('Digits', required=True),\n   15      }\n   16:     _defaults = {\n   17          'digits': 2,\n   18      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\delivery\\models\\delivery_carrier.py:\n   34      # -------------------------------- #\n   35  \n   36:     sequence = fields.Integer(help=\"Determine the display order\", default=10)\n   37      # This field will be overwritten by internal shipping providers by adding their own type (ex: 'fedex')\n   38:     delivery_type = fields.Selection([('fixed', 'Fixed Price'), ('base_on_rule', 'Based on Rules')], string='Price Computation', default='fixed', required=True)\n   39:     product_type = fields.Selection(related='product_id.type', default='service')\n   40:     product_sale_ok = fields.Boolean(related='product_id.sale_ok', default=False)\n   41      partner_id = fields.Many2one('res.partner', string='Transporter Company', required=True, help=\"The partner that is doing the delivery service.\")\n   42      product_id = fields.Many2one('product.product', string='Delivery Product', required=True, ondelete=\"cascade\")\n   43      price = fields.Float(compute='get_price')\n   44      available = fields.Boolean(compute='get_price')\n   45:     free_if_more_than = fields.Boolean('Free if Order total is more than', help=\"If the order is more expensive than a certain amount, the customer can benefit from a free shipping\", default=False)\n   46      amount = fields.Float(string='Amount', help=\"Amount of the order to benefit from a free shipping, expressed in the company currency\")\n   47      country_ids = fields.Many2many('res.country', 'delivery_carrier_country_rel', 'carrier_id', 'country_id', 'Countries')\n   ..\n   51      price_rule_ids = fields.One2many('delivery.price.rule', 'carrier_id', 'Pricing Rules', copy=True)\n   52      fixed_price = fields.Float(compute='_compute_fixed_price', inverse='_set_product_fixed_price', store=True, string='Fixed Price',help=\"Keep empty if the pricing depends on the advanced pricing per destination\")\n   53:     shipping_enabled = fields.Boolean(string=\"Shipping enabled\", default=True, help=\"Uncheck this box to disable package shipping while validating Delivery Orders\")\n   54  \n   55      @api.multi\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\delivery\\models\\delivery_price_rule.py:\n   24  \n   25      name = fields.Char(compute='_get_name')\n   26:     sequence = fields.Integer(required=True, help=\"Gives the sequence order when calculating delivery carrier.\", default=10)\n   27      carrier_id = fields.Many2one('delivery.carrier', 'Carrier', required=True, ondelete='cascade')\n   28:     variable = fields.Selection([('weight', 'Weight'), ('volume', 'Volume'), ('wv', 'Weight * Volume'), ('price', 'Price'), ('quantity', 'Quantity')], 'Variable', required=True, default='weight')\n   29:     operator = fields.Selection([('==', '='), ('<=', '<='), ('<', '<'), ('>=', '>='), ('>', '>')], 'Operator', required=True, default='<=')\n   30      max_value = fields.Float('Maximum Value', required=True)\n   31:     variable_factor = fields.Selection([('weight', 'Weight'), ('volume', 'Volume'), ('wv', 'Weight * Volume'), ('price', 'Price'), ('quantity', 'Quantity')], 'Variable Factor', required=True, default='weight')\n   32:     list_base_price = fields.Float(string='Sale Base Price', digits=dp.get_precision('Product Price'), required=True, default=0.0)\n   33:     list_price = fields.Float('Sale Price', digits=dp.get_precision('Product Price'), required=True, default=0.0)\n   34:     standard_price = fields.Float('Cost Price', digits=dp.get_precision('Product Price'), required=True, default=0.0)\n   35  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\delivery\\models\\sale_order.py:\n  105      _inherit = 'sale.order.line'\n  106  \n  107:     is_delivery = fields.Boolean(string=\"Is a Delivery\", default=False)\n  108      product_qty = fields.Float(compute='_compute_product_qty', string='Quantity', digits=dp.get_precision('Product Unit of Measure'))\n  109  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\delivery\\models\\stock_move.py:\n   10      _inherit = 'stock.move'\n   11  \n   12:     def _default_uom(self):\n   13          uom_categ_id = self.env.ref('product.product_uom_categ_kgm').id\n   14          return self.env['product.uom'].search([('category_id', '=', uom_categ_id), ('factor', '=', 1)], limit=1)\n   15  \n   16      weight = fields.Float(compute='_cal_move_weight', digits=dp.get_precision('Stock Weight'), store=True)\n   17:     weight_uom_id = fields.Many2one('product.uom', string='Unit of Measure', required=True, readonly=True, help=\"Unit of Measure (Unit of Measure) is the unit of measurement for Weight\", default=_default_uom)\n   18  \n   19      @api.depends('product_id', 'product_uom_qty', 'product_uom')\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\delivery\\models\\stock_picking.py:\n   27      _inherit = 'stock.picking'\n   28  \n   29:     def _default_uom(self):\n   30          uom_categ_id = self.env.ref('product.product_uom_categ_kgm').id\n   31          return self.env['product.uom'].search([('category_id', '=', uom_categ_id), ('factor', '=', 1)], limit=1)\n   ..\n   60      carrier_tracking_ref = fields.Char(string='Carrier Tracking Ref', copy=False)\n   61      number_of_packages = fields.Integer(string='Number of Packages', copy=False)\n   62:     weight_uom_id = fields.Many2one('product.uom', string='Unit of Measure', required=True, readonly=\"1\", help=\"Unit of measurement for Weight\", default=_default_uom)\n   63      package_ids = fields.Many2many('stock.quant.package', compute='_compute_packages', string='Packages')\n   64      weight_bulk = fields.Float('Bulk Weight', compute='_compute_bulk_weight')\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\delivery\\tests\\test_delivery_cost.py:\n  119              \"Delivey cost is not correspond.\")\n  120  \n  121:         # I set default delivery policy\n  122  \n  123:         self.default_delivery_policy = self.SaleConfigSetting.create({})\n  124  \n  125:         self.default_delivery_policy.execute()\n  126  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\event\\data\\event_data.xml:\n   21          </function>\n   22  \n   23:         <!-- Automatic confirmation of events by default -->\n   24:         <function id=\"default_auto_confirmation\" model=\"ir.values\" name=\"set_default\" eval=\"('event.config.settings', 'auto_confirmation', True)\"/>\n   25  \n   26          <!-- Event Mail Scheduler-->\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\event\\models\\event.py:\n   12  \n   13      name = fields.Char('Event Type', required=True, translate=True)\n   14:     default_reply_to = fields.Char('Reply To')\n   15:     default_registration_min = fields.Integer(\n   16:         'Default Minimum Registration', default=0,\n   17:         help=\"It will select this default minimum value when you choose this event\")\n   18:     default_registration_max = fields.Integer(\n   19:         'Default Maximum Registration', default=0,\n   20:         help=\"It will select this default maximum value when you choose this event\")\n   21  \n   22  \n   ..\n   31          string='Event Name', translate=True, required=True,\n   32          readonly=False, states={'done': [('readonly', True)]})\n   33:     active = fields.Boolean(default=True, track_visibility=\"onchange\")\n   34      user_id = fields.Many2one(\n   35          'res.users', string='Responsible',\n   36:         default=lambda self: self.env.user,\n   37          readonly=False, states={'done': [('readonly', True)]})\n   38      company_id = fields.Many2one(\n   39:         'res.company', string='Company', change_default=True,\n   40:         default=lambda self: self.env['res.company']._company_default_get('event.event'),\n   41          required=False, readonly=False, states={'done': [('readonly', True)]})\n   42      organizer_id = fields.Many2one(\n   43          'res.partner', string='Organizer',\n   44:         default=lambda self: self.env.user.company_id.partner_id)\n   45      event_type_id = fields.Many2one(\n   46          'event.type', string='Category',\n   ..\n   48          oldname='type')\n   49      color = fields.Integer('Kanban Color Index')\n   50:     event_mail_ids = fields.One2many('event.mail', 'event_id', string='Mail Schedule', default=lambda self: self._default_event_mail_ids())\n   51  \n   52      @api.model\n   53:     def _default_event_mail_ids(self):\n   54          return [(0, 0, {\n   55              'interval_unit': 'now',\n   ..\n   65      seats_availability = fields.Selection(\n   66          [('limited', 'Limited'), ('unlimited', 'Unlimited')],\n   67:         'Maximum Attendees', required=True, default='unlimited')\n   68      seats_min = fields.Integer(\n   69          string='Minimum Attendees', oldname='register_min',\n   ..\n  119          readonly=False, states={'done': [('readonly', True)]})\n  120      # Date fields\n  121:     date_tz = fields.Selection('_tz_get', string='Timezone', default=lambda self: self.env.user.tz)\n  122      date_begin = fields.Datetime(\n  123          string='Start Date', required=True,\n  ...\n  156          ('draft', 'Unconfirmed'), ('cancel', 'Cancelled'),\n  157          ('confirm', 'Confirmed'), ('done', 'Done')],\n  158:         string='Status', default='draft', readonly=True, required=True, copy=False,\n  159          help=\"If event is created, the status is 'Draft'. If event is confirmed for the particular dates the status is set to 'Confirmed'. If the event is over, the status is set to 'Done'. If event is cancelled the status is set to 'Cancelled'.\")\n  160      auto_confirm = fields.Boolean(string='Confirmation not required', compute='_compute_auto_confirm')\n  ...\n  162      @api.one\n  163      def _compute_auto_confirm(self):\n  164:         self.auto_confirm = self.env['ir.values'].get_default('event.config.settings', 'auto_confirmation')\n  165  \n  166      reply_to = fields.Char(\n  ...\n  168          help=\"The email address of the organizer is likely to be put here, with the effect to be in the 'Reply-To' of the mails sent automatically at event or registrations confirmation. You can also put the email address of your mail gateway if you use one.\")\n  169      address_id = fields.Many2one(\n  170:         'res.partner', string='Location', default=lambda self: self.env.user.company_id.partner_id,\n  171          readonly=False, states={'done': [('readonly', True)]})\n  172      country_id = fields.Many2one('res.country', 'Country',  related='address_id.country_id', store=True)\n  ...\n  244      def _onchange_type(self):\n  245          if self.event_type_id:\n  246:             self.seats_min = self.event_type_id.default_registration_min\n  247:             self.seats_max = self.event_type_id.default_registration_max\n  248:             self.reply_to = self.event_type_id.default_reply_to\n  249  \n  250      @api.multi\n  ...\n  252          res = self.env['ir.actions.act_window'].for_xml_id('event', 'action_report_event_registration')\n  253          res['context'] = {\n  254:             \"search_default_event_id\": self.id,\n  255              \"group_by\": ['create_date:day'],\n  256          }\n  ...\n  278          'res.partner', string='Contact',\n  279          states={'done': [('readonly', True)]})\n  280:     date_open = fields.Datetime(string='Registration Date', readonly=True, default=lambda self: fields.datetime.now())  # weird crash is directly now\n  281      date_closed = fields.Datetime(string='Attended Date', readonly=True)\n  282      event_begin_date = fields.Datetime(string=\"Event Start Date\", related='event_id.date_begin', readonly=True)\n  ...\n  288          ('draft', 'Unconfirmed'), ('cancel', 'Cancelled'),\n  289          ('open', 'Confirmed'), ('done', 'Attended')],\n  290:         string='Status', default='draft', readonly=True, copy=False, track_visibility='onchange')\n  291      email = fields.Char(string='Email')\n  292      phone = fields.Char(string='Phone')\n  ...\n  386      def action_send_badge_email(self):\n  387          \"\"\" Open a window to compose an email, with the template - 'event_badge'\n  388:             message loaded by default\n  389          \"\"\"\n  390          self.ensure_one()\n  ...\n  392          compose_form = self.env.ref('mail.email_compose_message_wizard_form')\n  393          ctx = dict(\n  394:             default_model='event.registration',\n  395:             default_res_id=self.id,\n  396:             default_use_template=bool(template),\n  397:             default_template_id=template.id,\n  398:             default_composition_mode='comment',\n  399          )\n  400          return {\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\event\\models\\event_config_settings.py:\n   35      }\n   36  \n   37:     def set_default_auto_confirmation(self, cr, uid, ids, context=None):\n   38          config_value = self.browse(cr, uid, ids, context=context).auto_confirmation\n   39:         self.pool.get('ir.values').set_default(cr, uid, 'event.config.settings', 'auto_confirmation', config_value)\n   40  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\event\\models\\event_mail.py:\n   24      event_id = fields.Many2one('event.event', string='Event', required=True, ondelete='cascade')\n   25      sequence = fields.Integer('Display order')\n   26:     interval_nbr = fields.Integer('Interval', default=1)\n   27      interval_unit = fields.Selection([\n   28          ('now', 'Immediately'),\n   29          ('hours', 'Hour(s)'), ('days', 'Day(s)'),\n   30          ('weeks', 'Week(s)'), ('months', 'Month(s)')],\n   31:         string='Unit', default='hours', required=True)\n   32      interval_type = fields.Selection([\n   33          ('after_sub', 'After each subscription'),\n   34          ('before_event', 'Before the event'),\n   35          ('after_event', 'After the event')],\n   36:         string='When to Run ', default=\"before_event\", required=True)\n   37      template_id = fields.Many2one(\n   38          'mail.template', string='Email to Send',\n   ..\n   65                  date, sign = self.event_id.date_end, 1\n   66  \n   67:             self.scheduled_date = datetime.strptime(date, tools.DEFAULT_SERVER_DATETIME_FORMAT) + _INTERVALS[self.interval_unit](sign * self.interval_nbr)\n   68  \n   69      @api.one\n   ..\n   77                  self.write({'mail_registration_ids': lines})\n   78              # execute scheduler on registrations\n   79:             self.mail_registration_ids.filtered(lambda reg: reg.scheduled_date and reg.scheduled_date <= datetime.strftime(fields.datetime.now(), tools.DEFAULT_SERVER_DATETIME_FORMAT)).execute()\n   80          else:\n   81              if not self.mail_sent:\n   ..\n   86      @api.model\n   87      def run(self, autocommit=False):\n   88:         schedulers = self.search([('done', '=', False), ('scheduled_date', '<=', datetime.strftime(fields.datetime.now(), tools.DEFAULT_SERVER_DATETIME_FORMAT))])\n   89          for scheduler in schedulers:\n   90              scheduler.execute()\n   ..\n  116          if self.registration_id:\n  117              date_open = self.registration_id.date_open\n  118:             date_open_datetime = date_open and datetime.strptime(date_open, tools.DEFAULT_SERVER_DATETIME_FORMAT) or fields.datetime.now()\n  119              self.scheduled_date = date_open_datetime + _INTERVALS[self.scheduler_id.interval_unit](self.scheduler_id.interval_nbr)\n  120          else:\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\event\\report\\event_event_reports.xml:\n    4      <record id=\"paperformat_euro_lowmargin\" model=\"report.paperformat\">\n    5          <field name=\"name\">European A4 low margin</field>\n    6:         <field name=\"default\" eval=\"True\"/>\n    7          <field name=\"format\">A4</field>\n    8          <field name=\"page_height\">0</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\event\\tests\\test_event_flow.py:\n   14      def test_00_basic_event_auto_confirm(self):\n   15          \"\"\" Basic event management with auto confirmation \"\"\"\n   16:         self.env['ir.values'].set_default('event.config.settings', 'auto_confirmation', True)\n   17  \n   18          # EventUser creates a new event: ok\n   ..\n   67          \"\"\" Avanced event flow: no auto confirmation, manage minimum / maximum\n   68          seats, ... \"\"\"\n   69:         self.env['ir.values'].set_default('event.config.settings', 'auto_confirmation', False)\n   70  \n   71          # EventUser creates a new event: ok\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\event\\tests\\test_mail_schedule.py:\n   14      def test_00_event_mail_schedule(self):\n   15          \"\"\" Test mail scheduling for events \"\"\"\n   16:         self.env['ir.values'].set_default('event.config.settings', 'auto_confirmation', True)\n   17          now = fields.datetime.now()\n   18          event_date_begin = now + relativedelta(days=1)\n   ..\n   57          self.assertEqual(len(schedulers[0].mail_registration_ids), 2, 'event: incorrect number of mail scheduled date')\n   58  \n   59:         mails = self.env['mail.mail'].search([('subject', 'ilike', 'subscription'), ('date', '>=', datetime.datetime.strftime(now, tools.DEFAULT_SERVER_DATETIME_FORMAT))], order='date DESC', limit=3)\n   60          self.assertEqual(len(mails), 2, 'event: wrong number of subscription mail sent')\n   61  \n   ..\n   66          schedulers = self.EventMail.search([('event_id', '=', test_event.id), ('interval_type', '=', 'before_event')])\n   67          self.assertEqual(len(schedulers), 1, 'event: wrong scheduler creation')\n   68:         self.assertEqual(schedulers[0].scheduled_date, datetime.datetime.strftime(event_date_begin + relativedelta(days=-2), tools.DEFAULT_SERVER_DATETIME_FORMAT), 'event: incorrect scheduled date')\n   69  \n   70          # execute event reminder scheduler explicitly\n   ..\n   74          self.assertTrue(schedulers[0].done, 'event: reminder scheduler should be done')\n   75  \n   76:         mails = self.env['mail.mail'].search([('subject', 'ilike', 'reminder'), ('date', '>=', datetime.datetime.strftime(now, tools.DEFAULT_SERVER_DATETIME_FORMAT))], order='date DESC', limit=3)\n   77          self.assertEqual(len(mails), 2, 'event: wrong number of reminders in outgoing mail queue')\n   78  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\event\\views\\event_views.xml:\n   15                      <group>\n   16                          <field name=\"name\"/>\n   17:                         <field name=\"default_reply_to\"/>\n   18:                         <field name=\"default_registration_min\"/>\n   19:                         <field name=\"default_registration_max\"/>\n   20                      </group>\n   21                  </form>\n   ..\n   49              <field name=\"name\">Attendees</field>\n   50              <field name=\"view_mode\">tree,form,calendar,graph</field>\n   51:             <field name=\"context\">{'search_default_event_id': active_id, 'default_event_id': active_id, 'search_default_expected': True}</field>\n   52          </record>\n   53  \n   ..\n  269             <field name=\"view_type\">form</field>\n  270             <field name=\"view_mode\">kanban,calendar,tree,form</field>\n  271:            <field name=\"context\">{\"search_default_upcoming\":1}</field>\n  272             <field name=\"search_view_id\" ref=\"view_event_search\"/>\n  273             <field name=\"help\" type=\"html\"><p class=\"oe_view_nocontent_create\">\n  ...\n  286              src_model=\"res.partner\"\n  287              view_mode=\"tree,form,calendar,graph\"\n  288:             context=\"{'search_default_partner_id': [active_id], 'default_partner_id': active_id}\"\n  289              view_type=\"form\"/>\n  290  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\event\\wizard\\event_confirm_view.xml:\n   11                    <footer>\n   12                        <button name=\"confirm\" string=\"Confirm Anyway\" type=\"object\" class=\"btn-primary\"/>\n   13:                       <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   14                    </footer>\n   15              </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\event_sale\\models\\event.py:\n   12      event_ticket_ids = fields.One2many(\n   13          'event.event.ticket', 'event_id', string='Event Ticket',\n   14:         default=lambda rec: rec._default_tickets(), copy=True)\n   15  \n   16      @api.model\n   17:     def _default_tickets(self):\n   18          try:\n   19              product = self.env.ref('event_sale.product_product_event')\n   ..\n   36          'product.product', 'Product',\n   37          required=True, domain=[(\"event_type_id\", \"!=\", False)],\n   38:         default=lambda self: self._default_product_id())\n   39      registration_ids = fields.One2many('event.registration', 'event_ticket_id', 'Registrations')\n   40      price = fields.Float('Price', digits=dp.get_precision('Product Price'))\n   ..\n   43  \n   44      @api.model\n   45:     def _default_product_id(self):\n   46          try:\n   47              product = self.env['ir.model.data'].get_object('event_sale', 'product_product_event')\n   ..\n   87      seats_availability = fields.Selection(\n   88          [('limited', 'Limited'), ('unlimited', 'Unlimited')],\n   89:         'Available Seat', required=True, store=True, compute='_compute_seats', default=\"limited\")\n   90      seats_max = fields.Integer('Maximum Available Seats',\n   91                                 help=\"Define the number of available tickets. If you have too much registrations you will \"\n   ..\n  178          line_id = registration.get('sale_order_line_id')\n  179          if line_id:\n  180:             registration.setdefault('partner_id', line_id.order_id.partner_id)\n  181          att_data = super(event_registration, self)._prepare_attendee_values(registration)\n  182          if line_id:\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\event_sale\\models\\sale_order.py:\n   14              order.order_line._update_registrations(confirm=True)\n   15          if redirect_to_event_registration:\n   16:             event_ctx = dict(context, default_sale_order_id=so_id)\n   17              return self.pool.get('ir.actions.act_window').for_xml_id(cr, uid, 'event_sale', 'action_sale_order_event_registration', event_ctx)\n   18          else:\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\event_sale\\views\\event.xml:\n   60                                  </group>\n   61                              </group>\n   62:                             <field name=\"event_ticket_ids\" context=\"{'default_name': name}\">\n   63                                  <tree string=\"Tickets\" editable=\"bottom\">\n   64                                      <field name=\"name\"/>\n   65:                                     <field name=\"product_id\" context=\"{'default_event_ok':1}\"/>\n   66                                      <field name=\"deadline\"/>\n   67                                      <field name=\"price\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\event_sale\\wizard\\event_edit_registration.py:\n   11  \n   12      @api.model\n   13:     def default_get(self, fields):\n   14:         res = super(SaleOrderEventRegistration, self).default_get(fields)\n   15          if not res.get('sale_order_id'):\n   16              sale_order_id = res.get('sale_order_id', self._context.get('active_id'))\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\event_sale\\wizard\\event_edit_registration.xml:\n   22                      <footer>\n   23                          <button string=\"Apply\" name=\"action_make_registration\" type=\"object\" class=\"btn-primary\"/>\n   24:                         <button string=\"Skip\" class=\"btn-default\" special=\"cancel\"/>\n   25                      </footer>\n   26                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\fetchmail\\fetchmail.py:\n   46              ('local', 'Local Server'),\n   47          ], 'Server Type', select=True, required=True, readonly=False),\n   48:         'is_ssl':fields.boolean('SSL/TLS', help=\"Connections are encrypted with SSL/TLS through a dedicated port (default: IMAPS=993, POP3S=995)\"),\n   49          'attach':fields.boolean('Keep Attachments', help=\"Whether attachments should be downloaded. \"\n   50                                                           \"If not enabled, incoming emails will be stripped of any attachments before being processed\"),\n   ..\n   66          'script' : fields.char('Script', readonly=True),\n   67      }\n   68:     _defaults = {\n   69          'state': \"draft\",\n   70          'type': \"pop\",\n   ..\n  240                      if pop_server:\n  241                          pop_server.quit()\n  242:             server.write({'date': time.strftime(tools.DEFAULT_SERVER_DATETIME_FORMAT)})\n  243          return True\n  244  \n  ...\n  251                  cr, SUPERUSER_ID, 'fetchmail', 'ir_cron_mail_gateway_action', context=context)\n  252          except ValueError:\n  253:             # Nevermind if default cron cannot be found\n  254              return\n  255  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\fetchmail\\fetchmail_view.xml:\n  132  \n  133        <act_window\n  134:             context=\"{'search_default_server_id': active_id, 'default_fetchmail_server_id': active_id}\"\n  135              id=\"act_server_history\" name=\"Messages\" domain=\"[('email_from', '!=', False), ('fetchmail_server_id', '=', active_id)]\"\n  136              res_model=\"mail.mail\" src_model=\"fetchmail.server\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\fetchmail\\res_config.py:\n   27              <button type=\"object\" name=\"configure_fetchmail_stuff\"/>\n   28  \n   29:         The method ``get_default_fetchmail`` determines the value of all fields that start\n   30          with 'fetchmail_'.  It looks up fetchmail server configurations that match the given\n   31          model name (``fetchmail_model``) and are active.\n   ..\n   37      _name = 'fetchmail.config.settings'\n   38  \n   39:     def get_default_fetchmail(self, cr, uid, fields, context=None):\n   40          \"\"\" determine the value of all fields like 'fetchmail_XXX' \"\"\"\n   41          ir_model = self.pool.get('ir.model')\n   ..\n   77          else:\n   78              action['context'] = {\n   79:                 'default_name': self._columns[field].fetchmail_name,\n   80:                 'default_object_id': model_id,\n   81              }\n   82          return action\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\fleet\\fleet.py:\n   13  \n   14  def str_to_datetime(strdate):\n   15:     return datetime.datetime.strptime(strdate, tools.DEFAULT_SERVER_DATE_FORMAT)\n   16  \n   17  class fleet_vehicle_cost(osv.Model):\n   ..\n   54      }\n   55  \n   56:     _defaults ={\n   57          'cost_type': 'other',\n   58      }\n   ..\n  186              res = self.pool.get('ir.actions.act_window').for_xml_id(cr, uid ,'fleet', context['xml_id'], context=context)\n  187              res['context'] = context\n  188:             res['context'].update({'default_vehicle_id': ids[0]})\n  189              res['domain'] = [('vehicle_id','=', ids[0])]\n  190              return res\n  ...\n  192  \n  193      def act_show_log_cost(self, cr, uid, ids, context=None):\n  194:         \"\"\" This opens log view to view and add new log for this vehicle, groupby default to only show effective costs\n  195              @return: the costs log view\n  196          \"\"\"\n  ...\n  200          res['context'] = context\n  201          res['context'].update({\n  202:             'default_vehicle_id': ids[0],\n  203:             'search_default_parent_false': True\n  204          })\n  205          res['domain'] = [('vehicle_id','=', ids[0])]\n  ...\n  243                  search_operator = 'not in'\n  244              today = fields.date.context_today(self, cr, uid, context=context)\n  245:             datetime_today = datetime.datetime.strptime(today, tools.DEFAULT_SERVER_DATE_FORMAT)\n  246:             limit_date = str((datetime_today + relativedelta(days=+15)).strftime(tools.DEFAULT_SERVER_DATE_FORMAT))\n  247              cr.execute('select cost.vehicle_id, count(contract.id) as contract_number FROM fleet_vehicle_cost cost left join fleet_vehicle_log_contract contract on contract.cost_id = cost.id WHERE contract.expiration_date is not null AND contract.expiration_date > %s AND contract.expiration_date < %s AND contract.state IN (\\'open\\', \\'toclose\\') GROUP BY cost.vehicle_id', (today, limit_date))\n  248              res_ids = [x[0] for x in cr.fetchall()]\n  ...\n  284          return res\n  285  \n  286:     def _get_default_state(self, cr, uid, context):\n  287          try:\n  288              model, model_id = self.pool.get('ir.model.data').get_object_reference(cr, uid, 'fleet', 'vehicle_state_active')\n  ...\n  351          }\n  352  \n  353:     _defaults = {\n  354          'doors': 5,\n  355          'odometer_unit': 'kilometers',\n  356:         'state_id': _get_default_state,\n  357      }\n  358  \n  ...\n  437          'unit': fields.related('vehicle_id', 'odometer_unit', type=\"char\", string=\"Unit\", readonly=True),\n  438      }\n  439:     _defaults = {\n  440          'date': fields.date.context_today,\n  441      }\n  ...\n  517              return {}\n  518  \n  519:     def _get_default_service_type(self, cr, uid, context):\n  520          try:\n  521              model, model_id = self.pool.get('ir.model.data').get_object_reference(cr, uid, 'fleet', 'type_service_refueling')\n  ...\n  538          'cost_amount': fields.related('cost_id', 'amount', string='Amount', type='float', store=True), #we need to keep this field as a related with store=True because the graph view doesn't support (1) to address fields from inherited table and (2) fields that aren't stored in database\n  539      }\n  540:     _defaults = {\n  541          'date': fields.date.context_today,\n  542:         'cost_subtype_id': _get_default_service_type,\n  543          'cost_type': 'fuel',\n  544      }\n  ...\n  560          }\n  561  \n  562:     def _get_default_service_type(self, cr, uid, context):\n  563          try:\n  564              model, model_id = self.pool.get('ir.model.data').get_object_reference(cr, uid, 'fleet', 'type_service_service_8')\n  ...\n  578          'cost_id': fields.many2one('fleet.vehicle.cost', 'Cost', required=True, ondelete='cascade'),\n  579      }\n  580:     _defaults = {\n  581          'date': fields.date.context_today,\n  582:         'cost_subtype_id': _get_default_service_type,\n  583          'cost_type': 'services'\n  584      }\n  ...\n  604          #If the contract has no start_date, no cost will be created, even if the contract has recurring costs\n  605          vehicle_cost_obj = self.pool.get('fleet.vehicle.cost')\n  606:         d = datetime.datetime.strptime(fields.date.context_today(self, cr, uid, context=context), tools.DEFAULT_SERVER_DATE_FORMAT).date()\n  607          contract_ids = self.pool.get('fleet.vehicle.log.contract').search(cr, uid, [('state','!=','closed')], offset=0, limit=None, order=None,context=None, count=False)\n  608          deltas = {'yearly': relativedelta(years=+1), 'monthly': relativedelta(months=+1), 'weekly': relativedelta(weeks=+1), 'daily': relativedelta(days=+1)}\n  ...\n  617                      found = True\n  618                      last_cost_date = vehicle_cost_obj.browse(cr, uid, last_autogenerated_cost_id[0], context=context).date\n  619:             startdate = datetime.datetime.strptime(last_cost_date, tools.DEFAULT_SERVER_DATE_FORMAT).date()\n  620              if found:\n  621                  startdate += deltas.get(contract.cost_frequency)\n  622:             while (startdate <= d) & (startdate <= datetime.datetime.strptime(contract.expiration_date, tools.DEFAULT_SERVER_DATE_FORMAT).date()):\n  623                  data = {\n  624                      'amount': contract.cost_generated,\n  625:                     'date': startdate.strftime(tools.DEFAULT_SERVER_DATE_FORMAT),\n  626                      'vehicle_id': contract.vehicle_id.id,\n  627                      'cost_subtype_id': contract.cost_subtype_id.id,\n  ...\n  636          #This method is called by a cron task\n  637          #It manages the state of a contract, possibly by posting a message on the vehicle concerned and updating its status\n  638:         datetime_today = datetime.datetime.strptime(fields.date.context_today(self, cr, uid, context=context), tools.DEFAULT_SERVER_DATE_FORMAT)\n  639:         limit_date = (datetime_today + relativedelta(days=+15)).strftime(tools.DEFAULT_SERVER_DATE_FORMAT)\n  640          ids = self.search(cr, uid, ['&', ('state', '=', 'open'), ('expiration_date', '<', limit_date)], offset=0, limit=None, order=None, context=context, count=False)\n  641          res = {}\n  ...\n  679          oneyear = datetime.timedelta(days=365)\n  680          curdate = str_to_datetime(strdate)\n  681:         return datetime.datetime.strftime(curdate + oneyear, tools.DEFAULT_SERVER_DATE_FORMAT)\n  682  \n  683      def on_change_start_date(self, cr, uid, ids, strdate, enddate, context=None):\n  ...\n  695          for record in self.browse(cr, uid, ids, context=context):\n  696              if (record.expiration_date and (record.state == 'open' or record.state == 'toclose')):\n  697:                 today = str_to_datetime(time.strftime(tools.DEFAULT_SERVER_DATE_FORMAT))\n  698                  renew_date = str_to_datetime(record.expiration_date)\n  699                  diff_time = (renew_date-today).days\n  ...\n  710              enddate = str_to_datetime(element.expiration_date)\n  711              diffdate = (enddate - startdate)\n  712:             default = {\n  713                  'date': fields.date.context_today(self, cr, uid, context=context),\n  714:                 'start_date': datetime.datetime.strftime(str_to_datetime(element.expiration_date) + datetime.timedelta(days=1), tools.DEFAULT_SERVER_DATE_FORMAT),\n  715:                 'expiration_date': datetime.datetime.strftime(enddate + diffdate, tools.DEFAULT_SERVER_DATE_FORMAT),\n  716              }\n  717:             newid = super(fleet_vehicle_log_contract, self).copy(cr, uid, element.id, default, context=context)\n  718          mod, modid = self.pool.get('ir.model.data').get_object_reference(cr, uid, 'fleet', 'fleet_vehicle_log_contract_form')\n  719          return {\n  ...\n  729          }\n  730  \n  731:     def _get_default_contract_type(self, cr, uid, context=None):\n  732          try:\n  733              model, model_id = self.pool.get('ir.model.data').get_object_reference(cr, uid, 'fleet', 'type_contract_leasing')\n  ...\n  763          'name': fields.function(_vehicle_contract_name_get_fnc, type=\"text\", string='Name', store=True),\n  764          'start_date': fields.date('Contract Start Date', help='Date when the coverage of the contract begins'),\n  765:         'expiration_date': fields.date('Contract Expiration Date', help='Date when the coverage of the contract expirates (by default, one year after begin date)'),\n  766          'days_left': fields.function(get_days_left, type='integer', string='Warning Date'),\n  767          'insurer_id' :fields.many2one('res.partner', 'Vendor'),\n  ...\n  779          'cost_amount': fields.related('cost_id', 'amount', string='Amount', type='float', store=True), #we need to keep this field as a related with store=True because the graph view doesn't support (1) to address fields from inherited table and (2) fields that aren't stored in database\n  780      }\n  781:     _defaults = {\n  782          'purchaser_id': lambda self, cr, uid, ctx: self.pool.get('res.users').browse(cr, uid, uid, context=ctx).partner_id.id or False,\n  783          'date': fields.date.context_today,\n  ...\n  786          'expiration_date': lambda self, cr, uid, ctx: self.compute_next_year_date(fields.date.context_today(self, cr, uid, context=ctx)),\n  787          'cost_frequency': 'no',\n  788:         'cost_subtype_id': _get_default_contract_type,\n  789          'cost_type': 'contract',\n  790      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\fleet\\fleet_board_view.xml:\n    8        <field name=\"view_mode\">pivot,graph</field>\n    9        <field name=\"view_id\"></field>  <!-- force empty -->\n   10:       <field name=\"context\">{\"search_default_parent_false\" : True,}</field>\n   11        <field name=\"help\" type=\"html\">\n   12          <p>\n   ..\n   39        <field name=\"view_mode\">pivot,graph</field>\n   40       <field name=\"view_id\"></field>  <!-- force empty -->\n   41:       <field name=\"context\">{\"search_default_parent_true\" : True,}</field>\n   42        <field name=\"help\" type=\"html\">\n   43          <p>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\fleet\\fleet_view.xml:\n   72              <field name=\"view_type\">form</field>\n   73              <field name=\"view_mode\">tree,form</field>\n   74:             <field name=\"context\">{\"search_default_groupby_brand\" : True,}</field>\n   75              <field name=\"help\" type=\"html\">\n   76                <p class=\"oe_view_nocontent_create\">\n   ..\n  451                              </group>\n  452                              <group>\n  453:                                 <field name=\"insurer_id\" context=\"{'default_supplier': True}\"/>\n  454                                  <field name=\"purchaser_id\" />\n  455                                  <field name=\"ins_ref\" />\n  ...\n  616              <field name=\"view_type\">form</field>\n  617              <field name=\"view_mode\">tree,graph</field>\n  618:             <field name=\"context\">{\"search_default_groupby_vehicle\" : True}</field>\n  619              <field name=\"help\" type=\"html\">\n  620                <p class=\"oe_view_nocontent_create\">\n  ...\n  659                                  <field name=\"purchaser_id\" />\n  660                                  <field name=\"inv_ref\" />\n  661:                                 <field name=\"vendor_id\" context=\"{'default_supplier': True}\"/>\n  662                              </group>\n  663                          </group>\n  ...\n  720              <field name=\"view_type\">form</field>\n  721              <field name=\"view_mode\">tree,form,graph</field>\n  722:             <field name=\"context\">{\"search_default_groupby_vehicle\" : True}</field>\n  723              <field name=\"help\" type=\"html\">\n  724                <p class=\"oe_view_nocontent_create\">\n  ...\n  759                                  <field name=\"date\" />\n  760                                  <field name=\"purchaser_id\" />\n  761:                                 <field name=\"vendor_id\" context=\"{'default_supplier': True}\"/>\n  762                                  <field name=\"inv_ref\" />\n  763                              </group>\n  ...\n  991              <field name=\"view_type\">form</field>\n  992              <field name=\"view_mode\">tree,form,graph</field>\n  993:             <field name=\"context\">{\"search_default_parent_false\" : True, \"search_default_groupby_vehicle_id\" : True,}</field>\n  994              <field name=\"help\" type=\"html\">\n  995                <p class=\"oe_view_nocontent_create\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\gamification\\data\\badge.xml:\n   37              <field name=\"name\">Badge Granted</field>\n   38              <field name=\"res_model\">res.users</field>\n   39:             <field name=\"default\" eval=\"True\"/>\n   40              <field name=\"hidden\" eval=\"True\"/>\n   41              <field name=\"description\">Badge Granted</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\gamification\\data\\goal_base.xml:\n  134              <field name=\"target\">current</field>\n  135              <field name=\"view_id\" ref=\"base.view_users_simple_form\"/>\n  136:             <field name=\"context\">{'default_groups_ref': ['base.group_user']}</field>\n  137              <field name=\"help\">Create and manage users that will connect to the system. Users can be deactivated should there be a period of time during which they will/should not connect to the system. You can assign them groups in order to give them specific access to the applications they need to use in the system.</field>\n  138          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\gamification\\models\\badge.py:\n    4  from openerp import SUPERUSER_ID\n    5  from openerp.osv import fields, osv\n    6: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT as DF\n    7  from openerp.tools.translate import _\n    8  \n    .\n  206      }\n  207  \n  208:     _defaults = {\n  209          'rule_auth': 'everyone',\n  210          'active': True,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\gamification\\models\\challenge.py:\n    4  from openerp import SUPERUSER_ID\n    5  from openerp.osv import fields, osv\n    6: from openerp.tools import ustr, DEFAULT_SERVER_DATE_FORMAT as DF\n    7  from openerp.tools.safe_eval import safe_eval as eval\n    8  from openerp.tools.translate import _\n    .\n   17  MAX_VISIBILITY_RANKING = 3\n   18  \n   19: def start_end_date_for_period(period, default_start_date=False, default_end_date=False):\n   20      \"\"\"Return the start and end date for a goal period based on today\n   21  \n   22:     :param str default_start_date: string date in DEFAULT_SERVER_DATE_FORMAT format\n   23:     :param str default_end_date: string date in DEFAULT_SERVER_DATE_FORMAT format\n   24  \n   25      :return: (start_date, end_date), dates in string format, False if the period is\n   ..\n   41          end_date = today.replace(month=12, day=31)\n   42      else:  # period == 'once':\n   43:         start_date = default_start_date  # for manual goal, start each time\n   44:         end_date = default_end_date\n   45  \n   46          return (start_date, end_date)\n   ..\n   67          period.\n   68  \n   69:         :return: a string in DEFAULT_SERVER_DATE_FORMAT representing the date\"\"\"\n   70          res = {}\n   71          for challenge in self.browse(cr, uid, ids, context=context):\n   ..\n  179          }\n  180  \n  181:     _defaults = {\n  182          'period': 'once',\n  183          'state': 'draft',\n  ...\n  880      }\n  881  \n  882:     _default = {\n  883          'sequence': 1,\n  884      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\gamification\\models\\goal.py:\n    4  from openerp import SUPERUSER_ID\n    5  from openerp.osv import fields, osv, expression\n    6: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT as DF\n    7  from openerp.tools.safe_eval import safe_eval\n    8  from openerp.tools.translate import _\n    .\n  101      }\n  102  \n  103:     _defaults = {\n  104          'condition': 'higher',\n  105          'computation_mode': 'manually',\n  ...\n  231      }\n  232  \n  233:     _defaults = {\n  234          'current': 0,\n  235          'state': 'draft',\n  ...\n  291          goals_by_definition = {}\n  292          for goal in self.browse(cr, uid, ids, context=context):\n  293:             goals_by_definition.setdefault(goal.definition_id, []).append(goal)\n  294  \n  295          for definition, goals in goals_by_definition.items():\n  ...\n  336                          start_date = field_date_name and goal.start_date or False\n  337                          end_date = field_date_name and goal.end_date or False\n  338:                         subqueries.setdefault((start_date, end_date), {}).update({goal.id:safe_eval(definition.batch_user_expression, {'user': goal.user_id})})\n  339  \n  340                      # the global query should be split by time periods (especially for recurrent goals)\n  ...\n  483                  'views': [[False, 'form']],\n  484                  'target': 'new',\n  485:                 'context': {'default_goal_id': goal_id, 'default_current': goal.current},\n  486                  'res_model': 'gamification.goal.wizard'\n  487              }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\gamification\\views\\badge.xml:\n   75                          </group>\n   76                          <group string=\"Rewards for challenges\">\n   77:                             <field name=\"challenge_ids\" widget=\"many2many_kanban\" nolabel=\"1\" context=\"{'default_reward_id': active_id}\" />\n   78                          </group>\n   79                          <group string=\"Statistics\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\gamification\\views\\challenge.xml:\n   20              <field name=\"name\">Related Goals</field>\n   21              <field name=\"view_mode\">kanban,tree</field>\n   22:             <field name=\"context\">{'search_default_group_by_definition': True, 'search_default_inprogress': True, 'search_default_challenge_id': active_id, 'default_challenge_id': active_id}</field>\n   23              <field name=\"help\" type=\"html\">\n   24                <p>\n   ..\n  172              <field name=\"res_model\">gamification.challenge</field>\n  173              <field name=\"view_mode\">kanban,tree,form</field>\n  174:             <field name=\"context\">{'search_default_inprogress':True, 'default_inprogress':True}</field>\n  175              <field name=\"help\" type=\"html\">\n  176                  <p class=\"oe_view_nocontent_create\">\n  ...\n  274                          <center>\n  275                              <button string=\"Accept\" type=\"object\" name=\"accept_challenge\" class=\"btn-primary\" />\n  276:                             <button string=\"Reject\" type=\"object\" class=\"btn-default\" name=\"discard_challenge\"/>\n  277:                             <button string=\"reply later\" special=\"cancel\" class=\"btn-default\"/>\n  278                          </center>\n  279                      </footer>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\gamification\\views\\goal.xml:\n    8              <field name=\"res_model\">gamification.goal</field>\n    9              <field name=\"view_mode\">tree,form,kanban</field>\n   10:             <field name=\"context\">{'search_default_group_by_user': True, 'search_default_group_by_definition': True}</field>\n   11              <field name=\"help\" type=\"html\">\n   12                  <p class=\"oe_view_nocontent_create\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\gamification\\wizard\\grant_badge.xml:\n   16                      <footer>\n   17                          <button string=\"Grant Badge\" type=\"object\" name=\"action_grant_badge\" class=\"btn-primary\" />\n   18:                         <button string=\"Cancel\" special=\"cancel\" class=\"btn-default\"/>\n   19                      </footer>\n   20                  </form>\n   ..\n   26              target=\"new\"\n   27              res_model=\"gamification.badge.user.wizard\"\n   28:             context=\"{'default_badge_id': active_id, 'badge_id': active_id}\"\n   29              view_type=\"form\" view_mode=\"form\"\n   30              view_id=\"gamification.view_badge_wizard_grant\" />\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\gamification\\wizard\\update_goal.xml:\n   15                      <footer>\n   16                          <button string=\"Update\" type=\"object\" name=\"action_update_current\" class=\"btn-primary\" />\n   17:                         <button string=\"Cancel\" special=\"cancel\" class=\"btn-default\"/>\n   18                      </footer>\n   19                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\google_account\\google_account.py:\n    7  from openerp.tools.translate import _\n    8  from datetime import datetime\n    9: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT\n   10  \n   11  import werkzeug.urls\n   ..\n   53          return uri\n   54  \n   55:     # If no scope is passed, we use service by default to get a default scope\n   56      def _get_authorize_uri(self, cr, uid, from_url, service, scope=False, context=None):\n   57          \"\"\" This method return the url needed to allow this instance of OpenErp to access to the scope of gmail specified as parameters \"\"\"\n   ..\n  139          status = 418\n  140          response = \"\"\n  141:         ask_time = datetime.now().strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n  142          try:\n  143              if type.upper() == 'GET' or type.upper() == 'DELETE':\n  ...\n  175  \n  176      def get_base_url(self, cr, uid, context=None):\n  177:         return self.pool.get('ir.config_parameter').get_param(cr, uid, 'web.base.url', default='http://www.openerp.com?NoBaseUrl', context=context)\n  178  \n  179      def get_client_id(self, cr, uid, service, context=None):\n  180:         return self.pool.get('ir.config_parameter').get_param(cr, SUPERUSER_ID, 'google_%s_client_id' % (service,), default=False, context=context)\n  181  \n  182      def get_client_secret(self, cr, uid, service, context=None):\n  183:         return self.pool.get('ir.config_parameter').get_param(cr, SUPERUSER_ID, 'google_%s_client_secret' % (service,), default=False, context=context)\n  184  \n  185      def get_uri_oauth(self, a=''):  # a = optional action\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\google_calendar\\google_calendar.py:\n    8  from openerp import tools\n    9  from openerp import SUPERUSER_ID\n   10: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT, DEFAULT_SERVER_DATETIME_FORMAT, exception_to_unicode\n   11  \n   12  from openerp.tools.translate import _\n   ..\n  202              context = {}\n  203          if event.allday:\n  204:             start_date = fields.datetime.context_timestamp(cr, uid, datetime.strptime(event.start, tools.DEFAULT_SERVER_DATETIME_FORMAT), context=context).isoformat('T').split('T')[0]\n  205:             final_date = fields.datetime.context_timestamp(cr, uid, datetime.strptime(event.stop, tools.DEFAULT_SERVER_DATETIME_FORMAT) + timedelta(days=1), context=context).isoformat('T').split('T')[0]\n  206              type = 'date'\n  207              vstype = 'dateTime'\n  208          else:\n  209:             start_date = fields.datetime.context_timestamp(cr, uid, datetime.strptime(event.start, tools.DEFAULT_SERVER_DATETIME_FORMAT), context=context).isoformat('T')\n  210:             final_date = fields.datetime.context_timestamp(cr, uid, datetime.strptime(event.stop, tools.DEFAULT_SERVER_DATETIME_FORMAT), context=context).isoformat('T')\n  211              type = 'dateTime'\n  212              vstype = 'date'\n  ...\n  243              \"reminders\": {\n  244                  \"overrides\": reminders,\n  245:                 \"useDefault\": \"false\"\n  246              },\n  247              \"location\": event.location or '',\n  ...\n  479                  date = (single_event_dict['start']['date'])\n  480                  stop = (single_event_dict['end']['date'])\n  481:                 d_end = datetime.strptime(stop, DEFAULT_SERVER_DATE_FORMAT)\n  482                  allday = True\n  483                  d_end = d_end + timedelta(days=-1)\n  484:                 stop = d_end.strftime(DEFAULT_SERVER_DATE_FORMAT)\n  485  \n  486              update_date = datetime.strptime(single_event_dict['updated'], \"%Y-%m-%dT%H:%M:%S.%fz\")\n  ...\n  572              if lastSync and self.get_last_sync_date(cr, user_to_sync, context=context) and not self.get_disable_since_synchro(cr, user_to_sync, context=context):\n  573                  lastSync = self.get_last_sync_date(cr, user_to_sync, context)\n  574:                 _logger.info(\"[%s] Calendar Synchro - MODE SINCE_MODIFIED : %s !\" % (user_to_sync, lastSync.strftime(DEFAULT_SERVER_DATETIME_FORMAT)))\n  575              else:\n  576                  lastSync = False\n  ...\n  608                                      ('google_internal_event_id', '=', False),\n  609                                      '|',\n  610:                                     ('event_id.stop', '>', self.get_minTime(cr, uid, context=context).strftime(DEFAULT_SERVER_DATETIME_FORMAT)),\n  611:                                     ('event_id.final_date', '>', self.get_minTime(cr, uid, context=context).strftime(DEFAULT_SERVER_DATETIME_FORMAT)),\n  612                                      ], context=context_norecurrent)\n  613          for att in att_obj.browse(cr, uid, my_att_ids, context=context):\n  ...\n  710              my_openerp_att_ids = att_obj.search(cr, uid, [\n  711                  ('partner_id', '=', myPartnerID),\n  712:                 ('event_id.oe_update_date', '>', lastSync and lastSync.strftime(DEFAULT_SERVER_DATETIME_FORMAT) or self.get_minTime(cr, uid, context).strftime(DEFAULT_SERVER_DATETIME_FORMAT)),\n  713                  ('google_internal_event_id', '!=', False),\n  714              ], context=context_novirtual)\n  ...\n  736                  ('google_internal_event_id', '!=', False),\n  737                  '|',\n  738:                 ('event_id.stop', '>', self.get_minTime(cr, uid, context).strftime(DEFAULT_SERVER_DATETIME_FORMAT)),\n  739:                 ('event_id.final_date', '>', self.get_minTime(cr, uid, context).strftime(DEFAULT_SERVER_DATETIME_FORMAT)),\n  740              ]\n  741  \n  ...\n  895          current_user = self.pool['res.users'].browse(cr, uid, uid, context=context)\n  896          if not current_user.google_calendar_token_validity or \\\n  897:                 datetime.strptime(current_user.google_calendar_token_validity.split('.')[0], DEFAULT_SERVER_DATETIME_FORMAT) < (datetime.now() + timedelta(minutes=1)):\n  898              self.do_refresh_token(cr, uid, context=context)\n  899              current_user.refresh()\n  ...\n  902      def get_last_sync_date(self, cr, uid, context=None):\n  903          current_user = self.pool['res.users'].browse(cr, uid, uid, context=context)\n  904:         return current_user.google_calendar_last_sync_date and datetime.strptime(current_user.google_calendar_last_sync_date, DEFAULT_SERVER_DATETIME_FORMAT) + timedelta(minutes=0) or False\n  905  \n  906      def do_refresh_token(self, cr, uid, context=None):\n  ...\n  942  \n  943      def get_minTime(self, cr, uid, context=None):\n  944:         number_of_week = int(self.pool['ir.config_parameter'].get_param(cr, uid, 'calendar.week_synchro', default=13))\n  945          return datetime.now() - timedelta(weeks=number_of_week)\n  946  \n  947      def get_need_synchro_attendee(self, cr, uid, context=None):\n  948:         return self.pool['ir.config_parameter'].get_param(cr, uid, 'calendar.block_synchro_attendee', default=True)\n  949  \n  950      def get_disable_since_synchro(self, cr, uid, context=None):\n  951:         return self.pool['ir.config_parameter'].get_param(cr, uid, 'calendar.block_since_synchro', default=False)\n  952  \n  953      def get_print_log(self, cr, uid, context=None):\n  954:         return self.pool['ir.config_parameter'].get_param(cr, uid, 'calendar.debug_print', default=False)\n  955  \n  956  \n  ...\n  986          return super(calendar_event, self).write(cr, uid, ids, vals, context=context)\n  987  \n  988:     def copy(self, cr, uid, id, default=None, context=None):\n  989:         default = default or {}\n  990:         if default.get('write_type', False):\n  991:             del default['write_type']\n  992:         elif default.get('recurrent_id', False):\n  993:             default['oe_update_date'] = datetime.now()\n  994          else:\n  995:             default['oe_update_date'] = False\n  996:         return super(calendar_event, self).copy(cr, uid, id, default, context)\n  997  \n  998      def unlink(self, cr, uid, ids, can_be_deleted=False, context=None):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\google_calendar\\res_config.py:\n   18          \n   19  \n   20:     def get_default_all(self,cr,uid,ids,context=None):\n   21          params = self.pool.get('ir.config_parameter')\n   22          \n   23:         cal_client_id = params.get_param(cr, uid, 'google_calendar_client_id',default='',context=context)\n   24:         cal_client_secret = params.get_param(cr, uid, 'google_calendar_client_secret',default='',context=context)\n   25:         server_uri= \"%s/google_account/authentication\" % params.get_param(cr, uid, 'web.base.url',default=\"http://yourcompany.odoo.com\",context=context)\n   26          return dict(cal_client_id=cal_client_id,cal_client_secret=cal_client_secret,server_uri=server_uri)\n   27          \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\google_drive\\google_drive.py:\n  131          will first seek for a google.docs.config associated with the model `res_model` to find out what's the template\n  132          of google doc to copy (this is usefull if you want to start with a non-empty document, a type or a name\n  133:         different than the default values). If no config is associated with the `res_model`, then a blank text document\n  134:         with a default name is created.\n  135            :param res_model: the object for which the google doc is created\n  136            :param ids: the list of ids of the objects for which the google doc is created. This list is supposed to have\n  ...\n  202          return res\n  203  \n  204:     _defaults = {\n  205          'name_template': 'Document %(name)s',\n  206          'active': True,\n  ...\n  228          'google_drive_uri': fields.char('URI', readonly=True, help=\"The URL to generate the authorization code from Google\"),\n  229      }\n  230:     _defaults = {\n  231          'google_drive_uri': lambda s, cr, uid, c: s.pool['google.service']._get_google_token_uri(cr, uid, 'drive', scope=s.pool['google.drive.config'].get_google_scope(), context=c),\n  232          'google_drive_authorization_code': lambda s, cr, uid, c: s.pool['ir.config_parameter'].get_param(cr, SUPERUSER_ID, 'google_drive_authorization_code', context=c),\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr\\__openerp__.py:\n   26          'images/hr_employee.jpeg',\n   27          'images/hr_job_position.jpeg',\n   28:         'static/src/img/default_image.png',\n   29      ],\n   30      'depends': [\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr\\hr.py:\n   82      }\n   83  \n   84:     _defaults = {\n   85:         'company_id': lambda self, cr, uid, ctx=None: self.pool.get('res.company')._company_default_get(cr, uid, 'hr.job', context=ctx),\n   86          'state': 'recruit',\n   87          'no_of_recruitment' : 1,\n   ..\n  113          return super(hr_job, self.with_context(mail_create_nosubscribe=True)).create(values)\n  114  \n  115:     def copy(self, cr, uid, id, default=None, context=None):\n  116:         if default is None:\n  117:             default = {}\n  118:         if 'name' not in default:\n  119              job = self.browse(cr, uid, id, context=context)\n  120:             default['name'] = _(\"%s (copy)\") % (job.name)\n  121:         return super(hr_job, self).copy(cr, uid, id, default=default, context=context)\n  122  \n  123      # ----------------------------------------\n  ...\n  198              rec.image = tools.image_resize_image_big(rec.image_small)\n  199  \n  200:     def _get_default_image(self, cr, uid, context=None):\n  201:         image_path = get_module_resource('hr', 'static/src/img', 'default_image.png')\n  202          return tools.image_resize_image_big(open(image_path, 'rb').read().encode('base64'))\n  203  \n  204:     defaults = {\n  205          'active': 1,\n  206:         'image': _get_default_image,\n  207          'color': 0,\n  208      }\n  ...\n  293      }\n  294  \n  295:     _defaults = {\n  296:         'company_id': lambda self, cr, uid, c: self.pool.get('res.company')._company_default_get(cr, uid, 'hr.department', context=c),\n  297      }\n  298  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr\\hr_view.xml:\n   84                                          <field name=\"company_id\" groups=\"base.group_multi_company\" on_change=\"onchange_company(company_id)\"/>\n   85                                          <field name=\"user_id\" on_change=\"onchange_user(name, image, user_id)\" string=\"Related User\"\n   86:                                             context=\"{'default_groups_ref': ['base.group_user']}\"/>\n   87                                      </group>\n   88                                  </group>\n   ..\n  175                              </ul>\n  176                              <div class=\"o_kanban_button\">\n  177:                                 <button t-if=\"record.message_is_follower.raw_value\" name=\"action_unfollow\" type=\"object\" class=\"o_follow_btn o_following btn btn-sm btn-default\">\n  178                                      <span class=\"o_unfollow\">Unfollow</span>\n  179                                      <span class=\"o_following\">Following</span>\n  ...\n  379              <field name=\"view_mode\">tree,form</field>\n  380              <field name=\"search_view_id\" ref=\"view_job_filter\"/>\n  381:             <field name=\"context\">{\"search_default_Current\":1}</field>\n  382              <field name=\"help\" type=\"html\">\n  383                <p class=\"oe_view_nocontent_create\">\n  ...\n  403              <field name=\"search_view_id\" ref=\"view_employee_filter\"/>\n  404              <field name=\"context\">{\n  405:                 \"search_default_department_id\": [active_id],\n  406:                 \"default_department_id\": active_id}\n  407              </field>\n  408              <field name=\"help\" type=\"html\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_attendance\\hr_attendance.py:\n   17          'action_type': fields.selection([('sign_in', 'Sign in'), ('sign_out', 'Sign out')], \"Action Type\"),\n   18      }\n   19:     _defaults = {\n   20          'action_type': 'sign_in',\n   21      }\n   ..\n   65          'worked_hours': fields.function(_worked_hours_compute, type='float', string='Worked Hours', store=True),\n   66      }\n   67:     _defaults = {\n   68          'name': lambda *a: time.strftime('%Y-%m-%d %H:%M:%S'), #please don't remove the lambda, if you remove it then the current time will not change\n   69          'employee_id': _employee_get,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_attendance\\hr_attendance_view.xml:\n   96              <field name=\"view_type\">form</field>\n   97              <field name=\"view_mode\">tree,form</field>\n   98:             <field name=\"context\">{\"search_default_today\":1}</field>\n   99              <field name=\"search_view_id\" ref=\"view_hr_attendance_filter\" />\n  100              <field name=\"help\">The Time Tracking functionality aims to manage employee attendances from Sign in/Sign out actions. You can also link this feature to an attendance device using Odoo's web service features.</field>\n  ...\n  115              <field name=\"view_mode\">pivot,graph</field>\n  116              <field name=\"context\">{\n  117:                 'search_default_department_id': [active_id],\n  118:                 'default_department_id': active_id}\n  119              </field>\n  120              <field name=\"view_id\"></field>  <!-- force empty -->\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_attendance\\wizard\\hr_attendance_error.py:\n   18              help=\"Allowed difference in minutes between the signin/signout and the timesheet computation for one sheet. Set this to 0 for no tolerance.\")\n   19      }\n   20:     _defaults = {\n   21           'init_date': lambda *a: time.strftime('%Y-%m-%d'),\n   22           'end_date': lambda *a: time.strftime('%Y-%m-%d'),\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_attendance\\wizard\\hr_attendance_error_view.xml:\n   16                  <footer>\n   17                      <button name=\"print_report\" string=\"Print\" type=\"object\" class=\"btn-primary\"/>\n   18:                     <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   19                  </footer>\n   20              </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_contract\\base_action_rule.py:\n   20      def _check_delay(self, cr, uid, action, record, record_dt, context=None):\n   21          \"\"\" Override the check of delay to try to use a user-related calendar.\n   22:         If no calendar is found, fallback on the default behavior. \"\"\"\n   23          if action.trg_date_calendar_id and action.trg_date_range_type == 'day' and action.trg_date_resource_field_id:\n   24              user = record[action.trg_date_resource_field_id.name]\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_contract\\hr_contract.py:\n   52          'sequence': fields.integer('Sequence', help=\"Gives the sequence when displaying a list of Contract.\"),\n   53      }\n   54:     defaults = {\n   55          'sequence': 10\n   56      }\n   ..\n   89          return type_ids and type_ids[0] or False\n   90  \n   91:     _defaults = {\n   92          'date_start': lambda *a: time.strftime(\"%Y-%m-%d\"),\n   93          'type_id': _get_type,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_contract\\hr_contract_data.xml:\n   23              <field name=\"name\">To Renew</field>\n   24              <field name=\"res_model\">hr.contract</field>\n   25:             <field name=\"default\" eval=\"True\"/>\n   26              <field name=\"description\">Contract about to expire</field>\n   27          </record>\n   ..\n   29              <field name=\"name\">Expired</field>\n   30              <field name=\"res_model\">hr.contract</field>\n   31:             <field name=\"default\" eval=\"False\"/>\n   32              <field name=\"description\">Contract expired</field>\n   33          </record>\n   ..\n   36              <field name=\"name\">Contract to Renew</field>\n   37              <field name=\"res_model\">hr.department</field>\n   38:             <field name=\"default\" eval=\"False\"/>\n   39              <field name=\"parent_id\" eval=\"ref('mt_contract_pending')\"/>\n   40              <field name=\"relation_field\">department_id</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_contract\\hr_contract_view.xml:\n   11              <field name=\"name\">Contracts</field>\n   12              <field name=\"view_mode\">tree,form</field>\n   13:             <field name=\"context\">{'search_default_employee_id': [active_id], 'default_employee_id': active_id}</field>\n   14          </record>\n   15          \n   ..\n  166              <field name=\"view_mode\">tree,form</field>\n  167              <field name=\"domain\">[]</field>\n  168:             <field name=\"context\">{'search_default_current':1}</field>\n  169              <field name=\"search_view_id\" ref=\"hr_contract_view_search\"/>\n  170          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_equipment\\data\\hr_equipment_data.xml:\n   44          <field name=\"name\">Status Changed</field>\n   45          <field name=\"res_model\">hr.equipment.request</field>\n   46:         <field name=\"default\" eval=\"True\"/>\n   47          <field name=\"description\">Status changed</field>\n   48      </record>\n   ..\n   59          <field name=\"name\">Maintenance Request Created</field>\n   60          <field name=\"res_model\">hr.equipment.category</field>\n   61:         <field name=\"default\" eval=\"True\"/>\n   62          <field name=\"parent_id\" eval=\"ref('mt_req_created')\"/>\n   63          <field name=\"relation_field\">category_id</field>\n   ..\n   66          <field name=\"name\">Equipment Assigned</field>\n   67          <field name=\"res_model\">hr.equipment.category</field>\n   68:         <field name=\"default\" eval=\"True\"/>\n   69          <field name=\"parent_id\" eval=\"ref('mt_mat_assign')\"/>\n   70          <field name=\"relation_field\">category_id</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_equipment\\models\\hr_equipment.py:\n   14  \n   15      name = fields.Char('Name', required=True, translate=True)\n   16:     sequence = fields.Integer('Sequence', default=20)\n   17      fold = fields.Boolean('Folded in Recruitment Pipe')\n   18      done = fields.Boolean('Request Done')\n   ..\n   31  \n   32      name = fields.Char('Category Name', required=True, translate=True)\n   33:     user_id = fields.Many2one('res.users', 'Responsible', track_visibility='onchange', default=lambda self: self.env.uid)\n   34      color = fields.Integer('Color Index')\n   35      note = fields.Text('Comments', translate=True)\n   ..\n   62          self = self.with_context(alias_model_name='hr.equipment.request', alias_parent_model_name=self._name)\n   63          category_id = super(HrEquipmentCategory, self).create(vals)\n   64:         category_id.alias_id.write({'alias_parent_thread_id': category_id.id, 'alias_defaults': {'category_id': category_id.id}})\n   65          return category_id\n   66  \n   ..\n  126          string='Used By',\n  127          required=True,\n  128:         default='employee')\n  129      maintenance_ids = fields.One2many('hr.equipment.request', 'equipment_id')\n  130      maintenance_count = fields.Integer(compute='_compute_maintenance_count', string=\"Maintenance\", store=True)\n  ...\n  215  \n  216      @api.returns('self')\n  217:     def _default_employee_get(self):\n  218          return self.env['hr.employee'].search([('user_id', '=', self.env.uid)], limit=1)\n  219  \n  220      @api.returns('self')\n  221:     def _default_stage(self):\n  222          return self.env['hr.equipment.stage'].search([], limit=1)\n  223  \n  ...\n  233      name = fields.Char('Subjects', required=True)\n  234      description = fields.Text('Description')\n  235:     request_date = fields.Date('Request Date', track_visibility='onchange', default=fields.Date.context_today)\n  236:     employee_id = fields.Many2one('hr.employee', string='Employee', default=_default_employee_get)\n  237      department_id = fields.Many2one('hr.department', string='Department')\n  238      category_id = fields.Many2one('hr.equipment.category', string='Category')\n  239      equipment_id = fields.Many2one('hr.equipment', string='Asset', select=True)\n  240      user_id = fields.Many2one('res.users', string='Assigned to', track_visibility='onchange')\n  241:     stage_id = fields.Many2one('hr.equipment.stage', string='Stage', track_visibility='onchange', default=_default_stage)\n  242      priority = fields.Selection([('0', 'Very Low'), ('1', 'Low'), ('2', 'Normal'), ('3', 'High')], string='Priority')\n  243      color = fields.Integer('Color Index')\n  244      close_date = fields.Date('Close Date')\n  245      kanban_state = fields.Selection([('normal', 'In Progress'), ('blocked', 'Blocked'), ('done', 'Ready for next stage')],\n  246:                                     string='Kanban State', required=True, default='normal', track_visibility='onchange')\n  247:     active = fields.Boolean(default=True, help=\"Set active to false to hide the maintenance request without deleting it.\")\n  248  \n  249  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_equipment\\models\\res_config.py:\n   13  \n   14      @api.multi\n   15:     def get_default_alias_equipment(self):\n   16          alias_name = False\n   17          alias_id = self.env.ref('hr_equipment.mail_alias_equipment')\n   ..\n   21  \n   22      @api.multi\n   23:     def set_default_alias_equipment(self):\n   24          for record in self:\n   25:             default_equipment_alias_prefix = record.get_default_alias_equipment()['equipment_alias_prefix']\n   26:             if record.equipment_alias_prefix != default_equipment_alias_prefix:\n   27                  alias_id = self.env.ref('hr_equipment.mail_alias_equipment')\n   28                  if alias_id:\n   ..\n   31  \n   32      @api.multi\n   33:     def get_default_alias_domain(self):\n   34          alias_domain = self.env['ir.config_parameter'].get_param(\"mail.catchall.domain\")\n   35          if not alias_domain:\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_equipment\\views\\hr_equipment_views.xml:\n   51                          <group>\n   52                              <field name=\"employee_id\" string=\"Sender\"/>\n   53:                             <field name=\"equipment_id\"  context=\"{'default_category_id':category_id}\"/>\n   54                              <field name=\"category_id\" groups=\"base.group_hr_manager\"/>\n   55                              <field name=\"request_date\" groups=\"base.group_no_one\"/>\n   ..\n   76          <field name=\"model\">hr.equipment.request</field>\n   77          <field name=\"arch\" type=\"xml\">\n   78:             <kanban default_group_by=\"stage_id\">\n   79                  <field name=\"stage_id\"/>\n   80                  <field name=\"color\"/>\n   ..\n  171          <field name=\"view_id\" ref=\"hr_equipment_request_view_kanban\"/>\n  172          <field name=\"context\">{\n  173:             'search_default_category_id': [active_id],\n  174:             'default_category_id': active_id,\n  175          }</field>\n  176          <field name=\"help\" type=\"html\">\n  ...\n  189          <field name=\"view_mode\">kanban,tree,form</field>\n  190          <field name=\"context\">{\n  191:             'default_equipment_id': active_id,\n  192          }</field>\n  193          <field name=\"domain\">[('equipment_id', '=', active_id)]</field>\n  ...\n  260          <field name=\"model\">hr.equipment</field>\n  261          <field name=\"arch\" type=\"xml\">\n  262:             <kanban default_group_by=\"category_id\">\n  263                  <field name=\"name\"/>\n  264                  <field name=\"color\"/>\n  ...\n  384          <field name=\"view_id\" ref=\"hr_equipment_view_kanban\"/>\n  385          <field name=\"context\">{\n  386:             'search_default_category_id': [active_id],\n  387:             'default_category_id': active_id,\n  388          }</field>\n  389          <field name=\"help\" type=\"html\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_expense\\data\\hr_expense_data.xml:\n   23              <field name=\"name\">Approved</field>\n   24              <field name=\"res_model\">hr.expense</field>\n   25:             <field name=\"default\" eval=\"False\"/>\n   26              <field name=\"description\">Expense approved</field>\n   27          </record>\n   ..\n   29              <field name=\"name\">Refused</field>\n   30              <field name=\"res_model\">hr.expense</field>\n   31:             <field name=\"default\" eval=\"True\"/>\n   32              <field name=\"description\">Expense refused</field>\n   33          </record>\n   ..\n   36              <field name=\"res_model\">hr.expense</field>\n   37              <field name=\"description\">Expense confirmed, waiting confirmation</field>\n   38:             <field name=\"default\" eval=\"True\"/>\n   39          </record>\n   40          <!-- Department (Parent) related subtypes for messaging / Chatter -->\n   ..\n   42              <field name=\"name\">Expenses To Approve</field>\n   43              <field name=\"res_model\">hr.department</field>\n   44:             <field name=\"default\" eval=\"True\"/>\n   45              <field name=\"parent_id\" eval=\"ref('mt_expense_confirmed')\"/>\n   46              <field name=\"relation_field\">department_id</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_expense\\data\\hr_expense_demo.xml:\n   12              <field name=\"type\">service</field>\n   13              <field name=\"name\">Car Travel Expenses</field>\n   14:             <field name=\"default_code\">CarTRA</field>\n   15              <field name=\"uom_id\" ref=\"product.product_uom_km\"/>\n   16              <field name=\"uom_po_id\" ref=\"product.product_uom_km\"/>\n   ..\n   25              <field name=\"type\">service</field>\n   26              <field name=\"name\">Air Flight</field>\n   27:             <field name=\"default_code\">AT</field>\n   28              <field name=\"categ_id\" ref=\"hr_expense.cat_expense\"/>\n   29              <field name=\"can_be_expensed\" eval=\"True\" />\n   ..\n   36              <field name=\"type\">service</field>\n   37              <field name=\"name\">Hotel Accommodation</field>\n   38:             <field name=\"default_code\">HA0</field>\n   39              <field name=\"uom_id\" ref=\"product.product_uom_day\"/>\n   40              <field name=\"uom_po_id\" ref=\"product.product_uom_day\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_expense\\models\\hr_expense.py:\n   16  \n   17      name = fields.Char(string='Expense Description', readonly=True, required=True, states={'draft': [('readonly', False)]})\n   18:     date = fields.Date(readonly=True, states={'draft': [('readonly', False)]}, default=fields.Date.context_today, string=\"Date\")\n   19:     employee_id = fields.Many2one('hr.employee', string=\"Employee\", required=True, readonly=True, states={'draft': [('readonly', False)]}, default=lambda self: self.env['hr.employee'].search([('user_id', '=', self.env.uid)], limit=1))\n   20      product_id = fields.Many2one('product.product', string='Product', readonly=True, states={'draft': [('readonly', False)]}, domain=[('can_be_expensed', '=', True)], required=True)\n   21:     product_uom_id = fields.Many2one('product.uom', string='Unit of Measure', required=True, readonly=True, states={'draft': [('readonly', False)]}, default=lambda self: self.env['product.uom'].search([], limit=1, order='id'))\n   22      unit_amount = fields.Float(string='Unit Price', readonly=True, required=True, states={'draft': [('readonly', False)]}, digits=dp.get_precision('Product Price'))\n   23:     quantity = fields.Float(required=True, readonly=True, states={'draft': [('readonly', False)]}, digits=dp.get_precision('Product Unit of Measure'), default=1)\n   24      tax_ids = fields.Many2many('account.tax', 'expense_tax', 'expense_id', 'tax_id', string='Taxes', states={'done': [('readonly', True)], 'post': [('readonly', True)]})\n   25      untaxed_amount = fields.Float(string='Subtotal', store=True, compute='_compute_amount', digits=dp.get_precision('Account'))\n   26      total_amount = fields.Float(string='Total', store=True, compute='_compute_amount', digits=dp.get_precision('Account'))\n   27:     company_id = fields.Many2one('res.company', string='Company', readonly=True, states={'draft': [('readonly', False)]}, default=lambda self: self.env.user.company_id)\n   28:     currency_id = fields.Many2one('res.currency', string='Currency', readonly=True, states={'draft': [('readonly', False)]}, default=lambda self: self.env.user.company_id.currency_id)\n   29      analytic_account_id = fields.Many2one('account.analytic.account', string='Analytic Account', states={'post': [('readonly', True)], 'done': [('readonly', True)]}, oldname='analytic_account', domain=[('account_type', '=', 'normal')])\n   30      department_id = fields.Many2one('hr.department', string='Department', states={'post': [('readonly', True)], 'done': [('readonly', True)]})\n   31      description = fields.Text()\n   32:     payment_mode = fields.Selection([(\"own_account\", \"Employee (to reimburse)\"), (\"company_account\", \"Company\")], default='own_account', states={'done': [('readonly', True)], 'post': [('readonly', True)]}, string=\"Payment By\")\n   33:     journal_id = fields.Many2one('account.journal', string='Expense Journal', states={'done': [('readonly', True)], 'post': [('readonly', True)]}, default=lambda self: self.env['account.journal'].search([('type', '=', 'purchase')], limit=1), help=\"The journal used when the expense is done.\")\n   34:     bank_journal_id = fields.Many2one('account.journal', string='Bank Journal', states={'done': [('readonly', True)], 'post': [('readonly', True)]}, default=lambda self: self.env['account.journal'].search([('type', 'in', ['case', 'bank'])], limit=1), help=\"The payment method used when the expense is paid by the company.\")\n   35      account_move_id = fields.Many2one('account.move', string='Journal Entry', copy=False, track_visibility=\"onchange\")\n   36      attachment_number = fields.Integer(compute='_compute_attachment_number', string='Number of Attachments')\n   ..\n   41                                ('done', 'Paid'),\n   42                                ('cancel', 'Refused')\n   43:                               ], string='Status', index=True, readonly=True, track_visibility='onchange', copy=False, default='draft', required=True,\n   44          help='When the expense request is created the status is \\'To Submit\\'.\\n It is submitted by the employee and request is sent to manager, the status is \\'Submitted\\'.\\\n   45          \\nIf the manager approve it, the status is \\'Approved\\'.\\n If the accountant genrate the accounting entries for the expense request, the status is \\'Waiting Payment\\'.')\n   ..\n  230                  total, total_currency, move_lines = expense._compute_expense_totals(company_currency, move_lines)\n  231                  if expense.payment_mode == 'company_account':\n  232:                     if not expense.bank_journal_id.default_credit_account_id:\n  233                          raise UserError(_(\"No credit account found for the %s journal, please configure one.\") % (expense.bank_journal_id.name))\n  234:                     emp_account = expense.bank_journal_id.default_credit_account_id.id\n  235                  else:\n  236                      if not expense.employee_id.address_home_id:\n  ...\n  269                  account = self.env['ir.property'].with_context(force_company=expense.company_id.id).get('property_account_expense_categ_id', 'product.category')\n  270                  if not account:\n  271:                     raise UserError(_('Please configure Default Expense account for Product expense: `property_account_expense_categ_id`.'))\n  272              move_line = {\n  273                      'type': 'src',\n  ...\n  304          res = self.env['ir.actions.act_window'].for_xml_id('base', 'action_attachment')\n  305          res['domain'] = [('res_model', '=', 'hr.expense'), ('res_id', 'in', self.ids)]\n  306:         res['context'] = {'default_res_model': 'hr.expense', 'default_res_id': self.id}\n  307          return res\n  308  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_expense\\views\\hr_expense_views.xml:\n   73                      <group>\n   74                          <group>\n   75:                             <field name=\"product_id\" context=\"{'default_can_be_expensed': 1}\"/>\n   76                              <field name=\"unit_amount\" required=\"1\" widget=\"monetary\" options=\"{'currency_field': 'currency_id'}\"/>\n   77                              <label for=\"quantity\"/>\n   ..\n  141                                      </div>\n  142                                      <div class=\"col-xs-6\">\n  143:                                         <span t-attf-class=\"pull-right text-right label #{['draft', 'submit'].indexOf(record.state.raw_value) > -1 ? 'label-default' : ['cancel'].indexOf(record.state.raw_value) > -1 ? 'label-danger' : ['post'].indexOf(record.state.raw_value) > -1 ? 'label-warning' : ['done'].indexOf(record.state.raw_value) > -1 ? 'label-success' : 'label-primary'}\"><t t-esc=\"record.state.value\"/></span>\n  144                                      </div>\n  145                                  </div>\n  ...\n  264              <field name=\"view_type\">form</field>\n  265              <field name=\"view_mode\">kanban,tree,form</field>\n  266:             <field name=\"context\">{\"default_can_be_expensed\": 1}</field>\n  267              <field name=\"domain\">[('can_be_expensed', '=', True)]</field>\n  268              <field name=\"help\" type=\"html\">\n  ...\n  280              <field name=\"view_id\" ref=\"view_expenses_tree\"/>\n  281              <field name=\"domain\">[]</field>\n  282:             <field name=\"context\">{\"search_default_approved\": 1}</field>\n  283              <field name=\"help\" type=\"html\">\n  284                <p>\n  ...\n  293              <field name=\"view_type\">form</field>\n  294              <field name=\"view_mode\">tree,kanban,form,pivot,graph</field>\n  295:             <field name=\"context\">{'search_default_submitted': 1, 'needaction_menu_ref': 'hr_expense.menu_expense_all'}</field>\n  296              <field name=\"search_view_id\" ref=\"view_hr_expense_filter\"/>\n  297              <field name=\"view_id\" ref=\"view_expenses_tree\"/>\n  ...\n  362              <field name=\"search_view_id\" ref=\"view_hr_expense_filter\"/>\n  363              <field name=\"context\">{\n  364:                 'search_default_submitted': 1,\n  365:                 'search_default_department_id': [active_id],\n  366:                 'default_department_id': active_id}\n  367              </field>\n  368          </record>\n  ...\n  384          <field name=\"view_mode\">pivot,graph</field>\n  385          <field name=\"context\">{\n  386:             'search_default_department_id': [active_id],\n  387:             'default_department_id': active_id}\n  388          </field>\n  389      </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_gamification\\views\\gamification.xml:\n   46              <field name=\"name\">Goals History</field>\n   47              <field name=\"view_mode\">tree,kanban</field>\n   48:             <field name=\"context\">{'search_default_group_by_user': True, 'search_default_group_by_definition': True}</field>\n   49              <field name=\"domain\">[('challenge_id.category', '=', 'hr')]</field>\n   50              <field name=\"help\" type=\"html\">\n   ..\n   65              <field name=\"view_mode\">kanban,tree,form</field>\n   66              <field name=\"domain\">[('category', '=', 'hr')]</field>\n   67:             <field name=\"context\">{'search_default_inprogress':True, 'default_inprogress':True}</field>\n   68              <field name=\"help\" type=\"html\">\n   69                  <p class=\"oe_view_nocontent_create\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_gamification\\wizard\\grant_badge.xml:\n   29                      <footer>\n   30                          <button string=\"Reward Employee\" type=\"object\" name=\"action_grant_badge\" class=\"btn-primary\" />\n   31:                         <button string=\"Cancel\" special=\"cancel\" class=\"btn-default\"/>\n   32                      </footer>\n   33                  </form>\n   ..\n   39              target=\"new\"\n   40              res_model=\"gamification.badge.user.wizard\"\n   41:             context=\"{'default_employee_id': active_id, 'employee_id': active_id}\"\n   42              view_type=\"form\" view_mode=\"form\"\n   43              view_id=\"view_badge_wizard_reward\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_holidays\\data\\report_paperformat.xml:\n    4          <record id=\"paperformat_hrsummary\" model=\"report.paperformat\">\n    5              <field name=\"name\">Holidays Summary</field>\n    6:             <field name=\"default\" eval=\"True\"/>\n    7              <field name=\"format\">custom</field>\n    8              <field name=\"page_height\">297</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_holidays\\hr_department.py:\n    4  from dateutil.relativedelta import relativedelta\n    5  from openerp import api, fields, models\n    6: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT\n    7  \n    8  \n    .\n   14          Holiday = self.env['hr.holidays']\n   15          today_date = datetime.datetime.utcnow().date()\n   16:         today_start = today_date.strftime(DEFAULT_SERVER_DATETIME_FORMAT) # get the midnight of the current utc day\n   17:         today_end = (today_date + relativedelta(hours=23, minutes=59, seconds=59)).strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n   18  \n   19          leave_data = Holiday.read_group(\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_holidays\\hr_holidays.py:\n   84          'company_id': fields.many2one('res.company', 'Company'),\n   85      }\n   86:     _defaults = {\n   87          'color_name': 'red',\n   88          'active': True,\n   ..\n  131  \n  132      def _employee_get(self, cr, uid, context=None):\n  133:         emp_id = context.get('default_employee_id', False)\n  134          if emp_id:\n  135              return emp_id\n  ...\n  212              type='boolean'),\n  213      }\n  214:     _defaults = {\n  215          'employee_id': _employee_get,\n  216          'state': 'confirm',\n  ...\n  312          # No date_to set so far: automatically compute one 8 hours later\n  313          if date_from and not date_to:\n  314:             date_to_with_delta = datetime.datetime.strptime(date_from, tools.DEFAULT_SERVER_DATETIME_FORMAT) + datetime.timedelta(hours=8)\n  315              result['value']['date_to'] = str(date_to_with_delta)\n  316  \n  ...\n  633      def _absent_employee(self, cr, uid, ids, field_name, arg, context=None):\n  634          today_date = datetime.datetime.utcnow().date()\n  635:         today_start = today_date.strftime(tools.DEFAULT_SERVER_DATETIME_FORMAT) # get the midnight of the current utc day\n  636:         today_end = (today_date + relativedelta(hours=23, minutes=59, seconds=59)).strftime(tools.DEFAULT_SERVER_DATETIME_FORMAT)\n  637          data = self.pool['hr.holidays'].read_group(cr, uid,\n  638              [('employee_id', 'in', ids), ('state', 'not in', ['cancel', 'refuse']),\n  ...\n  647      def _search_absent_employee(self, cr, uid, obj, name, args, context=None):\n  648          today_date = datetime.datetime.utcnow().date()\n  649:         today_start = today_date.strftime(tools.DEFAULT_SERVER_DATETIME_FORMAT) # get the midnight of the current utc day\n  650:         today_end = (today_date + relativedelta(hours=23, minutes=59, seconds=59)).strftime(tools.DEFAULT_SERVER_DATETIME_FORMAT)\n  651          holiday_ids = self.pool['hr.holidays'].search_read(cr, uid, [\n  652              ('state', 'not in', ['cancel', 'refuse']),\n  ...\n  668          'leaves_count': fields.function(_leaves_count, type='integer', string='Number of Leaves'),\n  669          'show_leaves': fields.function(_show_approved_remaining_leave, type='boolean', string=\"Able to see Remaining Leaves\"),\n  670:         'is_absent_totay': fields.function(_absent_employee, fnct_search=_search_absent_employee, type=\"boolean\", string=\"Absent Today\", default=False)\n  671      }\n  672  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_holidays\\hr_holidays_data.xml:\n   52              <field name=\"name\">Waiting Second Validation</field>\n   53              <field name=\"res_model\">hr.holidays</field>\n   54:             <field name=\"default\" eval=\"False\"/>\n   55              <field name=\"description\">Request validated, waiting second validation</field>\n   56          </record>\n   ..\n   63              <field name=\"name\">Refused</field>\n   64              <field name=\"res_model\">hr.holidays</field>\n   65:             <field name=\"default\" eval=\"False\"/>\n   66              <field name=\"description\">Request refused</field>\n   67          </record>\n   ..\n   71              <field name=\"name\">Leaves/Allocations Confirmed</field>\n   72              <field name=\"res_model\">hr.department</field>\n   73:             <field name=\"default\" eval=\"True\"/>\n   74              <field name=\"parent_id\" eval=\"ref('mt_holidays_confirmed')\"/>\n   75              <field name=\"relation_field\">department_id</field>\n   ..\n   79              <field name=\"name\">Leaves/Allocations First Approval</field>\n   80              <field name=\"res_model\">hr.department</field>\n   81:             <field name=\"default\" eval=\"False\"/>\n   82              <field name=\"parent_id\" eval=\"ref('mt_holidays_first_validated')\"/>\n   83              <field name=\"relation_field\">department_id</field>\n   ..\n   87              <field name=\"name\">Leaves/Allocation Approved</field>\n   88              <field name=\"res_model\">hr.department</field>\n   89:             <field name=\"default\" eval=\"False\"/>\n   90              <field name=\"parent_id\" eval=\"ref('mt_holidays_approved')\"/>\n   91              <field name=\"relation_field\">department_id</field>\n   ..\n   95              <field name=\"name\">Leaves/Allocation Refused</field>\n   96              <field name=\"res_model\">hr.department</field>\n   97:             <field name=\"default\" eval=\"False\"/>\n   98              <field name=\"parent_id\" eval=\"ref('mt_holidays_refused')\"/>\n   99              <field name=\"relation_field\">department_id</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_holidays\\hr_holidays_view.xml:\n  249              <field name=\"view_type\">form</field>\n  250              <field name=\"view_mode\">calendar</field>\n  251:             <field name=\"context\">{'search_default_year': 1, 'search_default_group_employee': 1}</field>\n  252              <field name=\"domain\">[('holiday_type','=','employee'), ('type', '=', 'remove')]</field>\n  253              <field name=\"search_view_id\" ref=\"view_hr_holidays_filter\"/>\n  ...\n  266              <field name=\"view_id\" ref=\"edit_holiday_new\"/>\n  267              <field name=\"context\">{\n  268:                 'default_type': 'remove',\n  269:                 'search_default_my_leaves':1,\n  270                  'needaction_menu_ref':\n  271                  [\n  ...\n  315              <field name=\"view_type\">form</field>\n  316              <field name=\"context\">{\n  317:                 'default_type': 'remove',\n  318:                 'search_default_approve':1,\n  319                  'needaction_menu_ref':\n  320                  [\n  ...\n  348              <field name=\"view_type\">form</field>\n  349              <field name=\"context\">{\n  350:                 'default_type':'add',\n  351:                 'search_default_my_leaves':1,\n  352                  'needaction_menu_ref':\n  353                  [\n  ...\n  381              <field name=\"view_type\">form</field>\n  382              <field name=\"context\">{\n  383:                 'default_type': 'add',\n  384:                 'search_default_approve':1,\n  385                  'needaction_menu_ref':\n  386                  [\n  ...\n  415              <field name=\"view_id\" eval=\"view_holiday_simple\"/>\n  416              <field name=\"context\">{\n  417:                 'search_default_group_type': 1,\n  418:                 'search_default_year': 1 ,\n  419:                 'search_default_my_leaves': 1,\n  420                  'needaction_menu_ref':\n  421                  [\n  ...\n  438              <field name=\"view_mode\">tree,form,calendar</field>\n  439              <field name=\"view_id\" eval=\"view_holiday_employee\"/>\n  440:             <field name=\"context\">{'default_type': 'remove', 'search_default_todo': 1}</field>\n  441              <field name=\"domain\">[('type','=','remove')]</field>\n  442              <field name=\"search_view_id\" ref=\"view_hr_holidays_filter\"/>\n  ...\n  448              <field name=\"view_type\">form</field>\n  449              <field name=\"view_mode\">tree,form,calendar</field>\n  450:             <field name=\"context\">{'search_default_department':1, 'search_default_approve':1}</field>\n  451              <field name=\"domain\">[('type','=','remove')]</field>\n  452              <field name=\"search_view_id\" ref=\"view_hr_holidays_filter\"/>\n  ...\n  460              <field name=\"view_type\">form</field>\n  461              <field name=\"view_mode\">tree,form,calendar</field>\n  462:             <field name=\"context\">{'default_type':'add', 'search_default_department':1, 'search_default_approve':1}</field>\n  463              <field name=\"domain\">[('type','=','add')]</field>\n  464              <field name=\"search_view_id\" ref=\"view_hr_holidays_filter\"/>\n  ...\n  572              <field name=\"view_type\">form</field>\n  573              <field name=\"view_mode\">tree,form</field>\n  574:             <field name=\"context\">{'search_default_employee_id': [active_id], 'default_employee_id': active_id, 'search_default_group_type': 1,\n  575:                 'search_default_year': 1}</field>\n  576              <field name=\"domain\">[('holiday_type','=','employee'), ('holiday_status_id.limit', '=', False), ('state','!=', 'refuse')]</field>\n  577              <field name=\"search_view_id\" ref=\"view_hr_holidays_filter\"/>\n  ...\n  585              <field name=\"view_type\">form</field>\n  586              <field name=\"view_mode\">tree,form</field>\n  587:             <field name=\"context\">{'search_default_employee_id': [active_id], 'search_default_validated': True, 'search_default_gray': True}</field>\n  588              <field name=\"domain\">[('date_from','&gt;=', context_today().strftime(\"%Y-%m-1\")), ('date_from','&lt;', ((context_today() + relativedelta(months=1)).strftime('%Y-%m-1')) )]</field>\n  589              <field name=\"view_id\" eval=\"view_holiday_allocation_tree_customize\"/>\n  ...\n  694              <field name=\"view_mode\">tree,form</field>\n  695              <field name=\"context\">{\n  696:                 'default_type': 'remove',\n  697:                 'search_default_department_id': [active_id],\n  698:                 'default_department_id': active_id,\n  699:                 'search_default_approve':1}\n  700              </field>\n  701              <field name=\"domain\">[('type','=','remove')]</field>\n  ...\n  710              <field name=\"view_mode\">tree,form</field>\n  711              <field name=\"context\">{\n  712:                 'default_type': 'add',\n  713:                 'search_default_department_id': [active_id],\n  714:                 'default_department_id': active_id,\n  715:                 'search_default_approve':1}\n  716              </field>\n  717              <field name=\"domain\">[('type','=','add')]</field>\n  ...\n  725              <field name=\"view_mode\">kanban,tree,form</field>\n  726              <field name=\"context\">{\n  727:                 'search_default_is_absent_totay': 1,\n  728:                 'search_default_department_id': [active_id],\n  729:                 'default_department_id': active_id}\n  730              </field>\n  731              <field name=\"search_view_id\" ref=\"hr_employee_view_search\"/>\n  ...\n  748              <field name=\"domain\">[('holiday_type','=','employee')]</field>\n  749              <field name=\"context\">{\n  750:                 'search_default_department_id': [active_id],\n  751:                 'default_department_id': active_id}\n  752              </field>\n  753              <field name=\"search_view_id\" ref=\"view_hr_holidays_filter\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_holidays\\report\\available_holidays_view.xml:\n   36              <field name=\"view_mode\">graph,pivot,calendar,form</field>\n   37              <field name=\"view_id\"></field>  <!-- force empty -->\n   38:             <field name=\"context\">{'search_default_leaves':1}</field>\n   39              <field name=\"search_view_id\" ref=\"view_hr_holidays_filter\"/>\n   40          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_holidays\\report\\holidays_summary_report.py:\n    6  from openerp.osv import osv\n    7  from openerp.tools.translate import _\n    8: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT, DEFAULT_SERVER_DATETIME_FORMAT\n    9  \n   10  class HrHolidaySummaryReport(osv.AbstractModel):\n   ..\n   13      def _get_header_info(self, start_date, holiday_type):\n   14          return {\n   15:             'start_date': datetime.strptime(start_date, DEFAULT_SERVER_DATE_FORMAT).strftime('%Y-%m-%d'),\n   16:             'end_date': (datetime.strptime(start_date, DEFAULT_SERVER_DATE_FORMAT) + relativedelta(days=59)).strftime('%Y-%m-%d'),\n   17              'holiday_type': 'Confirmed and Approved' if holiday_type == 'both' else holiday_type\n   18          }\n   ..\n   20      def _get_day(self, start_date):\n   21          res = []\n   22:         start_date = datetime.strptime(start_date, DEFAULT_SERVER_DATE_FORMAT)\n   23          for x in range(0, 60):\n   24              color = '#ababab' if start_date.strftime('%a') == 'Sat' or start_date.strftime('%a') == 'Sun' else ''\n   ..\n   30          # it works for geting month name between two dates.\n   31          res = []\n   32:         start_date = datetime.strptime(start_date, DEFAULT_SERVER_DATE_FORMAT)\n   33          end_date = start_date + relativedelta(days=59)\n   34          while start_date <= end_date:\n   ..\n   44          res = []\n   45          count = 0\n   46:         start_date = datetime.strptime(start_date, DEFAULT_SERVER_DATE_FORMAT)\n   47          end_date = start_date + relativedelta(days=59)\n   48          for index in range(0, 60):\n   ..\n   56          holidays_ids = holidays_obj.search(cr, uid, [('employee_id', '=', empid), ('state', 'in', holiday_type), ('type', '=', 'remove'), ('date_from', '<=', str(end_date)), ('date_to', '>=', str(start_date))], context=context)\n   57          for holiday in holidays_obj.browse(cr, uid, holidays_ids, context=context):\n   58:             date_from = datetime.strptime(holiday.date_from, DEFAULT_SERVER_DATETIME_FORMAT)\n   59:             date_to = datetime.strptime(holiday.date_to, DEFAULT_SERVER_DATETIME_FORMAT)\n   60              for index in range(0, ((date_to - date_from).days + 1)):\n   61                  if date_from >= start_date and date_from <= end_date:\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_holidays\\wizard\\hr_holidays_summary_department.py:\n   16      }\n   17  \n   18:     _defaults = {\n   19           'date_from': lambda *a: time.strftime('%Y-%m-01'),\n   20           'holiday_type': 'Approved'\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_holidays\\wizard\\hr_holidays_summary_department_view.xml:\n   15                  <footer>\n   16                      <button name=\"print_report\" string=\"Print\" type=\"object\" class=\"btn-primary\"/>\n   17:                     <button string=\"Cancel\" special=\"cancel\" class=\"btn-default\"/>\n   18                  </footer>\n   19              </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_holidays\\wizard\\hr_holidays_summary_employees.py:\n   14      }\n   15  \n   16:     _defaults = {\n   17           'date_from': lambda *a: time.strftime('%Y-%m-01'),\n   18           'holiday_type': 'Approved',\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_holidays\\wizard\\hr_holidays_summary_employees_view.xml:\n   17                      <footer>\n   18                          <button name=\"print_report\" string=\"Print\" type=\"object\" class=\"btn-primary\"/>\n   19:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   20                      </footer>\n   21                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_payroll\\hr_payroll.py:\n   44          return res\n   45  \n   46:     _defaults = {\n   47          'company_id': lambda self, cr, uid, context: \\\n   48                  self.pool.get('res.users').browse(cr, uid, uid,\n   ..\n   55      ]\n   56          \n   57:     def copy(self, cr, uid, id, default=None, context=None):\n   58:         default = dict(default or {},\n   59                         code=_(\"%s (copy)\") % (self.browse(cr, uid, id, context=context).code))\n   60:         return super(hr_payroll_structure, self).copy(cr, uid, id, default, context=context)\n   61  \n   62      @api.cr_uid_ids_context\n   ..\n  106      }\n  107  \n  108:     _defaults = {\n  109          'schedule_pay': 'monthly',\n  110      }\n  ...\n  137          'note': fields.text('Description'),\n  138      }\n  139:     _defaults = {\n  140          'company_id': lambda self, cr, uid, context: \\\n  141                  self.pool.get('res.users').browse(cr, uid, uid,\n  ...\n  160      }\n  161  \n  162:     _defaults = {\n  163          'company_id': lambda self, cr, uid, context: \\\n  164                  self.pool.get('res.users').browse(cr, uid, uid,\n  ...\n  203          'credit_note': fields.boolean('Credit Note', readonly=True, states={'draft': [('readonly', False)]}, help=\"If its checked, indicates that all payslips generated from here are refund payslips.\"),\n  204      }\n  205:     _defaults = {\n  206          'state': 'draft',\n  207          'date_start': lambda *a: time.strftime('%Y-%m-01'),\n  ...\n  228          if not ids: return result\n  229          for id in ids:\n  230:             result.setdefault(id, [])\n  231          cr.execute('''SELECT pl.slip_id, pl.id FROM hr_payslip_line AS pl \\\n  232                      LEFT JOIN hr_salary_rule_category AS sh on (pl.category_id = sh.id) \\\n  ...\n  273          'payslip_count': fields.function(_count_detail_payslip, type='integer', string=\"Payslip Computation Details\"),\n  274      }\n  275:     _defaults = {\n  276          'date_from': lambda *a: time.strftime('%Y-%m-01'),\n  277          'date_to': lambda *a: str(datetime.now() + relativedelta.relativedelta(months=+1, day=1, days=-1))[:10],\n  ...\n  620  \n  621  \n  622:         #defaults\n  623          res = {'value':{\n  624                        'line_ids':[],\n  ...\n  746      }\n  747      _order = 'payslip_id, sequence'\n  748:     _defaults = {\n  749          'sequence': 10,\n  750      }\n  ...\n  766      }\n  767      _order = 'payslip_id, sequence'\n  768:     _defaults = {\n  769          'sequence': 10,\n  770          'amount': 0.0,\n  ...\n  804          'note':fields.text('Description'),\n  805       }\n  806:     _defaults = {\n  807          'amount_python_compute': '''\n  808  # Available variables:\n  ...\n  954      }\n  955  \n  956:     _defaults = {\n  957          'quantity': 1.0,\n  958          'rate': 100.0,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_payroll\\hr_payroll_demo.xml:\n  148              <field name=\"struct_id\" ref=\"hr_payroll.structure_001\"/>\n  149              <field name=\"employee_id\" ref=\"hr_employee_payroll\"/>\n  150:             <field name=\"notes\">Default contract for marketing executives</field>\n  151              <field eval=\"4000.0\" name=\"wage\"/>\n  152              <field name=\"working_hours\" ref=\"resource.timesheet_group1\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_payroll\\hr_payroll_view.xml:\n  203  \n  204          <act_window name=\"Payslip Computation Details\"\n  205:             context=\"{'default_slip_id': active_id,'search_default_slip_id': active_id}\"\n  206              res_model=\"hr.payslip.line\"\n  207              src_model=\"hr.payslip\"\n  ...\n  239                              <field name=\"date_from\" class=\"oe_inline\"/> - <field name=\"date_to\" class=\"oe_inline\"/>\n  240                          </div>\n  241:                         <field name=\"contract_id\" domain=\"[('employee_id','=',employee_id),('date_start','&lt;=',date_to),'|',('date_end','&gt;=',date_from),('date_end','=',False)]\" context=\"{'default_employee_id': employee_id}\"/>\n  242                          <field name=\"number\"/>\n  243                          <field name=\"struct_id\" attrs=\"{'required':[('contract_id','&lt;&gt;',False)]}\"/>\n  ...\n  380              <field name=\"view_type\">form</field>\n  381              <field name=\"view_mode\">tree,form</field>\n  382:             <field name=\"context\">{'search_default_employee_id': [active_id], 'default_employee_id': active_id}</field>\n  383          </record>\n  384  \n  ...\n  739          <act_window name=\"Payslip Lines\"\n  740              domain=\"[('register_id', '=', active_id)]\"\n  741:             context=\"{'default_register_id': active_id, 'search_default_register_id': 1}\"\n  742              res_model=\"hr.payslip.line\"\n  743              src_model=\"hr.contribution.register\"\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_payroll\\report\\report_payslip_details.py:\n   40                  ORDER BY pl.sequence, rc.parent_id''',(tuple(ids),))\n   41              for x in self.cr.fetchall():\n   42:                 result.setdefault(x[1], [])\n   43                  result[x[1]].append(x[0])\n   44              for key, value in result.iteritems():\n   ..\n   75          for id in range(len(obj)):\n   76              if obj[id].register_id:\n   77:                 result.setdefault(obj[id].register_id.name, [])\n   78                  result[obj[id].register_id.name].append(obj[id].id)\n   79          for key, value in result.iteritems():\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_payroll\\res_config_view.xml:\n    6              <field name=\"res_model\">ir.module.module</field>\n    7              <field name=\"view_mode\">kanban,tree,form</field>\n    8:             <field name=\"context\" eval=\"{'search_default_category_id': ref('base.module_category_localization')}\"/>\n    9              <field name=\"search_view_id\" ref=\"base.view_module_filter\"/>\n   10          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_payroll\\wizard\\hr_payroll_contribution_register_report.py:\n   16      }\n   17  \n   18:     _defaults = {\n   19          'date_from': lambda *a: time.strftime('%Y-%m-01'),\n   20          'date_to': lambda *a: str(datetime.now() + relativedelta.relativedelta(months=+1, day=1, days=-1))[:10],\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_payroll\\wizard\\hr_payroll_contribution_register_report.xml:\n   15                  <footer>\n   16                      <button name=\"print_report\" string=\"Print\" type=\"object\" class=\"btn-primary\"/>\n   17:                     <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   18                  </footer>\n   19              </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_payroll_account\\hr_payroll_account.py:\n   46      }\n   47  \n   48:     def _get_default_journal(self, cr, uid, context=None):\n   49          journal_obj = self.pool.get('account.journal')\n   50          res = journal_obj.search(cr, uid, [('type', '=', 'general')])\n   ..\n   53          return False\n   54  \n   55:     _defaults = {\n   56:         'journal_id': _get_default_journal,\n   57      }\n   58  \n   ..\n   67          contract_obj = self.pool.get('hr.contract')\n   68          res = super(hr_payslip, self).onchange_contract_id(cr, uid, ids, date_from=date_from, date_to=date_to, employee_id=employee_id, contract_id=contract_id, context=context)\n   69:         journal_id = contract_id and contract_obj.browse(cr, uid, contract_id, context=context).journal_id.id or (not contract_id and self._get_default_journal(cr, uid, context=None))\n   70          res['value'].update({'journal_id': journal_id})\n   71          return res\n   ..\n  141  \n  142              if float_compare(credit_sum, debit_sum, precision_digits=precision) == -1:\n  143:                 acc_id = slip.journal_id.default_credit_account_id.id\n  144                  if not acc_id:\n  145                      raise UserError(_('The Expense Journal \"%s\" has not properly configured the Credit Account!') % (slip.journal_id.name))\n  ...\n  157  \n  158              elif float_compare(debit_sum, credit_sum, precision_digits=precision) == -1:\n  159:                 acc_id = slip.journal_id.default_debit_account_id.id\n  160                  if not acc_id:\n  161                      raise UserError(_('The Expense Journal \"%s\" has not properly configured the Debit Account!') % (slip.journal_id.name))\n  ...\n  204      }\n  205  \n  206:     def _get_default_journal(self, cr, uid, context=None):\n  207          journal_obj = self.pool.get('account.journal')\n  208          res = journal_obj.search(cr, uid, [('type', '=', 'general')])\n  ...\n  211          return False\n  212  \n  213:     _defaults = {\n  214:         'journal_id': _get_default_journal,\n  215      }\n  216  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_recruitment\\data\\hr_recruitment_data.xml:\n  102          <field name=\"name\">New Applicant</field>\n  103          <field name=\"res_model\">hr.applicant</field>\n  104:         <field name=\"default\" eval=\"False\"/>\n  105          <field name=\"hidden\" eval=\"True\"/>\n  106          <field name=\"description\">Applicant created</field>\n  ...\n  109          <field name=\"name\">Stage Changed</field>\n  110          <field name=\"res_model\">hr.applicant</field>\n  111:         <field name=\"default\" eval=\"False\"/>\n  112          <field name=\"description\">Stage changed</field>\n  113      </record>\n  ...\n  115          <field name=\"name\">Applicant Hired</field>\n  116          <field name=\"res_model\">hr.applicant</field>\n  117:         <field name=\"default\" eval=\"True\"/>\n  118          <field name=\"description\">Applicant hired</field>\n  119      </record>\n  ...\n  123          <field name=\"name\">Job Position created</field>\n  124          <field name=\"res_model\">hr.job</field>\n  125:         <field name=\"default\" eval=\"False\"/>\n  126          <field name=\"hidden\" eval=\"True\"/>\n  127      </record>\n  ...\n  129          <field name=\"name\">Applicant Stage Changed</field>\n  130          <field name=\"res_model\">hr.job</field>\n  131:         <field name=\"default\" eval=\"False\"/>\n  132          <field name=\"parent_id\" eval=\"ref('mt_applicant_stage_changed')\"/>\n  133          <field name=\"relation_field\">job_id</field>\n  ...\n  136          <field name=\"name\">Applicant Hired</field>\n  137          <field name=\"res_model\">hr.job</field>\n  138:         <field name=\"default\" eval=\"True\"/>\n  139          <field name=\"parent_id\" eval=\"ref('mt_applicant_hired')\"/>\n  140          <field name=\"relation_field\">job_id</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_recruitment\\models\\hr_job.py:\n   10  \n   11      @api.model\n   12:     def _default_address_id(self):\n   13          return self.env.user.company_id.partner_id\n   14  \n   15      address_id = fields.Many2one(\n   16:         'res.partner', \"Job Location\", default=_default_address_id,\n   17          help=\"Address where employees are working\")\n   18      application_ids = fields.One2many('hr.applicant', 'job_id', \"Applications\")\n   ..\n   25          'hr.recruitment.stage', 'job_stage_rel', 'job_id', 'stage_id',\n   26          'Job Stages',\n   27:         default=[(0, 0, {'name': _('New')})])\n   28      document_ids = fields.One2many('ir.attachment', compute='_compute_document_ids', string=\"Applications\")\n   29      documents_count = fields.Integer(compute='_compute_document_ids', string=\"Documents\")\n   ..\n   66                                             mail_create_nolog=True,\n   67                                             alias_parent_model_name=self._name)).create(vals)\n   68:         job.alias_id.write({'alias_parent_thread_id': job.id, \"alias_defaults\": {'job_id': job.id}})\n   69          return job\n   70  \n   ..\n   82              cr, self._name, self._table, super(Job, self)._auto_init,\n   83              'hr.applicant', self._columns['alias_id'], 'name',\n   84:             alias_prefix='job+', alias_defaults={'job_id': 'id'}, context=context)\n   85  \n   86      @api.multi\n   ..\n   98          action = self.env.ref('base.action_attachment').read()[0]\n   99          action['context'] = {\n  100:             'default_res_model': self._name,\n  101:             'default_res_id': self.ids[0]\n  102          }\n  103          action['domain'] = ['|', '&', ('res_model', '=', 'hr.job'), ('res_id', 'in', self.ids), '&', ('res_model', '=', 'hr.applicant'), ('res_id', 'in', self.mapped('application_ids').ids)]\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_recruitment\\models\\hr_recruitment.py:\n   34                  'alias_parent_thread_id': source.job_id.id,\n   35                  'alias_name': \"%s+%s\" % (source.job_id.alias_name or source.job_id.name, source.name),\n   36:                 'alias_defaults': {\n   37                      'job_id': source.job_id.id,\n   38                      'campaign_id': campaign.id,\n   ..\n   52      name = fields.Char(\"Stage name\", required=True, translate=True)\n   53      sequence = fields.Integer(\n   54:         \"Sequence\", default=1,\n   55          help=\"Gives the sequence order when displaying a list of stages.\")\n   56      job_ids = fields.Many2many(\n   57          'hr.job', 'job_stage_rel', 'stage_id', 'job_id',\n   58          string='Job Stages',\n   59:         default=lambda self: [(4, self._context['default_job_id'])] if self._context.get('default_job_id') else None)\n   60      requirements = fields.Text(\"Requirements\")\n   61      template_id = fields.Many2one(\n   ..\n   75  \n   76      name = fields.Char(\"Degree\", required=True, translate=True)\n   77:     sequence = fields.Integer(\"Sequence\", default=1, help=\"Gives the sequence order when displaying a list of degrees.\")\n   78  \n   79  \n   ..\n   85      _mail_mass_mailing = _('Applicants')\n   86  \n   87:     def _default_stage_id(self):\n   88:         if self._context.get('default_job_id'):\n   89              ids = self.env['hr.recruitment.stage'].search([\n   90:                 ('job_ids', '=', self._context['default_job_id']),\n   91                  ('fold', '=', False)\n   92              ], order='sequence asc', limit=1).ids\n   ..\n   95          return False\n   96  \n   97:     def _default_company_id(self):\n   98          company_id = False\n   99:         if self._context.get('default_department_id'):\n  100:             department = self.env['hr.department'].browse(self._context['default_department_id'])\n  101              company_id = department.company_id.id\n  102          if not company_id:\n  103:             company_id = self.env['res.company']._company_default_get('hr.applicant')\n  104          return company_id\n  105  \n  106      name = fields.Char(\"Subject / Application Name\", required=True)\n  107:     active = fields.Boolean(\"Active\", default=True, help=\"If the active field is set to false, it will allow you to hide the case without removing it.\")\n  108      description = fields.Text(\"Description\")\n  109      email_from = fields.Char(\"Email\", size=128, help=\"These people will receive email.\")\n  ...\n  116      stage_id = fields.Many2one('hr.recruitment.stage', 'Stage', track_visibility='onchange',\n  117                                 domain=\"[('job_ids', '=', job_id)]\", copy=False, select=1,\n  118:                                default=_default_stage_id)\n  119      last_stage_id = fields.Many2one('hr.recruitment.stage', \"Last Stage\",\n  120                                      help=\"Stage of the applicant before being in the current stage. Used for lost cases analysis.\")\n  121      categ_ids = fields.Many2many('hr.applicant.category', string=\"Tags\")\n  122:     company_id = fields.Many2one('res.company', \"Company\", default=_default_company_id)\n  123:     user_id = fields.Many2one('res.users', \"Responsible\", track_visibility=\"onchange\", default=lambda self: self.env.uid)\n  124      date_closed = fields.Datetime(\"Closed\", readonly=True, select=True)\n  125      date_open = fields.Datetime(\"Assigned\", readonly=True, select=True)\n  126:     date_last_stage_update = fields.Datetime(\"Last Stage Update\", select=True, default=fields.Datetime.now)\n  127      date_action = fields.Date(\"Next Action Date\")\n  128      title_action = fields.Char(\"Next Action\", size=64)\n  129:     priority = fields.Selection(AVAILABLE_PRIORITIES, \"Appreciation\", default='0')\n  130      job_id = fields.Many2one('hr.job', \"Applied Job\")\n  131      salary_proposed_extra = fields.Char(\"Proposed Salary Extra\", help=\"Salary Proposed by the Organisation, extra advantages\")\n  ...\n  144      day_open = fields.Float(compute='_compute_day', string=\"Days to Open\")\n  145      day_close = fields.Float(compute='_compute_day', string=\"Days to Close\")\n  146:     color = fields.Integer(\"Color Index\", default=0)\n  147      emp_id = fields.Many2one('hr.employee', string=\"Employee\", track_visibility=\"onchange\", help=\"Employee linked to the applicant.\")\n  148      user_email = fields.Char(related='user_id.email', type=\"char\", string=\"User Email\", readonly=True)\n  ...\n  155      def _compute_day(self):\n  156          if self.date_open:\n  157:             date_create = datetime.strptime(self.create_date, tools.DEFAULT_SERVER_DATETIME_FORMAT)\n  158:             date_open = datetime.strptime(self.date_open, tools.DEFAULT_SERVER_DATETIME_FORMAT)\n  159              self.day_open = (date_open - date_create).total_seconds() / (24.0 * 3600)\n  160  \n  161          if self.date_closed:\n  162:             date_create = datetime.strptime(self.create_date, tools.DEFAULT_SERVER_DATETIME_FORMAT)\n  163:             date_closed = datetime.strptime(self.date_closed, tools.DEFAULT_SERVER_DATETIME_FORMAT)\n  164              self.day_close = (date_closed - date_create).total_seconds() / (24.0 * 3600)\n  165  \n  ...\n  181          if read_group_order == 'stage_id desc':\n  182              order = \"%s desc\" % order\n  183:         # retrieve job_id from the context and write the domain: ids + contextual columns (job or default)\n  184:         job_id = self._context.get('default_job_id')\n  185:         department_id = self._context.get('default_department_id')\n  186          search_domain = []\n  187          if job_id:\n  ...\n  263      @api.model\n  264      def create(self, vals):\n  265:         if vals.get('department_id') and not self._context.get('default_department_id'):\n  266:             self = self.with_context(default_department_id=vals.get('department_id'))\n  267:         if vals.get('job_id') or self._context.get('default_job_id'):\n  268:             job_id = vals.get('job_id') or self._context.get('default_job_id')\n  269              for key, value in self._onchange_job_id_internal(job_id)['value'].iteritems():\n  270                  if key not in vals:\n  ...\n  300      def get_empty_list_help(self, help):\n  301          return super(Applicant, self.with_context(empty_list_help_model='hr.job',\n  302:                                                   empty_list_help_id=self.env.context.get('default_job_id'),\n  303                                                    empty_list_help_document_name=_(\"job applicants\"))).get_empty_list_help(help)\n  304  \n  ...\n  321          res = self.env['ir.actions.act_window'].for_xml_id('calendar', 'action_calendar_event')\n  322          res['context'] = {\n  323:             'search_default_partner_ids': self.partner_id.name,\n  324:             'default_partner_ids': partners.ids,\n  325:             'default_user_id': self.env.uid,\n  326:             'default_name': self.name,\n  327:             'default_categ_ids': category and [category.id] or False,\n  328          }\n  329          return res\n  ...\n  355          attachment_action = self.env.ref('base.action_attachment')\n  356          action = attachment_action.read()[0]\n  357:         action['context'] = {'default_res_model': self._name, 'default_res_id': self.ids[0]}\n  358          action['domain'] = str(['&', ('res_model', '=', self._name), ('res_id', 'in', self.ids)])\n  359          return action\n  ...\n  371  \n  372      @api.model\n  373:     def message_get_reply_to(self, ids, default=None):\n  374          \"\"\" Override to get the reply_to of the parent project. \"\"\"\n  375          applicants = self.sudo().browse(ids)\n  376:         aliases = self.env['hr.job'].message_get_reply_to(applicants.mapped('job_id').ids, default=default)\n  377          return dict((applicant.id, aliases.get(applicant.job_id and applicant.job_id.id or 0, False)) for applicant in applicants)\n  378  \n  ...\n  394          \"\"\"\n  395          val = msg.get('from').split('<')[0]\n  396:         defaults = {\n  397              'name': msg.get('subject') or _(\"No Subject\"),\n  398              'partner_name': val,\n  ...\n  403          }\n  404          if msg.get('priority'):\n  405:             defaults['priority'] = msg.get('priority')\n  406          if custom_values:\n  407:             defaults.update(custom_values)\n  408:         return super(Applicant, self).message_new(msg, custom_values=defaults)\n  409  \n  410      @api.multi\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_recruitment\\report\\hr_recruitment_report_views.xml:\n   95          <field name=\"search_view_id\" ref=\"view_hr_recruitment_report_search\"/>\n   96          <field name=\"context\">{\n   97:             'search_default_department_id': [active_id],\n   98:             'default_department_id': active_id}\n   99          </field>\n  100      </record>\n  ...\n  107          <field name=\"search_view_id\" ref=\"view_hr_recruitment_report_search\"/>\n  108          <field name=\"context\">{\n  109:             'search_default_job_id': [active_id],\n  110:             'default_job_id': active_id}\n  111          </field>\n  112      </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_recruitment\\views\\hr_job_views.xml:\n    6          <field name=\"view_type\">form</field>\n    7          <field name=\"view_mode\">form</field>\n    8:         <field name=\"context\">{'search_default_job_id': [active_id], 'default_job_id': active_id}</field>\n    9      </record>\n   10  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_recruitment\\views\\hr_recruitment_views.xml:\n  138                      <group>\n  139                          <field name=\"user_id\"\n  140:                             context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'base.group_hr_manager']}\"/>\n  141                          <label for=\"title_action\"/>\n  142                          <div>\n  ...\n  260          <field name=\"model\">hr.applicant</field>\n  261          <field name=\"arch\" type=\"xml\">\n  262:             <kanban default_group_by=\"stage_id\">\n  263                  <field name=\"stage_id\" options='{\"group_by_tooltip\": {\"requirements\": \"Requirements\"}}'/>\n  264                  <field name=\"color\"/>\n  ...\n  334          <field name=\"res_model\">hr.applicant</field>\n  335          <field name=\"view_mode\">kanban,tree,form,graph,calendar</field>\n  336:         <field name=\"context\">{'search_default_job_id': [active_id], 'default_job_id': active_id}</field>\n  337          <field name=\"help\" type=\"html\">\n  338                <p>\n  ...\n  351          <field name=\"view_mode\">tree</field>\n  352          <field name=\"domain\">[('job_id', '=', active_id)]</field>\n  353:         <field name=\"context\">{'default_job_id': active_id}</field>\n  354          <field name=\"help\" type=\"html\">\n  355                <p>\n  ...\n  382          <field name=\"res_model\">hr.employee</field>\n  383          <field name=\"view_mode\">kanban,tree,form</field>\n  384:         <field name=\"context\">{'search_default_job_id': active_id}</field>\n  385          <field name=\"help\" type=\"html\">\n  386                <p class=\"oe_view_nocontent_create\">\n  ...\n  410              </group>\n  411              <xpath expr=\"//field[@name='department_id']\" position=\"after\">\n  412:                 <label for=\"alias_name\" string=\"Specific Email Address\" attrs=\"{'invisible': [('alias_domain', '=', False)]}\" help=\"Define a specific contact address for this job position. If you keep it empty, the default email address will be used which is in human resources settings\"/>\n  413                  <div name=\"alias_def\" attrs=\"{'invisible': [('alias_domain', '=', False)]}\">\n  414                      <field name=\"alias_id\" class=\"oe_read_only\" string=\"Email Alias\" required=\"0\"/>\n  ...\n  425                      icon=\"fa-file-o\"\n  426                      name=\"%(action_hr_job_applications)d\"\n  427:                     context=\"{'default_user_id': user_id}\"\n  428                      type=\"action\">\n  429                      <field name=\"application_count\" widget=\"statinfo\" string=\"Applications\"/>\n  ...\n  443                  <button class=\"oe_stat_button\" type=\"action\"\n  444                      name=\"%(action_hr_job_sources)d\" icon=\"fa-share\"\n  445:                     context=\"{'default_job_id': active_id}\">\n  446                      <div class=\"o_form_field o_stat_info\">\n  447                          <span class=\"o_stat_text\">Trackers</span>\n  ...\n  458              <field name=\"view_type\">form</field>\n  459              <field name=\"view_mode\">kanban,form</field>\n  460:             <field name=\"context\">{'search_default_in_recruitment': 1}</field>\n  461              <field name=\"help\" type=\"html\">\n  462                <p class=\"oe_view_nocontent_create\">\n  ...\n  475              <field name=\"view_type\">form</field>\n  476              <field name=\"view_mode\">tree,form</field>\n  477:             <field name=\"context\">{'search_default_in_recruitment': 1}</field>\n  478              <field name=\"help\" type=\"html\">\n  479                <p class=\"oe_view_nocontent_create\">\n  ...\n  697          <field name=\"view_mode\">kanban,tree,form,graph,calendar</field>\n  698          <field name=\"context\">{\n  699:             'search_default_department_id': active_id,\n  700:             'default_department_id': active_id}\n  701          </field>\n  702          <field name=\"domain\">[('stage_id.sequence','&lt;=','1')]</field>\n  ...\n  721          <field name=\"view_mode\">kanban,tree,form</field>\n  722          <field name=\"context\">{\n  723:             'search_default_newly_hired_employee': 1,\n  724:             'search_default_department_id': [active_id],\n  725:             'default_department_id': active_id}\n  726          </field>\n  727          <field name=\"search_view_id\" ref=\"hr_employee_view_search\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_timesheet\\hr_timesheet_view.xml:\n   10                      <field name=\"date\"/>\n   11                      <field name=\"user_id\" required=\"1\" options='{\"no_open\": True}'\n   12:                         context=\"{'default_groups_ref': ['base.group_user']}\"/>\n   13                      <field name=\"name\"/>\n   14:                     <field name=\"account_id\" context=\"{'default_type': 'contract'}\" options=\"{'no_open': True, 'no_create': True}\"/>\n   15                      <field name=\"unit_amount\" string=\"Duration\" sum=\"Total time\" widget=\"float_time\"/>\n   16                      <field name=\"is_timesheet\" invisible=\"1\"/>\n   ..\n   28                              <field name=\"name\"/>\n   29                              <field name=\"user_id\" required=\"1\"\n   30:                                 context=\"{'default_groups_ref': ['base.group_user']}\"/>\n   31                                  <field name=\"is_timesheet\" invisible=\"1\"/>\n   32                          </group>\n   ..\n   92              <field name=\"view_id\" ref=\"hr_timesheet_line_form\"/>\n   93              <field name=\"domain\">[('is_timesheet', '=', True)]</field>\n   94:             <field name=\"context\">{\"search_default_today\":1, \"default_is_timesheet\":1}</field>\n   95              <field name=\"search_view_id\" ref=\"hr_timesheet_line_search\"/>\n   96              <field name=\"help\" type=\"html\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_timesheet\\report\\hr_timesheet_report_view.xml:\n   64              <field name=\"view_mode\">pivot,graph</field>\n   65              <field name=\"context\">{\n   66:                 'search_default_department_id': [active_id],\n   67:                 'default_department_id': active_id}\n   68              </field>\n   69          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_timesheet_sheet\\hr_timesheet_sheet.py:\n    9  \n   10  from openerp.osv import fields, osv\n   11: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT, DEFAULT_SERVER_DATETIME_FORMAT\n   12  from openerp.tools.translate import _\n   13  from openerp.exceptions import UserError\n   ..\n  163      }\n  164  \n  165:     def _default_date_from(self, cr, uid, context=None):\n  166          user = self.pool.get('res.users').browse(cr, uid, uid, context=context)\n  167          r = user.company_id and user.company_id.timesheet_range or 'month'\n  ...\n  174          return fields.date.context_today(self, cr, uid, context)\n  175  \n  176:     def _default_date_to(self, cr, uid, context=None):\n  177          user = self.pool.get('res.users').browse(cr, uid, uid, context=context)\n  178          r = user.company_id and user.company_id.timesheet_range or 'month'\n  ...\n  185          return fields.date.context_today(self, cr, uid, context)\n  186  \n  187:     def _default_employee(self, cr, uid, context=None):\n  188          emp_ids = self.pool.get('hr.employee').search(cr, uid, [('user_id','=',uid)], context=context)\n  189          return emp_ids and emp_ids[0] or False\n  190  \n  191:     _defaults = {\n  192:         'date_from' : _default_date_from,\n  193:         'date_to' : _default_date_to,\n  194          'state': 'new',\n  195:         'employee_id': _default_employee,\n  196:         'company_id': lambda self, cr, uid, c: self.pool.get('res.company')._company_default_get(cr, uid, 'hr_timesheet_sheet.sheet', context=c)\n  197      }\n  198  \n  ...\n  280      _inherit = \"account.analytic.line\"\n  281  \n  282:     def _get_default_date(self, cr, uid, context=None):\n  283          if context is None:\n  284              context = {}\n  285:         # get the default date (should be: today)\n  286:         res = super(account_analytic_line, self)._get_default_date(cr, uid, context=context)\n  287:         # if we got the dates from and to from the timesheet and if the default date is in between, we use the default\n  288:         # but if the default isn't included in those dates, we use the date start of the timesheet as default\n  289          if context.get('timesheet_date_from') and context.get('timesheet_date_to'):\n  290              if context['timesheet_date_from'] <= res <= context['timesheet_date_to']:\n  291                  return res\n  292              return context.get('timesheet_date_from')\n  293:         # if we don't get the dates from the timesheet, we return the default value from super()\n  294          return res\n  295  \n  ...\n  358      _inherit = \"hr.attendance\"\n  359  \n  360:     def _get_default_date(self, cr, uid, context=None):\n  361          if context is None:\n  362              context = {}\n  ...\n  403  \n  404          if not date:\n  405:             date = time.strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n  406  \n  407          att_tz = timezone(tz or 'utc')\n  408  \n  409:         attendance_dt = datetime.strptime(date, DEFAULT_SERVER_DATETIME_FORMAT)\n  410          att_tz_dt = pytz.utc.localize(attendance_dt)\n  411          att_tz_dt = att_tz_dt.astimezone(att_tz)\n  ...\n  413          # date_from which is a date format thus using hours would lead to\n  414          # be out of scope of timesheet\n  415:         att_tz_date_str = datetime.strftime(att_tz_dt, DEFAULT_SERVER_DATE_FORMAT)\n  416          return att_tz_date_str\n  417  \n  ...\n  420          sheet_obj = self.pool['hr_timesheet_sheet.sheet']\n  421          if not date:\n  422:             date = time.strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n  423  \n  424          att_tz_date_str = self._get_attendance_employee_tz(\n  ...\n  449              )\n  450      }\n  451:     _defaults = {\n  452:         'name': _get_default_date,\n  453      }\n  454  \n  ...\n  631                   \"computation for one sheet. Set this to 0 if you do not want any control.\"),\n  632      }\n  633:     _defaults = {\n  634          'timesheet_range': lambda *args: 'week',\n  635          'timesheet_max_difference': lambda *args: 0.0\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_timesheet_sheet\\hr_timesheet_sheet_data.xml:\n   28              <field name=\"name\">Waiting Approval</field>\n   29              <field name=\"res_model\">hr_timesheet_sheet.sheet</field>\n   30:             <field name=\"default\" eval=\"True\"/>\n   31              <field name=\"description\">waiting approval</field>\n   32          </record>\n   ..\n   34              <field name=\"name\">Approved</field>\n   35              <field name=\"res_model\">hr_timesheet_sheet.sheet</field>\n   36:             <field name=\"default\" eval=\"True\"/>\n   37              <field name=\"description\">Timesheet approved</field>\n   38          </record>\n   ..\n   41              <field name=\"name\">Timesheets to Approve</field>\n   42              <field name=\"res_model\">hr.department</field>\n   43:             <field name=\"default\" eval=\"False\"/>\n   44              <field name=\"parent_id\" eval=\"ref('mt_timesheet_confirmed')\"/>\n   45              <field name=\"relation_field\">department_id</field>\n   ..\n   49              <field name=\"name\">Timesheets Approved</field>\n   50              <field name=\"res_model\">hr.department</field>\n   51:             <field name=\"default\" eval=\"False\"/>\n   52              <field name=\"parent_id\" eval=\"ref('mt_timesheet_approved')\"/>\n   53              <field name=\"relation_field\">department_id</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_timesheet_sheet\\hr_timesheet_sheet_view.xml:\n   40  \n   41          <record model=\"ir.actions.act_window\" id=\"act_hr_timesheet_sheet_sheet_2_hr_analytic_timesheet\">\n   42:             <field name=\"context\">{'search_default_sheet_id': [active_id], 'default_is_timesheet' : 1}</field>\n   43              <field name=\"name\">Timesheet Activities</field>\n   44              <field name=\"res_model\">account.analytic.line</field>\n   ..\n   48  \n   49          <record model=\"ir.actions.act_window\" id=\"act_hr_timesheet_sheet_sheet_2_hr_attendance\">\n   50:             <field name=\"context\">{'search_default_sheet_id': [active_id]}</field>\n   51              <field name=\"name\">Attendances</field>\n   52              <field name=\"res_model\">hr.attendance</field>\n   ..\n  125                          </page>\n  126                          <page string=\"Details\">\n  127:                             <field context=\"{'employee_id': employee_id, 'user_id':user_id, 'timesheet_date_from': date_from, 'timesheet_date_to': date_to, 'default_is_timesheet' : 1}\" name=\"timesheet_ids\" nolabel=\"1\">\n  128                                  <tree editable=\"bottom\" string=\"Timesheet Activities\">\n  129                                      <field name=\"date\"/>\n  ...\n  225              <field name=\"view_type\">form</field>\n  226              <field name=\"view_id\" eval=\"False\"/>\n  227:             <field name=\"context\">{'search_default_to_approve':1, 'default_is_timesheet':1}</field>\n  228              <field name=\"search_view_id\" ref=\"view_hr_timesheet_sheet_filter\"/>\n  229              <field name=\"help\" type=\"html\">\n  ...\n  343  \n  344          <act_window\n  345:             context=\"{'search_default_sheet_id': [active_id]}\"\n  346              id=\"act_hr_timesheet_sheet_sheet_by_account\"\n  347              name=\"Timesheet by Account\"\n  ...\n  351  \n  352          <act_window\n  353:             context=\"{'search_default_sheet_id': [active_id]}\"\n  354              id=\"act_hr_timesheet_sheet_sheet_by_day\"\n  355              name=\"Timesheet by Day\"\n  ...\n  379          <field name=\"name\">Timesheets</field>\n  380          <field name=\"view_mode\">tree,form</field>\n  381:         <field name=\"context\">{'search_default_employee_id': [active_id], 'default_employee_id': active_id , 'default_is_timesheet' : 1}</field>\n  382      </record>\n  383  \n  ...\n  405              <field name=\"view_mode\">tree,form</field>\n  406              <field name=\"context\">{\n  407:                 'search_default_department_id': [active_id],\n  408:                 'default_department_id': active_id,\n  409:                 'search_default_to_approve': 1}\n  410              </field>\n  411          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hr_timesheet_sheet\\wizard\\hr_timesheet_current_view.xml:\n   12                 <footer>\n   13                      <button name=\"open_timesheet\" string=\"Open\" type=\"object\" class=\"btn-primary\"/>\n   14:                     <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   15                 </footer>\n   16             </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hw_escpos\\escpos\\constants.py:\n   41  TXT_ALIGN_CT    = '\\x1b\\x61\\x01' # Centering\n   42  TXT_ALIGN_RT    = '\\x1b\\x61\\x02' # Right justification\n   43: TXT_COLOR_BLACK = '\\x1b\\x72\\x00' # Default Color\n   44  TXT_COLOR_RED   = '\\x1b\\x72\\x01' # Alternative Color ( Usually Red )\n   45  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\hw_escpos\\escpos\\escpos.py:\n   42      def __init__(self):\n   43          self.stack = []\n   44:         self.defaults = {   # default style values\n   45              'align':     'left',\n   46              'underline': 'off',\n   ..\n   65          }\n   66  \n   67:         self.types = { # attribute types, default is string and can be ommitted\n   68              'width':    'int',\n   69              'indent':   'int',\n   ..\n  120          }\n  121  \n  122:         self.push(self.defaults) \n  123  \n  124      def get(self,style):\n  ...\n  492          if font.upper() == \"B\":\n  493              self._raw(BARCODE_FONT_B)\n  494:         else: # DEFAULT FONT: A\n  495              self._raw(BARCODE_FONT_A)\n  496          # Position\n  ...\n  501          elif pos.upper() == \"ABOVE\":\n  502              self._raw(BARCODE_TXT_ABV)\n  503:         else:  # DEFAULT POSITION: BELOW \n  504              self._raw(BARCODE_TXT_BLW)\n  505          # Type \n  ...\n  838          if font.upper() == \"B\":\n  839              self._raw(TXT_FONT_B)\n  840:         else:  # DEFAULT FONT: A\n  841              self._raw(TXT_FONT_A)\n  842          # Type\n  ...\n  869              self._raw(TXT_2WIDTH)\n  870              self._raw(TXT_2HEIGHT)\n  871:         else: # DEFAULT SIZE: NORMAL\n  872              self._raw(TXT_NORMAL)\n  873  \n  ...\n  880          if mode.upper() == \"PART\":\n  881              self._raw(PAPER_PART_CUT)\n  882:         else: # DEFAULT MODE: FULL CUT\n  883              self._raw(PAPER_FULL_CUT)\n  884  \n  ...\n  902          elif hw.upper() == \"RESET\":\n  903              self._raw(HW_RESET)\n  904:         else: # DEFAULT: DOES NOTHING\n  905              pass\n  906  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\im_livechat\\data\\im_livechat_channel_demo.xml:\n    4          <record id=\"im_livechat_channel_demo\" model=\"im_livechat.channel\">\n    5              <field name=\"name\">YourWebsite.com</field>\n    6:             <field name=\"default_message\">Hello, how may I help you?</field>\n    7          </record>\n    8  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\im_livechat\\models\\im_livechat_channel.py:\n   20      _description = 'Livechat Channel'\n   21  \n   22:     def _default_image(self):\n   23:         image_path = openerp.modules.get_module_resource('im_livechat', 'static/src/img', 'default.png')\n   24          return tools.image_resize_image_big(open(image_path, 'rb').read().encode('base64'))\n   25  \n   26:     def _default_user_ids(self):\n   27          return [(6, 0, [self._uid])]\n   28  \n   29      # attribute fields\n   30      name = fields.Char('Name', required=True, help=\"The name of the channel\")\n   31:     button_text = fields.Char('Text of the Button', default='Have a Question? Chat with us.',\n   32:         help=\"Default text displayed on the Livechat Support Button\")\n   33:     default_message = fields.Char('Welcome Message', default='How may I help you?',\n   34          help=\"This is an automated 'welcome' message that your visitor will see when they initiate a new conversation.\")\n   35      input_placeholder = fields.Char('Chat Input Placeholder')\n   ..\n   43      nbr_channel = fields.Integer('Number of conversation', compute='_compute_nbr_channel', store=False, readonly=True)\n   44      rating_percentage_satisfaction = fields.Integer(\n   45:         '% Happy', compute='_compute_percentage_satisfaction', store=False, default=-1,\n   46          help=\"Percentage of happy ratings over the past 7 days\")\n   47  \n   48      # images fields\n   49:     image = fields.Binary('Image', default=_default_image, attachment=True,\n   50          help=\"This field holds the image used as photo for the group, limited to 1024x1024px.\")\n   51      image_medium = fields.Binary('Medium',\n   ..\n   61  \n   62      # relationnal fields\n   63:     user_ids = fields.Many2many('res.users', 'im_livechat_channel_im_user', 'channel_id', 'user_id', string='Operators', default=_default_user_ids)\n   64      channel_ids = fields.One2many('mail.channel', 'livechat_channel_id', 'Sessions')\n   65      rule_ids = fields.One2many('im_livechat.channel.rule', 'channel_id', 'Rules')\n   ..\n  186              'button_text': channel.button_text,\n  187              'input_placeholder': channel.input_placeholder,\n  188:             'default_message': channel.default_message,\n  189              \"channel_name\": channel.name,\n  190              \"channel_id\": channel.id,\n  ...\n  198          if info['available']:\n  199              info['options'] = self.sudo().get_channel_infos(channel_id)\n  200:             info['options'][\"default_username\"] = username\n  201          return info\n  202  \n  ...\n  216          help=\"Regular expression identifying the web page on which the rules will be applied.\")\n  217      action = fields.Selection([('display_button', 'Display the button'), ('auto_popup', 'Auto popup'), ('hide_button', 'Hide the button')],\n  218:         string='Action', required=True, default='display_button',\n  219          help=\"* Select 'Display the button' to simply display the chat button on the pages.\\n\"\\\n  220               \"* Select 'Auto popup' for to display the button, and automatically open the conversation window.\\n\"\\\n  221               \"* Select 'Hide the button' to hide the chat button on the pages.\")\n  222:     auto_popup_timer = fields.Integer('Auto popup timer', default=0,\n  223          help=\"Delay (in seconds) to automatically open the converssation window. Note : the selected action must be 'Auto popup', otherwise this parameter will not be take into account.\")\n  224      channel_id = fields.Many2one('im_livechat.channel', 'Channel',\n  ...\n  226      country_ids = fields.Many2many('res.country', 'im_livechat_channel_country_rel', 'channel_id', 'country_id', 'Country',\n  227          help=\"The actual rule will match only for this country. So if you set select 'Belgium' and 'France' and you set the action to 'Hide Buttun', this 2 country will not be see the support button for the specified URL. This feature requires GeoIP installed on your server.\")\n  228:     sequence = fields.Integer('Matching order', default=10,\n  229          help=\"Given the order to find a matching rule. If 2 rules are matching for the given url/country, the one with the lowest sequence will be chosen.\")\n  230  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\im_livechat\\report\\im_livechat_report_channel_views.xml:\n   55              <field name=\"view_type\">form</field>\n   56              <field name=\"view_mode\">pivot,graph</field>\n   57:             <field name=\"context\">{\"search_default_last_week\":1}</field>\n   58              <field name=\"help\">Livechat Support Channel Statistics allows you to easily check and analyse your company livechat session performance. Extract informations about the missed sessions, the audiance, the duration of a session, etc.</field>\n   59          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\im_livechat\\report\\im_livechat_report_operator_views.xml:\n   52              <field name=\"view_type\">form</field>\n   53              <field name=\"view_mode\">pivot,graph</field>\n   54:             <field name=\"context\">{\"search_default_last_week\":1}</field>\n   55              <field name=\"help\">Livechat Support Channel Statistics allows you to easily check and analyse your company livechat session performance. Extract informations about the missed sessions, the audiance, the duration of a session, etc.</field>\n   56          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\im_livechat\\views\\im_livechat_channel_views.xml:\n  109                              <field name=\"button_text\"/>\n  110                              <field name=\"input_placeholder\"/>\n  111:                             <field name=\"default_message\" placeholder=\"e.g. Hello, how may I help you?\"/>\n  112                          </group>\n  113                      </group>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\im_livechat\\views\\mail_channel_views.xml:\n  107              <field name=\"domain\">[('livechat_channel_id', 'in', [active_id])]</field>\n  108              <field name=\"context\">{\n  109:                 'search_default_livechat_channel_id': [active_id],\n  110:                 'default_livechat_channel_id': active_id,\n  111              }</field>\n  112              <field name=\"search_view_id\" ref=\"mail_channel_view_search\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_at\\account_wizard.py:\n   11  	_inherit='wizard.multi.charts.accounts'\n   12  	\n   13: 	_defaults = {\n   14  		'code_digits' : 0,\n   15  	}\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_be_hr_payroll_account\\__init__.py:\n    5  \n    6  def _set_accounts(cr, registry):\n    7:     #write the default debit account on salary rule having xml_id like 'l10n_be_hr_payroll.1' up to 'l10n_be_hr_payroll.1409'\n    8      model_obj = registry['ir.model.data']\n    9      names = [str(x) for x in range(1,1410)]\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_be_intrastat\\l10n_be_intrastat.py:\n  123      region_id = fields.Many2one('l10n_be_intrastat.region', 'Intrastat region')\n  124      transport_mode_id = fields.Many2one('l10n_be_intrastat.transport_mode',\n  125:                                              'Default transport mode')\n  126:     incoterm_id = fields.Many2one('stock.incoterms', 'Default incoterm for Intrastat',\n  127                                         help=\"International Commercial Terms are a series of \"\n  128                                              \"predefined commercial terms used in international \"\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_be_intrastat\\wizard\\l10n_be_intrastat_xml_view.xml:\n   28                    <footer>\n   29                      <group states=\"draft\">\n   30:                       <button name=\"create_xml\" string=\"Create XML\" type=\"object\" default_focus=\"1\" class=\"btn-primary\"/>\n   31:                       <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   32                      </group>\n   33                      <group states=\"download\">\n   34:                         <button string=\"Close\" special=\"cancel\" class=\"btn-default\"/>\n   35                      </group>\n   36                    </footer>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_be_intrastat\\wizard\\xml_decl.py:\n   25      def _get_def_monthyear(self, cr, uid, context=None):\n   26          td = datetime.strptime(fields.date.context_today(self, cr, uid, context=context),\n   27:                                tools.DEFAULT_SERVER_DATE_FORMAT).date()\n   28          return td.strftime('%Y'), td.strftime('%m')\n   29  \n   ..\n   54      }\n   55  \n   56:     _defaults = {\n   57          'arrivals': 'be-standard',\n   58          'dispatches': 'be-standard',\n   ..\n  277                      self._company_warning(\n  278                          cr, uid,\n  279:                         _('The default Intrastat transport mode of your company '\n  280                            'is not set, please make sure to configure it first.'),\n  281                          context=context)\n  ...\n  289                      self._company_warning(\n  290                          cr, uid,\n  291:                         _('The default Incoterm of your company is not set, '\n  292                            'please make sure to configure it first.'),\n  293                          context=context)\n  ...\n  311              else:\n  312                  supply_units = inv_line.quantity * inv_line.uom_id.factor\n  313:             amounts = entries.setdefault(linekey, (0, 0, 0))\n  314              amounts = (amounts[0] + amount, amounts[1] + weight, amounts[2] + supply_units)\n  315              entries[linekey] = amounts\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_be_invoice_bba\\invoice.py:\n   53      def _onchange_partner_id(self):\n   54          result = super(account_invoice, self)._onchange_partner_id()\n   55: #        reference_type = self.default_get(cr, uid, ['reference_type'])['reference_type']\n   56  #        _logger.warning('partner_id %s' % partner_id)\n   57          reference = False\n   ..\n  136          reference_type = vals.get('reference_type', False)\n  137          if vals.get('type') == 'out_invoice' and not reference_type:\n  138:             # fallback on default communication type for partner\n  139              reference_type = self.pool.get('res.partner').browse(cr, uid, vals['partner_id']).out_inv_comm_type\n  140              if reference_type == 'bba':\n  ...\n  181          return super(account_invoice, self).write(cr, uid, ids, vals, context)\n  182  \n  183:     def copy(self, cr, uid, id, default=None, context=None):\n  184:         default = default or {}\n  185          invoice = self.browse(cr, uid, id, context=context)\n  186          if invoice.type in ['out_invoice']:\n  187              reference_type = invoice.reference_type or 'none'\n  188:             default['reference_type'] = reference_type\n  189              if reference_type == 'bba':\n  190                  partner = invoice.partner_id\n  191:                 default['reference'] = self.generate_bbacomm(cr, uid, id,\n  192                      invoice.type, reference_type,\n  193                      partner.id, '', context=context)['value']['reference']\n  194:         return super(account_invoice, self).copy(cr, uid, id, default, context=context)\n  195  \n  196      _columns = {\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_be_invoice_bba\\partner.py:\n    9  \n   10  class res_partner(osv.osv):  \n   11:     \"\"\" add field to indicate default 'Communication Type' on customer invoices \"\"\"\n   12      _inherit = 'res.partner'\n   13      \n   ..\n   17      \n   18      _columns = {\n   19:         'out_inv_comm_type': fields.selection(_get_comm_type, 'Communication Type', change_default=True,\n   20:             help='Select Default Communication Type for Outgoing Invoices.' ),\n   21          'out_inv_comm_algorithm': fields.selection([\n   22              ('random','Random'),\n   ..\n   32  \n   33  \n   34:     _default = {\n   35          'out_inv_comm_type': 'none',\n   36      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_br\\account.py:\n    4  from openerp.osv import fields, osv\n    5  \n    6: TAX_DEFAULTS = {\n    7                  'base_reduction': 0,\n    8                  'amount_mva': 0,\n    .\n   30                                                  string=\"Tax Computation\", required=True)\n   31                 }\n   32:     _defaults = TAX_DEFAULTS\n   33  \n   34  class account_tax(osv.osv):\n   ..\n   51                                                  string=\"Tax Computation\", required=True)\n   52                 }\n   53:     _defaults = TAX_DEFAULTS\n   54  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_ca\\fiscal_templates.xml:\n   74      </record>\n   75  \n   76:     <!--  Company is in Alberta (default is gst) -->\n   77  \n   78      <record id=\"fiscal_position_tax_template_ab2nb_sale_en\" model=\"account.fiscal.position.tax.template\">\n   ..\n  118      </record>\n  119  \n  120:     <!-- Company is in British Columbia (default is gstpst_bc) -->\n  121  \n  122      <!-- Sale taxes -->\n  ...\n  278      </record>\n  279  \n  280:     <!-- Company is in Manitoba (default is gstpst_mb) -->\n  281  \n  282      <!-- Sale Taxes -->\n  ...\n  438      </record>\n  439  \n  440:     <!--  Company is in New Brunswick (default is hst13) -->\n  441  \n  442      <record id=\"fiscal_position_tax_template_nb2ab_sale_en\" model=\"account.fiscal.position.tax.template\">\n  ...\n  518      </record>\n  519  \n  520:     <!--  Company is in Newfoundland and Labrador (default is hst13) -->\n  521      \n  522      <!-- Already created by nb2ab_sale\n  ...\n  606      -->\n  607  \n  608:     <!--  Company is in Nova Scotia (default is hst15) -->\n  609  \n  610      <record id=\"fiscal_position_tax_template_ns2ab_sale_en\" model=\"account.fiscal.position.tax.template\">\n  ...\n  692      </record>\n  693  \n  694:     <!--  Company is in Northwest Territories (default is gst) -->\n  695  \n  696      <!-- Already created by ab2nb_sale\n  ...\n  745      -->\n  746  \n  747:     <!--  Company is in Nunavut (default is gst) -->\n  748  \n  749      <!-- Already created by ab2nb_sale\n  ...\n  798      -->\n  799  \n  800:     <!--  Company is in Ontario (default is hst13) -->\n  801  \n  802      <!-- Already created nb2ab_sale\n  ...\n  886      -->\n  887  \n  888:     <!--  Company is in Prince Edward Islands (default is hst14) -->\n  889  \n  890      <record id=\"fiscal_position_tax_template_pe2ab_sale_en\" model=\"account.fiscal.position.tax.template\">\n  ...\n  972      </record>\n  973  \n  974:     <!--  Company is in Quebec (default is gstqst) -->\n  975  \n  976      <!-- Sale Taxes -->\n  ...\n 1132      </record>\n 1133  \n 1134:     <!--  Company is in Saskatchewan (default is gstpst_sk) -->\n 1135  \n 1136      <!-- Sale Taxes -->\n ....\n 1292      </record>\n 1293  \n 1294:     <!--  Company is in Yukon (default is gst) -->\n 1295  \n 1296      <!-- Already created by ab2nb_sale\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_cn\\base_data.xml:\n    7  \n    8  依据《 中华人民共和国行政区划代码（国家标准  GB/T 2260-2007》 编制\n    9: http://www.cvh.org.cn/cms/sites/default/files/GBT2260-2007.pdf\n   10  -->\n   11  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_cn_small_business\\account_chart_template.xml:\n  544              <field name=\"name\">小企业会计科目表（财会[2011]17号《小企业会计准则》）</field>\n  545              <field name=\"model\">account.chart.template</field>\n  546:             <field name=\"key\">default</field>\n  547              <field name=\"res_id\" ref=\"l10n_chart_china_small_business\"/>\n  548              <field name=\"value\" ref=\"base.CNY\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_cn_standard\\account_chart_template.xml:\n  754              <field name=\"name\">中国会计科目表  （财会[2006]3号《企业会计准则》）</field>\n  755              <field name=\"model\">account.chart.template</field>\n  756:             <field name=\"key\">default</field>\n  757              <field name=\"res_id\" ref=\"l10n_chart_china_standard_business\"/>\n  758              <field name=\"value\" ref=\"base.CNY\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_cr\\data\\account_tax_template.xml:\n   38          </record>\n   39  \n   40:         <!-- Default Tax -->\n   41          <record id=\"account_account_template_0_410001\" model=\"account.account.template\">\n   42              <field name=\"tax_ids\" eval=\"[(6,0,[ref('account_tax_template_IV_0')])]\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_do\\data\\account_chart_template.xml:\n   15      </data>\n   16  \n   17:  	<record model=\"account.account.template\" id=\"default_chart_a_account_152\">\n   18          <field name=\"name\">Efectivo en transito</field>\n   19          <field name=\"code\">112050</field>\n   ..\n   23      \n   24  \n   25:     <record id=\"default_chart_a\" model=\"account.chart.template\">\n   26          <field name=\"name\">Catálogo de Cuentas Empresas Privadas</field>\n   27          <field name=\"currency_id\" ref=\"base.DOP\"/>\n   28          <field name=\"code_digits\" eval=\"8\"/>\n   29:         <field name=\"transfer_account_id\" ref=\"default_chart_a_account_152\"/>\n   30          <field name=\"bank_account_code_prefix\">112</field>\n   31          <field name=\"cash_account_code_prefix\">111</field>\n   32      </record>\n   33  \n   34:  	<record model=\"account.account.template\" id=\"default_chart_a_account_152\">\n   35:  		<field name=\"chart_template_id\" ref=\"default_chart_a\"/>\n   36      </record>\n   37  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_do\\data\\set_account_on_chart_template.xml:\n    1  <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    2  <odoo>\n    3:         <record id=\"default_chart_a\" model=\"account.chart.template\">\n    4:             <field name=\"property_account_receivable_id\" ref=\"default_chart_a_account_13\"/>\n    5:             <field name=\"property_account_payable_id\" ref=\"default_chart_a_account_61\"/>\n    6:             <field name=\"property_account_expense_categ_id\" ref=\"default_chart_a_account_101\"/>\n    7:             <field name=\"property_account_income_categ_id\" ref=\"default_chart_a_account_87\"/>\n    8:             <field name=\"income_currency_exchange_account_id\" ref=\"default_chart_a_account_148\"/>\n    9:             <field name=\"expense_currency_exchange_account_id\" ref=\"default_chart_a_account_596\"/>\n   10          </record>\n   11  </odoo>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_eu_service\\__openerp__.py:\n   30   - optionally: a template fiscal position, in order\n   31     to copy the account mapping. Should be your\n   32:    existing B2C Intra-EU fiscal position. (defaults\n   33     to no account mapping)\n   34   - optionally: an account to use for collecting the\n   35:    tax amounts (defaults to the account used by your\n   36     national VAT tax for services)\n   37  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_eu_service\\wizard\\wizard.py:\n   20          return eu_group\n   21  \n   22:     def _get_default_company_id(self):\n   23          return self.env.user.company_id.id\n   24  \n   25:     def _default_fiscal_position_id(self):\n   26          user = self.env.user\n   27          eu_id = self._get_eu_res_country_group()\n   ..\n   30               ('country_group_id.id', '=', eu_id.id)], limit=1)\n   31  \n   32:     def _default_tax_id(self):\n   33          user = self.env.user\n   34          return self.env['account.tax'].search(\n   ..\n   36               ('amount_type', '=', 'percent'), ('account_id', '!=', False)], limit=1, order='amount desc')\n   37  \n   38:     def _default_done_country_ids(self):\n   39          user = self.env.user\n   40          eu_country_group = self._get_eu_res_country_group()\n   41:         return eu_country_group.country_ids - self._default_todo_country_ids() - user.company_id.country_id\n   42  \n   43:     def _default_todo_country_ids(self):\n   44          user = self.env.user\n   45          eu_country_group = self._get_eu_res_country_group()\n   ..\n   51  \n   52      company_id = fields.Many2one(\n   53:         'res.company', string='Company', required=True, default=_get_default_company_id)\n   54      fiscal_position_id = fields.Many2one(\n   55:         'account.fiscal.position', string='Fiscal Position', default=_default_fiscal_position_id,\n   56          help=\"Optional fiscal position to use as template for general account mapping. \"\n   57               \"Should usually be your current Intra-EU B2B fiscal position. \"\n   58               \"If not set, no general account mapping will be configured for EU fiscal positions.\")\n   59      tax_id = fields.Many2one(\n   60:         'account.tax', string='Service VAT', required=True, default=_default_tax_id,\n   61          help=\"Select your current VAT tax for services. This is the tax that will be mapped \"\n   62               \"to the corresponding VAT tax in each EU country selected below.\")\n   ..\n   67               \"your Service VAT will be used.\")\n   68      done_country_ids = fields.Many2many(\n   69:         'res.country', 'l10n_eu_service_country_rel_done', default=_default_done_country_ids,\n   70          string='Already Supported')\n   71      todo_country_ids = fields.Many2many(\n   72:         'res.country', 'l10n_eu_service_country_rel_todo', default=_default_todo_country_ids,\n   73          string='EU Customers From', required=True)\n   74  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_eu_service\\wizard\\wizard.xml:\n   39                          <button string=\"Create Fiscal Positions and Taxes\"\n   40                                  name=\"generate_eu_service\" type=\"object\" class=\"btn-primary\"/>\n   41:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   42                      </footer>\n   43                   </form>\n   ..\n   63              <field name=\"inherit_id\" ref=\"account.view_account_config_settings\"/>\n   64              <field name=\"arch\" type=\"xml\">\n   65:                <field name=\"default_sale_tax_id\" position=\"after\">\n   66                      <button type=\"action\" name=\"%(action_eu_service)d\"\n   67                              string=\"Setup EU MOSS Taxes\" class=\"oe_link\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_fr\\__openerp__.py:\n   24  company sells services to a company based in the DOMs. We could manage it in the\n   25  fiscal positions, but it would require to differentiate between 'product' VAT taxes\n   26: and 'service' VAT taxes. We consider that it is too 'heavy' to have this by default\n   27  in l10n_fr; companies that sell services to DOM-based companies should update the\n   28  configuration of their taxes and fiscal positions manually.\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_in_hr_payroll\\l10n_in_hr_payroll.py:\n   57      }\n   58  \n   59:     _defaults = {\n   60          'date': lambda * a: time.strftime('%Y-%m-%d'),\n   61          'state': lambda * a: 'draft',\n   ..\n  221          'ifsc': fields.related('advice_id', 'neft', type='boolean', string='IFSC'),\n  222      }\n  223:     _defaults = {\n  224          'debit_credit': 'C',\n  225      }\n  ...\n  242          'dearness_allowance': fields.boolean('Dearness Allowance', help=\"Check this box if your company provide Dearness Allowance to employee\")\n  243      }\n  244:     _defaults = {\n  245          'dearness_allowance': True,\n  246      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_in_hr_payroll\\report\\payment_advice_report_view.xml:\n   75          <field name=\"view_mode\">tree</field>\n   76          <field name=\"view_id\" ref=\"view_payment_advice_tree\"/>\n   77:         <field name=\"context\">{'search_default_confirm':1,'group_by_no_leaf':1,'group_by':[]}</field>\n   78          <field name=\"help\">This report performs analysis on Payment Advices</field>\n   79      </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_in_hr_payroll\\report\\payslip_report_view.xml:\n   73          <field name=\"view_mode\">tree</field>\n   74          <field name=\"view_id\" ref=\"view_payslip_tree\"/>\n   75:         <field name=\"context\">{'search_default_employee':1,'search_default_category':1,'group_by_no_leaf':uid,'group_by':[]}</field>\n   76          <field name=\"help\">This report performs analysis on Payslip</field>\n   77      </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_in_hr_payroll\\report\\report_hr_yearly_salary_detail.py:\n   97          for category in salary:\n   98              if category[0] not in salaries:\n   99:                 salaries.setdefault(category[0], {})\n  100                  salaries[category[0]].update({category[1]: {category[3]: category[2]}})\n  101              elif category[1] not in salaries[category[0]]:\n  102:                 salaries[category[0]].setdefault(category[1], {})\n  103                  salaries[category[0]][category[1]].update({category[3]: category[2]})\n  104              else:\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_in_hr_payroll\\wizard\\hr_salary_employee_bymonth.py:\n   16      }\n   17  \n   18:     def _get_default_category(self, cr, uid, context=None):\n   19          category_ids = self.pool.get('hr.salary.rule.category').search(cr, uid, [('code', '=', 'NET')], context=context)\n   20          return category_ids and category_ids[0] or False\n   21  \n   22:     _defaults = {\n   23           'start_date': lambda *a: time.strftime('%Y-01-01'),\n   24           'end_date': lambda *a: time.strftime('%Y-%m-%d'),\n   25:          'category_id': _get_default_category\n   26      }\n   27  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_in_hr_payroll\\wizard\\hr_salary_employee_bymonth_view.xml:\n   10                  <footer>\n   11                      <button name=\"print_report\" string=\"Print\" type=\"object\" class=\"btn-primary\"/>\n   12:                     <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   13                  </footer>\n   14                  <group>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_in_hr_payroll\\wizard\\hr_yearly_salary_detail.py:\n   16      }\n   17  \n   18:    _defaults = {\n   19          'date_from': lambda *a: time.strftime('%Y-01-01'),\n   20          'date_to': lambda *a: time.strftime('%Y-%m-%d'),\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_in_hr_payroll\\wizard\\hr_yearly_salary_detail_view.xml:\n   10                  <footer>\n   11                      <button name=\"print_report\" string=\"Print\" type=\"object\" class=\"btn-primary\"/>\n   12:                     <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   13                  </footer>\n   14                  <group>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_lu\\__openerp__.py:\n   17      * the Tax Code Chart for Luxembourg\n   18      * the main taxes used in Luxembourg\n   19:     * default fiscal position for local, intracom, extracom\n   20  \n   21  Notes:\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\l10n_ve\\__openerp__.py:\n   17  ===============================\n   18  \n   19: Venezuela doesn't have any chart of account by law, but the default\n   20  proposed in OpenERP should comply with some Accepted best practices in Venezuela, \n   21  this plan comply with this practices.\n   ..\n   40  \n   41  If you install this module, and select Custom chart a basic chart will be proposed, \n   42: but you will need set manually account defaults for taxes.\n   43  \"\"\",\n   44      'depends': ['account',\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\lunch\\models\\lunch.py:\n   17      _order = 'date desc'\n   18  \n   19:     def _default_previous_order_ids(self):\n   20          prev_order = self.env['lunch.order.line'].search([('user_id', '=', self.env.uid)], limit=20, order='id desc')\n   21          # If we return return prev_order.ids, we will have duplicates (identical orders).\n   ..\n   28      user_id = fields.Many2one('res.users', 'User', required=True, readonly=True,\n   29                                states={'new': [('readonly', False)]},\n   30:                               default=lambda self: self.env.uid)\n   31      date = fields.Date('Date', required=True, readonly=True,\n   32                         states={'new': [('readonly', False)]},\n   33:                        default=fields.Date.context_today)\n   34      order_line_ids = fields.One2many('lunch.order.line', 'order_id', 'Products',\n   35                                       ondelete=\"cascade\", readonly=True, copy=True,\n   ..\n   39                                ('confirmed', 'Received'),\n   40                                ('cancelled', 'Cancelled')],\n   41:                              'Status', readonly=True, index=True, copy=False, default='new',\n   42                               compute='_compute_order_state', store=True)\n   43      alerts = fields.Text(compute='_compute_alerts_get', string=\"Alerts\")\n   44      previous_order_ids = fields.Many2many('lunch.order.line', compute='_compute_previous_order_ids',\n   45:                                           default=lambda self: self._default_previous_order_ids())\n   46      company_id = fields.Many2one('res.company', related='user_id.company_id', store=True)\n   47      currency_id = fields.Many2one('res.currency', related='company_id.currency_id', readonly=True, store=True)\n   ..\n   76      @api.depends('user_id')\n   77      def _compute_previous_order_ids(self):\n   78:         self.previous_order_ids = self._default_previous_order_ids()\n   79  \n   80      @api.one\n   ..\n  148                                ('ordered', 'Ordered'),\n  149                                ('cancelled', 'Cancelled')],\n  150:                              'Status', readonly=True, select=True, default='new')\n  151      cashmove = fields.One2many('lunch.cashmove', 'order_id', 'Cash Move')\n  152      currency_id = fields.Many2one('res.currency', related='order_id.currency_id')\n  ...\n  211  \n  212      user_id = fields.Many2one('res.users', 'User', required=True,\n  213:                               default=lambda self: self.env.uid)\n  214:     date = fields.Date('Date', required=True, default=fields.Date.context_today)\n  215      amount = fields.Float('Amount', required=True, help='Can be positive (payment) or negative (order or payment if user wants to get his money back)')\n  216      description = fields.Text('Description', help='Can be an order or a payment')\n  217      order_id = fields.Many2one('lunch.order.line', 'Order', ondelete='cascade')\n  218      state = fields.Selection([('order', 'Order'), ('payment', 'Payment')],\n  219:                              'Is an order or a payment', default='payment')\n  220  \n  221      @api.multi\n  ...\n  235                                     ('week', 'Every Week'),\n  236                                     ('days', 'Every Day')],\n  237:                                   string='Recurrency', required=True, select=True, default='specific')\n  238:     specific_day = fields.Date('Day', default=fields.Date.context_today)\n  239      monday = fields.Boolean('Monday')\n  240      tuesday = fields.Boolean('Tuesday')\n  ...\n  244      saturday = fields.Boolean('Saturday')\n  245      sunday = fields.Boolean('Sunday')\n  246:     start_hour = fields.Float('Between', oldname='active_from', required=True, default=7)\n  247:     end_hour = fields.Float('And', oldname='active_to', required=True, default=23)\n  248  \n  249      @api.multi\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\lunch\\views\\lunch_views.xml:\n  110                          <group>\n  111                              <field name=\"user_id\"\n  112:                                    context=\"{'default_groups_ref': ['base.group_user', 'lunch.group_lunch_user']}\"/>\n  113                              <field name=\"date\"/>\n  114                              <field name=\"amount\"/>\n  ...\n  135              <field name=\"view_mode\">tree,form</field>\n  136              <field name=\"search_view_id\" ref=\"lunch_order_view_search\"/>\n  137:             <field name=\"context\">{\"search_default_is_mine\":1, \"search_default_received\":1}</field>\n  138              <field name=\"help\" type=\"html\">\n  139              <p class=\"oe_view_nocontent_create\">\n  ...\n  167              <field name=\"view_mode\">tree</field>\n  168              <field name=\"search_view_id\" ref=\"lunch_cashmove_view_search\"/>\n  169:             <field name=\"context\">{\"search_default_is_mine_group\":1}</field>\n  170              <field name=\"view_id\" ref=\"lunch_cashmove_view_tree_2\"/>\n  171              <field name=\"help\" type=\"html\">\n  ...\n  185              <field name=\"view_mode\">tree</field>\n  186              <field name=\"search_view_id\" ref=\"lunch_order_line_view_search\"/>\n  187:             <field name=\"context\">{\"search_default_group_by_supplier\":1, \"search_default_today\":1}</field>\n  188              <field name=\"help\" type=\"html\">\n  189                <p>\n  ...\n  205              <field name=\"view_mode\">tree</field>\n  206              <field name=\"search_view_id\" ref=\"lunch_order_line_view_search\"/>\n  207:             <field name=\"context\">{\"search_default_group_by_date\":1, \"search_default_group_by_supplier\":1}</field>\n  208              <field name=\"help\" type=\"html\">\n  209                <p>\n  ...\n  225              <field name=\"view_mode\">tree,form</field>\n  226              <field name=\"search_view_id\" ref=\"lunch_cashmove_view_search_2\"/>\n  227:             <field name=\"context\">{\"search_default_group_by_user\":1}</field>\n  228              <field name=\"view_id\" ref=\"lunch_cashmove_view_tree\"/>\n  229              <field name=\"help\" type=\"html\">\n  ...\n  246              <field name=\"view_mode\">tree,form</field>\n  247              <field name=\"search_view_id\" ref=\"lunch_cashmove_view_search\"/>\n  248:             <field name=\"context\">{\"search_default_is_payment\":1}</field>\n  249              <field name=\"view_id\" ref=\"lunch_cashmove_view_tree\"/>\n  250              <field name=\"help\" type=\"html\">\n  ...\n  389                          <group>\n  390                              <group>\n  391:                                 <field name='user_id' context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'lunch.group_lunch_user']}\" class=\"oe_inline\"/>\n  392                                  <field name='date'/>\n  393                              </group>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\lunch\\wizard\\lucky_order.py:\n    9      _name = 'lunch.order.line.lucky'\n   10  \n   11:     def _default_supplier(self):\n   12          suppliers_obj = self.env['lunch.product'].search([]).mapped(\"supplier\")\n   13          return [(4, supplier.id) for supplier in suppliers_obj]\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\controllers\\bus.py:\n    9  class MailChatController(openerp.addons.bus.controllers.main.BusController):\n   10  \n   11:     def _default_request_uid(self):\n   12          \"\"\" For Anonymous people, they receive the access right of SUPERUSER_ID since they have NO access (auth=none)\n   13              !!! Each time a method from this controller is call, there is a check if the user (who can be anonymous and Sudo access)\n   ..\n   36      @openerp.http.route('/mail/chat_post', type=\"json\", auth=\"none\")\n   37      def mail_chat_post(self, uuid, message_content, **kwargs):\n   38:         request_uid = self._default_request_uid()\n   39          # find the author from the user session, which can be None\n   40          author_id = False  # message_post accept 'False' author_id, but not 'None'\n   ..\n   48      @openerp.http.route(['/mail/chat_history'], type=\"json\", auth=\"none\")\n   49      def mail_chat_history(self, uuid, last_id=False, limit=20):\n   50:         request_uid = self._default_request_uid()\n   51          channel = request.env[\"mail.channel\"].sudo(request_uid).search([('uuid', '=', uuid)], limit=1)\n   52          return channel.sudo(request_uid).channel_fetch_message(last_id, limit)\n   ..\n   59          # include the previous notifications, only for identified user\n   60          if request.session.uid:\n   61:             request_uid = self._default_request_uid()\n   62              result['notifications'] = request.env['mail.channel'].sudo(request_uid).get_init_notifications()\n   63          return result\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\controllers\\main.py:\n   75              'res_model': subtype.res_model,\n   76              'sequence': subtype.sequence,\n   77:             'default': subtype.default,\n   78              'internal': subtype.internal,\n   79              'followed': subtype.id in followers.mapped('subtype_ids').ids,\n   ..\n  218      def avatar(self, res_model, res_id, partner_id):\n  219          headers = [[('Content-Type', 'image/png')]]\n  220:         content = 'R0lGODlhAQABAIABAP///wAAACH5BAEKAAEALAAAAAABAAEAAAICTAEAOw=='  # default image is one white pixel\n  221          if res_model in request.env:\n  222              try:\n  ...\n  224                  request.env[res_model].browse(res_id).check_access_rule('read')\n  225                  if partner_id in request.env[res_model].browse(res_id).sudo().exists().message_ids.mapped('author_id').ids:\n  226:                     status, headers, content = binary_content(model='res.partner', id=partner_id, field='image_medium', default_mimetype='image/png', env=request.env(user=openerp.SUPERUSER_ID))\n  227                      if status == 304:\n  228                          return werkzeug.wrappers.Response(status=304)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\data\\mail_data.xml:\n   47          <record id=\"mt_note\" model=\"mail.message.subtype\">\n   48              <field name=\"name\">Note</field>\n   49:             <field name=\"default\" eval=\"False\"/>\n   50              <field name=\"internal\" eval=\"True\"/>\n   51              <field name=\"sequence\" eval=\"100\"/>\n   ..\n   54      </data>\n   55      <data>\n   56:         <!--Default Notification Email template -->\n   57:         <record id=\"mail_template_data_notification_email_default\" model=\"mail.template\">\n   58              <field name=\"name\">Notification Email</field>\n   59              <field name=\"subject\">${object.subject or (object.record_name and 'Re: %s' % object.record_name) or (object.parent_id and object.parent_id.subject and 'Re: %s' % object.parent_id.subject) or (object.parent_id and object.parent_id.record_name and 'Re: %s' % object.parent_id.record_name)}</field>\n   ..\n   73              <td valign=\"center\" width=\"270\" style=\"padding:5px 10px 5px 5px;font-size: 30px\">\n   74                  % if ctx.get('button_access'):\n   75:                 <a href=\"${ctx['button_access']['url']}\" style=\"-webkit-user-select: none; padding: 5px 10px; font-size: 12px; line-height: 18px; color: #FFFFFF; border-color:#a24689; text-decoration: none; display: inline-block; margin-bottom: 0px; font-weight: 400; text-align: center; vertical-align: middle; cursor: pointer; white-space: nowrap; background-image: none; background-color: #a24689; border: 1px solid #a24689; border-radius:3px\" class=\"o_default_snippet_text\">${ctx['button_access']['title']}</a>\n   76                  % endif\n   77  \n   78                  % if ctx.get('button_follow'):\n   79:                 <a href=\"${ctx['button_follow']['url']}\" style=\"-webkit-user-select: none; padding: 5px 10px; font-size: 12px; line-height: 18px; color: #FFFFFF; border-color:#a24689; text-decoration: none; display: inline-block; margin-bottom: 0px; font-weight: 400; text-align: center; vertical-align: middle; cursor: pointer; white-space: nowrap; background-image: none; background-color: #a24689; border: 1px solid #a24689; border-radius:3px\" class=\"o_default_snippet_text\">${ctx['button_follow']['title']}</a>\n   80                  \n   81                  % elif ctx.get('button_unfollow'):\n   82:                 <a href=\"${ctx['button_unfollow']['url']}\" style=\"-webkit-user-select: none; padding: 5px 10px; font-size: 12px; line-height: 18px; color: #FFFFFF; border-color:#a24689; text-decoration: none; display: inline-block; margin-bottom: 0px; font-weight: 400; text-align: center; vertical-align: middle; cursor: pointer; white-space: nowrap; background-image: none; background-color: #a24689; border: 1px solid #a24689; border-radius:3px\" class=\"o_default_snippet_text\">${ctx['button_unfollow']['title']}</a>\n   83                  % endif\n   84  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\models\\mail_alias.py:\n   51                                        # (have a few false positives, though)\n   52                                        domain=\"[('field_id.name', '=', 'message_ids')]\")\n   53:     alias_user_id = fields.Many2one('res.users', 'Owner', defaults=lambda self: self.env.user,\n   54                                      help=\"The owner of records created upon receiving emails on this alias. \"\n   55                                           \"If this field is not set the system will attempt to find the right owner \"\n   56                                           \"based on the sender (From) address, or will use the Administrator account \"\n   57                                           \"if no system user is found for that address.\")\n   58:     alias_defaults = fields.Text('Default Values', required=True, default='{}',\n   59                                   help=\"A Python dictionary that will be evaluated to provide \"\n   60:                                       \"default values when creating new records for this alias.\")\n   61      alias_force_thread_id = fields.Integer(\n   62          'Record Thread ID',\n   ..\n   64               \"if they did not reply to it. If set, this will disable the creation of new records completely.\")\n   65      alias_domain = fields.Char('Alias domain', compute='_get_alias_domain',\n   66:                                default=lambda self: self.env[\"ir.config_parameter\"].get_param(\"mail.catchall.domain\"))\n   67      alias_parent_model_id = fields.Many2one(\n   68          'ir.model', 'Parent Model',\n   ..\n   74          ('everyone', 'Everyone'),\n   75          ('partners', 'Authenticated Partners'),\n   76:         ('followers', 'Followers only')], default='everyone',\n   77          string='Alias Contact Security', required=True,\n   78          help=\"Policy to post a message on the document using the mailgateway.\\n\"\n   ..\n   92  \n   93      @api.one\n   94:     @api.constrains('alias_defaults')\n   95:     def _check_alias_defaults(self):\n   96          try:\n   97:             dict(eval(self.alias_defaults))\n   98          except Exception:\n   99              raise UserError(_('Invalid expression, it must be a literal python dictionary definition e.g. \"{\\'field\\': \\'value\\'}\"'))\n  ...\n  167  \n  168      def migrate_to_alias(self, cr, child_model_name, child_table_name, child_model_auto_init_fct,\n  169:         alias_model_name, alias_id_column, alias_key, alias_prefix='', alias_force_key='', alias_defaults={},\n  170          alias_generate_name=False, context=None):\n  171          \"\"\" Installation hook to create aliases for all users and avoid constraint errors.\n  ...\n  181              :param alias_force_key': name of the column for force_thread_id;\n  182                  if empty string, not taken into account\n  183:             :param alias_defaults: dict, keys = mail.alias columns, values = child\n  184:                 model column name used for default values (i.e. {'job_id': 'id'})\n  185              :param alias_generate_name: automatically generate alias name using prefix / alias key;\n  186:                 default alias_name value is False because since 8.0 it is not required anymore\n  187          \"\"\"\n  188          if context is None:\n  ...\n  207              if alias_force_key:\n  208                  alias_vals['alias_force_thread_id'] = obj_data[alias_force_key]\n  209:             alias_vals['alias_defaults'] = dict((k, obj_data[v]) for k, v in alias_defaults.iteritems())\n  210              alias_vals['alias_parent_thread_id'] = obj_data['id']\n  211              alias_create_ctx = dict(context, alias_model_name=alias_model_name, alias_parent_model_name=child_model_name)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\models\\mail_channel.py:\n    7  \n    8  from openerp import _, api, fields, models, modules, tools\n    9: from openerp.tools.misc import DEFAULT_SERVER_DATETIME_FORMAT\n   10  from openerp.exceptions import UserError\n   11  from openerp.osv import expression\n   ..\n   23      channel_id = fields.Many2one('mail.channel', string='Channel', ondelete='cascade')\n   24      seen_message_id = fields.Many2one('mail.message', string='Last Seen')\n   25:     fold_state = fields.Selection([('open', 'Open'), ('folded', 'Folded'), ('closed', 'Closed')], string='Conversation Fold State', default='open')\n   26      is_minimized = fields.Boolean(\"Conversation is minimied\")\n   27:     is_pinned = fields.Boolean(\"Is pinned on the interface\", default=True)\n   28  \n   29  \n   ..\n   38      _inherits = {'mail.alias': 'alias_id'}\n   39  \n   40:     def _get_default_image(self):\n   41:         image_path = modules.get_module_resource('mail', 'static/src/img', 'groupdefault.png')\n   42          return tools.image_resize_image_big(open(image_path, 'rb').read().encode('base64'))\n   43  \n   ..\n   46          ('chat', 'Chat Discussion'),\n   47          ('channel', 'Channel')],\n   48:         'Channel Type', default='channel')\n   49      description = fields.Text('Description')\n   50:     uuid = fields.Char('UUID', size=50, select=True, default=lambda self: '%s' % uuid.uuid4())\n   51:     email_send = fields.Boolean('Send messages by email', default=False)\n   52      # multi users channel\n   53      channel_last_seen_partner_ids = fields.One2many('mail.channel.partner', 'channel_id', string='Last Seen')\n   ..\n   60          ('private', 'Invited people only'),\n   61          ('groups', 'Selected group of users')],\n   62:         'Privacy', required=True, default='groups',\n   63          help='This group is visible by non members. Invisible groups can add members through the invite button.')\n   64      group_public_id = fields.Many2one('res.groups', string='Authorized Group',\n   65:                                       default=lambda self: self.env.ref('base.group_user'))\n   66      group_ids = fields.Many2many(\n   67          'res.groups', rel='mail_channel_res_group_rel',\n   ..\n   71               \"if necessary.\")\n   72      # image: all image fields are base64 encoded and PIL-supported\n   73:     image = fields.Binary(\"Photo\", default=_get_default_image, attachment=True,\n   74          help=\"This field holds the image used as photo for the group, limited to 1024x1024px.\")\n   75      image_medium = fields.Binary('Medium-sized photo',\n   ..\n  481          # get the message since the AWAY_TIMER\n  482          threshold = datetime.datetime.now() - datetime.timedelta(seconds=AWAY_TIMER)\n  483:         threshold = threshold.strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n  484          domain = [('channel_ids', 'in', minimized_channels.ids), ('create_date', '>', threshold)]\n  485  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\models\\mail_followers.py:\n   52          else:\n   53              for follower in followers:\n   54:                 existing.setdefault(follower.res_id, list()).append(follower)\n   55                  if follower.partner_id:\n   56:                     p_exist.setdefault(follower.partner_id.id, list()).append(follower.res_id)\n   57                  if follower.channel_id:\n   58:                     c_exist.setdefault(follower.channel_id.id, list()).append(follower.res_id)\n   59  \n   60:         default_subtypes = self.env['mail.message.subtype'].search([\n   61:             ('default', '=', True),\n   62              '|', ('res_model', '=', res_model), ('res_model', '=', False)])\n   63  \n   ..\n   65              for pid, data in partner_data.iteritems():\n   66                  if not data:\n   67:                     partner_data[pid] = default_subtypes.ids\n   68              for cid, data in channel_data.iteritems():\n   69                  if not data:\n   70:                     channel_data[cid] = default_subtypes.ids\n   71  \n   72          # create new followers, batch ok\n   ..\n   74          gen_new_cids = [cid for cid in channel_data.keys() if cid not in c_exist]\n   75          for pid in gen_new_pids:\n   76:             generic.append([0, 0, {'res_model': res_model, 'partner_id': pid, 'subtype_ids': [(6, 0, partner_data.get(pid) or default_subtypes.ids)]}])\n   77          for cid in gen_new_cids:\n   78:             generic.append([0, 0, {'res_model': res_model, 'channel_id': cid, 'subtype_ids': [(6, 0, channel_data.get(cid) or default_subtypes.ids)]}])\n   79  \n   80          # create new followers, each document at a time because of existing followers to avoid erasing\n   ..\n   92                          'res_model': res_model,\n   93                          'partner_id': new_pid,\n   94:                         'subtype_ids': [(6, 0, partner_data.get(new_pid) or default_subtypes.ids)],\n   95                      }))\n   96                  for new_cid in new_cids:\n   ..\n   98                          'res_model': res_model,\n   99                          'channel_id': new_cid,\n  100:                         'subtype_ids': [(6, 0, channel_data.get(new_cid) or default_subtypes.ids)],\n  101                      }))\n  102                  if command:\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\models\\mail_mail.py:\n   43          ('exception', 'Delivery Failed'),\n   44          ('cancel', 'Cancelled'),\n   45:     ], 'Status', readonly=True, copy=False, default='outgoing')\n   46      auto_delete = fields.Boolean(\n   47          'Auto Delete',\n   ..\n   67  \n   68      @api.model\n   69:     def default_get(self, fields):\n   70:         # protection for `default_type` values leaking from menu action context (e.g. for invoices)\n   71          # To remove when automatic context propagation is removed in web client\n   72:         if self._context.get('default_type') not in self._all_columns['message_type'].column.selection:\n   73:             self = self.with_context(dict(self._context, default_type=None))\n   74:         return super(MailMail, self).default_get(fields)\n   75  \n   76      @api.multi\n   ..\n   94                                  this value will be used as an additional\n   95                                  filter to further restrict the outgoing\n   96:                                 messages to send (by default all 'outgoing'\n   97                                  messages are sent).\n   98          \"\"\"\n   ..\n  187              :param bool auto_commit: whether to force a commit of the mail status\n  188                  after sending each mail (meant only for scheduler processing);\n  189:                 should never be True during normal transactions (default: False)\n  190              :param bool raise_exception: whether to raise an exception if the\n  191                  email sending process has failed\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\models\\mail_message.py:\n   35  \n   36      @api.model\n   37:     def _get_default_from(self):\n   38          if self.env.user.alias_name and self.env.user.alias_domain:\n   39              return formataddr((self.env.user.name, '%s@%s' % (self.env.user.alias_name, self.env.user.alias_domain)))\n   ..\n   43  \n   44      @api.model\n   45:     def _get_default_author(self):\n   46          return self.env.user.partner_id\n   47  \n   48      # content\n   49      subject = fields.Char('Subject')\n   50:     date = fields.Datetime('Date', default=fields.Datetime.now)\n   51:     body = fields.Html('Contents', default='', help='Automatically sanitized HTML contents')\n   52      attachment_ids = fields.Many2many(\n   53          'ir.attachment', 'message_attachment_rel',\n   ..\n   69          ('comment', 'Comment'),\n   70          ('notification', 'System notification')],\n   71:         'Type', required=True, default='email',\n   72          help=\"Message type: email for email message, notification for system \"\n   73               \"message, comment for other messages such as user replies\",\n   ..\n   76      # origin\n   77      email_from = fields.Char(\n   78:         'From', default=_get_default_from,\n   79          help=\"Email address of the sender. This field is set when no matching partner is found and replaces the author_id field in the chatter.\")\n   80      author_id = fields.Many2one(\n   81          'res.partner', 'Author', select=1,\n   82:         ondelete='set null', default=_get_default_author,\n   83          help=\"Author of the message. If not set, email_from may hold an email address that did not match any partner.\")\n   84      author_avatar = fields.Binary(\"Author's avatar\", related='author_id.image_small')\n   ..\n  439                      message_tree[parent.id] = parent\n  440              # newest messages first\n  441:             parent_tree.setdefault(tree_parent_id, [])\n  442  \n  443          # build thread structure\n  ...\n  658                  channel_ids.add(id)\n  659              elif rmod and rid:\n  660:                 model_ids.setdefault(rmod, {}).setdefault(rid, set()).add(id)\n  661  \n  662          allowed_ids = self._find_allowed_doc_ids(model_ids)\n  ...\n  706                  vals = msg_val.get(id, {})\n  707                  if vals.get('model') and vals.get('res_id'):\n  708:                     model_record_ids.setdefault(vals['model'], set()).add(vals['res_id'])\n  709              return model_record_ids\n  710  \n  ...\n  816          \"\"\" Return the related document name, using name_get. It is done using\n  817              SUPERUSER_ID, to be sure to have the record name correctly stored. \"\"\"\n  818:         model = values.get('model', self.env.context.get('default_model'))\n  819:         res_id = values.get('res_id', self.env.context.get('default_res_id'))\n  820          if not model or not res_id or model not in self.pool:\n  821              return False\n  ...\n  826          \"\"\" Return a specific reply_to: alias of the document through\n  827          message_get_reply_to or take the email_from \"\"\"\n  828:         model, res_id, email_from = values.get('model', self._context.get('default_model')), values.get('res_id', self._context.get('default_res_id')), values.get('email_from')  # ctx values / defualt_get res ?\n  829          if model:\n  830:             # return self.env[model].browse(res_id).message_get_reply_to([res_id], default=email_from)[res_id]\n  831:             return self.env[model].message_get_reply_to([res_id], default=email_from)[res_id]\n  832          else:\n  833:             # return self.env['mail.thread'].message_get_reply_to(default=email_from)[None]\n  834:             return self.env['mail.thread'].message_get_reply_to([None], default=email_from)[None]\n  835  \n  836      @api.model\n  ...\n  847      def create(self, values):\n  848          # coming from mail.js that does not have pid in its values\n  849:         if self.env.context.get('default_starred'):\n  850:             self = self.with_context({'default_starred_partner_ids': [(4, self.env.user.partner_id.id)]})\n  851  \n  852          if 'email_from' not in values:  # needed to compute reply_to\n  853:             values['email_from'] = self._get_default_from()\n  854          if not values.get('message_id'):\n  855              values['message_id'] = self._get_message_id(values)\n  856          if 'reply_to' not in values:\n  857              values['reply_to'] = self._get_reply_to(values)\n  858:         if 'record_name' not in values and 'default_record_name' not in self.env.context:\n  859              values['record_name'] = self._get_record_name(values)\n  860  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\models\\mail_message_subtype.py:\n   37               'is used to compute getattr(related_document.relation_field).')\n   38      res_model = fields.Char('Model', help=\"Model the subtype applies to. If False, this subtype applies to all models.\")\n   39:     default = fields.Boolean('Default', default=True, help=\"Activated by default when subscribing.\")\n   40:     sequence = fields.Integer('Sequence', default=1, help=\"Used to order subtypes.\")\n   41      hidden = fields.Boolean('Hidden', help=\"Hide the subtype in the follower options\")\n   42  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\models\\mail_shortcode.py:\n   19      substitution = fields.Char('Substitution', required=True, index=True, help=\"The excaped html code replacing the shortcut\")\n   20      description = fields.Char('Description')\n   21:     shortcode_type = fields.Selection([('image', 'Smiley'), ('text', 'Canned Response')], required=True, default='text',\n   22          help=\"* Smiley are only used for HTML code to display an image \"\\\n   23:              \"* Text (default value) is use to substitute text with another text\")\n   24  \n   25      @api.model\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\models\\mail_template.py:\n   23      if tz:\n   24          context['tz'] = tz or pool.get('res.users').read(cr, SUPERUSER_ID, uid, ['tz'])['tz'] or \"UTC\"\n   25:     timestamp = datetime.datetime.strptime(dt, tools.DEFAULT_SERVER_DATETIME_FORMAT)\n   26  \n   27      ts = openerp.osv.fields.datetime.context_timestamp(cr, uid, timestamp, context)\n   ..\n   29      # Babel allows to format datetime in a specific language without change locale\n   30      # So month 1 = January in English, and janvier in French\n   31:     # Be aware that the default value for format is 'medium', instead of 'short'\n   32      #     medium:  Jan 5, 2016, 10:20:31 PM |   5 janv. 2016 22:20:31\n   33      #     short:   1/5/16, 10:20 PM         |   5/01/16 22:20\n   ..\n  109  \n  110      @api.model\n  111:     def default_get(self, fields):\n  112:         res = super(MailTemplate, self).default_get(fields)\n  113          if res.get('model'):\n  114              res['model_id'] = self.env['ir.model'].search([('model', '=', res.pop('model'))]).id\n  ...\n  130      subject = fields.Char('Subject', translate=True, help=\"Subject (placeholders may be used here)\")\n  131      email_from = fields.Char('From',\n  132:                              help=\"Sender address (placeholders may be used here). If not set, the default \"\n  133                                    \"value will be the author's email alias if configured, or email address.\")\n  134:     use_default_to = fields.Boolean(\n  135:         'Default recipients',\n  136:         help=\"Default recipients of the record:\\n\"\n  137               \"- partner (using id on a partner or the partner_id field) OR\\n\"\n  138               \"- email (using email_from or email field)\")\n  ...\n  159                                        help=\"You may attach files to this template, to be added to all \"\n  160                                             \"emails created from this template\")\n  161:     auto_delete = fields.Boolean('Auto Delete', default=True, help=\"Permanently delete this email after sending it, to save space\")\n  162  \n  163      # Fake fields used to implement the placeholder assistant\n  ...\n  173                                                    \"this field lets you select the target field within the \"\n  174                                                    \"destination document model (sub-model).\")\n  175:     null_value = fields.Char('Default Value', help=\"Optional value to use if the target field is empty\")\n  176      copyvalue = fields.Char('Placeholder Expression', help=\"Final placeholder expression, to be copy-pasted in the desired template field.\")\n  177  \n  ...\n  190          :param field_name: main field name\n  191          :param sub_field_name: sub field name (M2O)\n  192:         :param null_value: default value if the target value is empty\n  193          :return: final placeholder expression \"\"\"\n  194          expression = ''\n  ...\n  226  \n  227      @api.multi\n  228:     def copy(self, default=None):\n  229:         default = dict(default or {},\n  230                         name=_(\"%s (copy)\") % self.name)\n  231:         return super(MailTemplate, self).copy(default=default)\n  232  \n  233      @api.multi\n  ...\n  256                  'src_model': src_obj,\n  257                  'view_type': 'form',\n  258:                 'context': \"{'default_composition_mode': 'mass_mail', 'default_template_id' : %d, 'default_use_template': True}\" % (template.id),\n  259                  'view_mode': 'form,tree',\n  260                  'view_id': view.id,\n  ...\n  404      @api.multi\n  405      def generate_recipients(self, results, res_ids):\n  406:         \"\"\"Generates the recipients of the template. Default values can ben generated\n  407          instead of the template values if requested by template or context.\n  408          Emails (email_to, email_cc) can be transformed into partners if requested\n  ...\n  410          self.ensure_one()\n  411  \n  412:         if self.use_default_to or self._context.get('tpl_force_default_to'):\n  413:             default_recipients = self.env['mail.thread'].message_get_default_recipients(res_model=self.model, res_ids=res_ids)\n  414:             for res_id, recipients in default_recipients.iteritems():\n  415                  results[res_id].pop('partner_to', None)\n  416                  results[res_id].update(recipients)\n  ...\n  456          templates_to_res_ids = {}\n  457          for res_id, template in res_ids_to_templates.iteritems():\n  458:             templates_to_res_ids.setdefault(template, []).append(res_id)\n  459  \n  460          results = dict()\n  ...\n  470                      post_process=(field == 'body_html'))\n  471                  for res_id, field_value in generated_field_values.iteritems():\n  472:                     results.setdefault(res_id, dict())[field] = field_value\n  473              # compute recipients\n  474              if any(field in fields for field in ['email_to', 'partner_to', 'email_cc']):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\models\\mail_thread.py:\n   47  \n   48          Inheriting classes are not required to implement any method, as the\n   49:         default implementation will work for any model. However it is common\n   50          to override at least the ``message_new`` and ``message_update``\n   51          methods (calling ``super``) to add model-specific behavior at\n   ..\n   70       - ``mail_save_message_last_post``: at message_post, update message_last_post\n   71         datetime field\n   72:      - ``mail_auto_delete``: auto delete mail notifications; True by default\n   73         (technical hack for templates)\n   74       - ``mail_notify_force_send``: if less than 50 email notifications to send,\n   75:        send them directly instead of using the queue; True by default\n   76       - ``mail_notify_user_signature``: add the current user signature in\n   77:        email notifications; True by default\n   78      '''\n   79      _name = 'mail.thread'\n   ..\n  237              thread.message_post(body=_('%s created') % doc_name)\n  238  \n  239:         # auto_subscribe: take values and defaults into account\n  240          create_values = dict(values)\n  241          for key, val in self._context.iteritems():\n  242:             if key.startswith('default_') and key[8:] not in create_values:\n  243                  create_values[key[8:]] = val\n  244          thread.message_auto_subscribe(create_values.keys(), values=create_values)\n  ...\n  298          return res\n  299  \n  300:     def copy_data(self, cr, uid, id, default=None, context=None):\n  301          context = dict(context or {}, mail_notrack=True)\n  302          # avoid tracking multiple temporary changes during copy\n  303:         return super(MailThread, self).copy_data(cr, uid, id, default=default, context=context)\n  304  \n  305      # ------------------------------------------------------\n  ...\n  496          \"\"\"\n  497          limit_date = datetime.datetime.utcnow() - datetime.timedelta(days=1)\n  498:         limit_date_str = datetime.datetime.strftime(limit_date, tools.DEFAULT_SERVER_DATETIME_FORMAT)\n  499          self.env['ir.attachment'].search([\n  500              ('res_model', '=', 'mail.compose.message'),\n  ...\n  670  \n  671      @api.multi\n  672:     def message_get_default_recipients(self, res_model=None, res_ids=None):\n  673          if res_model and res_ids:\n  674:             if hasattr(self.env[res_model], 'message_get_default_recipients'):\n  675:                 return self.env[res_model].browse(res_ids).message_get_default_recipients()\n  676              records = self.env[res_model].sudo().browse(res_ids)\n  677          else:\n  ...\n  690  \n  691      @api.model\n  692:     def message_get_reply_to(self, res_ids, default=None):\n  693          \"\"\" Returns the preferred reply-to email address that is basically the\n  694          alias of the document, if it exists. Override this method to implement\n  ...\n  726          left_ids = set(res_ids).difference(set(aliases.keys()))\n  727          if left_ids:\n  728:             res.update(dict((res_id, default) for res_id in res_ids))\n  729          return res\n  730  \n  ...\n  926                 does not match any of the currently configured mail aliases\n  927                 (may be None if a matching alias is supposed to be present)\n  928:            :type dict custom_values: optional dictionary of default field values\n  929                  to pass to ``message_new`` if a new record needs to be created.\n  930                  Ignored if the thread record already exists, and also if a\n  931:                 matching mail.alias was found (aliases define their own defaults)\n  932             :param int thread_id: optional ID of the record/thread from ``model``\n  933                 to which this mail should be attached. Only used if the message\n  ...\n 1057                          user_id = self._uid\n 1058                          _logger.info('No matching user_id for the alias %s', alias.alias_name)\n 1059:                     route = (alias.alias_model_id.model, alias.alias_force_thread_id, eval(alias.alias_defaults), user_id, alias)\n 1060                      route = self.message_route_verify(\n 1061                          message, message_dict, route,\n ....\n 1157                  to pass to ``message_new`` if a new record needs to be created.\n 1158                  Ignored if the thread record already exists, and also if a\n 1159:                 matching mail.alias was found (aliases define their own defaults)\n 1160             :param bool save_original: whether to keep a copy of the original\n 1161                  email source attached to the message after it is imported.\n ....\n 1200             for a given thread model, if the message did not belong to\n 1201             an existing thread.\n 1202:            The default behavior is to create a new record of the corresponding\n 1203             model (based on some very basic info extracted from the message).\n 1204             Additional behavior may be implemented by overriding this method.\n ....\n 1234      def message_update(self, msg_dict, update_vals=None):\n 1235          \"\"\"Called by ``message_process`` when a new message is received\n 1236:            for an existing thread. The default behavior is to update the record\n 1237             with update_vals taken from the incoming email.\n 1238             Additional behavior may be implemented by overriding this\n ....\n 1409                                  message.get('Date'), message_id)\n 1410                  stored_date = datetime.datetime.now()\n 1411:             msg_dict['date'] = stored_date.strftime(tools.DEFAULT_SERVER_DATETIME_FORMAT)\n 1412  \n 1413          if message.get('In-Reply-To'):\n ....\n 1475  \n 1476              :param list emails: list of email addresses\n 1477:             :param string model: model to fetch related record; by default self\n 1478                  is used.\n 1479              :param boolean check_followers: check in document followers\n ....\n 1613              :param tuple(str,str) attachments or list id: list of attachment tuples in the form\n 1614                  ``(name,content)``, where content is NOT base64 encoded\n 1615:             Extra keyword arguments will be used as default column values for the\n 1616              new mail.message record. Special cases:\n 1617                  - attachment_ids: supposed not attached to any document; attach them\n ....\n 1641          author_id = kwargs.get('author_id')\n 1642          if author_id is None:  # keep False values\n 1643:             author_id = self.env['mail.message']._get_default_author().id\n 1644  \n 1645          # 1: Handle content subtype: if plaintext, converto into HTML\n ....\n 1761              active_ids=self.ids,\n 1762              active_model=self._name,\n 1763:             default_composition_mode=composition_mode,\n 1764:             default_model=self._name,\n 1765:             default_res_id=self.ids[0] or 0,\n 1766:             default_template_id=template_id,\n 1767          ).create(kwargs)\n 1768          # Simulate the onchange (like trigger in form the view) only\n ....\n 1856      def _message_get_auto_subscribe_fields(self, updated_fields, auto_follow_fields=None):\n 1857          \"\"\" Returns the list of relational fields linking to res.users that should\n 1858:             trigger an auto subscribe. The default list checks for the fields\n 1859              - called 'user_id'\n 1860              - linking to res.users\n ....\n 1953                          continue\n 1954                      if header_follower.partner_id:\n 1955:                         new_partners.setdefault(header_follower.partner_id.id, set()).add(new_subtype.id)\n 1956                      else:\n 1957:                         new_channels.setdefault(header_follower.channel_id.id, set()).add(new_subtype.id)\n 1958  \n 1959          # add followers coming from res.users relational fields that are tracked\n ....\n 1961          user_pids = [user.partner_id.id for user in self.env['res.users'].sudo().browse(user_ids)]\n 1962          for partner_id in user_pids:\n 1963:             new_partners.setdefault(partner_id, None)\n 1964  \n 1965          for pid, subtypes in new_partners.items():\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\models\\mail_tracking_value.py:\n   40          elif col_info['type'] == 'date':\n   41              values.update({\n   42:                 'old_value_datetime': initial_value and datetime.strftime(datetime.combine(datetime.strptime(initial_value, tools.DEFAULT_SERVER_DATE_FORMAT), datetime.min.time()), tools.DEFAULT_SERVER_DATETIME_FORMAT) or False,\n   43:                 'new_value_datetime': new_value and datetime.strftime(datetime.combine(datetime.strptime(new_value, tools.DEFAULT_SERVER_DATE_FORMAT), datetime.min.time()), tools.DEFAULT_SERVER_DATETIME_FORMAT) or False,\n   44              })\n   45          elif col_info['type'] == 'boolean':\n   ..\n   75              elif record.field_type == 'date':\n   76                  if record.old_value_datetime:\n   77:                     old_date = datetime.strptime(record.old_value_datetime, tools.DEFAULT_SERVER_DATETIME_FORMAT).date()\n   78:                     result.append(old_date.strftime(tools.DEFAULT_SERVER_DATE_FORMAT))\n   79                  else:\n   80                      result.append(record.old_value_datetime)\n   ..\n   95              elif record.field_type == 'date':\n   96                  if record.new_value_datetime:\n   97:                     new_date = datetime.strptime(record.new_value_datetime, tools.DEFAULT_SERVER_DATETIME_FORMAT).date()\n   98:                     result.append(new_date.strftime(tools.DEFAULT_SERVER_DATE_FORMAT))\n   99                  else:\n  100                      result.append(record.new_value_datetime)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\models\\res_config.py:\n   17  \n   18      @api.multi\n   19:     def get_default_fail_counter(self):\n   20          previous_date = datetime.datetime.now() - datetime.timedelta(days=30)\n   21          return {\n   22:             'fail_counter': self.env['mail.mail'].sudo().search_count([('date', '>=', previous_date.strftime(tools.DEFAULT_SERVER_DATETIME_FORMAT)), ('state', '=', 'exception')]),\n   23          }\n   24  \n   25      @api.multi\n   26:     def get_default_alias_domain(self):\n   27:         alias_domain = self.env[\"ir.config_parameter\"].get_param(\"mail.catchall.domain\", default=None)\n   28          if alias_domain is None:\n   29              domain = self.env[\"ir.config_parameter\"].get_param(\"web.base.url\")\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\models\\res_partner.py:\n   21          ('always', 'All Messages')],\n   22          'Email Messages and Notifications', required=True,\n   23:         oldname='notification_email_send', default='always',\n   24          help=\"Policy to receive emails for new messages pushed to your personal Inbox:\\n\"\n   25               \"- Never: no emails are sent\\n\"\n   ..\n   38  \n   39      @api.multi\n   40:     def message_get_default_recipients(self):\n   41          return dict((res_id, {'partner_ids': [res_id], 'email_to': False, 'email_cc': False}) for res_id in self.ids)\n   42  \n   ..\n  151              base_template = self.env.ref('mail.mail_template_data_notification_email_%s' % message.model.replace('.', '_'), raise_if_not_found=False)\n  152          if not base_template:\n  153:             base_template = self.env.ref('mail.mail_template_data_notification_email_default')\n  154  \n  155          base_template_ctx = self._notify_prepare_template_context(message)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\models\\res_users.py:\n   25      def __init__(self, pool, cr):\n   26          \"\"\" Override of __init__ to add access rights on notification_email_send\n   27:             and alias fields. Access rights are disabled by default, but allowed\n   28              on some specific fields defined in self.SELF_{READ/WRITE}ABLE_FIELDS.\n   29          \"\"\"\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\models\\update.py:\n   28          limit_date = datetime.datetime.now()\n   29          limit_date = limit_date - datetime.timedelta(15)\n   30:         limit_date_str = limit_date.strftime(misc.DEFAULT_SERVER_DATETIME_FORMAT)\n   31          nbr_users = user_count([])\n   32          nbr_active_users = user_count([(\"login_date\", \">=\", limit_date_str)])\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\static\\scripts\\openerp_mailgate.py:\n   18  from email import Encoders\n   19  \n   20: class DefaultConfig(object):\n   21      \"\"\"\n   22:     Default configuration\n   23      \"\"\"\n   24:     OPENERP_DEFAULT_USER_ID = 1\n   25:     OPENERP_DEFAULT_PASSWORD = 'admin'\n   26      OPENERP_HOSTNAME = 'localhost'\n   27      OPENERP_PORT = 8069\n   28:     OPENERP_DEFAULT_DATABASE = 'openerp'\n   29      MAIL_ERROR = 'error@example.com'\n   30      MAIL_SERVER = 'smtp.example.com'\n   ..\n   32      MAIL_ADMINS = ('info@example.com',)\n   33  \n   34: config = DefaultConfig()\n   35  \n   36  \n   ..\n   66                   port=config.OPENERP_PORT,\n   67                   path='object',\n   68:                  dbname=config.OPENERP_DEFAULT_DATABASE):\n   69          self.rpc = xmlrpclib.ServerProxy('http://%s:%s/xmlrpc/%s' % (host, port, path), allow_none=True)\n   70          self.user_id = uid\n   ..\n   76  \n   77  class EmailParser(object):\n   78:     def __init__(self, uid, password, dbname, host, port, model=False, email_default=False):\n   79          self.rpc = RPCProxy(uid, password, host=host, port=port, dbname=dbname)\n   80          if model:\n   ..\n   85                  self.model_id = self.rpc('ir.model', 'search', [('model', '=', model)])[0]\n   86                  self.model = str(model)\n   87:             self.email_default = email_default\n   88  \n   89  \n   ..\n  106      parser.add_option(\"-u\", \"--user\", dest=\"userid\",\n  107                        help=\"Odoo user id to connect with\",\n  108:                       default=config.OPENERP_DEFAULT_USER_ID, type='int')\n  109      parser.add_option(\"-p\", \"--password\", dest=\"password\",\n  110                        help=\"Odoo user password\",\n  111:                       default=config.OPENERP_DEFAULT_PASSWORD)\n  112      parser.add_option(\"-o\", \"--model\", dest=\"model\",\n  113                        help=\"Name or ID of destination model\",\n  114:                       default=\"crm.lead\")\n  115:     parser.add_option(\"-m\", \"--default\", dest=\"default\",\n  116                        help=\"Admin email for error notifications.\",\n  117:                       default=None)\n  118      parser.add_option(\"-d\", \"--dbname\", dest=\"dbname\",\n  119:                       help=\"Odoo database name (default: %default)\",\n  120:                       default=config.OPENERP_DEFAULT_DATABASE)\n  121      parser.add_option(\"--host\", dest=\"host\",\n  122                        help=\"Odoo Server hostname\",\n  123:                       default=config.OPENERP_HOSTNAME)\n  124      parser.add_option(\"--port\", dest=\"port\",\n  125                        help=\"Odoo Server XML-RPC port number\",\n  126:                       default=config.OPENERP_PORT)\n  127      parser.add_option(\"--custom-values\", dest=\"custom_values\",\n  128                        help=\"Dictionary of extra values to pass when creating records\",\n  129:                       default=None)\n  130      parser.add_option(\"-s\", dest=\"save_original\",\n  131                        action=\"store_true\",\n  132                        help=\"Keep a full copy of the email source attached to each message\",\n  133:                       default=False)\n  134  \n  135      return parser\n  ...\n  148                                 options.port,\n  149                                 model=options.model,\n  150:                                email_default= options.default)\n  151      msg_txt = sys.stdin.read()\n  152      custom_values = {}\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\static\\src\\xml\\chatter.xml:\n   82          <div class=\"o_followers\">\n   83              <div t-attf-class=\"o_followers_title_box\">\n   84:                 <button t-attf-class=\"btn btn-sm btn-default dropdown-toggle\"\n   85                          data-toggle=\"dropdown\" aria-expanded=\"false\">\n   86                      <span class=\"o_followers_count\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\static\\src\\xml\\client_action.xml:\n  133              <button type=\"button\" class=\"btn btn-primary btn-sm o_mail_chat_button_mark_read\" title=\"Mark all as read\">Mark all read</button>\n  134              <button type=\"button\" class=\"btn btn-primary btn-sm o_mail_chat_button_unstar_all\" title=\"Unstar all messages\">Unstar all</button>\n  135:             <button type=\"button\" class=\"btn btn-default btn-sm o_mail_chat_button_new_message\" title=\"Compose a new message\">Send mail</button>\n  136:             <button type=\"button\" class=\"btn btn-default btn-sm o_mail_chat_button_unsubscribe\" title=\"Unsubscribe from channel\">Unsubscribe</button>\n  137:             <button type=\"button\" class=\"btn btn-default btn-sm o_mail_chat_button_settings\" title=\"Open channel settings\">Settings</button>\n  138          </div>\n  139      </t>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\tests\\common.py:\n   87              'notify_email': 'always'})\n   88  \n   89:         # Create test groups without followers and messages by default\n   90          TestMailGroup = cls.env['mail.channel'].with_context({\n   91              'mail_create_nolog': True,\n   ..\n  111          ).with_context({'mail_create_nosubscribe': False})\n  112  \n  113:         # remove default followers\n  114          cls.env['mail.followers'].search([\n  115              ('res_model', '=', 'mail.channel'),\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\tests\\test_invite.py:\n   10      def test_invite_email(self):\n   11          mail_invite = self.env['mail.wizard.invite'].with_context({\n   12:             'default_res_model': 'mail.channel',\n   13:             'default_res_id': self.group_pigs.id\n   14          }).sudo(self.user_employee.id).create({\n   15              'partner_ids': [(4, self.user_portal.partner_id.id), (4, self.partner_1.id)],\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\tests\\test_mail_features.py:\n  188      def test_message_compose(self):\n  189          composer = self.env['mail.compose.message'].with_context({\n  190:             'default_composition_mode': 'comment',\n  191:             'default_model': 'mail.channel',\n  192:             'default_res_id': self.group_pigs.id,\n  193          }).sudo(self.user_employee).create({\n  194              'body': '<p>Test Body</p>',\n  ...\n  204  \n  205          composer = self.env['mail.compose.message'].with_context({\n  206:             'default_composition_mode': 'comment',\n  207:             'default_res_id': self.group_pigs.id,\n  208:             'default_parent_id': message.id\n  209          }).sudo(self.user_employee).create({})\n  210  \n  ...\n  219      def test_message_compose_mass_mail(self):\n  220          composer = self.env['mail.compose.message'].with_context({\n  221:             'default_composition_mode': 'mass_mail',\n  222:             'default_model': 'mail.channel',\n  223:             'default_res_id': False,\n  224              'active_ids': [self.group_pigs.id, self.group_public.id]\n  225          }).sudo(self.user_employee).create({\n  ...\n  229          })\n  230          composer.with_context({\n  231:             'default_res_id': -1,\n  232              'active_ids': [self.group_pigs.id, self.group_public.id]\n  233          }).send_mail()\n  ...\n  273      def test_message_compose_mass_mail_active_domain(self):\n  274          self.env['mail.compose.message'].with_context({\n  275:             'default_composition_mode': 'mass_mail',\n  276:             'default_model': 'mail.channel',\n  277              'active_ids': [self.group_pigs.id],\n  278              'active_domain': [('name', 'in', ['%s' % self.group_pigs.name, '%s' % self.group_public.name])],\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\tests\\test_mail_followers.py:\n   10          super(TestMailFollowers, self).setUp()\n   11          Subtype = self.env['mail.message.subtype']\n   12:         self.mt_mg_def = Subtype.create({'name': 'mt_mg_def', 'default': True, 'res_model': 'mail.channel'})\n   13:         self.mt_cl_def = Subtype.create({'name': 'mt_cl_def', 'default': True, 'res_model': 'crm.lead'})\n   14:         self.mt_al_def = Subtype.create({'name': 'mt_al_def', 'default': True, 'res_model': False})\n   15:         self.mt_mg_nodef = Subtype.create({'name': 'mt_mg_nodef', 'default': False, 'res_model': 'mail.channel'})\n   16:         self.mt_al_nodef = Subtype.create({'name': 'mt_al_nodef', 'default': False, 'res_model': False})\n   17:         self.default_group_subtypes = Subtype.search([('default', '=', True), '|', ('res_model', '=', 'mail.channel'), ('res_model', '=', False)])\n   18  \n   19      def test_m2o_command_new(self):\n   ..\n   50          self.assertEqual(generic[0][2]['res_model'], 'mail.channel')\n   51          self.assertEqual(generic[0][2]['channel_id'], test_channel.id)\n   52:         self.assertEqual(set(generic[0][2]['subtype_ids'][0][2]), set(self.default_group_subtypes.ids))\n   53  \n   54          self.assertEqual(specific.keys(), [self.group_public.id])\n   ..\n   65          self.assertEqual(qty_followed_before + 1, qty_followed_after)\n   66  \n   67:     def test_followers_subtypes_default(self):\n   68          self.group_pigs.message_subscribe_users(user_ids=[self.user_employee.id])\n   69          self.assertEqual(self.group_pigs.message_follower_ids.mapped('partner_id'), self.user_employee.partner_id)\n   ..\n   74              ('partner_id', '=', self.user_employee.partner_id.id)])\n   75          self.assertEqual(len(follower), 1)\n   76:         self.assertEqual(follower.subtype_ids, self.default_group_subtypes)\n   77  \n   78      def test_followers_subtypes_specified(self):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\tests\\test_mail_message.py:\n   35          self.assertEqual(msg.email_from, 'test.from@example.com')\n   36  \n   37:     def test_mail_message_values_default(self):\n   38          self.env['ir.config_parameter'].search([('key', '=', 'mail.catchall.domain')]).unlink()\n   39  \n   ..\n  144          self.assertEqual(messages, msg2 | msg4)\n  145  \n  146:         # Test: Employee: 3 messages on Pigs Raoul can read (employee can read group with default values)\n  147          messages = self.env['mail.message'].sudo(self.user_employee).search([('subject', 'like', '_Test'), ('body', 'ilike', 'A')])\n  148          self.assertEqual(messages, msg3 | msg4 | msg5)\n  149  \n  150:         # Test: Raoul: 3 messages on Pigs Raoul can read (employee can read group with default values), 0 on Birds (private group) + 2 messages as author\n  151          messages = self.env['mail.message'].sudo(self.user_employee).search([('subject', 'like', '_Test')])\n  152          self.assertEqual(messages, msg3 | msg4 | msg5 | msg7 | msg8)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\tests\\test_mail_template.py:\n   43      def test_composer_template_onchange(self):\n   44          composer = self.env['mail.compose.message'].with_context({\n   45:             'default_composition_mode': 'comment',\n   46:             'default_model': 'mail.channel',\n   47:             'default_res_id': self.group_pigs.id,\n   48:             'default_use_template': False,\n   49:             'default_template_id': False\n   50          }).create({'subject': 'Forget me subject', 'body': 'Dummy body'})\n   51  \n   ..\n   83      def test_composer_template_mass_mailing(self):\n   84          composer = self.env['mail.compose.message'].with_context({\n   85:             'default_composition_mode': 'mass_mail',\n   86:             'default_notify': True,\n   87:             'default_model': 'mail.channel',\n   88:             'default_res_id': self.group_pigs.id,\n   89:             'default_template_id': self.email_template.id,\n   90              'active_ids': [self.group_pigs.id, self.group_public.id]\n   91          }).create({})\n   ..\n  113      def test_message_compose_template_save(self):\n  114          self.env['mail.compose.message'].with_context(\n  115:             {'default_composition_mode': 'comment',\n  116:             'default_model': 'mail.channel',\n  117:             'default_res_id': self.group_pigs.id,\n  118              'active_ids': [self.group_pigs.id, self.group_public.id]\n  119          }).create({\n  120              'subject': 'Forget me subject',\n  121              'body': '<p>Dummy body</p>'\n  122:         }).with_context({'default_model': 'mail.channel'}).save_as_template()\n  123          # Test: email_template subject, body_html, model\n  124          last_template = self.env['mail.template'].search([('model', '=', 'mail.channel'), ('subject', '=', 'Forget me subject')], limit=1)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\views\\mail_alias_views.xml:\n   22                              <field name=\"alias_model_id\"/>\n   23                              <field name=\"alias_force_thread_id\"/>\n   24:                             <field name=\"alias_defaults\"/>\n   25                              <field name=\"alias_contact\"/>\n   26                              <field name=\"alias_user_id\"/>\n   ..\n   42                      <field name=\"alias_model_id\"/>\n   43                      <field name=\"alias_user_id\"/>\n   44:                     <field name=\"alias_defaults\"/>\n   45                      <field name=\"alias_contact\"/>\n   46                  </tree>\n   ..\n   73              <field name=\"res_model\">mail.alias</field>\n   74              <field name=\"context\">{\n   75:                     'search_default_active': True,\n   76                  }\n   77              </field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\views\\mail_channel_views.xml:\n  107                              </div>\n  108                              <h1>\n  109:                                 <field name=\"name\" default_focus=\"1\" placeholder=\"Name\" readonly=\"0\"/>\n  110                              </h1>\n  111                          </div>\n  ...\n  196              <field name=\"res_model\">mail.channel</field>\n  197              <field name=\"params\" eval=\"&quot;{\n  198:                 'default_active_id': 'channel_inbox'\n  199              }&quot;\"/>\n  200          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\views\\mail_mail_views.xml:\n   20                              by <field name=\"author_id\" class=\"oe_inline\" string=\"User\"/> on <field name=\"date\" readonly=\"1\" class=\"oe_inline\"/>\n   21                              <button name=\"%(action_email_compose_message_wizard)d\" string=\"Reply\" type=\"action\" icon=\"terp-mail-replied\"\n   22:                                 context=\"{'default_composition_mode':'reply', 'default_parent_id': mail_message_id}\" states='received,sent,exception,cancel'/>\n   23                          </div>\n   24                          <group>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\views\\mail_message_subtype_views.xml:\n   12                      <field name=\"sequence\"/>\n   13                      <field name=\"res_model\"/>\n   14:                     <field name=\"default\"/>\n   15                  </tree>\n   16              </field>\n   ..\n   29                                  <field name=\"res_model\"/>\n   30                                  <field name=\"description\"/>\n   31:                                 <field name=\"default\"/>\n   32                                  <field name=\"internal\"/>\n   33                                  <field name=\"hidden\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\views\\mail_template_views.xml:\n   50                                      <field name=\"email_from\"\n   51                                              placeholder=\"Override author's email\"/>\n   52:                                     <field name=\"use_default_to\"/>\n   53:                                     <field name=\"email_to\" attrs=\"{'invisible': [('use_default_to', '=', True)]}\"\n   54                                              placeholder=\"Comma-separated recipient addresses\"/>\n   55:                                     <field name=\"partner_to\" attrs=\"{'invisible': [('use_default_to', '=', True)]}\"\n   56                                              placeholder=\"Comma-separated ids of recipient partners\"/>\n   57:                                     <field name=\"email_cc\" attrs=\"{'invisible': [('use_default_to', '=', True)]}\"\n   58                                              placeholder=\"Comma-separated carbon copy recipients addresses\"/>\n   59                                      <field name=\"reply_to\"\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\views\\res_config_views.xml:\n    9                  <xpath expr=\"//div[@name='email.outgoing_server']/button[1]\" position='after'>\n   10                      <button class=\"oe_inline oe_link\" style=\"display: inline-block;\" name= \"%(action_view_mail_mail)d\" type=\"action\" \n   11:                         context=\"{'search_default_exception': 1, 'search_default_outgoing': 0}\"\n   12                          attrs=\"{'invisible': [('fail_counter','=',0)]}\">\n   13                          <span> -- </span>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\views\\res_partner_views.xml:\n   44          </record>\n   45  \n   46:         <!--  Replace the default mass-mailing wizard in base with the composition wizard -->\n   47          <act_window name=\"Partner Mass Mailing\"\n   48                  res_model=\"mail.compose.message\"\n   ..\n   54                  id=\"base.action_partner_mass_mail\"\n   55                  context=\"{\n   56:                             'default_composition_mode': 'mass_mail',\n   57:                             'default_partner_to': '${object.id or \\'\\'}',\n   58:                             'default_use_template': True,\n   59:                             'default_template_id': ref('email_template_partner'),\n   60                          }\"/>\n   61  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\wizard\\email_template_preview.py:\n   13          \"\"\" Return Records of particular Email Template's Model \"\"\"\n   14          template_id = self._context.get('template_id')\n   15:         default_res_id = self._context.get('default_res_id')\n   16          if not template_id:\n   17              return []\n   18          template = self.env['mail.template'].browse(int(template_id))\n   19          records = self.env[template.model_id.model].search([], limit=10)\n   20:         records |= records.browse(default_res_id)\n   21          return records.name_get()\n   22  \n   23      @api.model\n   24:     def default_get(self, fields):\n   25:         result = super(TemplatePreview, self).default_get(fields)\n   26  \n   27          if 'res_id' in fields and not result.get('res_id'):\n   28              records = self._get_records()\n   29:             result['res_id'] = records and records[0][0] or False  # select first record as a Default\n   30          if self._context.get('template_id') and 'model_id' in fields and not result.get('model_id'):\n   31              result['model_id'] = self.env['mail.template'].browse(self._context['template_id']).model_id.id\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\wizard\\invite.py:\n   10  \n   11      @api.model\n   12:     def default_get(self, fields):\n   13:         result = super(Invite, self).default_get(fields)\n   14          user_name = self.env.user.name_get()[0][1]\n   15          model = result.get('res_model')\n   ..\n   32                                     domain=[('channel_type', '=', 'channel')])\n   33      message = fields.Html('Message')\n   34:     send_mail = fields.Boolean('Send Email', default=True, help=\"If checked, the partners will receive an email warning they have been added in the document's followers.\")\n   35  \n   36      @api.multi\n   37      def add_followers(self):\n   38:         email_from = self.env['mail.message']._get_default_from()\n   39          for wizard in self:\n   40              Model = self.env[wizard.res_model]\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\wizard\\invite_view.xml:\n   25                          <button string=\"Add Followers\"\n   26                              name=\"add_followers\" type=\"object\" class=\"btn-primary\"/>\n   27:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   28                      </footer>\n   29                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\wizard\\mail_compose_message.py:\n   23              # templates requires a model in context\n   24              'context': {\n   25:                 'default_model': model,\n   26              },\n   27              }\n   ..\n   45  \n   46      @api.model\n   47:     def default_get(self, fields):\n   48          \"\"\" Handle composition mode. Some details about context keys:\n   49:             - comment: default mode, model and ID of a record the user comments\n   50:                 - default_model or active_model\n   51:                 - default_res_id or active_id\n   52              - reply: active_id of a message the user replies to\n   53:                 - default_parent_id or message_id or active_id: ID of the\n   54                      mail.message we reply to\n   55:                 - message.res_model or default_model\n   56:                 - message.res_id or default_res_id\n   57              - mass_mail: model and IDs of records the user mass-mails\n   58                  - active_ids: record IDs\n   59:                 - default_model or active_model\n   60          \"\"\"\n   61:         result = super(MailComposer, self).default_get(fields)\n   62  \n   63          # v6.1 compatibility mode\n   ..\n   70              result['no_auto_thread'] = True\n   71  \n   72:         # default values according to composition mode - NOTE: reply is deprecated, fall back on comment\n   73          if result['composition_mode'] == 'reply':\n   74              result['composition_mode'] = 'comment'\n   ..\n   84                  result[field] = vals[field]\n   85  \n   86:         # TDE HACK: as mailboxes used default_model='res.users' and default_res_id=uid\n   87          # (because of lack of an accessible pid), creating a message on its own\n   88          # profile may crash (res_users does not allow writing on it)\n   ..\n  105                  ('mass_post', 'Post on Multiple Documents')]\n  106  \n  107:     composition_mode = fields.Selection(selection=_get_composition_mode_selection, string='Composition mode', default='comment')\n  108      partner_ids = fields.Many2many(\n  109          'res.partner', 'mail_compose_message_res_partner_rel',\n  ...\n  116      is_log = fields.Boolean('Log an Internal Note',\n  117                              help='Whether the message is an internal note (comment mode only)')\n  118:     subject = fields.Char(default=False)\n  119      # mass mode options\n  120      notify = fields.Boolean('Notify followers', help='Notify followers of the document (mass post only)')\n  ...\n  152      @api.model\n  153      def get_record_data(self, values):\n  154:         \"\"\" Returns a defaults-like dict with initial values for the composition\n  155          wizard when sending an email related a previous email (parent_id) or\n  156:         a document (model, res_id). This is based on previously computed default\n  157          values. \"\"\"\n  158          result, subject = {}, False\n  ...\n  268          reply_to_value = dict.fromkeys(res_ids, None)\n  269          if mass_mail_mode and not self.no_auto_thread:\n  270:             # reply_to_value = self.env['mail.thread'].with_context(thread_model=self.model).browse(res_ids).message_get_reply_to(default=self.email_from)\n  271:             reply_to_value = self.env['mail.thread'].with_context(thread_model=self.model).message_get_reply_to(res_ids, default=self.email_from)\n  272  \n  273          for res_id in res_ids:\n  ...\n  359                          'type': 'binary',\n  360                      }\n  361:                 values.setdefault('attachment_ids', list()).append(attachment.create(data_attach).id)\n  362  \n  363          elif template_id:\n  ...\n  373                      'res_model': 'mail.compose.message',\n  374                      'res_id': 0,\n  375:                     'type': 'binary',  # override default_type from context, possibly meant for another model!\n  376                  }\n  377:                 values.setdefault('attachment_ids', list()).append(Attachment.create(data_attach).id)\n  378          else:\n  379:             default_values = self.with_context(default_composition_mode=composition_mode, default_model=model, default_res_id=res_id).default_get(['composition_mode', 'model', 'res_id', 'parent_id', 'partner_ids', 'subject', 'body', 'email_from', 'reply_to', 'attachment_ids', 'mail_server_id'])\n  380:             values = dict((key, default_values[key]) for key in ['subject', 'body', 'partner_ids', 'email_from', 'reply_to', 'attachment_ids', 'mail_server_id'] if key in default_values)\n  381  \n  382          if values.get('body_html'):\n  ...\n  435          template rendering represent a significant part of the process.\n  436  \n  437:         Default recipients are also computed, based on mail_thread method\n  438:         message_get_default_recipients. This allows to ensure a mass mailing has\n  439          always some recipients specified.\n  440  \n  ...\n  456          replies_to = self.render_template(self.reply_to, self.model, res_ids)\n  457  \n  458:         default_recipients = self.env['mail.thread'].message_get_default_recipients(res_model=self.model, res_ids=res_ids)\n  459  \n  460          results = dict.fromkeys(res_ids, False)\n  ...\n  466                  'reply_to': replies_to[res_id],\n  467              }\n  468:             results[res_id].update(default_recipients.get(res_id, dict()))\n  469  \n  470          # generate template-based values\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mail\\wizard\\mail_compose_message_view.xml:\n   62                          <field name=\"attachment_ids\" widget=\"many2many_binary\" string=\"Attach a file\" nolabel=\"1\" colspan=\"2\"/>\n   63                          <field name=\"template_id\" options=\"{'no_create': True}\"\n   64:                                context=\"{'default_model': model, 'default_body_html': body, 'default_subject': subject}\"/>\n   65                      </group>\n   66                      <footer>\n   67                          <button string=\"Send\" name=\"send_mail_action\" type=\"object\" class=\"btn-primary\"/>\n   68:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   69  \n   70                          <button icon=\"fa-lg fa-save\" type=\"object\" name=\"save_as_template\" string=\"Save as new template\"\n   71:                                 class=\"pull-right btn-default\" help=\"Save as a new template\"/>\n   72                      </footer>\n   73                  </form>\n   ..\n   85          </record>\n   86  \n   87:         <!--  Replace the default mass-mailing wizard in base with the composition wizard -->\n   88          <act_window name=\"Partner Mass Mailing\"\n   89                  res_model=\"mail.compose.message\"\n   ..\n   95                  id=\"base.action_partner_mass_mail\"\n   96                  context=\"{\n   97:                             'default_composition_mode': 'mass_mail',\n   98:                             'default_partner_to': '${object.id or \\'\\'}',\n   99:                             'default_active_domain': [['id', 'in', context.get('active_ids', [])]],\n  100                          }\"/>\n  101      </data>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\marketing_campaign\\marketing_campaign.py:\n   80      }\n   81  \n   82:     _defaults = {\n   83          'state': lambda *a: 'draft',\n   84          'mode': lambda *a: 'test',\n   ..\n  167  \n  168      # prevent duplication until the server properly duplicates several levels of nested o2m\n  169:     def copy(self, cr, uid, id, default=None, context=None):\n  170          raise UserError(_('Duplicating campaigns is not supported.'))\n  171  \n  ...\n  235      }\n  236  \n  237:     _defaults = {\n  238          'state': lambda *a: 'draft',\n  239          'sync_mode': lambda *a: 'create_date',\n  ...\n  398      }\n  399  \n  400:     _defaults = {\n  401          'type': lambda *a: 'email',\n  402          'condition': lambda *a: 'True',\n  ...\n  523      }\n  524  \n  525:     _defaults = {\n  526          'interval_nbr': 1,\n  527          'interval_type': 'days',\n  ...\n  585          matching_workitems = []\n  586          for id, res_id, model in res:\n  587:             workitem_map.setdefault(model,{}).setdefault(res_id,set()).add(id)\n  588          for model, id_map in workitem_map.iteritems():\n  589              model_pool = self.pool[model]\n  ...\n  613          'error_msg' : fields.text('Error Message', readonly=True)\n  614      }\n  615:     _defaults = {\n  616          'state': lambda *a: 'todo',\n  617          'date': False,\n  ...\n  759                  'type': 'ir.actions.act_window',\n  760                  'target': 'new',\n  761:                 'context': \"{'template_id':%d,'default_res_id':%d}\"%\n  762                                  (wi_obj.activity_id.email_template_id.id,\n  763                                   wi_obj.res_id)\n  ...\n  781  class mail_template(osv.osv):\n  782      _inherit = \"mail.template\"\n  783:     _defaults = {\n  784          'model_id': lambda obj, cr, uid, context: context.get('object_id',False),\n  785      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\marketing_campaign\\marketing_campaign_view.xml:\n   24          <field name=\"name\">Segments</field>\n   25          <field name=\"view_mode\">tree,form</field>\n   26:         <field name=\"context\">{'search_default_campaign_id': [active_id], 'default_campaign_id': active_id}</field>\n   27      </record>\n   28      \n   ..\n   34          <field name=\"name\">Workitems</field>\n   35          <field name=\"view_mode\">tree,form</field>\n   36:         <field name=\"context\">{'search_default_campaign_id': [active_id], 'default_campaign_id': active_id}</field>\n   37      </record>\n   38      \n   ..\n   44          <field name=\"name\">Campaign Follow-up</field>\n   45          <field name=\"view_mode\">tree,form</field>\n   46:         <field name=\"context\">{'search_default_campaign_id': [active_id], 'default_campaign_id': active_id}</field>\n   47      </record>\n   48  \n   ..\n  101                  </group>\n  102                  <separator string=\"Activities\"/>\n  103:                 <field name=\"activity_ids\" context=\"{'default_object_id': object_id, 'default_campaign_id': active_id}\"/>\n  104              </sheet>\n  105              </form>\n  ...\n  314                          <field name=\"type\"/>\n  315                          <field name=\"email_template_id\" attrs=\"{'required':[('type','=','email')], 'invisible':[('type','!=','email')]}\"\n  316:                            context=\"{'default_model_id':object_id}\"/>\n  317                          <field name=\"server_action_id\" attrs=\"{'required':[('type','=','action')],'invisible':[('type','!=','action')]}\" domain=\"[('model_id','=',object_id)]\"/>\n  318                          <field name=\"report_id\" attrs=\"{'required':[('type','=','report')],'invisible':[('type','!=','report')]}\" context=\"{'object_id':object_id}\"/>\n  ...\n  320                  </group>\n  321                  <separator string=\"Previous Activities\"/>\n  322:                 <field name=\"from_ids\" mode=\"tree\" context=\"{'default_activity_to_id': active_id}\">\n  323                      <tree string=\"Incoming Transitions\" editable=\"bottom\">\n  324                          <field name=\"activity_from_id\" domain=\"[('campaign_id', '=', parent.campaign_id)]\" options=\"{'no_create': True}\" />\n  ...\n  337                  </field>\n  338                  <separator string=\"Next Activities\"/>\n  339:                 <field name=\"to_ids\" mode=\"tree\" context=\"{'default_activity_from_id': active_id}\">\n  340                      <tree string=\"Outgoing Transitions\" editable=\"bottom\">\n  341                          <field name=\"activity_to_id\" domain=\"[('campaign_id', '=', parent.campaign_id)]\" options=\"{'no_create': True}\" />\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mass_mailing\\data\\mass_mailing_data.xml:\n    9          </record>\n   10  \n   11:         <!-- Default stages of mass mailing campaigns -->\n   12          <record id=\"campaign_stage_1\" model=\"mail.mass_mailing.stage\">\n   13              <field name=\"name\">Schedule</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mass_mailing\\data\\mass_mailing_demo.xml:\n   38              <field name=\"subject\">Newsletter</field>\n   39              <field name=\"model_id\" ref=\"mass_mailing.model_mail_mass_mailing_contact\"/>\n   40:             <field name=\"use_default_to\" eval=\"True\"/>\n   41              <field name=\"auto_delete\" eval=\"True\"/>\n   42              <field name=\"body_html\"><![CDATA[<div class=\"snippet_row bg-color\" style=\"padding:0px;width:600px;margin:auto;background: #ffffff repeat top /100%\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mass_mailing\\models\\mail_thread.py:\n   57      def message_receive_bounce(self, cr, uid, ids, mail_id=None, context=None):\n   58          \"\"\"Called by ``message_process`` when a bounce email (such as Undelivered\n   59:         Mail Returned to Sender) is received for an existing thread. The default\n   60          behavior is to check is an integer  ``message_bounce`` column exists.\n   61          If it is the case, its content is incremented. \"\"\"\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mass_mailing\\models\\mass_mailing.py:\n    8  from openerp import SUPERUSER_ID\n    9  from openerp.exceptions import UserError\n   10: from openerp.tools.misc import DEFAULT_SERVER_DATETIME_FORMAT\n   11  from openerp.tools.safe_eval import safe_eval as eval\n   12  from openerp.osv import osv, fields\n   ..\n   52      }\n   53  \n   54:     def _get_default_popup_content(self, cr, uid, context=None):\n   55          return \"\"\"<div class=\"modal-header text-center\">\n   56      <h3 class=\"modal-title mt8\">Odoo Presents</h3>\n   ..\n   63  <p class=\"o_message_paragraph\">Join our Marketing newsletter and get <strong>this white paper instantly</strong></p>\"\"\"\n   64  \n   65:     _defaults = {\n   66          'active': True,\n   67:         'popup_content': _get_default_popup_content,\n   68          'popup_redirect_url': '/',\n   69      }\n   ..\n   98          return lid and lid[0] or False\n   99  \n  100:     _defaults = {\n  101          'list_id': _get_latest_list\n  102      }\n  ...\n  135          return self.name_get(cr, uid, [rec_id], context)[0]\n  136  \n  137:     def message_get_default_recipients(self, cr, uid, ids, context=None):\n  138          res = {}\n  139          for record in self.browse(cr, uid, ids, context=context):\n  ...\n  161      }\n  162  \n  163:     _defaults = {\n  164          'sequence': 0,\n  165      }\n  ...\n  307      }\n  308  \n  309:     def _get_default_stage_id(self, cr, uid, context=None):\n  310          stage_ids = self.pool['mail.mass_mailing.stage'].search(cr, uid, [], limit=1, context=context)\n  311          return stage_ids and stage_ids[0] or False\n  ...\n  317          return self.pool['ir.model.data'].xmlid_to_res_id(cr, uid, 'utm.utm_medium_email')\n  318  \n  319:     _defaults = {\n  320          'user_id': lambda self, cr, uid, ctx=None: uid,\n  321:         'stage_id': lambda self, *args: self._get_default_stage_id(*args),\n  322          'source_id': lambda self, *args: self._get_source_id(*args),\n  323          'medium_id': lambda self,*args: self._get_medium_id(*args),\n  ...\n  356          \"\"\" Override read_group to always display all states. \"\"\"\n  357          if groupby and groupby[0] == \"stage_id\":\n  358:             # Default result structure\n  359              states_read = self.pool['mail.mass_mailing.stage'].search_read(cr, uid, [], ['name'], context=context)\n  360              states = [(state['id'], state['name']) for state in states_read]\n  ...\n  367              # Get standard results\n  368              read_group_res = super(MassMailingCampaign, self).read_group(cr, uid, domain, fields, groupby, offset=offset, limit=limit, context=context, orderby=orderby)\n  369:             # Update standard results with default results\n  370              result = []\n  371              for state_value, state_name in states:\n  ...\n  461              schedule_date = mass_mailing.schedule_date\n  462              if schedule_date:\n  463:                 if datetime.now() > datetime.strptime(schedule_date, tools.DEFAULT_SERVER_DATETIME_FORMAT):\n  464                      result[mass_mailing.id] = cron_next_call\n  465                  else:\n  ...\n  596          return res\n  597  \n  598:     def default_get(self, cr, uid, fields, context=None):\n  599:         res = super(MassMailing, self).default_get(cr, uid, fields, context=context)\n  600          if 'reply_to_mode' in fields and not 'reply_to_mode' in res and res.get('mailing_model'):\n  601              if res['mailing_model'] in ['res.partner', 'mail.mass_mailing.contact']:\n  ...\n  605          return res\n  606  \n  607:     _defaults = {\n  608          'active': True,\n  609          'state': 'draft',\n  610:         'email_from': lambda self, cr, uid, ctx=None: self.pool['mail.message']._get_default_from(cr, uid, context=ctx),\n  611:         'reply_to': lambda self, cr, uid, ctx=None: self.pool['mail.message']._get_default_from(cr, uid, context=ctx),\n  612          'mailing_model': 'mail.mass_mailing.contact',\n  613          'contact_ab_pc': 100,\n  ...\n  628      #------------------------------------------------------\n  629  \n  630:     def copy_data(self, cr, uid, id, default=None, context=None):\n  631          mailing = self.browse(cr, uid, id, context=context)\n  632:         default = dict(default or {},\n  633                         name=_('%s (copy)') % mailing.name)\n  634:         return super(MassMailing, self).copy_data(cr, uid, id, default, context=context)\n  635  \n  636      def read_group(self, cr, uid, domain, fields, groupby, offset=0, limit=None, context=None, orderby=False, lazy=True):\n  637          \"\"\" Override read_group to always display all states. \"\"\"\n  638          if groupby and groupby[0] == \"state\":\n  639:             # Default result structure\n  640              # states = self._get_state_list(cr, uid, context=context)\n  641              states = [('draft', _('Draft')), ('in_queue', _('In Queue')), ('sending', _('Sending')), ('done', _('Sent'))]\n  ...\n  648              # Get standard results\n  649              read_group_res = super(MassMailing, self).read_group(cr, uid, domain, fields, groupby, offset=offset, limit=limit, context=context, orderby=orderby)\n  650:             # Update standard results with default results\n  651              result = []\n  652              for state_value, state_name in states:\n  ...\n  713  \n  714      def action_test_mailing(self, cr, uid, ids, context=None):\n  715:         ctx = dict(context, default_mass_mailing_id=ids[0])\n  716          return {\n  717              'name': _('Test Mailing'),\n  ...\n  831  \n  832      def _process_mass_mailing_queue(self, cr, uid, context=None):\n  833:         now = datetime.now().strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n  834          mass_mailing_ids = self.search(cr, uid, [('state', 'in', ('in_queue', 'sending')), '|', ('schedule_date', '<', now), ('schedule_date', '=', False)], context=context)\n  835  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mass_mailing\\models\\mass_mailing_stats.py:\n   96      }\n   97  \n   98:     _defaults = {\n   99          'scheduled': fields.datetime.now,\n  100      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mass_mailing\\views\\editor_field_html.xml:\n   31              <h1 class=\"page-header mt16 email_head panel-primary\">\n   32                  Select a theme \n   33:                 <button type=\"button\" class=\"btn btn-sm btn-default fa fa-info-circle\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Here you can design your own template from scratch by selecting your favorite theme.\"></button>\n   34              </h1>  \n   35              <t t-call=\"mass_mailing.mass_mail_theme_list\"/>\n   ..\n   68                      <div class=\"o_popup_content_dev\">\n   69                          <div id=\"editable_area\" class=\"o_editable\" t-att-data-oe-model=\"model\" t-att-data-oe-field=\"field\" t-att-data-oe-id=\"res_id\" data-oe-type=\"html\">\n   70:                             <!-- Can be removed once default values are ok for the editor -->\n   71                              <t t-raw=\"content\">\n   72                              </t>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mass_mailing\\views\\email_template.xml:\n   23                                      domain=\"[('model', 'in', ['res.partner', 'mail.mass_mailing.contact', 'crm.lead', 'hr.applicant'])]\"/>\n   24                                  <field name=\"model\" invisible=\"True\"/>\n   25:                                 <field name=\"use_default_to\" invisible=\"1\"/>\n   26                              </group>\n   27                          </group>\n   ..\n   83              <field name=\"context\">{\n   84      'form_view_ref': 'mass_mailing.email_template_form_minimal',\n   85:     'default_use_default_to': True,\n   86  }</field>\n   87          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mass_mailing\\views\\mass_mailing.xml:\n  111              <field name=\"view_mode\">graph,tree,form</field>\n  112              <field name=\"domain\">[]</field>\n  113:             <field name=\"context\">{'search_default_mass_mailing_id': active_id}</field>\n  114          </record>\n  115  \n  ...\n  203              <field name=\"view_type\">form</field>\n  204              <field name=\"view_mode\">tree,graph</field>\n  205:             <field name=\"context\">{'search_default_not_opt_out': 1}</field>\n  206          </record>\n  207  \n  ...\n  211              <field name=\"view_type\">form</field>\n  212              <field name=\"view_mode\">tree,form,graph</field>\n  213:             <field name=\"context\">{'search_default_list_id': active_id, 'search_default_not_opt_out': 1}</field>\n  214              <field name=\"help\" type=\"html\">\n  215                <p class=\"oe_view_nocontent_create\">\n  ...\n  375              <field name=\"res_model\">link.tracker</field>\n  376              <field name=\"view_mode\">tree</field>\n  377:             <field name=\"context\">{'search_default_mass_mailing_id': active_id}</field>\n  378          </record>\n  379  \n  ...\n  418                              </button>\n  419                              <button name=\"%(action_view_mail_mail_statistics_mailing)d\"\n  420:                                     context=\"{'search_default_filter_received': True}\"\n  421                                      type=\"action\" class=\"oe_stat_button\">\n  422                                  <field name=\"received_ratio\" string=\"Received\" widget=\"percentpie\"/>\n  423                              </button>\n  424                              <button name=\"%(action_view_mail_mail_statistics_mailing)d\"\n  425:                                     context=\"{'search_default_filter_opened': True}\"\n  426                                      type=\"action\" class=\"oe_stat_button\">\n  427                                  <field name=\"opened_ratio\" string=\"Opened\" widget=\"percentpie\"/>\n  428                              </button>\n  429                              <button name=\"%(action_view_mail_mail_statistics_mailing)d\"\n  430:                                     context=\"{'search_default_filter_replied': True}\"\n  431                                      type=\"action\" class=\"oe_stat_button\">\n  432                                  <field name=\"replied_ratio\" string=\"Replied\" widget=\"percentpie\"/>\n  ...\n  437                              </button>\n  438                              <button name=\"%(action_view_mail_mail_statistics_mailing)d\"\n  439:                                 context=\"{'search_default_filter_bounced': True}\"\n  440                                  type=\"action\" class=\"oe_stat_button\">\n  441                                  <field name=\"bounced_ratio\" string=\"Bounced\" widget=\"percentpie\"/>\n  ...\n  460                                      attrs=\"{'invisible': [('mailing_model', '=', 'mail.mass_mailing.contact')]}\"\n  461                                      options=\"{'model_field': 'mailing_model', 'model_domain': 'mailing_domain'}\"\n  462:                                     context=\"{'search_default_not_opt_out':1}\"/>\n  463  \n  464                                  <div attrs=\"{'invisible': [('mailing_model', '&lt;&gt;', 'mail.mass_mailing.contact')]}\">\n  ...\n  519              <field name=\"model\">mail.mass_mailing</field>\n  520              <field name=\"arch\" type=\"xml\">\n  521:                 <kanban default_group_by='state'>\n  522                      <field name='color'/>\n  523                      <field name='total'/>\n  ...\n  615              <field name=\"view_mode\">kanban,tree,form</field>\n  616              <field name=\"context\">{\n  617:                 'search_default_mass_mailing_campaign_id': [active_id],\n  618:                 'default_mass_mailing_campaign_id': active_id,\n  619              }\n  620              </field>\n  ...\n  633              <field name=\"view_mode\">form,kanban,tree</field>\n  634              <field name=\"context\">{\n  635:                 'search_default_mass_mailing_campaign_id': [active_id],\n  636:                 'default_mass_mailing_campaign_id': active_id, \n  637              }\n  638              </field>\n  ...\n  651              <field name=\"view_mode\">form,kanban,tree</field>\n  652              <field name=\"context\">{\n  653:                 'search_default_mass_mailing_campaign_id': [active_id],\n  654:                 'default_mass_mailing_campaign_id': active_id,\n  655:                 'default_contact_ab_pc': 10,\n  656              }\n  657              </field>\n  ...\n  742              <field name=\"res_model\">link.tracker</field>\n  743              <field name=\"view_mode\">tree</field>\n  744:             <field name=\"context\">{'search_default_mass_mailing_campaign_id': active_id}</field>\n  745          </record>\n  746  \n  ...\n  822              <field name=\"model\">mail.mass_mailing.campaign</field>\n  823              <field name=\"arch\" type=\"xml\">\n  824:                 <kanban default_group_by='stage_id'>\n  825                      <field name='total'/>\n  826                      <field name='color'/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mass_mailing\\views\\snippets_themes.xml:\n    5  <ul>\n    6      <li class=\"active\">\n    7:         <a href=\"#email_designer_default_headers\" class=\"scroll-link\">\n    8              <span class=\"fa-stack fa-lg\">\n    9                  <i class=\"fa fa-square fa-stack-2x fa-inverse\"></i>\n   ..\n   14      </li>\n   15      <li>\n   16:         <a href=\"#email_designer_default_body\" class=\"scroll-link\">\n   17              <span class=\"fa-stack fa-lg\">\n   18                  <i class=\"fa fa-square fa-stack-2x fa-inverse\"></i>\n   ..\n   22      </li>\n   23      <li>\n   24:         <a href=\"#email_designer_default_extra\" class=\"scroll-link\">\n   25              <span class=\"fa-stack fa-lg\">\n   26                  <i class=\"fa fa-square fa-stack-2x fa-inverse\"></i>\n   ..\n   30      </li>\n   31      <li>\n   32:         <a href=\"#email_designer_default_footer\" class=\"scroll-link\">\n   33              <span class=\"fa-stack fa-lg\">\n   34                  <i class=\"fa fa-square fa-stack-2x fa-inverse\"></i>\n   ..\n   42  <div id=\"o_scroll\">\n   43  \n   44: <div id=\"email_designer_default_headers\" class=\"o_panel\">\n   45      <div class=\"o_panel_header\">\n   46          <span class=\"fa-stack\">\n   ..\n  161      </div>\n  162  </div>\n  163: <div id=\"email_designer_default_body\" class=\"o_panel\">\n  164      <div class=\"o_panel_header\">\n  165          <span class=\"fa-stack\">\n  ...\n  356      </div>\n  357  </div>\n  358: <div id=\"email_designer_default_extra\" class=\"o_panel\">\n  359      <div class=\"o_panel_header\">\n  360          <span class=\"fa-stack\">\n  ...\n  394      </div>\n  395  </div>\n  396: <div id=\"email_designer_default_footer\" class=\"o_panel\">\n  397      <div class=\"o_panel_header\">\n  398          <span class=\"fa-stack\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mass_mailing\\wizard\\test_mailing.py:\n   15      }\n   16  \n   17:     _defaults = {\n   18:         'email_to': lambda self, cr, uid, ctx=None: self.pool['mail.message']._get_default_from(cr, uid, context=ctx),\n   19      }\n   20  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mass_mailing\\wizard\\test_mailing.xml:\n   16                      <footer>\n   17                          <button string=\"Send Sample Mail\" name=\"send_mail_test\" type=\"object\" class=\"btn-primary\"/>\n   18:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   19                      </footer>\n   20                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\membership\\membership.py:\n  169          for id in ids:\n  170              res[id] = 'none'\n  171:         today = time.strftime(tools.DEFAULT_SERVER_DATE_FORMAT)\n  172          for id in ids:\n  173              partner_data = self.browse(cr, uid, id, context=context)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\membership\\membership_view.xml:\n   53                      <group>\n   54                          <group>\n   55:                             <field name=\"default_code\"/>\n   56                              <field name=\"categ_id\"/>\n   57                              <field name=\"membership\" invisible=\"1\"/>\n   ..\n   85              <field name=\"res_model\">product.template</field>\n   86              <field name=\"domain\">[('membership','=',True), ('type', '=', 'service')]</field>\n   87:             <field name=\"context\">{'membership':True, 'type':'service', 'default_membership': True, 'default_type': 'service'}</field>\n   88              <field name=\"search_view_id\" ref=\"membership_product_search_form_view\"/>\n   89          </record>\n   ..\n  157              <field name=\"res_model\">res.partner</field>\n  158              <field name=\"search_view_id\" ref=\"view_res_partner_member_filter\"/>\n  159:             <field name=\"context\">{\"search_default_all_members\": 1, \"default_free_member\": True}</field>\n  160              <field name=\"help\" type=\"html\">\n  161                  <p class=\"oe_view_nocontent_create\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\membership\\report\\report_membership_view.xml:\n   64              <field name=\"view_mode\">pivot,graph</field>\n   65              <field name=\"search_view_id\" ref=\"view_report_membership_search\"/>\n   66:             <field name=\"context\">{\"search_default_start_date\":1,\"search_default_member\":1, 'search_default_Revenue':1, 'search_default_this_month':1, 'search_default_salesman':1,'group_by_no_leaf':1}</field>\n   67          </record>\n   68  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\membership\\tests\\test_membership.py:\n   23          self.assertEqual(\n   24              self.partner_1.membership_state, 'none',\n   25:             'membership: default membership status of partners should be None')\n   26  \n   27          # subscribes to a membership\n   ..\n   69          self.assertEqual(\n   70              self.partner_1.membership_state, 'none',\n   71:             'membership: default membership status of partners should be None')\n   72  \n   73          # subscribes to a membership\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\membership\\wizard\\membership_invoice_view.xml:\n   14                      <footer>\n   15                          <button string=\"Invoice Membership\" name=\"membership_invoice\" type=\"object\" class=\"btn-primary\"/>\n   16:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   17                      </footer>\n   18                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp\\company.py:\n   10              help=\"Security days for each manufacturing operation.\"),\n   11      }\n   12:     _defaults = {\n   13          'manufacturing_lead': lambda *a: 1.0,\n   14      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp\\mrp.py:\n    7  import openerp.addons.decimal_precision as dp\n    8  from openerp.osv import fields, osv\n    9: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT\n   10  from openerp.tools import float_compare, float_is_zero\n   11  from openerp.tools.translate import _\n   ..\n   37          'description': fields.text('Description'),\n   38      }\n   39:     _defaults = {\n   40          'composition': lambda *a: 'min',\n   41      }\n   ..\n   43  # Work Centers\n   44  #----------------------------------------------------------\n   45: # capacity_hour : capacity per hour. default: 1.0.\n   46  #          Eg: If 5 concurrent operations at one time: capacity = 5 (because 5 employees)\n   47  # unit_per_cycle : how many units are produced for one cycle\n   ..\n   67          'product_id': fields.many2one('product.product','Work Center Product', help=\"Fill this product to easily track your production costs in the analytic accounting.\"),\n   68      }\n   69:     _defaults = {\n   70          'capacity_per_cycle': 1.0,\n   71          'resource_type': 'material',\n   ..\n  111          'company_id': fields.many2one('res.company', 'Company'),\n  112      }\n  113:     _defaults = {\n  114          'active': lambda *a: 1,\n  115:         'company_id': lambda self, cr, uid, context: self.pool.get('res.company')._company_default_get(cr, uid, 'mrp.routing', context=context)\n  116      }\n  117  \n  ...\n  136          'company_id': fields.related('routing_id', 'company_id', type='many2one', relation='res.company', string='Company', store=True, readonly=True),\n  137      }\n  138:     _defaults = {\n  139          'cycle_nbr': lambda *a: 1.0,\n  140          'hour_nbr': lambda *a: 0.0,\n  ...\n  176      def _get_uom_id(self, cr, uid, *args):\n  177          return self.pool[\"product.uom\"].search(cr, uid, [], limit=1, order='id')[0]\n  178:     _defaults = {\n  179          'active': lambda *a: 1,\n  180          'product_qty': lambda *a: 1.0,\n  ...\n  183          'type': lambda *a: 'normal',\n  184          'product_uom': _get_uom_id,\n  185:         'company_id': lambda self, cr, uid, c: self.pool.get('res.company')._company_default_get(cr, uid, 'mrp.bom', context=c),\n  186      }\n  187      _order = \"sequence\"\n  ...\n  216          if context.get('company_id'):\n  217              domain = domain + [('company_id', '=', context['company_id'])]\n  218:         domain = domain + [ '|', ('date_start', '=', False), ('date_start', '<=', time.strftime(DEFAULT_SERVER_DATE_FORMAT)),\n  219:                             '|', ('date_stop', '=', False), ('date_stop', '>=', time.strftime(DEFAULT_SERVER_DATE_FORMAT))]\n  220          # order to prioritize bom with product_id over the one without\n  221          ids = self.search(cr, uid, domain, order='sequence, product_id', context=context)\n  ...\n  238          @return: True or False\n  239          \"\"\"\n  240:         if line.date_start and line.date_start > time.strftime(DEFAULT_SERVER_DATE_FORMAT) or \\\n  241:             line.date_stop and line.date_stop < time.strftime(DEFAULT_SERVER_DATE_FORMAT):\n  242                  return True\n  243          # all bom_line_id variant values must be in the product\n  ...\n  335          return result, result2\n  336  \n  337:     def copy_data(self, cr, uid, id, default=None, context=None):\n  338:         if default is None:\n  339:             default = {}\n  340          bom_data = self.read(cr, uid, id, [], context=context)\n  341:         default.update(name=_(\"%s (copy)\") % (bom_data['display_name']))\n  342:         return super(mrp_bom, self).copy_data(cr, uid, id, default, context=context)\n  343  \n  344      def onchange_uom(self, cr, uid, ids, product_tmpl_id, product_uom, context=None):\n  ...\n  421      def _get_uom_id(self, cr, uid, *args):\n  422          return self.pool[\"product.uom\"].search(cr, uid, [], limit=1, order='id')[0]\n  423:     _defaults = {\n  424          'product_qty': lambda *a: 1.0,\n  425          'product_efficiency': lambda *a: 1.0,\n  ...\n  497          return result.keys()\n  498  \n  499:     def _src_id_default(self, cr, uid, ids, context=None):\n  500          try:\n  501              location_model, location_id = self.pool.get('ir.model.data').get_object_reference(cr, uid, 'stock', 'stock_location_stock')\n  ...\n  505          return location_id\n  506  \n  507:     def _dest_id_default(self, cr, uid, ids, context=None):\n  508          try:\n  509              location_model, location_id = self.pool.get('ir.model.data').get_object_reference(cr, uid, 'stock', 'stock_location_stock')\n  ...\n  607      }\n  608  \n  609:     _defaults = {\n  610          'priority': lambda *a: '1',\n  611          'state': lambda *a: 'draft',\n  ...\n  614          'user_id': lambda self, cr, uid, c: uid,\n  615          'name': lambda self, cr, uid, context: self.pool['ir.sequence'].next_by_code(cr, uid, 'mrp.production', context=context) or '/',\n  616:         'company_id': lambda self, cr, uid, c: self.pool.get('res.company')._company_default_get(cr, uid, 'mrp.production', context=c),\n  617:         'location_src_id': _src_id_default,\n  618:         'location_dest_id': _dest_id_default\n  619      }\n  620  \n  ...\n  855  \n  856      def _get_subproduct_factor(self, cr, uid, production_id, move_id=None, context=None):\n  857:         \"\"\" Compute the factor to compute the qty of procucts to produce for the given production_id. By default,\n  858              it's always equal to the quantity encoded in the production order or the production wizard, but if the\n  859              module mrp_subproduct is installed, then we must use the move_id to identify the product to produce\n  ...\n 1007                      # In case you need to make more than planned\n 1008                      #consumed more in wizard than previously planned\n 1009:                     extra_move_id = stock_mov_obj.copy(cr, uid, produce_product.id, default={'product_uom_qty': remaining_qty,\n 1010                                                                                               'production_id': production_id}, context=context)\n 1011                      stock_mov_obj.action_confirm(cr, uid, [extra_move_id], context=context)\n ....\n 1193              domain += [('warehouse_id', '=', wh)]\n 1194          types = type_obj.search(cr, uid, domain, context=context)\n 1195:         move = stock_move.copy(cr, uid, move_id, default = {\n 1196              'location_id': source_location_id,\n 1197              'location_dest_id': dest_location_id,\n ....\n 1307              track_visibility='onchange', select=True, ondelete='cascade', required=True),\n 1308      }\n 1309:     _defaults = {\n 1310          'sequence': lambda *a: 1,\n 1311          'hour': lambda *a: 0,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp\\mrp_demo.xml:\n  445              <field name=\"product_uom\" ref=\"product.product_uom_unit\"/>\n  446              <field name=\"sequence\">5</field>\n  447:             <field name=\"code\">default</field>\n  448              <field name=\"type\">phantom</field>\n  449          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp\\mrp_view.xml:\n  473                      <group expand=\"0\" string=\"Group By...\">\n  474                          <filter string=\"Product\" domain=\"[]\" context=\"{'group_by':'product_tmpl_id'}\"/>\n  475:                         <filter string='Default Unit of Measure' domain=\"[]\" context=\"{'group_by' : 'product_uom'}\"/>\n  476                          <filter string=\"Routings\" domain=\"[]\" context=\"{'group_by':'routing_id'}\"/>\n  477                          <filter string=\"Valid From Month\" domain=\"[]\" context=\"{'group_by':'date_start'}\" help=\"Valid From Date by Month\"/>\n  ...\n  551                          <filter string=\"Bill Of Material\" domain=\"[]\" context=\"{'group_by':'bom_id'}\"/>\n  552                          <filter string=\"Product\" domain=\"[]\" context=\"{'group_by':'product_id'}\"/>\n  553:                         <filter string='Default Unit of Measure' domain=\"[]\" context=\"{'group_by' : 'product_uom'}\"/>\n  554                          <filter string=\"Routings\" domain=\"[]\" context=\"{'group_by':'routing_id'}\"/>\n  555                          <filter string=\" Valid From Month\" domain=\"[]\" context=\"{'group_by':'date_start'}\" help=\"Valid From Date by Month\"/>\n  ...\n  597                      <group>\n  598                          <group>\n  599:                             <field name=\"product_id\" on_change=\"product_id_change(product_id, product_qty)\" domain=\"[('bom_ids','!=',False),('bom_ids.type','!=','phantom')]\" context='{\"default_type\": \"product\"}'/>\n  600                              <field name=\"product_tmpl_id\" invisible=\"1\"/>\n  601                              <label for=\"product_qty\"/>\n  ...\n  616                                                  ('product_tmpl_id.product_variant_ids','=',product_id),\n  617                                                  ('product_id','=',False)]\"\n  618:                                 context=\"{'default_product_id': product_id, 'default_product_tmpl_id': product_tmpl_id}\" on_change=\"bom_id_change(bom_id)\" required=\"1\"/>\n  619                              <field name=\"routing_id\" groups=\"mrp.group_mrp_routings\"/>\n  620:                             <field name=\"user_id\" context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'mrp.group_mrp_user']}\"/>\n  621                              <field name=\"origin\"/>\n  622                          </group>\n  ...\n  789                                      </div>\n  790                                      <div class=\"col-xs-6\">\n  791:                                         <span t-attf-class=\"pull-right text-right label #{['draft', 'cancel'].indexOf(record.state.raw_value) > -1 ? 'label-default' : ['none'].indexOf(record.state.raw_value) > -1 ? 'label-danger' : ['confirmed'].indexOf(record.state.raw_value) > -1 ? 'label-warning' : ['done'].indexOf(record.state.raw_value) > -1 ? 'label-success' : 'label-primary'}\"><t t-esc=\"record.state.value\"/></span>\n  792                                      </div>\n  793                                  </div>\n  ...\n  814              <field name=\"model\">mrp.production</field>\n  815              <field name=\"arch\" type=\"xml\">\n  816:                 <gantt date_stop=\"date_finished\" date_start=\"date_start\" progress=\"progress\" string=\"Productions\" default_group_by=\"routing_id\">\n  817                  </gantt>\n  818              </field>\n  ...\n 1012  \n 1013          <record id=\"template_open_bom\" model=\"ir.actions.act_window\">\n 1014:             <field name=\"context\">{'default_product_tmpl_id': active_id, 'search_default_product_tmpl_id': active_id}</field>\n 1015              <field name=\"name\">Bill of Materials</field>\n 1016              <field name=\"res_model\">mrp.bom</field>\n ....\n 1038          <!-- Product Product -->\n 1039          <record id=\"product_open_bom\" model=\"ir.actions.act_window\">\n 1040:             <field name=\"context\">{'default_product_id': active_id, 'search_default_product_id': active_id}</field>\n 1041              <field name=\"name\">Bill of Materials</field>\n 1042              <field name=\"res_model\">mrp.bom</field>\n ....\n 1045          </record>\n 1046          <record id=\"act_product_mrp_production\" model=\"ir.actions.act_window\">\n 1047:             <field name=\"context\">{'search_default_product_id': [active_id]}</field>\n 1048              <field name=\"name\">Manufacturing Orders</field>\n 1049              <field name=\"res_model\">mrp.production</field>\n ....\n 1075              <field name=\"inherit_id\" ref=\"stock.view_warehouse\"/>\n 1076              <field name=\"arch\" type=\"xml\">\n 1077:                  <xpath expr=\"//field[@name='default_resupply_wh_id']\" position=\"before\">\n 1078                      <field name=\"manufacture_to_resupply\" />\n 1079                  </xpath>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp\\mrp_workflow.xml:\n   60              <field name=\"trigger_model\" eval=\"False\"/> <!-- Force empty -->\n   61              <field name=\"trigger_expr_id\" eval=\"False\"/> <!-- Force empty -->\n   62:             <field name=\"condition\">True</field> <!-- Force default -->\n   63          </record>\n   64          <record id=\"prod_trans_ready_in_production\" model=\"workflow.transition\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp\\procurement.py:\n    6  from openerp.osv import osv, fields\n    7  from openerp.tools.translate import _\n    8: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT\n    9  from openerp import SUPERUSER_ID\n   10  \n   ..\n   55      def _get_date_planned(self, cr, uid, procurement, context=None):\n   56          format_date_planned = datetime.strptime(procurement.date_planned,\n   57:                                                 DEFAULT_SERVER_DATETIME_FORMAT)\n   58          date_planned = format_date_planned - relativedelta(days=procurement.product_id.produce_delay or 0.0)\n   59          date_planned = date_planned - relativedelta(days=procurement.company_id.manufacturing_lead)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp\\product.py:\n   30      }\n   31  \n   32:     _defaults = {\n   33          'produce_delay': 1,\n   34      }\n   ..\n   39          result = self._get_act_window_dict(cr, uid, 'mrp.act_product_mrp_production', context=context)\n   40          if len(ids) == 1 and len(products) == 1:\n   41:             result['context'] = \"{'default_product_id': \" + str(products[0]) + \", 'search_default_product_id': \" + str(products[0]) + \"}\"\n   42          else:\n   43              result['domain'] = \"[('product_id','in',[\" + ','.join(map(str, products)) + \"])]\"\n   ..\n   64          # bom specific to this variant or global to template\n   65          context = {\n   66:             'search_default_product_tmpl_id': templates[0],\n   67:             'search_default_product_id': ids[0],\n   68:             'default_product_tmpl_id': templates[0],\n   69:             'default_product_id': ids[0],\n   70          }\n   71          result['context'] = str(context)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp\\report\\bom_structure.py:\n   20                  res = {}\n   21                  res['pname'] = l.product_id.name\n   22:                 res['pcode'] = l.product_id.default_code\n   23                  res['pqty'] = l.product_qty\n   24                  res['uname'] = l.product_uom.name\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp\\stock.py:\n    8  from openerp.tools.translate import _\n    9  from openerp import SUPERUSER_ID\n   10: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT, float_compare\n   11  from openerp.exceptions import UserError\n   12  \n   ..\n   59                          'split_from': move.id, #Needed in order to keep sale connection, but will be removed by unlink\n   60                      }\n   61:                     mid = move_obj.copy(cr, uid, move.id, default=valdef, context=context)\n   62                      to_explode_again_ids.append(mid)\n   63                  else:\n   ..\n   76                              }\n   77                          if move.procurement_id:\n   78:                             proc = proc_obj.copy(cr, uid, move.procurement_id.id, default=valdef, context=context)\n   79                          else:\n   80                              proc = proc_obj.create(cr, uid, valdef, context=context)\n   ..\n  212      }\n  213  \n  214:     _defaults = {\n  215          'manufacture_to_resupply': True,\n  216      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp\\tests\\test_multicompany.py:\n   26  \n   27      def test_00_multicompany_user(self):\n   28:         \"\"\"check no error on getting default mrp.production values in multicompany setting\"\"\"\n   29          cr, uid, context = self.cr, self.multicompany_user_id, {}\n   30          fields = ['location_src_id', 'location_dest_id']\n   31:         defaults = self.stock_location.default_get(cr, uid, ['location_id', 'location_dest_id', 'type'], context)\n   32          for field in fields:\n   33:             if defaults.get(field):\n   34                  try:\n   35:                     self.stock_location.check_access_rule(cr, uid, [defaults[field]], 'read', context)\n   36                  except Exception, exc:\n   37                      assert False, \"unreadable location %s: %s\" % (field, exc)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp\\views\\report_mrpbomstructure.xml:\n   19                              <tr style=\"font-weight: bold;\">\n   20                                  <td>\n   21:                                     <span t-field=\"o.product_id.default_code\"/>\n   22                                      <span t-field=\"o.display_name\"/>\n   23                                  </td>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp\\wizard\\change_production_qty.py:\n   15      }\n   16  \n   17:     def default_get(self, cr, uid, fields, context=None):\n   18:         \"\"\" To get default values for the object.\n   19          @param self: The object pointer.\n   20          @param cr: A database cursor\n   21          @param uid: ID of the user currently logged in\n   22:         @param fields: List of fields for which we want default values\n   23          @param context: A standard dictionary\n   24          @return: A dictionary which of fields with values.\n   ..\n   26          if context is None:\n   27              context = {}\n   28:         res = super(change_production_qty, self).default_get(cr, uid, fields, context=context)\n   29          prod_obj = self.pool.get('mrp.production')\n   30          prod = prod_obj.browse(cr, uid, context.get('active_id'), context=context)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp\\wizard\\change_production_qty_view.xml:\n   16                          <button name=\"change_prod_qty\" string=\"Approve\"\n   17                              colspan=\"1\" type=\"object\" class=\"btn-primary\"/>\n   18:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   19                      </footer>\n   20                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp\\wizard\\mrp_product_produce.py:\n   12      _columns = {\n   13          'product_id': fields.many2one('product.product', string='Product'),\n   14:         'product_qty': fields.float('Quantity (in default UoM)', digits_compute=dp.get_precision('Product Unit of Measure')),\n   15          'lot_id': fields.many2one('stock.production.lot', string='Lot'),\n   16          'produce_id': fields.many2one('mrp.product.produce', string=\"Produce\"),\n   ..\n   91          return prod and prod_obj.browse(cr, uid, prod, context=context).tracking or 'none'\n   92  \n   93:     _defaults = {\n   94           'product_qty': _get_product_qty,\n   95           'mode': lambda *x: 'consume_produce',\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp\\wizard\\mrp_product_produce_view.xml:\n   17                          <field name=\"tracking\" invisible=\"1\"/>\n   18                          <field name=\"lot_id\" domain=\"[('product_id', '=', product_id)]\"\n   19:                                     context=\"{'default_product_id':product_id}\"\n   20                                      attrs=\"{'required': [('tracking', '!=', 'none'), ('mode', '=', 'consume_produce')]}\"\n   21                                      groups=\"stock.group_production_lot\"/>\n   ..\n   27                                  <field name=\"product_qty\"/>\n   28                                  <field name=\"lot_id\" domain=\"[('product_id', '=', product_id)]\"\n   29:                                     context=\"{'default_product_id':product_id}\"\n   30                                      groups=\"stock.group_production_lot\"/>\n   31                              </tree>\n   ..\n   34                      <footer>\n   35                          <button name=\"do_produce\" type=\"object\" string=\"Confirm\" class=\"btn-primary\"/>\n   36:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   37                      </footer>\n   38                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp\\wizard\\stock_move.py:\n   19      }\n   20  \n   21:     #TOFIX: product_uom should not have different category of default UOM of product. Qty should be convert into UOM of original move line before going in consume and scrap\n   22:     def default_get(self, cr, uid, fields, context=None):\n   23          if context is None:\n   24              context = {}\n   25:         res = super(stock_move_consume, self).default_get(cr, uid, fields, context=context)\n   26          move = self.pool.get('stock.move').browse(cr, uid, context['active_id'], context=context)\n   27          if 'product_id' in fields:\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp\\wizard\\stock_move_view.xml:\n   17                          </div>\n   18                          <field name=\"restrict_lot_id\" domain=\"[('product_id','=',product_id)]\" groups=\"stock.group_production_lot\"\n   19:                             context=\"{'default_product_id': product_id}\"/>\n   20                          <field name=\"location_id\" groups=\"stock.group_locations\"/>\n   21                      </group>\n   22                      <footer>\n   23                          <button name=\"do_move_consume\" string=\"Ok\" type=\"object\" class=\"btn-primary\"/>\n   24:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   25                      </footer>\n   26                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp_byproduct\\mrp_byproduct.py:\n   20          'bom_id': fields.many2one('mrp.bom', 'BoM', ondelete='cascade'),\n   21      }\n   22:     _defaults={\n   23          'subproduct_type': 'variable',\n   24          'product_qty': lambda *a: 1.0,\n   ..\n   97  \n   98      def _get_subproduct_factor(self, cr, uid, production_id, move_id=None, context=None):\n   99:         \"\"\"Compute the factor to compute the qty of procucts to produce for the given production_id. By default, \n  100              it's always equal to the quantity encoded in the production order or the production wizard, but with \n  101              the module mrp_byproduct installed it can differ for byproducts having type 'variable'.\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp_operations\\data\\report_paperformat.xml:\n    4          <record id=\"paperformat_wcbarcode\" model=\"report.paperformat\">\n    5              <field name=\"name\">WorkCenter BarCode</field>\n    6:             <field name=\"default\" eval=\"True\"/>\n    7              <field name=\"format\">custom</field>\n    8              <field name=\"page_height\">195</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp_operations\\mrp_operations.py:\n   12  # Work Centers\n   13  #----------------------------------------------------------\n   14: # capacity_hour : capacity per hour. default: 1.0.\n   15  #          Eg: If 5 concurrent operations at one time: capacity = 5 (because 5 employees)\n   16  # unit_per_cycle : how many units are produced for one cycle\n   ..\n   80      }\n   81  \n   82:     _defaults = {\n   83          'state': 'draft',\n   84          'delay': 0.0,\n   ..\n  534          'order_date': fields.function(_get_order_date,string='Order Date',type='date',store={'mrp.production':(_order_date_search_production,['date_planned'], 10)}),\n  535          }\n  536:     _defaults={\n  537          'date_start': lambda *a:datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n  538      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp_operations\\mrp_operations_view.xml:\n  157          <field name=\"model\">mrp.production.workcenter.line</field>\n  158          <field name=\"arch\" type=\"xml\">\n  159:             <gantt date_delay=\"hour\" date_start=\"date_planned\" string=\"Operations\" default_group_by=\"production_id\">\n  160              </gantt>\n  161          </field>\n  ...\n  211          <field name=\"model\">mrp.production.workcenter.line</field>\n  212          <field name=\"arch\" type=\"xml\">\n  213:             <gantt date_delay=\"hour\" date_start=\"date_planned\" default_group_by=\"workcenter_id\">\n  214              </gantt>\n  215          </field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp_operations\\report\\mrp_workorder_analysis_view.xml:\n   82              <field name=\"search_view_id\" ref=\"view_report_mrp_workorder_filter\"/>\n   83              <field name=\"view_id\"></field>  <!-- force empty -->\n   84:             <field name=\"context\">{'search_default_Workcenter': 1}</field>\n   85          </record>\n   86  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp_repair\\mrp_repair.py:\n   80          return res\n   81  \n   82:     def _get_default_address(self, cr, uid, ids, field_name, arg, context=None):\n   83          res = {}\n   84          partner_obj = self.pool.get('res.partner')\n   ..\n  104          'partner_id': fields.many2one('res.partner', 'Partner', select=True, help='Choose partner for whom the order will be invoiced and delivered.', states={'confirmed': [('readonly', True)]}),\n  105          'address_id': fields.many2one('res.partner', 'Delivery Address', domain=\"[('parent_id','=',partner_id)]\", states={'confirmed': [('readonly', True)]}),\n  106:         'default_address_id': fields.function(_get_default_address, type=\"many2one\", relation=\"res.partner\"),\n  107          'state': fields.selection([\n  108              ('draft', 'Quotation'),\n  ...\n  162      }\n  163  \n  164:     def _default_stock_location(self, cr, uid, context=None):\n  165          try:\n  166              warehouse = self.pool.get('ir.model.data').get_object(cr, uid, 'stock', 'warehouse0')\n  ...\n  169              return False\n  170  \n  171:     _defaults = {\n  172          'state': lambda *a: 'draft',\n  173          'name': lambda obj, cr, uid, context: obj.pool.get('ir.sequence').next_by_code(cr, uid, 'mrp.repair'),\n  174          'invoice_method': lambda *a: 'none',\n  175:         'company_id': lambda self, cr, uid, context: self.pool.get('res.company')._company_default_get(cr, uid, 'mrp.repair', context=context),\n  176          'pricelist_id': lambda self, cr, uid, context: self.pool['product.pricelist'].search(cr, uid, [], limit=1)[0],\n  177          'product_qty': 1.0,\n  178:         'location_id': _default_stock_location,\n  179      }\n  180  \n  ...\n  581                          \\n* The \\'Cancelled\\' status is set automatically when user cancel repair order.'),\n  582      }\n  583:     _defaults = {\n  584          'state': lambda *a: 'draft',\n  585          'product_uom_qty': lambda *a: 1,\n  ...\n  663      }\n  664  \n  665:     _defaults = {\n  666          'to_invoice': lambda *a: True,\n  667      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp_repair\\mrp_repair_view.xml:\n   51                                  <field name=\"product_uom\" groups=\"product.group_uom\" on_change=\"onchange_product_uom(product_id, product_uom)\" class=\"oe_inline\"/>\n   52                              </div>\n   53:                             <field name=\"lot_id\" domain=\"[('product_id', '=', product_id)]\" context=\"{'default_product_id': product_id}\" groups=\"stock.group_production_lot\"/>\n   54                              <field name=\"partner_id\" on_change=\"onchange_partner_id(partner_id,address_id)\" attrs=\"{'required':[('invoice_method','!=','none')]}\"/>\n   55                              <field name=\"address_id\" groups=\"sale.group_delivery_invoice_address\"/>\n   ..\n   64                  <notebook>\n   65                      <page string=\"Operations\">\n   66:                         <field name=\"operations\" context=\"{'default_product_uom_qty': product_qty}\">\n   67                              <form string=\"Operations\">\n   68                                  <notebook>\n   ..\n   98                                  <field name=\"product_id\" on_change=\"product_id_change(parent.pricelist_id, product_id, product_uom, product_uom_qty, parent.partner_id, False, context)\"/>\n   99                                  <field name='name'/>\n  100:                                 <field name=\"lot_id\" domain=\"[('product_id', '=', product_id)]\" context=\"{'default_product_id': product_id}\" groups=\"stock.group_production_lot\"/>\n  101                                  <field name=\"location_id\" groups=\"stock.group_locations\"/>\n  102                                  <field name=\"location_dest_id\" groups=\"stock.group_locations\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp_repair\\wizard\\cancel_repair.py:\n   57                      <header>\n   58                          <button name=\"cancel_repair\" string=\"_Yes\" type=\"object\" class=\"btn-primary\"/>\n   59:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   60                      </header>\n   61                      <label string=\"Do you want to continue?\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp_repair\\wizard\\mrp_repair_cancel_view.xml:\n   15                      <footer>\n   16                          <button name=\"cancel_repair\" string=\"Yes\" type=\"object\" class=\"btn-primary\"/>\n   17:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   18                      </footer>\n   19                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\mrp_repair\\wizard\\mrp_repair_make_invoice_view.xml:\n   15                  <footer>\n   16                      <button name=\"make_invoices\" string=\"Create Invoice\" type=\"object\" class=\"btn-primary\"/>\n   17:                     <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   18                  </footer>\n   19              </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\note\\note.py:\n   14          'sequence': fields.integer('Sequence', help=\"Used to order the note stages\"),\n   15          'user_id': fields.many2one('res.users', 'Owner', help=\"Owner of the note stage.\", required=True, ondelete='cascade'),\n   16:         'fold': fields.boolean('Folded by Default'),\n   17      }\n   18      _order = 'sequence asc'\n   19:     _defaults = {\n   20          'fold': 0,\n   21          'user_id': lambda self, cr, uid, ctx: uid,\n   ..\n   59          return self.write(cr, uid, ids, {'open': True}, context=context)\n   60  \n   61:     #return the default stage for the uid user\n   62:     def _get_default_stage_id(self,cr,uid,context=None):\n   63          ids = self.pool.get('note.stage').search(cr,uid,[('user_id','=',uid)], context=context)\n   64          return ids and ids[0] or False\n   ..\n   96          'tag_ids' : fields.many2many('note.tag','note_tags_rel','note_id','tag_id','Tags'),\n   97      }\n   98:     _defaults = {\n   99          'user_id': lambda self, cr, uid, ctx=None: uid,\n  100          'open' : 1,\n  101:         'stage_id' : _get_default_stage_id,\n  102      }\n  103      _order = 'sequence'\n  ...\n  183                  except ValueError:\n  184                      continue\n  185:                 note_obj.copy(cr, SUPERUSER_ID, stage_id, default={'user_id': user_id}, context=context)\n  186          return user_id\n  187  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\note\\note_view.xml:\n   42        <field name=\"model\">note.note</field>\n   43        <field name=\"arch\" type=\"xml\">\n   44:         <kanban default_group_by=\"stage_id\" class=\"oe_notes oe_kanban_quickcreate_textarea o_kanban_small_column\">\n   45            <field name=\"color\"/>\n   46            <field name=\"sequence\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\pad\\__openerp__.py:\n    9  \n   10  Lets the company customize which Pad installation should be used to link to new\n   11: pads (by default, http://etherpad.com/).\n   12      \"\"\",\n   13      'website': 'https://www.odoo.com/page/notes',\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\pad\\pad.py:\n  101                  vals[field.pad_content_field] = self.pad_get_content(cr, uid, v, context=context)        \n  102  \n  103:     def copy(self, cr, uid, id, default=None, context=None):\n  104:         if not default:\n  105:             default = {}\n  106          for k, field in self._fields.iteritems():\n  107              if hasattr(field,'pad_content_field'):\n  108                  pad = self.pad_generate_url(cr, uid, context)\n  109:                 default[k] = pad.get('url')\n  110:         return super(pad_common, self).copy(cr, uid, id, default, context)\n  111  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\payment\\models\\payment_acquirer.py:\n  122              rec.image = openerp.tools.image_resize_image_big(rec.image_small)\n  123  \n  124:     _defaults = {\n  125          'company_id': lambda self, cr, uid, obj, ctx=None: self.pool['res.users'].browse(cr, uid, uid).company_id.id,\n  126          'environment': 'prod',\n  ...\n  185  \n  186          # reference and amount\n  187:         values.setdefault('reference', reference)\n  188          amount = float_round(amount, 2)\n  189:         values.setdefault('amount', amount)\n  190  \n  191          # currency id\n  192:         currency_id = values.setdefault('currency_id', currency_id)\n  193          if currency_id:\n  194              currency = self.pool['res.currency'].browse(cr, uid, currency_id, context=context)\n  ...\n  275              'type': values.get('type') or 'form',\n  276          })\n  277:         values.setdefault('return_url', False)\n  278  \n  279          # because render accepts view ids but not qweb -> need to use the xml_id\n  ...\n  336          return [(language.code, language.name) for language in languages]\n  337  \n  338:     def _default_partner_country_id(self, cr, uid, context=None):\n  339          comp = self.pool['res.company'].browse(cr, uid, context.get('company_id', 1), context=context)\n  340          return comp.country_id.id\n  ...\n  400      ]\n  401  \n  402:     _defaults = {\n  403          'type': 'form',\n  404          'state': 'draft',\n  405          'partner_lang': 'en_US',\n  406:         'partner_country_id': _default_partner_country_id,\n  407          'reference': lambda s, c, u, ctx=None: s.pool['ir.sequence'].next_by_code(c, u, 'payment.transaction', context=ctx),\n  408      }\n  ...\n  430                  values.update(getattr(self, custom_method_name)(cr, uid, values, context=context))\n  431  \n  432:         # Default value of reference is\n  433          tx_id = super(PaymentTransaction, self).create(cr, uid, values, context=context)\n  434          if not values.get('reference'):\n  ...\n  473                  'partner_address': _partner_format_address(partner and partner.street or '', partner and partner.street2 or ''),\n  474                  'partner_city': partner and partner.city or False,\n  475:                 'partner_country_id': partner and partner.country_id.id or self._default_partner_country_id(cr, uid, context=context),\n  476                  'partner_phone': partner and partner.phone or False,\n  477              }}\n  ...\n  573      }\n  574  \n  575:     _defaults = {\n  576          'active': True\n  577      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\payment\\models\\res_config.py:\n   28      }\n   29  \n   30:     _defaults = {\n   31          'module_payment_transfer': True\n   32      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\payment\\views\\payment_acquirer.xml:\n   16              <field name='view_mode'>tree,form</field>\n   17              <field name='domain'>[('acquirer_id','=',active_id)]</field>\n   18:             <field name=\"context\">{'default_acquirer_id': active_id}</field>\n   19          </record>\n   20  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\payment\\views\\res_partner_view.xml:\n    4  \n    5          <!-- Add creditcard to res.partner -->\n    6:         <record id=\"view_partners_form_payment_defaultcreditcard\" model=\"ir.ui.view\">\n    7:                 <field name=\"name\">view.res.partner.form.payment.defaultcreditcard</field>\n    8                  <field name=\"model\">res.partner</field>\n    9                  <field name=\"inherit_id\" ref=\"account.partner_view_buttons\"/>\n   ..\n   12                          <button type=\"action\" class=\"btn-link\"\n   13                              name=\"%(payment.payment_method_action)d\"\n   14:                             context=\"{'search_default_partner_id': active_id}\">\n   15                              <field name=\"payment_method_count\" widget=\"statinfo\" string=\"Credit card(s)\"/>\n   16                          </button>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\payment_ogone\\models\\ogone.py:\n   18  from openerp.addons.payment_ogone.data import ogone\n   19  from openerp.osv import osv, fields\n   20: from openerp.tools import float_round, DEFAULT_SERVER_DATE_FORMAT\n   21  from openerp.tools.float_utils import float_compare, float_repr\n   22  from openerp.tools.safe_eval import safe_eval\n   ..\n   54          'ogone_shakey_out': fields.char('SHA Key OUT', size=32, required_if_provider='ogone'),\n   55          'ogone_alias_usage': fields.char('Alias Usage', help=\"\"\"If you want to use Ogone Aliases,\n   56:                                                                 this default Alias Usage will be presented to\n   57                                                                  the customer as the reason you want to\n   58                                                                  keep his payment data\"\"\")\n   ..\n  292              vals = {\n  293                  'state': 'done',\n  294:                 'date_validate': datetime.datetime.strptime(data['TRXDATE'], '%m/%d/%y').strftime(DEFAULT_SERVER_DATE_FORMAT),\n  295                  'acquirer_reference': data['PAYID'],\n  296              }\n  ...\n  397              tx.write({\n  398                  'state': 'done',\n  399:                 'date_validate': datetime.date.today().strftime(DEFAULT_SERVER_DATE_FORMAT),\n  400                  'acquirer_reference': tree.get('PAYID'),\n  401              })\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\payment_paypal\\models\\paypal.py:\n   53      }\n   54  \n   55:     _defaults = {\n   56          'paypal_use_ipn': True,\n   57          'fees_active': False,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\payment_transfer\\models\\payment_acquirer.py:\n   43  \n   44      def create(self, cr, uid, values, context=None):\n   45:         \"\"\" Hook in create to create a default post_msg. This is done in create\n   46          to have access to the name and other creation values. If no post_msg\n   47:         or a void post_msg is given at creation, generate a default one. \"\"\"\n   48          if values.get('provider') == 'transfer' and not values.get('post_msg'):\n   49              values['post_msg'] = self._format_transfer_data(cr, uid, context=context)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\point_of_sale\\__openerp__.py:\n   32      'data': [\n   33          'data/report_paperformat.xml',\n   34:         'data/default_barcode_patterns.xml',\n   35          'security/point_of_sale_security.xml',\n   36          'security/ir.model.access.csv',\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\point_of_sale\\account_bank_statement.py:\n   19      _columns = {\n   20          'pos_session_id' : fields.many2one('pos.session', string=\"Session\", copy=False),\n   21:         'account_id': fields.related('journal_id', 'default_debit_account_id', type='many2one', relation='account.account', readonly=True),\n   22      }\n   23  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\point_of_sale\\data\\default_barcode_patterns.xml:\n    4          <record id=\"barcode_rule_cashier\" model=\"barcode.rule\">\n    5              <field name=\"name\">Cashier Barcodes</field>\n    6:             <field name=\"barcode_nomenclature_id\" ref=\"barcodes.default_barcode_nomenclature\"/>\n    7              <field name=\"sequence\">50</field>\n    8              <field name=\"type\">cashier</field>\n    .\n   13          <record id=\"barcode_rule_client\" model=\"barcode.rule\">\n   14              <field name=\"name\">Customer Barcodes</field>\n   15:             <field name=\"barcode_nomenclature_id\" ref=\"barcodes.default_barcode_nomenclature\"/>\n   16              <field name=\"sequence\">40</field>\n   17              <field name=\"type\">client</field>\n   ..\n   22          <record id=\"barcode_rule_discount\" model=\"barcode.rule\">\n   23              <field name=\"name\">Discount Barcodes</field>\n   24:             <field name=\"barcode_nomenclature_id\" ref=\"barcodes.default_barcode_nomenclature\"/>\n   25              <field name=\"sequence\">20</field>\n   26              <field name=\"type\">discount</field>\n   ..\n   31          <record id=\"barcode_rule_price_two_dec\" model=\"barcode.rule\">\n   32              <field name=\"name\">Price Barcodes 2 Decimals</field>\n   33:             <field name=\"barcode_nomenclature_id\" ref=\"barcodes.default_barcode_nomenclature\"/>\n   34              <field name=\"sequence\">14</field>\n   35              <field name=\"type\">price</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\point_of_sale\\data\\report_paperformat.xml:\n    4          <record id=\"paperformat_posreceipt\" model=\"report.paperformat\">\n    5              <field name=\"name\">Point Of Sale Receipt</field>\n    6:             <field name=\"default\" eval=\"True\"/>\n    7              <field name=\"format\">custom</field>\n    8              <field name=\"page_height\">150</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\point_of_sale\\point_of_sale.py:\n  105          'iface_precompute_cash': fields.boolean('Prefill Cash Payment',  help='The payment input will behave similarily to bank payment input, and will be prefilled with the exact due amount'),\n  106          'iface_tax_included':   fields.boolean('Include Taxes in Prices', help='The displayed prices will always include all taxes, even if the taxes have been setup differently'),\n  107:         'iface_start_categ_id': fields.many2one('pos.category','Start Category', help='The point of sale will display this product category by default. If no category is specified, all available products will be shown'),\n  108          'iface_display_categ_images': fields.boolean('Display Category Pictures', help=\"The product categories will be displayed with pictures.\"),\n  109          'cash_control': fields.boolean('Cash Control', help=\"Check the amount of the cashbox at opening and closing.\"),\n  ...\n  177          return result\n  178  \n  179:     def _default_sale_journal(self, cr, uid, context=None):\n  180          company_id = self.pool.get('res.users').browse(cr, uid, uid, context=context).company_id.id\n  181          res = self.pool.get('account.journal').search(cr, uid, [('type', '=', 'sale'), ('company_id', '=', company_id)], limit=1, context=context)\n  182          return res and res[0] or False\n  183  \n  184:     def _default_pricelist(self, cr, uid, context=None):\n  185          res = self.pool.get('product.pricelist').search(cr, uid, [], limit=1, context=context)\n  186          return res and res[0] or False\n  187  \n  188:     def _get_default_location(self, cr, uid, context=None):\n  189          wh_obj = self.pool.get('stock.warehouse')\n  190          user = self.pool.get('res.users').browse(cr, uid, uid, context)\n  ...\n  194          return False\n  195  \n  196:     def _get_default_company(self, cr, uid, context=None):\n  197          company_id = self.pool.get('res.users')._get_company(cr, uid, context=context)\n  198          return company_id\n  199  \n  200:     def _get_default_nomenclature(self, cr, uid, context=None):\n  201          nom_obj = self.pool.get('barcode.nomenclature')\n  202          res = nom_obj.search(cr, uid, [], limit=1, context=context)\n  ...\n  217              return False\n  218  \n  219:     _defaults = {\n  220          'uuid'  : lambda self, cr, uid, context={}: str(uuid.uuid4()),\n  221          'state' : POS_CONFIG_STATE[0][0],\n  222:         'journal_id': _default_sale_journal,\n  223          'group_by' : True,\n  224:         'pricelist_id': _default_pricelist,\n  225          'iface_invoicing': True,\n  226          'iface_print_auto': False,\n  227          'iface_print_skip_screen': True,\n  228:         'stock_location_id': _get_default_location,\n  229:         'company_id': _get_default_company,\n  230:         'barcode_nomenclature_id': _get_default_nomenclature,\n  231          'group_pos_manager_id': _get_group_pos_manager,\n  232          'group_pos_user_id': _get_group_pos_user,\n  ...\n  236          p_type_obj = self.pool.get(\"stock.picking.type\")\n  237          p_type = p_type_obj.browse(cr, uid, picking_type_id, context=context)\n  238:         if p_type.default_location_src_id and p_type.default_location_src_id.usage == 'internal' and p_type.default_location_dest_id and p_type.default_location_dest_id.usage == 'customer':\n  239:             return {'value': {'stock_location_id': p_type.default_location_src_id.id}}\n  240          return False\n  241  \n  ...\n  447      }\n  448  \n  449:     _defaults = {\n  450          'name' : '/',\n  451          'user_id' : lambda obj, cr, uid, context: uid,\n  ...\n  491      def create(self, cr, uid, values, context=None):\n  492          context = dict(context or {})\n  493:         config_id = values.get('config_id', False) or context.get('default_config_id', False)\n  494          if not config_id:\n  495              raise UserError(_(\"You should assign a Point of Sale to your session.\"))\n  ...\n  503          context.update({'company_id': pos_config.company_id.id})\n  504          if not pos_config.journal_id:\n  505:             jid = jobj.default_get(cr, uid, ['journal_id'], context=context)['journal_id']\n  506              if jid:\n  507                  jobj.write(cr, SUPERUSER_ID, [pos_config.id], {'journal_id': jid}, context=context)\n  ...\n  841          'statement_ids': fields.one2many('account.bank.statement.line', 'pos_statement_id', 'Payments', states={'draft': [('readonly', False)]}, readonly=True),\n  842          'pricelist_id': fields.many2one('product.pricelist', 'Pricelist', required=True, states={'draft': [('readonly', False)]}, readonly=True),\n  843:         'partner_id': fields.many2one('res.partner', 'Customer', change_default=True, select=1, states={'draft': [('readonly', False)], 'paid': [('readonly', False)]}),\n  844          'sequence_number': fields.integer('Sequence Number', help='A session-unique sequence number for the order'),\n  845  \n  ...\n  870      }\n  871  \n  872:     def _default_session(self, cr, uid, context=None):\n  873          so = self.pool.get('pos.session')\n  874          session_ids = so.search(cr, uid, [('state','=', 'opened'), ('user_id','=',uid)], context=context)\n  875          return session_ids and session_ids[0] or False\n  876  \n  877:     def _default_pricelist(self, cr, uid, context=None):\n  878:         session_ids = self._default_session(cr, uid, context) \n  879          if session_ids:\n  880              session_record = self.pool.get('pos.session').browse(cr, uid, session_ids, context=context)\n  ...\n  886                      cr, uid, 'point_of_sale.picking_type_posout', context=context)\n  887  \n  888:     _defaults = {\n  889          'user_id': lambda self, cr, uid, context: uid,\n  890          'state': 'draft',\n  ...\n  893          'nb_print': 0,\n  894          'sequence_number': 1,\n  895:         'session_id': _default_session,\n  896          'company_id': lambda self,cr,uid,c: self.pool.get('res.users').browse(cr, uid, uid, c).company_id.id,\n  897:         'pricelist_id': _default_pricelist,\n  898      }\n  899  \n  ...\n  903              session = self.pool['pos.session'].browse(cr, uid, values['session_id'], context=context)\n  904              values['name'] = session.config_id.sequence_id._next()\n  905:             values.setdefault('session_id', session.config_id.pricelist_id.id)\n  906          else:\n  907              # fallback on any pos.order sequence\n  ...\n  937                  destination_id = order.partner_id.property_stock_customer.id\n  938              else:\n  939:                 if (not picking_type) or (not picking_type.default_location_dest_id):\n  940                      customerloc, supplierloc = self.pool['stock.warehouse']._get_partner_locations(cr, uid, [], context=context)\n  941                      destination_id = customerloc.id\n  942                  else:\n  943:                     destination_id = picking_type.default_location_dest_id.id\n  944  \n  945              #All qties negative => Create negative\n  ...\n 1011          date = data.get('payment_date', time.strftime('%Y-%m-%d'))\n 1012          if len(date) > 10:\n 1013:             timestamp = datetime.strptime(date, tools.DEFAULT_SERVER_DATETIME_FORMAT)\n 1014              ts = fields.datetime.context_timestamp(cr, uid, timestamp, context)\n 1015:             date = ts.strftime(tools.DEFAULT_SERVER_DATE_FORMAT)\n 1016          args = {\n 1017              'amount': data['amount'],\n ....\n 1196  \n 1197      def _create_account_move(self, cr, uid, dt, ref, journal_id, company_id, context=None):\n 1198:         start_at_datetime = datetime.strptime(dt, tools.DEFAULT_SERVER_DATETIME_FORMAT)\n 1199          date_tz_user = fields.datetime.context_timestamp(cr, uid, start_at_datetime, context=context)\n 1200:         date_tz_user = date_tz_user.strftime(tools.DEFAULT_SERVER_DATE_FORMAT)\n 1201          return self.pool['account.move'].create(cr, SUPERUSER_ID, {'ref': ref, 'journal_id': journal_id, 'date': date_tz_user}, context=context)\n 1202  \n ....\n 1264                      return\n 1265  \n 1266:                 grouped_data.setdefault(key, [])\n 1267  \n 1268                  # if not have_to_group_by or (not grouped_data[key]):\n ....\n 1466          'name': fields.char('Line No', required=True, copy=False),\n 1467          'notice': fields.char('Discount Notice'),\n 1468:         'product_id': fields.many2one('product.product', 'Product', domain=[('sale_ok', '=', True)], required=True, change_default=True),\n 1469          'price_unit': fields.float(string='Unit Price', digits=0),\n 1470          'qty': fields.float('Quantity', digits_compute=dp.get_precision('Product Unit of Measure')),\n ....\n 1478      }\n 1479  \n 1480:     _defaults = {\n 1481          'name': lambda obj, cr, uid, context: obj.pool.get('ir.sequence').next_by_code(cr, uid, 'pos.order.line', context=context),\n 1482          'qty': lambda *a: 1,\n ....\n 1518      }\n 1519  \n 1520:     # NOTE: there is no 'default image', because by default we don't show\n 1521      # thumbnails for categories. However if we have a thumbnail for at least one\n 1522:     # category, then we display a default image on the other, so that the\n 1523      # buttons have consistent styling.\n 1524:     # In this case, the default image is set by the js code.\n 1525      image = openerp.fields.Binary(\"Image\", attachment=True,\n 1526          help=\"This field holds the image used as image for the cateogry, limited to 1024x1024px.\")\n ....\n 1559      }\n 1560  \n 1561:     _defaults = {\n 1562          'to_weight' : False,\n 1563          'available_in_pos': True,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\point_of_sale\\point_of_sale_dashboard.xml:\n   10          <field name=\"search_view_id\" ref=\"view_pos_session_search\" />\n   11          <field name=\"context\">{\n   12:             'search_default_config_id': [active_id],\n   13:             'default_config_id': active_id}\n   14          </field>\n   15      </record>\n   ..\n   23          <field name=\"search_view_id\" ref=\"view_pos_order_search\"/>\n   24          <field name=\"context\">{\n   25:             'search_default_config_id': [active_id],\n   26:             'default_config_id': active_id}\n   27          </field>\n   28      </record>\n   ..\n   35          <field name=\"search_view_id\" ref=\"view_report_pos_order_search\"/>\n   36          <field name=\"context\">{\n   37:             'search_default_config_id': [active_id],\n   38:             'default_config_id': active_id}\n   39          </field>\n   40      </record>\n   ..\n   74                                          <button t-if=\"record.current_session_state.raw_value === 'opening_control'\" class=\"btn btn-primary\" name=\"open_existing_session_cb\" type=\"object\">Open Session</button>\n   75  \n   76:                                         <button t-if=\"record.current_session_state.raw_value === 'opened'\" class=\"btn btn-default\" name=\"open_existing_session_cb_close\" type=\"object\">Close</button>\n   77  \n   78:                                         <button t-if=\"record.current_session_state.raw_value === 'closing_control'\" class=\"btn btn-default\" name=\"open_existing_session_cb\" type=\"object\">Close</button>\n   79                                          <button t-if=\"!record.current_session_id.raw_value\" class=\"btn btn-primary\" name=\"open_session_cb\" type=\"object\">New Session</button>\n   80                                      </div>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\point_of_sale\\point_of_sale_data.xml:\n   12              <field name=\"name\">PoS Orders</field>\n   13              <field name=\"sequence_id\" ref=\"seq_picking_type_posout\"/>\n   14:             <field name=\"default_location_src_id\" ref=\"stock.stock_location_stock\"/>\n   15:             <field name=\"default_location_dest_id\" ref=\"stock.stock_location_customers\"/>\n   16              <field name=\"warehouse_id\" eval=\"False\"/>\n   17              <field name=\"code\">outgoing</field>\n   ..\n   32              <field name=\"name\">Main</field>\n   33              <field name=\"picking_type_id\" ref=\"picking_type_posout\"/>\n   34:             <field name=\"barcode_nomenclature_id\" ref=\"barcodes.default_barcode_nomenclature\"/>\n   35          </record>\n   36  \n   ..\n   53              <field name=\"uom_id\" ref=\"product.product_uom_unit\"/>\n   54              <field name=\"uom_po_id\" ref=\"product.product_uom_unit\"/>\n   55:             <field name=\"default_code\">MISC</field>\n   56              <field name=\"image\" type=\"base64\" file=\"point_of_sale/static/img/product_product_49-image.jpg\"/>\n   57          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\point_of_sale\\point_of_sale_view.xml:\n   29                          <field name=\"date_order\"/>\n   30                          <field name=\"session_id\" />\n   31:                         <field name=\"partner_id\" on_change=\"onchange_partner_id(partner_id, context)\" domain=\"[('customer', '=', True)]\" context=\"{'search_default_customer':1}\" attrs=\"{'readonly': [('state','=','invoiced')]}\"/>\n   32                          <field name=\"fiscal_position_id\" options=\"{'no_create': True}\"/>\n   33                      </group>\n   ..\n   81                                  <field name=\"company_id\" groups=\"base.group_multi_company\"/>\n   82                                  <field name=\"location_id\" widget=\"selection\" groups=\"stock.group_locations\"/>\n   83:                                 <field name=\"user_id\" context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'point_of_sale.group_pos_user']}\"/>\n   84                                  <field name=\"pricelist_id\" groups=\"product.group_sale_pricelist\"/>\n   85                                  <field name=\"picking_id\" readonly=\"1\"/>\n   ..\n  578              <field name=\"view_type\">form</field>\n  579              <field name=\"view_mode\">tree,form</field>\n  580:             <field name=\"context\" eval=\"{'default_journal_user': 1, 'default_type': 'cash'}\"/>\n  581              <field name=\"domain\">[('journal_user','=', 1)]</field>\n  582              <field name=\"help\" type=\"html\">\n  ...\n  672                          </group>\n  673                          <separator string=\"Available Payment Methods\" colspan=\"4\"/>\n  674:                         <field name=\"journal_ids\" colspan=\"4\" nolabel=\"1\" context=\"{'default_journal_user': 1}\">\n  675                              <tree string=\"Journals\">\n  676                                  <field name=\"code\" />\n  ...\n  767              src_model=\"pos.session\"\n  768              res_model=\"pos.order\"\n  769:             context=\"{'search_default_session_id': active_id, 'default_session_id' : active_id }\" />\n  770  \n  771  \n  ...\n  835                              <field name=\"cash_control\" invisible=\"1\" />\n  836                              <group>\n  837:                                 <field name=\"user_id\" context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'point_of_sale.group_pos_manager', 'base.group_sale_manager']}\"/>\n  838                                  <field name=\"currency_id\" invisible=\"1\"/>\n  839                                  <field name=\"config_id\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\point_of_sale\\report\\pos_details.py:\n   33              for pol in pos.lines:\n   34                  result = {\n   35:                     'code': pol.product_id.default_code,\n   36                      'name': pol.product_id.name,\n   37                      'invoice_id': pos.invoice_id.id, \n   ..\n  143                      line_taxes = line.product_id.taxes_id.compute_all(line.price_unit * (1-(line.discount or 0.0)/100.0), currency, line.qty, product=line.product_id, partner=line.order_id.partner_id or False)\n  144                      for tax in line_taxes['taxes']:\n  145:                         taxes.setdefault(tax['id'], {'name': tax['name'], 'amount':0.0})\n  146                          taxes[tax['id']]['amount'] += tax['amount']\n  147          return taxes.values()\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\point_of_sale\\report\\pos_payment_report.py:\n   24          self.cr.execute(sql)\n   25          if self.cr.fetchone():\n   26:             self.cr.execute (\"select pt.name,pp.default_code as code,pol.qty,pu.name as uom,pol.discount,pol.price_unit, \" \\\n   27                                   \"(pol.price_unit * pol.qty * (1 - (pol.discount) / 100.0)) as total  \" \\\n   28                                   \"from pos_order as po,pos_order_line as pol,product_product as pp,product_template as pt, product_uom as pu \" \\\n   ..\n   31              data=self.cr.dictfetchall()\n   32          else:\n   33:             self.cr.execute (\"select pt.name,pp.default_code as code,pol.qty,pu.name as uom,pol.discount,pol.price_unit, \" \\\n   34                                   \"(pol.price_unit * pol.qty * (1 - (pol.discount) / 100.0)) as total  \" \\\n   35                                   \"from pos_order as po,pos_order_line as pol,product_product as pp,product_template as pt, product_uom as pu  \" \\\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\point_of_sale\\report\\pos_users_product.py:\n   29              a_l.append(r['id'])\n   30          if len(a_l):\n   31:             sql2=\"\"\"SELECT sum(qty) as qty,l.price_unit*sum(l.qty) as amt,t.name as name, p.default_code as code, pu.name as uom from product_product p, product_template t,product_uom pu,pos_order_line l where order_id = %d and p.product_tmpl_id=t.id and l.product_id=p.id and pu.id=t.uom_id group by t.name,p.default_code,pu.name,l.price_unit\"\"\"%(o.id)\n   32              self.cr.execute(sql2)\n   33              data = self.cr.dictfetchall()\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\point_of_sale\\res_users.py:\n    7      _columns = {\n    8          'pos_security_pin': fields.char('Security PIN',size=32, help='A Security PIN used to protect sensible functionality in the Point of Sale'),\n    9:         'pos_config' : fields.many2one('pos.config', 'Default Point of Sale', domain=[('state', '=', 'active')]),\n   10      }\n   11  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\point_of_sale\\views\\templates.xml:\n   51                  var token = \"<t t-esc=\"request.csrf_token(None)\"/>\";\n   52                  require('web.core').csrf_token = token;\n   53:                 require('qweb').default_dict.csrf_token = token;\n   54              });\n   55          </script>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\point_of_sale\\wizard\\pos_confirm.xml:\n   12                      <footer>\n   13                          <button name=\"action_confirm\" string=\"Generate Entries\" type=\"object\" class=\"btn-primary\"/>\n   14:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   15                      </footer>\n   16                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\point_of_sale\\wizard\\pos_details.py:\n   15          'user_ids': fields.many2many('res.users', 'pos_details_report_user_rel', 'user_id', 'wizard_id', 'Salespeople'),\n   16      }\n   17:     _defaults = {\n   18          'date_start': fields.date.context_today,\n   19          'date_end': fields.date.context_today,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\point_of_sale\\wizard\\pos_details.xml:\n   16                      <footer>\n   17                          <button name=\"print_report\" type=\"object\" string=\"Print Report\" class=\"btn-primary\"/>\n   18:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   19                      </footer>\n   20                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\point_of_sale\\wizard\\pos_discount.py:\n   11          'discount': fields.float('Discount (%)', required=True, digits=(16,2)),\n   12      }\n   13:     _defaults = {\n   14          'discount': 5,\n   15      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\point_of_sale\\wizard\\pos_discount.xml:\n   14                      <footer>\n   15                          <button name=\"apply_discount\" string=\"Apply Discount\" type=\"object\" class=\"btn-primary\"/>\n   16:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   17                      </footer>\n   18                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\point_of_sale\\wizard\\pos_open_statement.xml:\n   13                      <footer>\n   14                          <button name=\"open_statement\" type=\"object\" string=\"Open Registers\" class=\"btn-primary\"/>\n   15:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   16                      </footer>\n   17                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\point_of_sale\\wizard\\pos_payment.py:\n   75          }\n   76  \n   77:     def _default_journal(self, cr, uid, context=None):\n   78          if not context:\n   79              context = {}\n   ..\n   89          return False\n   90  \n   91:     def _default_amount(self, cr, uid, context=None):\n   92          order_obj = self.pool.get('pos.order')\n   93          active_id = context and context.get('active_id', False)\n   ..\n  103          'payment_date': fields.date('Payment Date', required=True),\n  104      }\n  105:     _defaults = {\n  106:         'journal_id' : _default_journal,\n  107          'payment_date': lambda *a: time.strftime('%Y-%m-%d %H:%M:%S'),\n  108:         'amount': _default_amount,\n  109      }\n  110  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\point_of_sale\\wizard\\pos_payment.xml:\n   15                  <footer>\n   16                      <button name=\"check\" string=\"Make Payment\" type=\"object\" class=\"btn-primary\"/>\n   17:                     <button special=\"cancel\" string=\"Cancel\" class=\"btn-default\"/>\n   18                  </footer>\n   19              </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\portal\\portal_demo.xml:\n   21              <field name=\"signature\"><![CDATA[<span>--<br/>\n   22  Mr Demo Portal</span>]]></field>\n   23:             <!-- Avoid auto-including this user in any default group -->\n   24              <field name=\"groups_id\" eval=\"[(5,)]\"/>\n   25          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\portal\\tests\\test_portal.py:\n   15          # Do: Chell creates a mail.compose.message record on Pigs, because he uses the wizard\n   16          compose = self.env['mail.compose.message'].with_context({\n   17:             'default_composition_mode': 'comment',\n   18:             'default_model': 'mail.channel',\n   19:             'default_res_id': self.group_pigs.id\n   20          }).sudo(self.user_portal).create({\n   21              'subject': 'Subject',\n   ..\n   26          # Do: Chell replies to a Pigs message using the composer\n   27          compose = self.env['mail.compose.message'].with_context({\n   28:             'default_composition_mode': 'comment',\n   29:             'default_parent_id': port_msg.id\n   30          }).sudo(self.user_portal).create({\n   31              'subject': 'Subject',\n   ..\n   36      def test_invite_email_portal(self):\n   37          group_pigs = self.group_pigs\n   38:         base_url = self.env['ir.config_parameter'].get_param('web.base.url', default='')\n   39          # Carine Poilvache, with email, should receive emails for comments and emails\n   40          partner_carine = self.env['res.partner'].create({'name': 'Carine Poilvache', 'email': 'c@c'})\n   ..\n   43          self._init_mock_build_email()\n   44          mail_invite = self.env['mail.wizard.invite'].with_context({\n   45:             'default_res_model': 'mail.channel',\n   46:             'default_res_id': group_pigs.id}).create({\n   47              'partner_ids': [(4, partner_carine.id)], 'send_mail': True})\n   48          mail_invite.add_followers()\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\portal\\wizard\\portal_wizard.py:\n   38      }\n   39  \n   40:     def _default_portal(self, cr, uid, context):\n   41          portal_ids = self.pool.get('res.groups').search(cr, uid, [('is_portal', '=', True)])\n   42          return portal_ids and portal_ids[0] or False\n   43  \n   44:     _defaults = {\n   45:         'portal_id': _default_portal,\n   46      }\n   47  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\portal\\wizard\\portal_wizard_view.xml:\n   36                      <footer>\n   37                          <button string=\"Apply\" name=\"action_apply\" type=\"object\" class=\"btn-primary\"/>\n   38:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   39                      </footer>\n   40                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\portal_sale\\__openerp__.py:\n   24  If online payment acquirers are configured, portal users will also be given the opportunity to\n   25  pay online on their Sale Orders and Invoices that are not paid yet. Paypal is included\n   26: by default, you simply need to configure a Paypal account in the Accounting/Invoicing settings.\n   27      \"\"\",\n   28      'depends': ['sale', 'portal', 'payment'],\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\portal_sale\\portal_sale.py:\n   17              # assume context is still a dict, as prepared by super\n   18              ctx = action_dict['context']\n   19:             ctx['default_template_id'] = template_id\n   20:             ctx['default_use_template'] = True\n   21          except Exception:\n   22              pass\n   ..\n   61              # assume context is still a dict, as prepared by super\n   62              ctx = action_dict['context']\n   63:             ctx['default_template_id'] = template_id\n   64:             ctx['default_use_template'] = True\n   65          except Exception:\n   66              pass\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\pos_cache\\models\\pos_cache.py:\n   24      def refresh_cache(self):\n   25          products = self.env['product.product'].search(self.get_product_domain())\n   26:         prod_ctx = products.with_context(pricelist=self.config_id.pricelist_id.id, display_default_code=False,\n   27                                           lang=self.compute_user_id.lang)\n   28          prod_ctx = prod_ctx.sudo(self.compute_user_id.id)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\pos_discount\\discount.py:\n   14      _columns = {\n   15          'iface_discount': fields.boolean('Order Discounts', help='Allow the cashier to give discounts on the whole order.'),\n   16:         'discount_pc': fields.float('Discount Percentage', help='The default discount percentage'),\n   17          'discount_product_id': fields.many2one('product.product', 'Discount Product', domain=\"[('available_in_pos', '=', True)]\", help='The product used to model the discount'),\n   18      }\n   19:     _defaults = {\n   20          'iface_discount': True,\n   21          'discount_pc': 10,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\pos_mercury\\data\\pos_mercury_data.xml:\n    4          <record id=\"barcode_rule_credit\" model=\"barcode.rule\">\n    5              <field name=\"name\">Magnetic Credit Card</field>\n    6:             <field name=\"barcode_nomenclature_id\" ref=\"barcodes.default_barcode_nomenclature\"/>\n    7              <field name=\"sequence\">85</field>\n    8              <field name=\"type\">credit</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\pos_mercury\\models\\pos_mercury_transaction.py:\n   10  from openerp import models, api, service\n   11  from openerp.exceptions import UserError\n   12: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT\n   13  \n   14  class MercuryTransaction(models.Model):\n   ..\n  110      @api.model\n  111      def cleanup_old_tokens(self):\n  112:         expired_creation_date = (date.today() - timedelta(days=6 * 30)).strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n  113  \n  114          for order in self.env['pos.order'].search([('create_date', '<', expired_creation_date)]):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\pos_reprint\\reprint.py:\n   10          'iface_reprint': fields.boolean('Receipt Reprinting', help=\"This allows you to reprint a previously printed receipt.\"),\n   11          }\n   12:     _defaults = {\n   13          'iface_reprint': False,\n   14      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\pos_restaurant\\restaurant.py:\n   22      }\n   23  \n   24:     _defaults = {\n   25          'sequence': 1,\n   26          'background_color': 'rgb(210, 210, 210)',\n   ..\n   40          'width':        fields.float('Width',   help=\"The table's width in pixels\"),\n   41          'height':       fields.float('Height',  help=\"The table's height in pixels\"),\n   42:         'seats':        fields.integer('Seats', help=\"The default number of customer served at this table.\"),\n   43          'color':        fields.char('Color',    help=\"The table's color, expressed as a valid 'background' CSS property value\"),\n   44          'active':       fields.boolean('Active',help='If false, the table is deactivated and will not be available in the point of sale'),\n   ..\n   46      }\n   47  \n   48:     _defaults = {\n   49          'shape': 'square',\n   50          'seats': 1,\n   ..\n   84      }\n   85  \n   86:     _defaults = {\n   87          'name' : 'Printer',\n   88      }\n   ..\n   97          'printer_ids':     fields.many2many('restaurant.printer','pos_config_printer_rel', 'config_id','printer_id',string='Order Printers'),\n   98      }\n   99:     _defaults = {\n  100          'iface_splitbill': False,\n  101          'iface_printbill': False,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\procurement\\procurement.py:\n   48          'procurement_ids': fields.one2many('procurement.order', 'group_id', 'Procurements'),\n   49      }\n   50:     _defaults = {\n   51          'name': lambda self, cr, uid, c: self.pool.get('ir.sequence').next_by_code(cr, uid, 'procurement.group') or '',\n   52          'move_type': lambda self, cr, uid, c: 'direct'\n   ..\n   76      }\n   77  \n   78:     _defaults = {\n   79          'group_propagation_option': 'propagate',\n   80          'sequence': 20,\n   ..\n  119      }\n  120  \n  121:     _defaults = {\n  122          'state': 'confirmed',\n  123          'priority': '1',\n  124          'date_planned': lambda *a: time.strftime('%Y-%m-%d %H:%M:%S'),\n  125:         'company_id': lambda self, cr, uid, c: self.pool.get('res.company')._company_default_get(cr, uid, 'procurement.order', context=c)\n  126      }\n  127  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\procurement\\procurement_view.xml:\n  133              <field name=\"view_type\">form</field>\n  134              <field name=\"view_mode\">tree,form</field>\n  135:             <field name=\"context\">{'search_default_exceptions':1}</field>\n  136              <field name=\"search_view_id\" ref=\"view_procurement_filter\"/>\n  137              <field name=\"help\" type=\"html\">\n  ...\n  159              <field name=\"view_id\" eval=\"False\"/>\n  160              <field name=\"search_view_id\" ref=\"view_procurement_filter\"/>\n  161:             <field name=\"context\">{'search_default_current':1}</field>\n  162              <field name=\"help\" type=\"html\">\n  163                <p class=\"oe_view_nocontent_create\">\n  ...\n  184              <field name=\"view_type\">form</field>\n  185              <field name=\"search_view_id\" ref=\"view_procurement_filter\"/>\n  186:             <field name=\"context\">{'search_default_current':1}</field>\n  187              <field name=\"domain\">[('product_id.product_tmpl_id.id', '=', active_id)]</field>\n  188              <field name=\"help\" type=\"html\">\n  ...\n  210              <field name=\"view_type\">form</field>\n  211              <field name=\"search_view_id\" ref=\"view_procurement_filter\"/>\n  212:             <field name=\"context\">{'search_default_current':1, 'default_product_id': active_id}</field>\n  213              <field name=\"domain\">[('product_id.id', '=', active_id)]</field>\n  214              <field name=\"help\" type=\"html\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\procurement\\wizard\\schedulers_all_view.xml:\n   15                      <footer>\n   16                          <button name=\"procure_calculation\" string=\"Run Schedulers\" type=\"object\" class=\"btn-primary\"/>\n   17:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   18                      </footer>\n   19                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product\\partner.py:\n   13              relation='product.pricelist', \n   14              string=\"Sale Pricelist\", \n   15:             help=\"This pricelist will be used, instead of the default one, for sales to the current partner\"),\n   16      }\n   17  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product\\pricelist.py:\n    6  \n    7  from openerp import tools\n    8: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT\n    9  from openerp.osv import fields, osv\n   10  from openerp.tools.translate import _\n   ..\n   86          return comp.currency_id.id\n   87  \n   88:     _defaults = {\n   89          'active': lambda *a: 1,\n   90          \"currency_id\": _get_currency\n   ..\n  106              subres = self._price_rule_get_multi(cr, uid, pricelist, products_by_qty_by_partner, context=context)\n  107              for product_id, price in subres.items():\n  108:                 results.setdefault(product_id, {})\n  109                  results[product_id][pricelist.id] = price\n  110          return results\n  ...\n  115      def _price_rule_get_multi(self, cr, uid, pricelist, products_by_qty_by_partner, context=None):\n  116          context = context or {}\n  117:         date = context.get('date') and context['date'][0:10] or time.strftime(DEFAULT_SERVER_DATE_FORMAT)\n  118          products = map(lambda x: x[0], products_by_qty_by_partner)\n  119          product_uom_obj = self.pool.get('product.uom')\n  ...\n  171                          cr, uid, context['uom'], qty, product.uom_id.id)\n  172                  except UserError:\n  173:                     # Ignored - incompatible UoM in context, use default product UoM\n  174                      pass\n  175  \n  ...\n  284              help=\"For the rule to apply, bought/sold quantity must be greater \"\n  285                \"than or equal to the minimum quantity specified in this field.\\n\"\n  286:               \"Expressed in the default unit of measure of the product.\"\n  287              ),\n  288          'applied_on': fields.selection([('3_global', 'Global'),('2_product_category', ' Product Category'), ('1_product', 'Product'), ('0_product_variant', 'Product Variant')], string=\"Apply On\", required=True,\n  ...\n  312          'date_start': fields.date('Start Date', help=\"Starting date for the pricelist item validation\"),\n  313          'date_end': fields.date('End Date', help=\"Ending valid for the pricelist item validation\"),\n  314:         'compute_price': fields.selection([('fixed', 'Fix Price'), ('percentage', 'Percentage (discount)'), ('formula', 'Formula')], select=True, default='fixed'),\n  315          'fixed_price': fields.float('Fixed Price'),\n  316          'percent_price': fields.float('Percentage Price'),\n  317      }\n  318  \n  319:     _defaults = {\n  320          'base': 'list_price',\n  321          'min_quantity': 1,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product\\pricelist_view.xml:\n   60                      </group>\n   61                      <div class=\"oe_grey\" groups=\"product.group_uom\">\n   62:                         <p>The computed price is expressed in the default Unit of Measure of the product.</p>\n   63                      </div>\n   64                      <group col=\"6\" attrs=\"{'invisible':[('compute_price', '!=', 'formula')]}\">\n   ..\n  133                          <div groups=\"product.group_pricelist_item\">\n  134                              <separator string=\"Pricelist Items\"/>\n  135:                             <field name=\"item_ids\" nolabel=\"1\" context=\"{'default_base':'list_price'}\">\n  136                                  <tree string=\"Pricelist Items\">\n  137                                      <field name=\"name\" string=\"Applicable On\"/>\n  ...\n  154              <field name=\"view_mode\">tree,form</field>\n  155              <field name=\"search_view_id\" ref=\"product_pricelist_view_search\" />\n  156:             <field name=\"context\">{\"default_base\":'list_price'}</field>\n  157              <field name=\"help\" type=\"html\">\n  158                <p class=\"oe_view_nocontent_create\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product\\product.py:\n    9  from openerp.osv import osv, fields, expression\n   10  from openerp.tools.translate import _\n   11: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT, DEFAULT_SERVER_DATE_FORMAT\n   12  import psycopg2\n   13  \n   ..\n   53          # look for the category based on the english name, i.e. no context on purpose!\n   54          # TODO: should find a way to have it translated but not created until actually used\n   55:         if not context.get('default_category_id'):\n   56              categ_misc = 'Unsorted/Imported Units'\n   57              categ_id = uom_categ.search(cr, uid, [('name', '=', categ_misc)])\n   ..\n   93      }\n   94  \n   95:     _defaults = {\n   96          'active': 1,\n   97          'rounding': 0.01,\n   ..\n  120          if from_unit.category_id.id != to_unit.category_id.id:\n  121              if context.get('raise-exception', True):\n  122:                 raise UserError(_('Conversion from Product UoM %s to Default UoM %s is not possible as they both belong to different Category!.') % (from_unit.name,to_unit.name))\n  123              else:\n  124                  return qty\n  ...\n  212  \n  213  \n  214:     _defaults = {\n  215          'type' : 'normal',\n  216      }\n  ...\n  242      }\n  243  \n  244:     def _get_default_company(self, cr, uid, context=None):\n  245          if 'force_company' in context:\n  246              return context['force_company']\n  ...\n  250              return company.id if company else False\n  251  \n  252:     _defaults = {\n  253          'datetime': fields.datetime.now,\n  254:         'company_id': _get_default_company,\n  255      }\n  256  \n  ...\n  323          ('value_company_uniq', 'unique (name,attribute_id)', 'This attribute value already exists !')\n  324      ]\n  325:     _defaults = {\n  326          'price_extra': 0.0,\n  327      }\n  ...\n  408                      res[id] = price.get(id, 0.0)\n  409          for id in ids:\n  410:             res.setdefault(id, 0.0)\n  411          return res\n  412  \n  ...\n  487              help=\"A consumable is a product for which you don't manage stock, a service is a non-material product provided by a company or an individual.\"),\n  488          'rental': fields.boolean('Can be Rent'),\n  489:         'categ_id': fields.many2one('product.category','Internal Category', required=True, change_default=True, domain=\"[('type','=','normal')]\" ,help=\"Select category for the current product\"),\n  490          'price': fields.function(_product_template_price, fnct_inv=_set_product_template_price, type='float', string='Price', digits_compute=dp.get_precision('Product Price')),\n  491          'currency_id': fields.function(_product_currency, type='many2one', relation='res.currency', string='Currency'),\n  ...\n  493          'lst_price' : fields.related('list_price', type=\"float\", string='Public Price', digits_compute=dp.get_precision('Product Price')),\n  494          'standard_price': fields.function(_compute_product_template_field, fnct_inv=_set_product_template_field, fnct_search=_search_by_standard_price, multi='_compute_product_template_field', type='float', string='Cost', digits_compute=dp.get_precision('Product Price'),\n  495:                                           help=\"Cost of the product, in the default unit of measure of the product.\", groups=\"base.group_user\"),\n  496          'volume': fields.function(_compute_product_template_field, fnct_inv=_set_product_template_field, multi='_compute_product_template_field', type='float', string='Volume', help=\"The volume in m3.\", store={\n  497              _name: (lambda s,c,u,i,t: i, ['product_variant_ids'], 10),\n  ...\n  509              ('end','End of Lifecycle'),\n  510              ('obsolete','Obsolete')], 'Status'),\n  511:         'uom_id': fields.many2one('product.uom', 'Unit of Measure', required=True, help=\"Default Unit of Measure used for all stock operation.\"),\n  512:         'uom_po_id': fields.many2one('product.uom', 'Purchase Unit of Measure', required=True, help=\"Default Unit of Measure used for purchase orders. It must be in the same category than the default unit of measure.\"),\n  513          'company_id': fields.many2one('res.company', 'Company', select=1),\n  514          'packaging_ids': fields.one2many(\n  ...\n  528          # related to display product product information if is_product_variant\n  529          'barcode': fields.related('product_variant_ids', 'barcode', type='char', string='Barcode', oldname='ean13'),\n  530:         'default_code': fields.related('product_variant_ids', 'default_code', type='char', string='Internal Reference'),\n  531          'item_ids': fields.one2many('product.pricelist.item', 'product_tmpl_id', 'Pricelist Items'),\n  532      }\n  ...\n  593          return self.pool[\"product.uom\"].search(cr, uid, [], limit=1, order='id')[0]\n  594  \n  595:     def _default_category(self, cr, uid, context=None):\n  596          if context is None:\n  597              context = {}\n  ...\n  694          if vals.get('barcode'):\n  695              related_vals['barcode'] = vals['barcode']\n  696:         if vals.get('default_code'):\n  697:             related_vals['default_code'] = vals['default_code']\n  698          if vals.get('standard_price'):\n  699              related_vals['standard_price'] = vals['standard_price']\n  ...\n  720          return res\n  721  \n  722:     def copy(self, cr, uid, id, default=None, context=None):\n  723:         if default is None:\n  724:             default = {}\n  725          template = self.browse(cr, uid, id, context=context)\n  726:         default['name'] = _(\"%s (copy)\") % (template['name'])\n  727:         return super(product_template, self).copy(cr, uid, id, default=default, context=context)\n  728  \n  729:     _defaults = {\n  730:         'company_id': lambda s,cr,uid,c: s.pool.get('res.company')._company_default_get(cr, uid, 'product.template', context=c),\n  731          'list_price': 1,\n  732          'standard_price': 0.0,\n  ...\n  734          'uom_id': _get_uom_id,\n  735          'uom_po_id': _get_uom_id,\n  736:         'categ_id' : _default_category,\n  737          'type' : 'consu',\n  738          'active': True,\n  ...\n  747  \n  748      _constraints = [\n  749:         (_check_uom, 'Error: The default Unit of Measure and the purchase Unit of Measure must be in the same category.', ['uom_id', 'uom_po_id']),\n  750      ]\n  751  \n  ...\n  789      _inherits = {'product.template': 'product_tmpl_id'}\n  790      _inherit = ['mail.thread']\n  791:     _order = 'default_code,name_template'\n  792  \n  793      def _product_price(self, cr, uid, ids, name, arg, context=None):\n  ...\n  814                      res[id] = price.get(id, 0.0)\n  815          for id in ids:\n  816:             res.setdefault(id, 0.0)\n  817          return res\n  818  \n  ...\n  865          for supinfo in product.seller_ids:\n  866              if supinfo.name.id == partner_id:\n  867:                 return {'code': supinfo.product_code or product.default_code, 'name': supinfo.product_name or product.name}\n  868:         res = {'code': product.default_code, 'name': product.name}\n  869          return res\n  870  \n  ...\n  928          return result\n  929  \n  930:     def _select_seller(self, cr, uid, product_id, partner_id=False, quantity=0.0, date=time.strftime(DEFAULT_SERVER_DATE_FORMAT), uom_id=False, context=None):\n  931          if context is None:\n  932              context = {}\n  ...\n  959          'code': fields.function(_product_code, type='char', string='Internal Reference'),\n  960          'partner_ref' : fields.function(_product_partner_ref, type='char', string='Customer ref'),\n  961:         'default_code' : fields.char('Internal Reference', select=True),\n  962          'active': fields.boolean('Active', help=\"If unchecked, it will allow you to hide the product without removing it.\"),\n  963          'product_tmpl_id': fields.many2one('product.template', 'Product Template', required=True, ondelete=\"cascade\", select=True, auto_join=True),\n  ...\n  985          'standard_price': fields.property(type = 'float', digits_compute=dp.get_precision('Product Price'), \n  986                                            help=\"Cost of the product template used for standard stock valuation in accounting and used as a base price on purchase orders. \"\n  987:                                                \"Expressed in the default unit of measure of the product.\",\n  988                                            groups=\"base.group_user\", string=\"Cost\"),\n  989          'volume': fields.float('Volume', help=\"The volume in m3.\"),\n  ...\n  991      }\n  992  \n  993:     _defaults = {\n  994          'active': 1,\n  995          'color': 0,\n  ...\n 1058          def _name_get(d):\n 1059              name = d.get('name','')\n 1060:             code = context.get('display_default_code', True) and d.get('default_code',False) or False\n 1061              if code:\n 1062                  name = '[%s] %s' % (code,name)\n ....\n 1092                                'id': product.id,\n 1093                                'name': seller_variant or name,\n 1094:                               'default_code': s.product_code or product.default_code,\n 1095                                }\n 1096                      temp = _name_get(mydict)\n ....\n 1101                            'id': product.id,\n 1102                            'name': name,\n 1103:                           'default_code': product.default_code,\n 1104                            }\n 1105                  result.append(_name_get(mydict))\n ....\n 1115              ids = []\n 1116              if operator in positive_operators:\n 1117:                 ids = self.search(cr, user, [('default_code','=',name)]+ args, limit=limit, context=context)\n 1118                  if not ids:\n 1119                      ids = self.search(cr, user, [('barcode','=',name)]+ args, limit=limit, context=context)\n ....\n 1123                  # OR operator (and given the fact that the 'name' lookup results come from the ir.translation table\n 1124                  # Performing a quick memory merge of ids in Python will give much better performance\n 1125:                 ids = self.search(cr, user, args + [('default_code', operator, name)], limit=limit, context=context)\n 1126                  if not limit or len(ids) < limit:\n 1127                      # we may underrun the limit because of dupes in the results, that's fine\n ....\n 1129                      ids += self.search(cr, user, args + [('name', operator, name), ('id', 'not in', ids)], limit=limit2, context=context)\n 1130              elif not ids and operator in expression.NEGATIVE_TERM_OPERATORS:\n 1131:                 ids = self.search(cr, user, args + ['&', ('default_code', operator, name), ('name', operator, name)], limit=limit, context=context)\n 1132              if not ids and operator in positive_operators:\n 1133                  ptrn = re.compile('(\\[(.*?)\\])')\n 1134                  res = ptrn.search(name)\n 1135                  if res:\n 1136:                     ids = self.search(cr, user, [('default_code','=', res.group(2))] + args, limit=limit, context=context)\n 1137              # still no results, partner in context: search on supplier info as last hope to find something\n 1138              if not ids and context.get('partner_id'):\n ....\n 1158          return self.pool.get(\"product.template\")._price_get(cr, uid, products, ptype=ptype, context=context)\n 1159  \n 1160:     def copy(self, cr, uid, id, default=None, context=None):\n 1161          if context is None:\n 1162              context={}\n 1163  \n 1164:         if default is None:\n 1165:             default = {}\n 1166  \n 1167          product = self.browse(cr, uid, id, context)\n 1168          if context.get('variant'):\n 1169              # if we copy a variant or create one, we keep the same template\n 1170:             default['product_tmpl_id'] = product.product_tmpl_id.id\n 1171:         elif 'name' not in default:\n 1172:             default['name'] = _(\"%s (copy)\") % (product.name,)\n 1173  \n 1174:         return super(product_product, self).copy(cr, uid, id, default=default, context=context)\n 1175  \n 1176      def search(self, cr, uid, args, offset=0, limit=None, order=None, context=None, count=False):\n 1177          if context is None:\n 1178              context = {}\n 1179:         if context.get('search_default_categ_id'):\n 1180:             args.append((('categ_id', 'child_of', context['search_default_categ_id'])))\n 1181          return super(product_product, self).search(cr, uid, args, offset=offset, limit=limit, order=order, context=context, count=count)\n 1182  \n ....\n 1223              context = {}\n 1224          if date is None:\n 1225:             date = time.strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n 1226          price_history_obj = self.pool.get('product.price.history')\n 1227          history_ids = price_history_obj.search(cr, uid, [('company_id', '=', company_id), ('product_id', '=', product_id), ('datetime', '<=', date)], limit=1)\n ....\n 1241      _columns = {\n 1242          'name' : fields.char('Packaging Type', required=True),\n 1243:         'sequence': fields.integer('Sequence', help=\"The first in the sequence is the default one.\"),\n 1244          'product_tmpl_id': fields.many2one('product.template', string='Product'),\n 1245          'qty' : fields.float('Quantity by Package',\n 1246              help=\"The total number of products you can put by pallet or box.\"),\n 1247      }\n 1248:     _defaults = {\n 1249          'sequence' : 1,\n 1250      }\n ....\n 1271          'sequence': fields.integer('Sequence', help=\"Assigns the priority to the list of product vendor.\"),\n 1272          'product_uom': fields.related('product_tmpl_id', 'uom_po_id', type='many2one', relation='product.uom', string=\"Vendor Unit of Measure\", readonly=\"1\", help=\"This comes from the product form.\"),\n 1273:         'min_qty': fields.float('Minimal Quantity', required=True, help=\"The minimal quantity to purchase from this vendor, expressed in the vendor Product Unit of Measure if not any, in the default unit of measure of the product otherwise.\"),\n 1274:         'qty': fields.function(_calc_qty, store=True, type='float', string='Quantity', multi=\"qty\", help=\"This is a quantity which is converted into Default Unit of Measure.\"),\n 1275          'price': fields.float('Price', required=True, digits_compute=dp.get_precision('Product Price'), help=\"The price to purchase a product\"),\n 1276          'currency_id': fields.many2one('res.currency', 'Currency', required=True),\n ....\n 1282          'product_id': fields.many2one('product.product', string='Product Variant', help=\"When this field is filled in, the vendor data will only apply to the variant.\"),\n 1283      }\n 1284:     _defaults = {\n 1285          'min_qty': 0.0,\n 1286          'sequence': 1,\n 1287          'delay': 1,\n 1288          'price': 0.0,\n 1289:         'company_id': lambda self, cr, uid, c: self.pool.get('res.company')._company_default_get(cr, uid, 'product.supplierinfo', context=c),\n 1290          'currency_id': lambda self, cr, uid, context: self.pool['res.users'].browse(cr, uid, uid, context=context).company_id.currency_id.id,\n 1291      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product\\product_demo.xml:\n   92  512MB RAM\n   93  HDD SH-1</field>\n   94:             <field name=\"default_code\">PCSC234</field>\n   95          </record>\n   96  \n   ..\n  140  Dual-core A5 with quad-core graphics\n  141  FaceTime HD Camera, 1.2 MP Photos</field>\n  142:             <field name=\"default_code\">A2323</field>\n  143              <field name=\"attribute_value_ids\" eval=\"[(6,0,[ref('product.product_attribute_value_1'), ref('product.product_attribute_value_3')])]\"/>\n  144          </record>\n  145          <record id=\"product_product_4b\" model=\"product.product\">\n  146:             <field name=\"default_code\">A2324</field>\n  147              <field name=\"product_tmpl_id\" ref=\"product_product_4_product_template\"/>\n  148              <field name=\"attribute_value_ids\" eval=\"[(6,0,[ref('product.product_attribute_value_1'), ref('product.product_attribute_value_4')])]\"/>\n  149          </record>\n  150          <record id=\"product_product_4c\" model=\"product.product\">\n  151:             <field name=\"default_code\">A2325</field>\n  152              <field name=\"product_tmpl_id\" ref=\"product_product_4_product_template\"/>\n  153              <field name=\"attribute_value_ids\" eval=\"[(6,0,[ref('product.product_attribute_value_2'), ref('product.product_attribute_value_3')])]\"/>\n  154          </record>\n  155          <record id=\"product_product_4d\" model=\"product.product\">\n  156:             <field name=\"default_code\">A2326</field>\n  157              <field name=\"product_tmpl_id\" ref=\"product_product_4_product_template\"/>\n  158              <field name=\"attribute_value_ids\" eval=\"[(6,0,[ref('product.product_attribute_value_2'), ref('product.product_attribute_value_4')])]\"/>\n  ...\n  200              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  201              <field name=\"description_sale\">Bose's smallest portable Bluetooth speaker</field>\n  202:             <field name=\"default_code\">B3423</field>\n  203          </record>\n  204  \n  ...\n  213              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  214              <field name=\"description\">Custom computer shipped in kit.</field>\n  215:             <field name=\"default_code\">B3424</field>\n  216          </record>\n  217  \n  ...\n  224              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  225              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  226:             <field name=\"default_code\">A1232</field>\n  227              <field name='weight'>0.330</field>\n  228          </record>\n  ...\n  236              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  237              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  238:             <field name=\"default_code\">A8767</field>\n  239          </record>\n  240  \n  ...\n  247              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  248              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  249:             <field name=\"default_code\">A1090</field>\n  250              <field name='weight'>9.54</field>\n  251          </record>\n  ...\n  259              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  260              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  261:             <field name=\"default_code\">AK789</field>\n  262          </record>\n  263  \n  ...\n  270              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  271              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  272:             <field name=\"default_code\">M-Opt</field>\n  273          </record>\n  274  \n  ...\n  283              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  284              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  285:             <field name=\"default_code\">A6678</field>\n  286              <field name=\"attribute_value_ids\" eval=\"[(6,0,[ref('product.product_attribute_value_1')])]\"/>\n  287          </record>\n  288          <record id=\"product_product_11b\" model=\"product.product\">\n  289:             <field name=\"default_code\">A6679</field>\n  290              <field name=\"product_tmpl_id\" ref=\"product_product_11_product_template\"/>\n  291              <field name=\"attribute_value_ids\" eval=\"[(6,0,[ref('product.product_attribute_value_2')])]\"/>\n  ...\n  318              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  319              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  320:             <field name=\"default_code\">M-Wir</field>\n  321          </record>\n  322  \n  ...\n  329              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  330              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  331:             <field name=\"default_code\">RAM-SR5</field>\n  332          </record>\n  333  \n  ...\n  340              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  341              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  342:             <field name=\"default_code\">RAM-SR2</field>\n  343          </record>\n  344  \n  ...\n  351              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  352              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  353:             <field name=\"default_code\">RAM-SR3</field>\n  354          </record>\n  355  \n  ...\n  362              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  363              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  364:             <field name=\"default_code\">C-Case</field>\n  365          </record>\n  366  \n  ...\n  373              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  374              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  375:             <field name=\"default_code\">HDD-SH1</field>\n  376          </record>\n  377  \n  ...\n  384              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  385              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  386:             <field name=\"default_code\">HDD-SH2</field>\n  387          </record>\n  388  \n  ...\n  396              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  397              <field name=\"description\">On demand hard-disk having capacity based on requirement.</field>\n  398:             <field name=\"default_code\">HDD-DEM</field>\n  399          </record>\n  400  \n  ...\n  407              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  408              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  409:             <field name=\"default_code\">MBi9</field>\n  410          </record>\n  411  \n  ...\n  418              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  419              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  420:             <field name=\"default_code\">MBa20</field>\n  421          </record>\n  422  \n  ...\n  429              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  430              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  431:             <field name=\"default_code\">CPUi5</field>\n  432          </record>\n  433  \n  ...\n  440              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  441              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  442:             <field name=\"default_code\">CPUa8</field>\n  443          </record>\n  444  \n  ...\n  451              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  452              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  453:             <field name=\"default_code\">CARD</field>\n  454          </record>\n  455  \n  ...\n  466  Standard-1294P Processor\n  467  QWERTY keyboard</field>\n  468:             <field name=\"default_code\">LAP-E5</field>\n  469          </record>\n  470  \n  ...\n  481  Hi-Speed 234Q Processor\n  482  QWERTY keyboard</field>\n  483:             <field name=\"default_code\">LAP-S3</field>\n  484          </record>\n  485  \n  ...\n  493              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  494              <field name=\"description\">Custom Laptop based on customer's requirement.</field>\n  495:             <field name=\"default_code\">LAP-CUS</field>\n  496          </record>\n  497  \n  ...\n  504              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  505              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  506:             <field name=\"default_code\">EXT-HDD</field>\n  507          </record>\n  508  \n  ...\n  516              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  517              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  518:             <field name=\"default_code\">PD-SP2</field>\n  519          </record>\n  520  \n  ...\n  528              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  529              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  530:             <field name=\"default_code\">PD-SP4</field>\n  531          </record>\n  532  \n  ...\n  540              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  541              <field name=\"description\">.</field>\n  542:             <field name=\"default_code\">MM-SPK</field>\n  543          </record>\n  544  \n  ...\n  552              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  553              <field name=\"description\">Hands free headset for laptop PC with in-line microphone and headphone plug.</field>\n  554:             <field name=\"default_code\">HEAD</field>\n  555          </record>\n  556  \n  ...\n  564              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  565              <field name=\"description\">Headset for laptop PC with USB connector.</field>\n  566:             <field name=\"default_code\">HEAD-USB</field>\n  567          </record>\n  568  \n  ...\n  576              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  577              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  578:             <field name=\"default_code\">WCAM</field>\n  579          </record>\n  580  \n  ...\n  588              <field name=\"uom_id\" ref=\"product_uom_dozen\"/>\n  589              <field name=\"uom_po_id\" ref=\"product_uom_dozen\"/>\n  590:             <field name=\"default_code\">CD</field>\n  591          </record>\n  592  \n  ...\n  600              <field name=\"uom_id\" ref=\"product_uom_dozen\"/>\n  601              <field name=\"uom_po_id\" ref=\"product_uom_dozen\"/>\n  602:             <field name=\"default_code\">DVD</field>\n  603          </record>\n  604  \n  ...\n  613              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  614              <field name=\"description\">All in one hi-speed printer with fax and scanner.</field>\n  615:             <field name=\"default_code\">PRINT</field>\n  616          </record>\n  617  \n  ...\n  625              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  626              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  627:             <field name=\"default_code\">INK</field>\n  628          </record>\n  629  \n  ...\n  637              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  638              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  639:             <field name=\"default_code\">TONER</field>\n  640          </record>\n  641  \n  ...\n  649              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  650              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  651:             <field name=\"default_code\">Win7</field>\n  652          </record>\n  653  \n  ...\n  661              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  662              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  663:             <field name=\"default_code\">WServer</field>\n  664          </record>\n  665  \n  ...\n  674              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  675              <field name=\"description_sale\">Office Editing Software with word processing, spreadsheets, presentations, graphics, and databases...</field>\n  676:             <field name=\"default_code\">OSuite</field>\n  677          </record>\n  678  \n  ...\n  686              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  687              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  688:             <field name=\"default_code\">Zplus</field>\n  689          </record>\n  690  \n  ...\n  699              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  700              <field name=\"description_sale\">Full featured image editing software.</field>\n  701:             <field name=\"default_code\">GRAPs/w</field>\n  702          </record>\n  703  \n  ...\n  711              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  712              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  713:             <field name=\"default_code\">ROUT_430</field>\n  714          </record>\n  715  \n  ...\n  723              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  724              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  725:             <field name=\"default_code\">DC</field>\n  726          </record>\n  727  \n  ...\n  735              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  736              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  737:             <field name=\"default_code\">SW24</field>\n  738          </record>\n  739  \n  ...\n  747              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  748              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  749:             <field name=\"default_code\">ADPT</field>\n  750          </record>\n  751  \n  ...\n  759              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  760              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  761:             <field name=\"default_code\">DELL15</field>\n  762          </record>\n  763  \n  ...\n  771              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  772              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  773:             <field name=\"default_code\">LIN12</field>\n  774          </record>\n  775  \n  ...\n  783              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  784              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  785:             <field name=\"default_code\">SIW162</field>\n  786          </record>\n  787  \n  ...\n  795              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  796              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  797:             <field name=\"default_code\">RJ45</field>\n  798          </record>\n  799  \n  ...\n  807              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  808              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  809:             <field name=\"default_code\">TDKEY1</field>\n  810          </record>\n  811  \n  ...\n  819              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  820              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  821:             <field name=\"default_code\">ERMO85</field>\n  822          </record>\n  823  \n  ...\n  831              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  832              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  833:             <field name=\"default_code\">DSKTAB96</field>\n  834          </record>\n  835  \n  ...\n  843              <field name=\"uom_id\" ref=\"product_uom_unit\"/>\n  844              <field name=\"uom_po_id\" ref=\"product_uom_unit\"/>\n  845:             <field name=\"default_code\">DSKLM12</field>\n  846          </record>\n  847  \n  ...\n  856              <field name=\"description_sale\">Dvorak keyboard \n  857              left-handed mouse</field>\n  858:             <field name=\"default_code\">BASICCOMP</field>\n  859          </record>\n  860  \n  ...\n  869              <field name=\"description_sale\">raid 1 \n  870              512ECC ram</field>\n  871:             <field name=\"default_code\">LTLSRVR</field>\n  872          </record>\n  873  \n  ...\n  882              <field name=\"description_sale\">raid 10 \n  883              2048ECC ram</field>\n  884:             <field name=\"default_code\">SERVER</field>\n  885          </record>\n  886  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product\\product_view.xml:\n   25              <field name=\"view_id\" ref=\"product_attribute_value_view_tree\"/>\n   26              <field name=\"domain\">[('product_ids.product_tmpl_id', '=', active_id)]</field>\n   27:             <field name=\"context\">{'default_product_tmpl_id': active_id}</field>\n   28          </record>\n   29  \n   ..\n   35              <field name=\"arch\" type=\"xml\">\n   36                  <search string=\"Product\">\n   37:                     <field name=\"name\" string=\"Product\" filter_domain=\"['|',('default_code','ilike',self),('name','ilike',self)]\"/>\n   38                      <separator/>\n   39                      <filter string=\"Services\" name=\"services\" domain=\"[('type','=','service')]\"/>\n   ..\n  138                                  </group>\n  139                                  <separator string=\"Vendors\"/>\n  140:                                 <field name=\"seller_ids\" context=\"{'default_product_tmpl_id': active_id}\"/>\n  141                                  <group name=\"packaging\" string=\"Packaging\"\n  142                                      colspan=\"4\"\n  ...\n  149                                  <div name=\"pricelist_item\" groups=\"product.group_product_pricelist\">\n  150                                      <separator string=\"Pricing\"/>\n  151:                                     <field name=\"item_ids\" nolabel=\"1\" context=\"{'default_base':'list_price', 'default_applied_on' :'1_product'}\">\n  152                                          <tree string=\"Pricelist Items\" editable=\"bottom\">\n  153                                              <field name=\"pricelist_id\" string=\"Pricelist\" required='1'/>\n  ...\n  248                              <group name=\"codes\" string=\"Codes\">\n  249                                  <field name=\"barcode\"/>\n  250:                                 <field name=\"default_code\"/>\n  251                              </group>\n  252                              <group>\n  ...\n  285              <field name=\"type\">ir.actions.act_window</field>\n  286              <field name=\"res_model\">product.product</field>\n  287:             <field name=\"context\">{'search_default_product_tmpl_id': [active_id], 'default_product_tmpl_id': active_id}</field>\n  288              <field name=\"search_view_id\" ref=\"product_search_form_view\"/>             \n  289              <field name=\"view_ids\" \n  ...\n  318                  </xpath>\n  319                  <field name=\"type\" position=\"after\">\n  320:                     <field name=\"default_code\" attrs=\"{'invisible': [('product_variant_count', '>', 1)]}\"/>\n  321                      <field name=\"barcode\" attrs=\"{'invisible': [('product_variant_count', '>', 1)]}\"/>\n  322                  </field>\n  ...\n  336                              <tree string=\"Variants\" editable=\"bottom\">\n  337                                  <field name=\"attribute_id\"/>\n  338:                                 <field name=\"value_ids\" widget=\"many2many_tags\" options=\"{'no_create_edit': True}\" domain=\"[('attribute_id', '=', attribute_id)]\" context=\"{'default_attribute_id': attribute_id}\"/>\n  339                              </tree>\n  340                          </field>\n  ...\n  368                                  <div class=\"oe_kanban_details\">\n  369                                      <strong>\n  370:                                         <span t-if=\"record.default_code.value\">[<field name=\"default_code\"/>]</span>\n  371                                          <field name=\"name\"/>\n  372                                      </strong>\n  ...\n  396              <field name=\"view_type\">form</field>\n  397              <field name=\"view_id\" ref=\"product_template_kanban_view\"/>\n  398:             <field name=\"context\">{\"search_default_filter_to_sell\":1}</field>\n  399              <field name=\"help\" type=\"html\">\n  400                  <p class=\"oe_view_nocontent_create\">\n  ...\n  414              <field name=\"view_mode\">kanban,tree,form</field>\n  415              <field name=\"view_type\">form</field>\n  416:             <field name=\"context\">{\"search_default_products\": 1, 'default_type': 'product'}</field>\n  417              <field name=\"help\" type=\"html\">\n  418                  <p class=\"oe_view_nocontent_create\">\n  ...\n  438  \n  439                  <tree string=\"Product Variants\">\n  440:                     <field name=\"default_code\"/>\n  441                      <field name=\"name\"/>\n  442                      <field name=\"attribute_value_ids\" widget=\"many2many_tags\" groups=\"product.group_product_variant\"/>\n  ...\n  462                  </form>\n  463                  <field name=\"type\" position=\"after\">\n  464:                     <field name=\"default_code\"/>\n  465                      <field name=\"barcode\"/>\n  466                  </field>\n  ...\n  564              <field name=\"view_mode\">kanban,tree,form</field>\n  565              <field name=\"view_type\">form</field>\n  566:             <field name=\"context\">{\"search_default_filter_to_sell\":1}</field>\n  567              <field name=\"view_id\" ref=\"product_product_tree_view\"/>\n  568              <field name=\"search_view_id\" ref=\"product_search_form_view\"/>\n  ...\n  771                      <group>\n  772                          <group string=\"Vendor\">\n  773:                             <field name=\"name\" context=\"{'default_customer': 0, 'search_default_supplier': 1, 'default_supplier': 1}\"/>\n  774                              <field name=\"product_name\"/>\n  775                              <field name=\"product_code\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product\\res_config.py:\n   15      }\n   16  \n   17:     def get_default_company_share_product(self, cr, uid, fields, context=None):\n   18          product_rule = self.pool['ir.model.data'].xmlid_to_object(cr, uid, 'product.product_comp_rule', context=context)\n   19          return {\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product\\tests\\test_pricelist.py:\n   67          datacard_unit = self.product_product.browse(cr, uid, self.datacard_id, context=unit_context)\n   68          datacard_dozen = self.product_product.browse(cr, uid, self.datacard_id, context=dozen_context)\n   69:         # price_surcharge applies to product default UoM, here \"Units\", so surcharge will be multiplied\n   70          self.assertAlmostEqual(datacard_unit.price*12, datacard_dozen.price)\n   71  \n   72      def test_20_pricelist_uom(self):\n   73:         # Verify that the pricelist rules are correctly using the product's default UoM\n   74          # as reference, and return a result according to the target UoM (as specific in the context)\n   75          cr, uid = self.cr, self.uid\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product\\views\\report_productlabel.xml:\n   11                              <tr>\n   12                                  <th class=\"col-xs-4 danger\">\n   13:                                     <strong t-field=\"product.default_code\"/>\n   14                                  </th>\n   15                                  <th class=\"active\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product\\wizard\\product_price.py:\n   17          'qty5': fields.integer('Quantity-5'),\n   18      }\n   19:     _defaults = {\n   20          'qty1': 1,\n   21          'qty2': 5,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product\\wizard\\product_price_view.xml:\n   20                      <footer>\n   21                          <button name=\"print_report\" string=\"Print\"  type=\"object\" class=\"btn-primary\"/>\n   22:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   23                      </footer>\n   24                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product_email_template\\data\\product_demo.xml:\n  303                          <li>Rapidly encode your financial operations or accounting transactions</li>\n  304                          <li>Carry out payments easily and adequately reconcile these payments with invoices</li>\n  305:                         <li>Quick creation of invoices with pre-set defaults on debtor/creditor and income/expense accounts</li>\n  306                          <li>Multiple manners to reconcile</li>\n  307                          <li>Configuration of accounts to ensure correct display in balance sheet and profit & loss statement</li>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product_email_template\\views\\product_view.xml:\n   16                          context=\"{\n   17                              'form_view_ref':'product_email_template.email_template_form_simplified',\n   18:                             'default_model': 'product.template',\n   19:                             'default_subject': name,\n   20:                             'default_name': name,\n   21                          }\"/>\n   22                      />\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product_expiry\\product_expiry.py:\n   48          context = dict(context or {})\n   49          context['product_id'] = obj.product_id.id\n   50:         self.write(cr, uid, [obj.id], self.default_get(cr, uid, towrite, context=context))\n   51          return newid\n   52  \n   53:     _defaults = {\n   54          'life_date': _get_date('life_time'),\n   55          'use_date': _get_date('use_time'),\n   ..\n   65      @api.onchange('product_id')\n   66      def _onchange_product(self):\n   67:         defaults = self.with_context(\n   68:             product_id=self.product_id.id).default_get(\n   69                  ['life_date', 'use_date', 'removal_date', 'alert_date'])\n   70:         for field, value in defaults.items():\n   71              setattr(self, field, value)\n   72  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product_expiry\\product_expiry_demo.xml:\n   13              <field name=\"removal_time\">6</field>\n   14              <field name=\"alert_time\">5</field>\n   15:             <field name=\"default_code\">JKB</field>\n   16              <field name=\"barcode\">3307630302014</field>\n   17              <field name=\"categ_id\" search=\"[]\" model=\"product.category\"/>\n   ..\n   35              <field name=\"removal_time\">20</field>\n   36              <field name=\"alert_time\">19</field>\n   37:             <field name=\"default_code\">FKS</field>\n   38              <field name=\"barcode\">3307631101876</field>\n   39              <field name=\"categ_id\" search=\"[]\" model=\"product.category\"/>\n   ..\n   56              <field name=\"removal_time\">20</field>\n   57              <field name=\"alert_time\">19</field>\n   58:             <field name=\"default_code\">PKB</field>\n   59              <field name=\"barcode\">3307631102323</field>\n   60              <field name=\"categ_id\" search=\"[]\" model=\"product.category\"/>\n   ..\n   77              <field name=\"removal_time\">20</field>\n   78              <field name=\"alert_time\">19</field>\n   79:             <field name=\"default_code\">LEX</field>\n   80              <field name=\"barcode\">3307630302045</field>\n   81              <field name=\"categ_id\" search=\"[]\" model=\"product.category\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product_extended\\product_extended_wizard.xml:\n   16                    <footer>\n   17                        <button name=\"compute_from_bom\" string=\"Set price on BoM\" type=\"object\" class=\"btn-primary\"/>\n   18:                       <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   19                    </footer>\n   20                </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product_extended\\wizard\\wizard_price.py:\n   15          }\n   16  \n   17:     def default_get(self, cr, uid, fields, context=None):\n   18:         res = super(wizard_price, self).default_get(cr, uid, fields, context=context)\n   19          product_pool = self.pool.get('product.template')\n   20          product_obj = product_pool.browse(cr, uid, context.get('active_id', False))\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product_margin\\product_margin_view.xml:\n   23                      <group col=\"4\">\n   24                          <field name=\"name\"/>\n   25:                         <field name=\"default_code\"/>\n   26                      </group>\n   27                      <notebook>\n   ..\n   68                  <tree string=\"Product Margins\">\n   69                      <field name=\"name\"/>\n   70:                     <field name=\"default_code\"/>\n   71                      <field name=\"sale_avg_price\"/>\n   72                      <field name=\"sale_num_invoiced\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product_margin\\wizard\\product_margin.py:\n   21      }\n   22  \n   23:     _defaults = {\n   24          'from_date': time.strftime('%Y-01-01'),\n   25          'to_date': time.strftime('%Y-12-31'),\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product_margin\\wizard\\product_margin_view.xml:\n   14                      <footer>\n   15                          <button name=\"action_open_window\" string=\"Open Margins\" type=\"object\" class=\"btn-primary\"/>\n   16:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   17                      </footer>\n   18                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product_uos\\models\\product_uos.py:\n   11      uos_id = fields.Many2one('product.uom', 'Unit of Sale',\n   12                               help='Specify a unit of measure here if invoicing is made in another'\n   13:                              ' unit of measure than inventory. Keep empty to use the default unit of measure.')\n   14      uos_coeff = fields.Float('Unit of Measure -> UOS Coeff', digits=dp.get_precision('Product Unit of Measure'),\n   15:                              help='Coefficient to convert default Unit of Measure to Unit of Sale'\n   16                               ' uos = uom * coeff')\n   17  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\product_visible_discount\\product_visible_discount.py:\n   11          'discount_policy': fields.selection([('with_discount', 'Discount included in the price'), ('without_discount', 'Show discount in the sale order')], string=\"Discount Policy\"),\n   12      }\n   13:     _defaults = {'discount_policy': 'with_discount'}\n   14  \n   15  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\project\\project.py:\n   28          'legend_blocked': fields.char(\n   29              'Kanban Blocked Explanation', translate=True,\n   30:             help='Override the default value displayed for the blocked state for kanban selection, when the task or issue is in that stage.'),\n   31          'legend_done': fields.char(\n   32              'Kanban Valid Explanation', translate=True,\n   33:             help='Override the default value displayed for the done state for kanban selection, when the task or issue is in that stage.'),\n   34          'legend_normal': fields.char(\n   35              'Kanban Ongoing Explanation', translate=True,\n   36:             help='Override the default value displayed for the normal state for kanban selection, when the task or issue is in that stage.'),\n   37          'fold': fields.boolean('Folded in Tasks Pipeline',\n   38                                 help='This stage is folded in the kanban view when '\n   ..\n   40      }\n   41  \n   42:     def _get_default_project_ids(self, cr, uid, ctx=None):\n   43          if ctx is None:\n   44              ctx = {}\n   45:         default_project_id = ctx.get('default_project_id')\n   46:         return [default_project_id] if default_project_id else None\n   47  \n   48:     _defaults = {\n   49          'sequence': 1,\n   50:         'project_ids': _get_default_project_ids,\n   51      }\n   52      _order = 'sequence'\n   ..\n   66          alias_context = dict(context, alias_model_name='project.task')\n   67          return self.pool.get('mail.alias').migrate_to_alias(cr, self._name, self._table, super(project, self)._auto_init,\n   68:             'project.task', self._columns['alias_id'], 'id', alias_prefix='project+', alias_defaults={'project_id':'id'}, context=alias_context)\n   69  \n   70      def onchange_partner_id(self, cr, uid, ids, part=False, context=None):\n   ..\n  151                      </p>'''),\n  152              'limit': 80,\n  153:             'context': \"{'default_res_model': '%s','default_res_id': %d}\" % (self._name, res_id)\n  154          }\n  155  \n  ...\n  203  \n  204      _order = \"sequence, name, id\"\n  205:     _defaults = {\n  206          'active': True,\n  207          'type': 'contract',\n  ...\n  241          for task in proj.tasks:\n  242              # preserve task name and stage, normally altered during copy\n  243:             defaults = {'stage_id': task.stage_id.id,\n  244                          'name': task.name}\n  245:             map_task_id[task.id] =  task_obj.copy(cr, uid, task.id, defaults, context=context)\n  246          self.write(cr, uid, [new_project_id], {'tasks':[(6,0, map_task_id.values())]})\n  247          task_obj.duplicate_task(cr, uid, map_task_id, context=context)\n  248          return True\n  249  \n  250:     def copy(self, cr, uid, id, default=None, context=None):\n  251:         if default is None:\n  252:             default = {}\n  253          context = dict(context or {})\n  254          context['active_test'] = False\n  255          proj = self.browse(cr, uid, id, context=context)\n  256:         if not default.get('name'):\n  257:             default.update(name=_(\"%s (copy)\") % (proj.name))\n  258:         res = super(project, self).copy(cr, uid, id, default, context)\n  259          self.map_tasks(cr, uid, id, res, context=context)\n  260          return res\n  ...\n  273                  new_date_end = (datetime(*time.strptime(new_date_start,'%Y-%m-%d')[:3])+(end_date-start_date)).strftime('%Y-%m-%d')\n  274              context.update({'copy':True})\n  275:             new_id = self.copy(cr, uid, proj.id, default = {\n  276                                      'name':_(\"%s (copy)\") % (proj.name),\n  277                                      'state':'open',\n  ...\n  314                                mail_create_nosubscribe=True)\n  315  \n  316:         ir_values = self.pool.get('ir.values').get_default(cr, uid, 'project.config.settings', 'generate_project_alias')\n  317          if ir_values:\n  318              vals['alias_name'] = vals.get('alias_name') or vals.get('name')\n  319          project_id = super(project, self).create(cr, uid, vals, context=create_context)\n  320          project_rec = self.browse(cr, uid, project_id, context=context)\n  321:         values = {'alias_parent_thread_id': project_id, 'alias_defaults': {'project_id': project_id}}\n  322          self.pool.get('mail.alias').write(cr, uid, [project_rec.alias_id.id], values, context=context)\n  323          return project_id\n  ...\n  344      _mail_post_access = 'read'\n  345  \n  346:     def _get_default_partner(self, cr, uid, context=None):\n  347          if context is None:\n  348              context = {}\n  349:         if 'default_project_id' in context:\n  350:             project = self.pool.get('project.project').browse(cr, uid, context['default_project_id'], context=context)\n  351              if project and project.partner_id:\n  352                  return project.partner_id.id\n  353          return False\n  354  \n  355:     def _get_default_stage_id(self, cr, uid, context=None):\n  356:         \"\"\" Gives default stage_id \"\"\"\n  357          if context is None:\n  358              context = {}\n  359:         return self.stage_find(cr, uid, [], context.get('default_project_id'), [('fold', '=', False)], context=context)\n  360  \n  361      def _read_group_stage_ids(self, cr, uid, ids, domain, read_group_order=None, access_rights_uid=None, context=None):\n  ...\n  367          if read_group_order == 'stage_id desc':\n  368              order = '%s desc' % order\n  369:         if 'default_project_id' in context:\n  370:             search_domain = ['|', ('project_ids', '=', context['default_project_id']), ('id', 'in', ids)]\n  371          else:\n  372              search_domain = [('id', 'in', ids)]\n  ...\n  415                              'child_ids':  [(6,0,list(new_child_ids))]})\n  416  \n  417:     def copy_data(self, cr, uid, id, default=None, context=None):\n  418:         if default is None:\n  419:             default = {}\n  420          current = self.browse(cr, uid, id, context=context)\n  421:         if not default.get('name'):\n  422:             default['name'] = _(\"%s (copy)\") % current.name\n  423:         if 'remaining_hours' not in default:\n  424:             default['remaining_hours'] = current.planned_hours\n  425  \n  426:         return super(task, self).copy_data(cr, uid, id, default, context)\n  427  \n  428      _columns = {\n  ...\n  438                                           track_visibility='onchange',\n  439                                           help=\"A task's kanban state indicates special situations affecting it:\\n\"\n  440:                                               \" * Normal is the default situation\\n\"\n  441                                                \" * Blocked indicates something is preventing the progress of this task\\n\"\n  442                                                \" * Ready for next stage indicates the task is ready to be pulled to the next stage\",\n  ...\n  449          'date_deadline': fields.date('Deadline', select=True, copy=False),\n  450          'date_last_stage_update': fields.datetime('Last Stage Update', select=True, copy=False, readonly=True),\n  451:         'project_id': fields.many2one('project.project', 'Project', ondelete='set null', select=True, track_visibility='onchange', change_default=True),\n  452          'parent_ids': fields.many2many('project.task', 'project_task_parent_rel', 'task_id', 'parent_id', 'Parent Tasks'),\n  453          'child_ids': fields.many2many('project.task', 'project_task_parent_rel', 'parent_id', 'task_id', 'Delegated Tasks'),\n  ...\n  469          'legend_normal': fields.related(\"stage_id\", \"legend_normal\", type=\"char\", string='Kanban Ongoing Explanation'),\n  470          }\n  471:     _defaults = {\n  472:         'stage_id': _get_default_stage_id,\n  473:         'project_id': lambda self, cr, uid, ctx=None: ctx.get('default_project_id') if ctx is not None else False,\n  474          'date_last_stage_update': fields.datetime.now,\n  475          'kanban_state': 'normal',\n  ...\n  478          'active': True,\n  479          'user_id': lambda obj, cr, uid, ctx=None: uid,\n  480:         'company_id': lambda self, cr, uid, ctx=None: self.pool.get('res.company')._company_default_get(cr, uid, 'project.task', context=ctx),\n  481:         'partner_id': lambda self, cr, uid, ctx=None: self._get_default_partner(cr, uid, context=ctx),\n  482          'date_start': fields.datetime.now,\n  483      }\n  ...\n  577      def get_empty_list_help(self, cr, uid, help, context=None):\n  578          context = dict(context or {})\n  579:         context['empty_list_help_id'] = context.get('default_project_id')\n  580          context['empty_list_help_model'] = 'project.project'\n  581          context['empty_list_help_document_name'] = _(\"tasks\")\n  ...\n  590              Parameter of the stage search taken from the lead:\n  591              - section_id: if set, stages must belong to this section or\n  592:               be a default stage; if not set, stages must be default\n  593                stages\n  594          \"\"\"\n  ...\n  646          context = dict(context or {})\n  647  \n  648:         # for default stage\n  649:         if vals.get('project_id') and not context.get('default_project_id'):\n  650:             context['default_project_id'] = vals.get('project_id')\n  651          # user_id change: update date_assign\n  652          if vals.get('user_id'):\n  ...\n  780  \n  781      @api.cr_uid_context\n  782:     def message_get_reply_to(self, cr, uid, ids, default=None, context=None):\n  783          \"\"\" Override to get the reply_to of the parent project. \"\"\"\n  784          tasks = self.browse(cr, SUPERUSER_ID, ids, context=context)\n  785          project_ids = set([task.project_id.id for task in tasks if task.project_id])\n  786:         aliases = self.pool['project.project'].message_get_reply_to(cr, uid, list(project_ids), default=default, context=context)\n  787          return dict((task.id, aliases.get(task.project_id and task.project_id.id or 0, False)) for task in tasks)\n  788  \n  ...\n  798          if custom_values is None:\n  799              custom_values = {}\n  800:         defaults = {\n  801              'name': msg.get('subject'),\n  802              'planned_hours': 0.0,\n  803              'partner_id': msg.get('author_id', False)\n  804          }\n  805:         defaults.update(custom_values)\n  806  \n  807:         res = super(task, self).message_new(cr, uid, msg, custom_values=defaults, context=context)\n  808          email_list = self.email_split(cr, uid, [res], msg, context=context)\n  809          partner_ids = filter(None, self._find_partner_from_emails(cr, uid, [res], email_list, force_create=False, context=context))\n  ...\n  950  class project_project(osv.osv):\n  951      _inherit = 'project.project'\n  952:     _defaults = {\n  953          'use_tasks': True\n  954      }\n  ...\n 1009          'user_id': fields.many2one('res.users', 'Responsible'),\n 1010      }\n 1011:     _defaults = {\n 1012          'date': fields.date.context_today,\n 1013      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\project\\project_dashboard.xml:\n   57                                          <span class=\"o_label\"><t t-esc=\"record.label_tasks.value\"/></span>\n   58                                      </a>\n   59:                                     <a t-if=\"record.task_needaction_count.raw_value\" class=\"o_needaction\" name=\"%(act_project_project_2_project_task_all)d\" type=\"action\" context=\"{'search_default_message_needaction': 1}\">\n   60                                          <t t-esc=\"record.task_needaction_count.raw_value\"/>\n   61                                      </a>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\project\\project_data.xml:\n   20  \n   21          <!-- alias domain: project.config.settings -->\n   22:         <function id=\"default_alias_domain_project\" model=\"ir.values\" name=\"set_default\" eval=\"('project.config.settings', 'generate_project_alias', 1)\"/>\n   23  \n   24  \n   ..\n   41              <field name=\"name\">Task Opened</field>\n   42              <field name=\"res_model\">project.task</field>\n   43:             <field name=\"default\" eval=\"False\"/>\n   44              <field name=\"hidden\" eval=\"False\"/>\n   45              <field name=\"description\">Task opened</field>\n   ..\n   48              <field name=\"name\">Task Blocked</field>\n   49              <field name=\"res_model\">project.task</field>\n   50:             <field name=\"default\" eval=\"False\"/>\n   51              <field name=\"description\">Task blocked</field>\n   52          </record>\n   ..\n   54              <field name=\"name\">Task Ready</field>\n   55              <field name=\"res_model\">project.task</field>\n   56:             <field name=\"default\" eval=\"False\"/>\n   57              <field name=\"description\">Task ready for Next Stage</field>\n   58          </record>\n   ..\n   60              <field name=\"name\">Stage Changed</field>\n   61              <field name=\"res_model\">project.task</field>\n   62:             <field name=\"default\" eval=\"False\"/>\n   63              <field name=\"description\">Stage changed</field>\n   64          </record>\n   ..\n   68              <field name=\"sequence\">10</field>\n   69              <field name=\"res_model\">project.project</field>\n   70:             <field name=\"default\" eval=\"True\"/>\n   71              <field name=\"parent_id\" eval=\"ref('mt_task_new')\"/>\n   72              <field name=\"relation_field\">project_id</field>\n   ..\n   76              <field name=\"sequence\">11</field>\n   77              <field name=\"res_model\">project.project</field>\n   78:             <field name=\"default\" eval=\"False\"/>\n   79              <field name=\"parent_id\" eval=\"ref('mt_task_blocked')\"/>\n   80              <field name=\"relation_field\">project_id</field>\n   ..\n   84              <field name=\"sequence\">12</field>\n   85              <field name=\"res_model\">project.project</field>\n   86:             <field name=\"default\" eval=\"False\"/>\n   87              <field name=\"parent_id\" eval=\"ref('mt_task_ready')\"/>\n   88              <field name=\"relation_field\">project_id</field>\n   ..\n   92              <field name=\"sequence\">13</field>\n   93              <field name=\"res_model\">project.project</field>\n   94:             <field name=\"default\" eval=\"False\"/>\n   95              <field name=\"parent_id\" eval=\"ref('mt_task_stage')\"/>\n   96              <field name=\"relation_field\">project_id</field>\n   ..\n  120              <field name=\"alias_model_id\" ref=\"model_project_task\"/>\n  121              <field name=\"alias_contact\">everyone</field>\n  122:             <field name=\"alias_defaults\">{'project_id': 1}</field>\n  123              <field name=\"alias_force_thread_id\">0</field>\n  124              <field name=\"alias_parent_model_id\" ref=\"model_project_project\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\project\\project_view.xml:\n   55              <field name=\"view_mode\">kanban,tree,form,calendar,pivot,graph</field>\n   56              <field name=\"context\">{\n   57:                 'search_default_project_id': [active_id],\n   58:                 'default_project_id': active_id,\n   59              }</field>\n   60              <field name=\"search_view_id\" ref=\"view_task_search_form\"/>\n   ..\n  115                                  <field name=\"user_id\" string=\"Project Manager\"\n  116                                          attrs=\"{'readonly':[('state','in',['close', 'cancelled'])]}\"\n  117:                                         context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'project.group_project_manager']}\"\n  118                                          groups=\"base.group_no_one\"/>\n  119                              </group>\n  ...\n  200              <field name=\"view_mode\">kanban,form</field>\n  201              <field name=\"search_view_id\" ref=\"view_project_project_filter\"/>\n  202:             <field name=\"context\">{'search_default_Current': 1}</field>\n  203              <field name=\"help\" type=\"html\">\n  204                  <p class=\"oe_view_nocontent_create\">\n  ...\n  263                      <group>\n  264                          <group>\n  265:                             <field name=\"project_id\" domain=\"[('state','not in', ('close', 'cancelled'))]\" on_change=\"onchange_project(project_id)\" context=\"{'default_use_tasks':1}\"/>\n  266                              <field name=\"user_id\"\n  267                                  options='{\"no_open\": True}'\n  268                                  on_change=\"onchange_user_id(user_id, context)\"\n  269:                                 context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'project.group_project_user']}\"/>\n  270                              <field name=\"planned_hours\" widget=\"float_time\"\n  271                                      groups=\"project.group_time_work_estimation_tasks\"\n  ...\n  314              <field name=\"model\">project.task</field>\n  315              <field name=\"arch\" type=\"xml\">\n  316:                 <kanban default_group_by=\"stage_id\" class=\"o_kanban_small_column\">\n  317                      <field name=\"color\"/>\n  318                      <field name=\"priority\"/>\n  ...\n  355                                  </div>\n  356                                  <div class=\"text-muted\">\n  357:                                     <field name=\"project_id\" invisible=\"context.get('default_project_id', False)\"/>\n  358                                      <t t-if=\"record.date_deadline.raw_value and record.date_deadline.raw_value lt (new Date())\" t-set=\"red\">oe_kanban_text_red</t>\n  359                                      <span t-attf-class=\"#{red || ''}\"><i><field name=\"date_deadline\"/></i></span>\n  ...\n  535                              At each stage employees can block or make task/issue ready for next stage.\n  536                              You can define here labels that will be displayed for the state instead\n  537:                             of the default labels.\n  538                          </p>\n  539                          <label for=\"legend_normal\" string=\" \" class=\"oe_kanban_status oe_project_kanban_legend\"/>\n  ...\n  614  \n  615          <!-- User Form -->\n  616:         <act_window context=\"{'search_default_user_id': [active_id], 'default_user_id': active_id}\"\n  617                      id=\"act_res_users_2_project_task_opened\" name=\"Assigned Tasks\"\n  618                      res_model=\"project.task\" src_model=\"res.users\" view_mode=\"tree,form,calendar,graph\" view_type=\"form\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\project\\report\\project_cumulative.xml:\n   65              <field name=\"view_mode\">pivot,graph</field>\n   66              <field name=\"filter\" eval=\"False\"/>\n   67:             <field name=\"context\">{\"search_default_open\":1, \"search_default_this_month\": 1}</field>\n   68              <field name=\"view_id\"></field>  <!-- force empty -->\n   69          </record>\n   ..\n   75              <field name=\"filter\" eval=\"False\"/>\n   76              <field name=\"context\">{\n   77:                 'search_default_open':1,\n   78:                 'search_default_this_month': 1,\n   79:                 'search_default_project_id': [active_id],\n   80:                 'default_project_id': active_id,\n   81              }\n   82              </field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\project\\report\\project_report_view.xml:\n  101                  'group_by_no_leaf':1,\n  102                  'group_by':[],\n  103:                 'search_default_project_id': [active_id],\n  104:                 'default_project_id': active_id,\n  105              }\n  106              </field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\project\\res_config.py:\n   64          return {}\n   65  \n   66:     def set_default_generate_project_alias(self, cr, uid, ids, context=None):\n   67          config_value = self.browse(cr, uid, ids, context=context).generate_project_alias\n   68:         self.pool.get('ir.values').set_default(cr, uid, 'project.config.settings', 'generate_project_alias', config_value)\n   69  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\project\\res_partner_view.xml:\n   13                  <div name=\"button_box\" position=\"inside\">\n   14                      <button class=\"oe_stat_button\" type=\"action\" name=\"%(action_view_task)d\" \n   15:                         context=\"{'search_default_partner_id': active_id, 'default_partner_id': active_id}\"\n   16                          icon=\"fa-tasks\">\n   17                          <field  string=\"Tasks\" name=\"task_count\" widget=\"statinfo\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\project\\web_planner_data.xml:\n  136                                      <p>Back at the office, the manager splits the customer's requests into several tasks and delegates them to several employees.</p>\n  137                                      <p>Each employee will have his own task, while the manager will be able to follow the global progress in the Kanban view of the project.</p>\n  138:                                     <p>Tasks are the main mechanism in Odoo and are activated by default.</p>\n  139                                  </div>\n  140                              </div>\n  ...\n  883                                  <p>\n  884                                      <strong>Create tasks and issues by email</strong><br/>\n  885:                                 In Odoo, every project has an email alias. If you send an email to this alias, it will automatically create a task or issue in the first stage of the project, with all the email recipients as its default followers.</p>\n  886                                  <p>\n  887                                      This is particularly useful to manage help and support: all incoming email  from customers will be transformed into an issue that you'll be able to track easily!\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\project_issue\\project_dashboard.xml:\n   16                          <span class=\"o_label\"><field name=\"label_issues\"/></span>\n   17                      </a>\n   18:                     <a t-if=\"record.issue_needaction_count.raw_value\" class=\"o_needaction\" name=\"%(act_project_project_2_project_issue_all)d\" type=\"action\" context=\"{'search_default_message_needaction': 1}\">\n   19                          <t t-esc=\"record.issue_needaction_count.raw_value\"/>\n   20                      </a>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\project_issue\\project_issue.py:\n   11  from openerp import tools\n   12  from openerp.osv import fields, osv, orm\n   13: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT\n   14  from openerp.tools import html2plaintext\n   15  from openerp.tools.translate import _\n   ..\n   24      _mail_post_access = 'read'\n   25  \n   26:     def _get_default_partner(self, cr, uid, context=None):\n   27          if context is None:\n   28              context = {}\n   29:         if 'default_project_id' in context:\n   30:             project = self.pool.get('project.project').browse(cr, uid, context['default_project_id'], context=context)\n   31              if project and project.partner_id:\n   32                  return project.partner_id.id\n   33          return False\n   34  \n   35:     def _get_default_stage_id(self, cr, uid, context=None):\n   36:         \"\"\" Gives default stage_id \"\"\"\n   37          if context is None:\n   38              context = {}\n   39:         return self.stage_find(cr, uid, [], context.get('default_project_id'), [('fold', '=', False)], context=context)\n   40  \n   41      def _read_group_stage_ids(self, cr, uid, ids, domain, read_group_order=None, access_rights_uid=None, context=None):\n   ..\n   49              order = \"%s desc\" % order\n   50          # retrieve team_id from the context, add them to already fetched columns (ids)\n   51:         if 'default_project_id' in context:\n   52:             search_domain = ['|', ('project_ids', '=', context['default_project_id']), ('id', 'in', ids)]\n   53          else:\n   54              search_domain = [('id', 'in', ids)]\n   ..\n   81                  'days_since_creation': 0.0, 'inactivity_days': 0.0,\n   82              }\n   83:             # if the working hours on the project are not defined, use default ones (8 -> 12 and 13 -> 17 * 5), represented by None\n   84              calendar_id = None\n   85              if issue.project_id and issue.project_id.resource_calendar_id:\n   86                  calendar_id = issue.project_id.resource_calendar_id.id\n   87  \n   88:             dt_create_date = datetime.strptime(issue.create_date, DEFAULT_SERVER_DATETIME_FORMAT)\n   89  \n   90              if issue.date_open:\n   91:                 dt_date_open = datetime.strptime(issue.date_open, DEFAULT_SERVER_DATETIME_FORMAT)\n   92                  values['day_open'] = (dt_date_open - dt_create_date).total_seconds() / (24.0 * 3600)\n   93                  values['working_hours_open'] = Calendar._interval_hours_get(\n   ..\n   97  \n   98              if issue.date_closed:\n   99:                 dt_date_closed = datetime.strptime(issue.date_closed, DEFAULT_SERVER_DATETIME_FORMAT)\n  100                  values['day_close'] = (dt_date_closed - dt_create_date).total_seconds() / (24.0 * 3600)\n  101                  values['working_hours_close'] = Calendar._interval_hours_get(\n  ...\n  107              values['days_since_creation'] = days_since_creation.days\n  108              if issue.date_action_last:\n  109:                 inactive_days = datetime.today() - datetime.strptime(issue.date_action_last, DEFAULT_SERVER_DATETIME_FORMAT)\n  110              elif issue.date_last_stage_update:\n  111:                 inactive_days = datetime.today() - datetime.strptime(issue.date_last_stage_update, DEFAULT_SERVER_DATETIME_FORMAT)\n  112              else:\n  113:                 inactive_days = datetime.today() - datetime.strptime(issue.create_date, DEFAULT_SERVER_DATETIME_FORMAT)\n  114              values['inactivity_days'] = inactive_days.days\n  115  \n  ...\n  145                                           track_visibility='onchange',\n  146                                           help=\"A Issue's kanban state indicates special situations affecting it:\\n\"\n  147:                                               \" * Normal is the default situation\\n\"\n  148                                                \" * Blocked indicates something is preventing the progress of this issue\\n\"\n  149                                                \" * Ready for next stage indicates the issue is ready to be pulled to the next stage\",\n  ...\n  190      }\n  191  \n  192:     _defaults = {\n  193          'active': 1,\n  194:         'team_id': lambda s, cr, uid, c: s.pool['crm.team']._get_default_team_id(cr, uid, context=c),\n  195:         'stage_id': lambda s, cr, uid, c: s._get_default_stage_id(cr, uid, c),\n  196          'company_id': lambda s, cr, uid, c: s.pool['res.users']._get_company(cr, uid, context=c),\n  197          'priority': '0',\n  ...\n  205      }\n  206  \n  207:     def copy(self, cr, uid, id, default=None, context=None):\n  208          issue = self.read(cr, uid, [id], ['name'], context=context)[0]\n  209:         if not default:\n  210:             default = {}\n  211:         default = default.copy()\n  212:         default.update(name=_('%s (copy)') % (issue['name']))\n  213:         return super(project_issue, self).copy(cr, uid, id, default=default, context=context)\n  214  \n  215      def create(self, cr, uid, vals, context=None):\n  216          context = dict(context or {})\n  217:         if vals.get('project_id') and not context.get('default_project_id'):\n  218:             context['default_project_id'] = vals.get('project_id')\n  219          if vals.get('user_id') and not vals.get('date_open'):\n  220              vals['date_open'] = fields.datetime.now()\n  ...\n  257          context = dict(context or {})\n  258          context['empty_list_help_model'] = 'project.project'\n  259:         context['empty_list_help_id'] = context.get('default_project_id')\n  260          context['empty_list_help_document_name'] = _(\"issues\")\n  261          return super(project_issue, self).get_empty_list_help(cr, uid, help, context=context)\n  ...\n  278              - type: stage type must be the same or 'both'\n  279              - team_id: if set, stages must belong to this team or\n  280:               be a default case\n  281          \"\"\"\n  282          if isinstance(cases, (int, long)):\n  ...\n  289              if task.project_id:\n  290                  team_ids.append(task.project_id.id)\n  291:         # OR all team_ids and OR with case_default\n  292          search_domain = []\n  293          if team_ids:\n  ...\n  353  \n  354      @api.cr_uid_context\n  355:     def message_get_reply_to(self, cr, uid, ids, default=None, context=None):\n  356          \"\"\" Override to get the reply_to of the parent project. \"\"\"\n  357          issues = self.browse(cr, SUPERUSER_ID, ids, context=context)\n  358          project_ids = set([issue.project_id.id for issue in issues if issue.project_id])\n  359:         aliases = self.pool['project.project'].message_get_reply_to(cr, uid, list(project_ids), default=default, context=context)\n  360          return dict((issue.id, aliases.get(issue.project_id and issue.project_id.id or 0, False)) for issue in issues)\n  361  \n  ...\n  387              custom_values = {}\n  388          context = dict(context or {}, state_to='draft')\n  389:         defaults = {\n  390              'name':  msg.get('subject') or _(\"No Subject\"),\n  391              'email_from': msg.get('from'),\n  ...\n  394              'user_id': False,\n  395          }\n  396:         defaults.update(custom_values)\n  397  \n  398:         res_id = super(project_issue, self).message_new(cr, uid, msg, custom_values=defaults, context=context)\n  399          email_list = self.email_split(cr, uid, [res_id], msg, context=context)\n  400          partner_ids = filter(None, self._find_partner_from_emails(cr, uid, [res_id], email_list, force_create=False, context=context))\n  ...\n  499      }\n  500  \n  501:     _defaults = {\n  502          'use_issues': True,\n  503          'label_issues': 'Issues',\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\project_issue\\project_issue_data.xml:\n   19              <field name=\"name\">Issue Opened</field>\n   20              <field name=\"res_model\">project.issue</field>\n   21:             <field name=\"default\" eval=\"False\"/>\n   22              <field name=\"hidden\" eval=\"True\"/>\n   23              <field name=\"description\">Issue opened</field>\n   ..\n   26              <field name=\"name\">Issue Blocked</field>\n   27              <field name=\"res_model\">project.issue</field>\n   28:             <field name=\"default\" eval=\"False\"/>\n   29              <field name=\"description\">Issue blocked</field>\n   30          </record>\n   ..\n   32              <field name=\"name\">Issue Ready</field>\n   33              <field name=\"res_model\">project.issue</field>\n   34:             <field name=\"default\" eval=\"False\"/>\n   35              <field name=\"description\">Issue ready for next sStage</field>\n   36          </record>\n   ..\n   38              <field name=\"name\">Stage Changed</field>\n   39              <field name=\"res_model\">project.issue</field>\n   40:             <field name=\"default\" eval=\"False\"/>\n   41              <field name=\"description\">Stage changed</field>\n   42          </record>\n   ..\n   46              <field name=\"sequence\">20</field>\n   47              <field name=\"res_model\">project.project</field>\n   48:             <field name=\"default\" eval=\"False\"/>\n   49              <field name=\"parent_id\" eval=\"ref('mt_issue_new')\"/>\n   50              <field name=\"relation_field\">project_id</field>\n   ..\n   54              <field name=\"sequence\">21</field>\n   55              <field name=\"res_model\">project.project</field>\n   56:             <field name=\"default\" eval=\"False\"/>\n   57              <field name=\"parent_id\" eval=\"ref('mt_issue_blocked')\"/>\n   58              <field name=\"relation_field\">project_id</field>\n   ..\n   69              <field name=\"sequence\">23</field>\n   70              <field name=\"res_model\">project.project</field>\n   71:             <field name=\"default\" eval=\"False\"/>\n   72              <field name=\"description\">Stage changed</field>\n   73              <field name=\"parent_id\" eval=\"ref('mt_issue_stage')\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\project_issue\\project_issue_view.xml:\n   27                          <group>\n   28                              <field name=\"user_id\"\n   29:                                 context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'project.group_project_user']}\"/>\n   30                              <field name=\"priority\" groups=\"base.group_user\" widget=\"priority\"/>\n   31                              <field name=\"tag_ids\" widget=\"many2many_tags\"/>\n   ..\n   34                              <field name=\"partner_id\" on_change=\"onchange_partner_id(partner_id)\"/>\n   35                              <field name=\"email_from\"/>\n   36:                             <field name=\"project_id\" on_change=\"on_change_project(project_id)\" context=\"{'default_use_issues':1}\"/>\n   37:                             <field name=\"task_id\" groups=\"base.group_no_one\" on_change=\"onchange_task_id(task_id)\" context=\"{'default_project_id':project_id}\"/>\n   38                          </group>\n   39                      </group>\n   ..\n  141              <field name=\"model\">project.issue</field>\n  142              <field name=\"arch\" type=\"xml\">\n  143:                 <kanban default_group_by=\"stage_id\" class=\"o_kanban_small_column\">\n  144                      <field name=\"stage_id\" options='{\"group_by_tooltip\": {\"description\": \"Description\", \"legend_priority\": \"Use of stars\"}}'/>\n  145                      <field name=\"color\"/>\n  ...\n  245              <field name=\"view_mode\">kanban,tree,form,calendar,graph,pivot</field>\n  246              <field name=\"context\">{\n  247:                     'search_default_project_id': [active_id],\n  248:                     'default_project_id': active_id,\n  249                  }\n  250              </field>\n  ...\n  328                  <div name=\"button_box\" position=\"inside\">\n  329                      <button class=\"oe_stat_button\" type=\"action\" name=\"%(action_view_issues)d\"\n  330:                         context=\"{'search_default_partner_id': active_id, 'default_partner_id': active_id}\"\n  331                          attrs=\"{'invisible': [('customer', '=', False)]}\"\n  332                          icon=\"fa-bug\">\n  ...\n  345              <field name=\"view_id\" ref=\"project_issue.project_issue_tree_view\"/>        \n  346              <field name=\"domain\" eval=\"\"/>     \n  347:             <field name=\"context\">{\"search_default_user_id\":'', \"search_default_draft\":'', \"search_default_todo\":'', \"portal\":'True'}</field>      \n  348              <field name=\"search_view_id\" ref=\"project_issue.view_project_issue_filter\"/>       \n  349              <field name=\"target\">current</field>       \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\project_issue\\report\\project_issue_report_view.xml:\n   70              <field name=\"view_type\">form</field>\n   71              <field name=\"view_mode\">pivot,graph</field>\n   72:             <field name=\"context\">{'search_default_year':1,'search_default_This Month':1,'search_default_project':1}</field>\n   73              <field name=\"search_view_id\" ref=\"view_project_issue_report_filter\"/>\n   74              <field name=\"view_id\"></field>  <!-- force empty -->\n   ..\n   82              <field name=\"view_mode\">pivot,graph</field>\n   83              <field name=\"context\">{\n   84:                 'search_default_year':1,\n   85:                 'search_default_This Month':1,\n   86:                 'search_default_project':1,\n   87:                 'search_default_project_id': [active_id],\n   88:                 'default_project_id': active_id,\n   89              }\n   90              </field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\project_issue_sheet\\project_issue_sheet_view.xml:\n   19                              <field name=\"analytic_account_id\" domain=\"[('partner_id', '=', partner_id), ('account_type', '=', 'normal')]\"/>\n   20                          </group>\n   21:                         <field name=\"timesheet_ids\" colspan=\"4\" nolabel=\"1\" context=\"{'default_user_id' : uid, 'default_account_id' : analytic_account_id, 'default_is_timesheet':1}\"\n   22                                  groups=\"base.group_user\">\n   23                              <tree editable=\"top\" string=\"Timesheet Activities\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\project_timesheet\\project_timesheet.py:\n   21          project = self.browse(cr, uid, ids[0], context)\n   22          view_context = {\n   23:             'search_default_account_id': [project.analytic_account_id.id],\n   24:             'default_account_id': project.analytic_account_id.id,\n   25:             'default_is_timesheet':True\n   26          }\n   27          help = _(\"\"\"<p class=\"oe_view_nocontent_create\">Record your timesheets for the project '%s'.</p>\"\"\") % (project.name,)\n   ..\n  107      }\n  108  \n  109:     _defaults = {\n  110          'progress': 0,\n  111      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\project_timesheet\\project_timesheet_view.xml:\n   66                  <xpath expr=\"//notebook/page[@name='description_page']\" position=\"after\">\n   67                      <page string=\"Timesheets\" groups=\"project.group_tasks_work_on_tasks,project.group_time_work_estimation_tasks\">\n   68:                     <field name=\"timesheet_ids\" groups=\"project.group_tasks_work_on_tasks\" context=\"{'default_account_id' : analytic_account_id, 'default_is_timesheet' : 1}\">\n   69:                         <tree editable=\"bottom\" string=\"Timesheet Activities\" default_order=\"date\">\n   70                              <field name=\"date\"/>\n   71                              <field name=\"user_id\" required=\"1\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\purchase\\company.py:\n   11               \"generates Purchase Orders for procuring products, \"\n   12               \"they will be scheduled that many days earlier \"\n   13:              \"to cope with unexpected vendor delays.\", default=1.0)\n   14  \n   15      po_double_validation = fields.Selection([\n   16          ('one_step', 'Confirm purchase orders in one step'),\n   17          ('two_step', 'Get 2 levels of approvals to confirm a purchase order')\n   18:         ], string=\"Levels of Approvals\", default='one_step',\\\n   19          help=\"Provide a double validation mechanism for purchases\")\n   20:     po_double_validation_amount = fields.Monetary(string='Double validation amount', default=5000,\\\n   21          help=\"Minimum amount for which a double validation is required\")\n   22  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\purchase\\invoice.py:\n   58                  'uom_id': line.product_uom.id,\n   59                  'product_id': line.product_id.id,\n   60:                 'account_id': self.env['account.invoice.line'].with_context({'journal_id': self.journal_id.id, 'type': 'in_invoice'})._default_account(),\n   61                  'price_unit': line.order_id.currency_id.compute(line.price_unit, self.currency_id),\n   62                  'quantity': qty,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\purchase\\invoice_view.xml:\n    7          <field eval=\"False\" name=\"view_id\"/>\n    8          <field name=\"domain\">[('type','=','in_invoice')]</field>\n    9:         <field name=\"context\">{'default_type':'in_invoice', 'type':'in_invoice', 'journal_type': 'purchase'}</field>\n   10          <field name=\"search_view_id\" ref=\"account.view_account_invoice_filter\"/>\n   11          <field name=\"help\" type=\"html\">\n   ..\n   28          <field eval=\"False\" name=\"view_id\"/>\n   29          <field name=\"domain\">[('type','in',('in_invoice', 'in_refund')),('purchase_id','=',active_id)]</field>\n   30:         <field name=\"context\">{'default_type': 'in_invoice', 'type': 'in_invoice', 'journal_type': 'purchase', 'default_purchase_id': active_id}</field>\n   31          <field name=\"search_view_id\" ref=\"account.view_account_invoice_filter\"/>\n   32          <field name=\"help\" type=\"html\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\purchase\\partner.py:\n   22      property_purchase_currency_id = fields.Many2one(\n   23          'res.currency', string=\"Supplier Currency\", company_dependent=True,\n   24:         help=\"This currency will be used, instead of the default one, for purchases from the current partner\")\n   25      purchase_order_count = fields.Integer(compute='_purchase_invoice_count', string='# of Purchase Order')\n   26      supplier_invoice_count = fields.Integer(compute='_purchase_invoice_count', string='# Vendor Bills')\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\purchase\\partner_view.xml:\n   19              <field name=\"view_type\">form</field>\n   20              <field name=\"view_mode\">tree,form,graph</field>\n   21:             <field name=\"context\">{'search_default_partner_id': active_id}</field>\n   22              <field name=\"groups_id\" eval=\"[(4, ref('purchase.group_purchase_user'))]\"/>\n   23              <field name=\"help\" type=\"html\">\n   ..\n   54              <field name=\"view_mode\">tree,form,graph</field>\n   55              <field name=\"domain\">[('type','=','in_invoice')]</field>\n   56:             <field name=\"context\">{'search_default_partner_id': active_id, 'default_type': 'in_invoice', 'type': 'in_invoice', 'journal_type': 'purchase'}</field>\n   57              <field name=\"help\" type=\"html\">\n   58                  <p class=\"oe_view_nocontent_create\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\purchase\\purchase.py:\n    5  from dateutil.relativedelta import relativedelta\n    6  from openerp import api, fields, models, _, SUPERUSER_ID\n    7: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT\n    8  from openerp.tools.translate import _\n    9  from openerp.tools.float_utils import float_is_zero, float_compare\n   ..\n   70  \n   71      @api.model\n   72:     def _default_picking_type(self):\n   73          type_obj = self.env['stock.picking.type']\n   74          company_id = self.env.context.get('company_id') or self.env.user.company_id.id\n   ..\n   94      }\n   95  \n   96:     name = fields.Char('Order Reference', required=True, select=True, copy=False, default='New')\n   97      origin = fields.Char('Source Document', copy=False,\\\n   98          help=\"Reference of the document that generated this purchase order \"\n   ..\n  103               \"products as this reference is usually written on the \"\n  104               \"delivery order sent by your vendor.\")\n  105:     date_order = fields.Datetime('Order Date', required=True, states=READONLY_STATES, select=True, copy=False, default=fields.Datetime.now(),\\\n  106          help=\"Depicts the date where the Quotation should be validated and converted into a purchase order.\")\n  107      date_approve = fields.Date('Approval Date', readonly=1, select=True, copy=False)\n  108:     partner_id = fields.Many2one('res.partner', string='Vendor', required=True, states=READONLY_STATES, change_default=True, track_visibility='always')\n  109      dest_address_id = fields.Many2one('res.partner', string='Drop Ship Address', states=READONLY_STATES,\\\n  110          help=\"Put an address if you want to deliver directly from the vendor to the customer. \"\\\n  111               \"Otherwise, keep empty to deliver to your own company.\")\n  112      currency_id = fields.Many2one('res.currency', 'Currency', required=True, states=READONLY_STATES,\\\n  113:         default=lambda self: self.env.user.company_id.currency_id.id)\n  114      state = fields.Selection([\n  115          ('draft', 'Draft PO'),\n  ...\n  119          ('done', 'Done'),\n  120          ('cancel', 'Cancelled')\n  121:         ], string='Status', readonly=True, select=True, copy=False, default='draft', track_visibility='onchange')\n  122      order_line = fields.One2many('purchase.order.line', 'order_id', string='Order Lines', states=READONLY_STATES, copy=True)\n  123      notes = fields.Text('Terms and Conditions')\n  124  \n  125:     invoice_count = fields.Integer(compute=\"_compute_invoice\", string='# of Invoices', copy=False, default=0)\n  126      invoice_ids = fields.Many2many('account.invoice', compute=\"_compute_invoice\", string='Invoices', copy=False)\n  127      invoice_status = fields.Selection([\n  ...\n  129          ('to invoice', 'Waiting Invoices'),\n  130          ('invoiced', 'Invoice Received'),\n  131:         ], string='Invoice Status', compute='_get_invoiced', store=True, readonly=True, copy=False, default='no')\n  132  \n  133:     picking_count = fields.Integer(compute='_compute_picking', string='Receptions', default=0)\n  134      picking_ids = fields.Many2many('stock.picking', compute='_compute_picking', string='Receptions', copy=False)\n  135  \n  ...\n  146      product_id = fields.Many2one('product.product', related='order_line.product_id', string='Product')\n  147      create_uid = fields.Many2one('res.users', 'Responsible')\n  148:     company_id = fields.Many2one('res.company', 'Company', required=True, select=1, states=READONLY_STATES, default=lambda self: self.env.user.company_id.id)\n  149  \n  150:     picking_type_id = fields.Many2one('stock.picking.type', 'Deliver To', states=READONLY_STATES, required=True, default=_default_picking_type,\\\n  151          help=\"This will determine picking type of incoming shipment\")\n  152:     default_location_dest_id_usage = fields.Selection(related='picking_type_id.default_location_dest_id.usage', string='Destination Location Type',\\\n  153          help=\"Technical field used to display the Drop Ship Address\", readonly=True)\n  154      group_id = fields.Many2one('procurement.group', string=\"Procurement Group\")\n  ...\n  212      @api.onchange('picking_type_id')\n  213      def _onchange_picking_type_id(self):\n  214:         if self.picking_type_id.default_location_dest_id.usage != 'customer':\n  215              self.dest_address_id = False\n  216  \n  ...\n  218      def action_rfq_send(self):\n  219          '''\n  220:         This function opens a window to compose an email, with the edi purchase template message loaded by default\n  221          '''\n  222          self.ensure_one()\n  ...\n  235          ctx = dict(self.env.context or {})\n  236          ctx.update({\n  237:             'default_model': 'purchase.order',\n  238:             'default_res_id': self.ids[0],\n  239:             'default_use_template': bool(template_id),\n  240:             'default_template_id': template_id,\n  241:             'default_composition_mode': 'comment',\n  242          })\n  243          return {\n  ...\n  313          if self.dest_address_id:\n  314              return self.dest_address_id.property_stock_customer.id\n  315:         return self.picking_type_id.default_location_dest_id.id\n  316  \n  317      @api.model\n  ...\n  376          result = action.read()[0]\n  377  \n  378:         #override the context to get rid of the default filtering on picking type\n  379          result['context'] = {}\n  380          pick_ids = sum([order.picking_ids.ids for order in self], [])\n  ...\n  397          result = action.read()[0]\n  398  \n  399:         #override the context to get rid of the default filtering\n  400:         result['context'] = {'type': 'in_invoice', 'default_purchase_id': self.id}\n  401  \n  402          if not self.invoice_ids:\n  403:             # Choose a default account journal in the same currency in case a new invoice is created\n  404              journal_domain = [\n  405                  ('type', '=', 'purchase'),\n  ...\n  407                  ('currency_id', '=', self.currency_id.id),\n  408              ]\n  409:             default_journal_id = self.env['account.journal'].search(journal_domain, limit=1)\n  410:             if default_journal_id:\n  411:                 result['context']['default_journal_id'] = default_journal_id.id\n  412          else:\n  413              # Use the same account journal than a previous invoice\n  414:             result['context']['default_journal_id'] = self.invoice_ids[0].journal_id.id\n  415  \n  416          #choose the view_mode accordingly\n  ...\n  503      taxes_id = fields.Many2many('account.tax', string='Taxes')\n  504      product_uom = fields.Many2one('product.uom', string='Product Unit of Measure', required=True)\n  505:     product_id = fields.Many2one('product.product', string='Product', domain=[('purchase_ok', '=', True)], change_default=True, required=True)\n  506      move_ids = fields.One2many('stock.move', 'purchase_line_id', string='Reservation', readonly=True, ondelete='set null', copy=False)\n  507      price_unit = fields.Float(string='Unit Price', required=True, digits=dp.get_precision('Product Price'))\n  ...\n  599  \n  600             :param browse_record | False product: product.product, used to\n  601:                determine delivery delay thanks to the selected seller field (if False, default delay = 0)\n  602             :param browse_record | False po: purchase.order, necessary only if\n  603                 the PO line is not yet attached to a PO.\n  ...\n  607          date_order = po.date_order if po else self.order_id.date_order\n  608          if date_order:\n  609:             return datetime.strptime(date_order, DEFAULT_SERVER_DATETIME_FORMAT) + relativedelta(days=seller.delay if seller else 0)\n  610          else:\n  611              return datetime.today() + relativedelta(days=seller.delay if seller else 0)\n  ...\n  617              return result\n  618  \n  619:         # Reset date, price and quantity since _onchange_quantity will provide default values\n  620:         self.date_planned = datetime.today().strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n  621          self.price_unit = self.product_qty = 0.0\n  622          self.product_uom = self.product_id.uom_po_id or self.product_id.uom_id\n  ...\n  656  \n  657          if seller or not self.date_planned:\n  658:             self.date_planned = self._get_date_planned(seller).strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n  659  \n  660          if not seller:\n  ...\n  753      @api.v8\n  754      def _get_purchase_schedule_date(self):\n  755:         procurement_date_planned = datetime.strptime(self.date_planned, DEFAULT_SERVER_DATETIME_FORMAT)\n  756          schedule_date = (procurement_date_planned - relativedelta(days=self.company_id.po_lead))\n  757          return schedule_date\n  ...\n  766             :return: the desired Schedule Date for the PO lines\n  767          \"\"\"\n  768:         procurement_date_planned = datetime.strptime(procurement.date_planned, DEFAULT_SERVER_DATETIME_FORMAT)\n  769          schedule_date = (procurement_date_planned - relativedelta(days=procurement.company_id.po_lead))\n  770          return schedule_date\n  ...\n  823              name += '\\n' + product_lang.description_purchase\n  824  \n  825:         date_planned = self.env['purchase.order.line']._get_date_planned(seller, po=po).strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n  826  \n  827          return {\n  ...\n  856              'origin': self.origin,\n  857              'payment_term_id': partner.property_supplier_payment_term_id.id,\n  858:             'date_order': purchase_date.strftime(DEFAULT_SERVER_DATETIME_FORMAT),\n  859              'fiscal_position_id': fpos,\n  860              'group_id': group\n  ...\n  954          'account.account', string=\"Price Difference Account\", company_dependent=True,\n  955          help=\"This account will be used to value price difference between purchase price and cost price.\")\n  956:     purchase_ok = fields.Boolean('Can be Purchased', default=True)\n  957      purchase_count = fields.Integer(compute='_purchase_count', string='# Purchases')\n  958      purchase_method = fields.Selection([\n  959          ('purchase', 'On ordered quantities'),\n  960          ('receive', 'On received quantities'),\n  961:         ], string=\"Control Purchase Bills\", default=\"receive\")\n  962:     route_ids = fields.Many2many(default=lambda self: self._get_buy_route())\n  963  \n  964  \n  ...\n  996      @api.multi\n  997      def send_mail(self, auto_commit=False):\n  998:         if self._context.get('default_model') == 'purchase.order' and self._context.get('default_res_id'):\n  999:             order = self.env['purchase.order'].browse([self._context['default_res_id']])\n 1000              if order.state == 'draft':\n 1001                  order.state = 'sent'\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\purchase\\purchase_data.xml:\n   22          <record id=\"mt_rfq_confirmed\" model=\"mail.message.subtype\">\n   23              <field name=\"name\">RFQ Confirmed</field>\n   24:             <field name=\"default\" eval=\"False\"/>\n   25              <field name=\"res_model\">purchase.order</field>\n   26          </record>\n   27          <record id=\"mt_rfq_approved\" model=\"mail.message.subtype\">\n   28              <field name=\"name\">RFQ Approved</field>\n   29:             <field name=\"default\" eval=\"False\"/>\n   30              <field name=\"res_model\">purchase.order</field>\n   31          </record>\n   32          <record id=\"mt_rfq_done\" model=\"mail.message.subtype\">\n   33              <field name=\"name\">RFQ Done</field>\n   34:             <field name=\"default\" eval=\"False\"/>\n   35              <field name=\"res_model\">purchase.order</field>\n   36          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\purchase\\purchase_view.xml:\n   70          <field name=\"view_type\">form</field>\n   71          <field name=\"view_mode\">kanban,tree,form</field>\n   72:         <field name=\"context\">{\"search_default_filter_to_purchase\":1}</field>\n   73          <field name=\"search_view_id\" eval=\"False\"/> <!-- Force empty -->\n   74          <field name=\"view_id\" eval=\"False\"/> <!-- Force empty -->\n   ..\n  177                      <group>\n  178                          <group>\n  179:                             <field name=\"partner_id\" context=\"{'search_default_supplier':1, 'default_supplier':1, 'default_customer':0}\" domain=\"[('supplier','=',True)]\"/>\n  180                              <field name=\"partner_ref\"/>\n  181                              <field name=\"currency_id\" groups=\"base.group_multi_currency\"/>\n  ...\n  195                                      <field name=\"date_planned\"/>\n  196                                      <field name=\"company_id\" groups=\"base.group_multi_company\" options=\"{'no_create': True}\"/>\n  197:                                     <field name=\"account_analytic_id\" context=\"{'default_partner_id':parent.partner_id}\" groups=\"purchase.group_analytic_accounting\"/>\n  198                                      <field name=\"product_qty\"/>\n  199                                      <field name=\"qty_received\" invisible=\"not context.get('show_purchase', False)\"/>\n  ...\n  201                                      <field name=\"product_uom\" groups=\"product.group_uom\"/>\n  202                                      <field name=\"price_unit\"/>\n  203:                                     <field name=\"taxes_id\" widget=\"many2many_tags\" domain=\"[('type_tax_use','=','purchase')]\" context=\"{'default_type_tax_use': 'purchase'}\"/>\n  204                                      <field name=\"price_subtotal\" widget=\"monetary\"/>\n  205                                  </tree>\n  ...\n  244                                  <field name=\"amount_total\" nolabel=\"1\" class=\"oe_subtotal_footer_separator\" widget=\"monetary\" options=\"{'currency_field': 'currency_id'}\"/>\n  245                              </group>\n  246:                             <field name=\"notes\" class=\"oe_inline\" placeholder=\"An administrator can set up default Terms and conditions in your Company settings.\"/>\n  247                              <div class=\"oe_clear\"/>\n  248                          </page>\n  ...\n  252                                      <field name=\"date_planned\"/>\n  253                                      <field name=\"picking_type_id\" domain=\"[('code','=','incoming')]\" options=\"{'no_create': True}\" context=\"{'special_shortened_wh_name': True}\" groups=\"stock.group_locations\"/>\n  254:                                     <field name=\"dest_address_id\" groups=\"stock.group_locations\" attrs=\"{'invisible': [('default_location_dest_id_usage', '!=', 'customer')], 'required': [('default_location_dest_id_usage', '=', 'customer')]}\"/>\n  255:                                     <field name=\"default_location_dest_id_usage\" invisible=\"1\"/>\n  256                                      <field name=\"incoterm_id\"/>\n  257                                  </group>\n  ...\n  327                                      </div>\n  328                                      <div class=\"col-xs-6\">\n  329:                                         <span t-attf-class=\"pull-right text-right label #{['draft', 'cancel'].indexOf(record.state.raw_value) > -1 ? 'label-default' : ['approved'].indexOf(record.state.raw_value) > -1 ? 'label-warning' : ['done'].indexOf(record.state.raw_value) > -1 ? 'label-success' : 'label-primary'}\"><t t-esc=\"record.state.value\"/></span>\n  330                                      </div>\n  331                                  </div>\n  ...\n  360              <field name=\"type\">ir.actions.act_window</field>\n  361              <field name=\"res_model\">purchase.order</field>\n  362:             <field name=\"context\">{'search_default_todo':1}</field>\n  363              <field name=\"domain\">[('state','in',('draft','sent','bid','cancel', 'confirmed'))]</field>\n  364              <field name=\"view_mode\">tree,kanban,form,pivot,graph,calendar</field>\n  ...\n  386              <field name=\"res_model\">purchase.order</field>\n  387              <field name=\"view_mode\">tree,kanban,form,pivot,graph,calendar</field>\n  388:             <field name=\"context\">{'search_default_todo':1, 'show_purchase': True}</field>\n  389              <field name=\"domain\">[('state','not in',('draft','sent','bid', 'confirmed'))]</field>\n  390              <field name=\"search_view_id\" ref=\"view_purchase_order_filter\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\purchase\\report\\purchase_report_view.xml:\n   87          <field name=\"view_type\">form</field>\n   88          <field name=\"view_mode\">pivot,graph</field>\n   89:         <field name=\"context\">{'search_default_orders': 1}</field>\n   90          <field name=\"view_id\"></field>  <!-- force empty -->\n   91          <field name=\"help\">Purchase Analysis allows you to easily check and analyse your company purchase history and performance. From this menu you can track your negotiation performance, the delivery performance of your vendors, etc.</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\purchase\\stock.py:\n   36          return super(stock_move, self).get_price_unit(cr, uid, move, context=context)\n   37  \n   38:     def copy(self, cr, uid, id, default=None, context=None):\n   39:         default = default or {}\n   40          context = context or {}\n   41:         if not default.get('split_from'):\n   42              #we don't want to propagate the link to the purchase order line except in case of move split\n   43:             default['purchase_line_id'] = False\n   44:         return super(stock_move, self).copy(cr, uid, id, default, context)\n   45  \n   46  \n   ..\n   52          'buy_pull_id': fields.many2one('procurement.rule', 'Buy rule'),\n   53      }\n   54:     _defaults = {\n   55          'buy_to_resupply': True,\n   56      }\n   ..\n   69          return {\n   70              'name': self._format_routename(cr, uid, warehouse, _(' Buy'), context=context),\n   71:             'location_id': warehouse.in_type_id.default_location_dest_id.id,\n   72              'route_id': buy_route_id,\n   73              'action': 'buy',\n   ..\n  130      def change_route(self, cr, uid, ids, warehouse, new_reception_step=False, new_delivery_step=False, context=None):\n  131          res = super(stock_warehouse, self).change_route(cr, uid, ids, warehouse, new_reception_step=new_reception_step, new_delivery_step=new_delivery_step, context=context)\n  132:         if warehouse.in_type_id.default_location_dest_id != warehouse.buy_pull_id.location_id:\n  133:             self.pool.get('procurement.rule').write(cr, uid, warehouse.buy_pull_id.id, {'location_id': warehouse.in_type_id.default_location_dest_id.id}, context=context)\n  134          return res\n  135  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\purchase\\stock_view.xml:\n   29              <field name=\"inherit_id\" ref=\"stock.view_warehouse\"/>\n   30              <field name=\"arch\" type=\"xml\">\n   31:                  <xpath expr=\"//field[@name='default_resupply_wh_id']\" position=\"before\">\n   32                      <field name=\"buy_to_resupply\" />\n   33                  </xpath>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\purchase\\tests\\test_onchange_product_id.py:\n    1  from datetime import datetime\n    2  from openerp.tests.common import TransactionCase\n    3: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT\n    4  \n    5  class TestOnchangeProductId(TransactionCase):\n    .\n   61                      'product_uom': uom_id.id,\n   62                      'price_unit': 121.0,\n   63:                     'date_planned': datetime.today().strftime(DEFAULT_SERVER_DATETIME_FORMAT),\n   64                  })],\n   65          }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\purchase\\tests\\test_purchase_order.py:\n    3  \n    4  from datetime import datetime\n    5: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT\n    6  from openerp.tests import common\n    7  \n    .\n   41                      'product_uom': self.product_id_1.uom_po_id.id,\n   42                      'price_unit': 500.0,\n   43:                     'date_planned': datetime.today().strftime(DEFAULT_SERVER_DATETIME_FORMAT),\n   44                  }),\n   45                  (0, 0, {\n   ..\n   49                      'product_uom': self.product_id_2.uom_po_id.id,\n   50                      'price_unit': 250.0,\n   51:                     'date_planned': datetime.today().strftime(DEFAULT_SERVER_DATETIME_FORMAT),\n   52                  })],\n   53          }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\purchase_requisition\\purchase_requisition.py:\n    4  from datetime import datetime\n    5  from openerp.osv import fields, osv\n    6: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT, DEFAULT_SERVER_DATE_FORMAT\n    7  from openerp.tools.translate import _\n    8  import openerp.addons.decimal_precision as dp\n    .\n   50          return obj_data.get_object_reference(cr, uid, 'stock', 'picking_type_in')[1]\n   51  \n   52:     _defaults = {\n   53          'state': 'draft',\n   54          'exclusive': 'multiple',\n   55:         'company_id': lambda self, cr, uid, c: self.pool.get('res.company')._company_default_get(cr, uid, 'purchase.requisition', context=c),\n   56          'user_id': lambda self, cr, uid, c: self.pool.get('res.users').browse(cr, uid, uid, c).id,\n   57          'name': lambda obj, cr, uid, context: obj.pool.get('ir.sequence').next_by_code(cr, uid, 'purchase.order.requisition'),\n   ..\n   88  \n   89      def open_product_line(self, cr, uid, ids, context=None):\n   90:         \"\"\" This opens product line view to view all lines from the different quotations, groupby default by product and partner to show comparaison\n   91              between vendor price\n   92              @return: the product line tree view\n   ..\n   98          po_lines = self.browse(cr, uid, ids, context=context)[0].po_line_ids\n   99          res['context'] = {\n  100:             'search_default_groupby_product': True,\n  101:             'search_default_hide_cancelled': True,\n  102              'tender_id': ids[0],\n  103          }\n  ...\n  137          product_uom = self.pool.get('product.uom')\n  138          product = requisition_line.product_id\n  139:         default_uom_po_id = product.uom_po_id.id\n  140          ctx = context.copy()\n  141          ctx['tz'] = requisition.user_id.tz\n  142          date_order = requisition.ordering_date and fields.date.date_to_datetime(self, cr, uid, requisition.ordering_date, context=ctx) or fields.datetime.now()\n  143:         qty = product_uom._compute_qty(cr, uid, requisition_line.product_uom_id.id, requisition_line.product_qty, default_uom_po_id)\n  144  \n  145          taxes = product.supplier_taxes_id\n  ...\n  159              price_unit = seller.currency_id.compute(price_unit, po.currency_id)\n  160  \n  161:         date_planned = po_line_obj._get_date_planned(cr, uid, seller, po=po, context=context).strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n  162  \n  163          product_lang = requisition_line.product_id.with_context({\n  ...\n  174              'product_qty': qty,\n  175              'product_id': product.id,\n  176:             'product_uom': default_uom_po_id,\n  177              'price_unit': price_unit,\n  178              'date_planned': date_planned,\n  ...\n  279                  quotation_id = po.search(cr, uid, [('requisition_id', '=', tender.id), ('partner_id', '=', supplier)], limit=1)[0]\n  280                  vals = self._prepare_po_from_tender(cr, uid, tender, context=context)\n  281:                 new_po = po.copy(cr, uid, quotation_id, default=vals, context=context)\n  282                  #duplicate po_line and change product_qty if needed and associate them to newly created PO\n  283                  for line in product_line:\n  284                      vals = self._prepare_po_line_from_tender(cr, uid, tender, line, new_po, context=context)\n  285:                     poline.copy(cr, uid, line.id, default=vals, context=context)\n  286                  #use workflow to set new PO state to confirm\n  287                  po.button_confirm(cr, uid, [new_po], context=context)\n  ...\n  335          return {'value': value}\n  336  \n  337:     _defaults = {\n  338:         'company_id': lambda self, cr, uid, c: self.pool.get('res.company')._company_default_get(cr, uid, 'purchase.requisition.line', context=c),\n  339      }\n  340  \n  ...\n  397      }\n  398  \n  399:     _defaults = {\n  400          'purchase_requisition': 'rfq',\n  401      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\purchase_requisition\\purchase_requisition_data.xml:\n    3      <data noupdate=\"1\">\n    4          <function\n    5:             eval=\"('default',False,'warehouse_id', [('purchase.requisition', False)], ref('stock.warehouse0'), True, False, False, False, True)\"\n    6:             id=\"purchase_default_set\"\n    7              model=\"ir.values\"\n    8              name=\"set\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\purchase_requisition\\purchase_requisition_view.xml:\n   54                  <group>\n   55                      <group>\n   56:                         <field name=\"user_id\" context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'purchase.group_purchase_user', 'account.group_account_invoice']}\" attrs=\"{'readonly': [('state','not in',('draft'))]}\"/>\n   57                          <field name=\"exclusive\" attrs=\"{'readonly': [('state','not in',('draft'))]}\"/>\n   58                          <field name=\"account_analytic_id\" colspan=\"2\" groups=\"purchase.group_analytic_accounting\" attrs=\"{'readonly': [('state','not in',('draft'))]}\"/>\n   ..\n  170          <field name=\"view_type\">form</field>\n  171          <field name=\"view_mode\">tree,form</field>\n  172:         <field name=\"context\">{\"search_default_user_id\":uid}</field>\n  173          <field name=\"search_view_id\" ref=\"view_purchase_requisition_filter\"/>\n  174          <field name=\"help\" type=\"html\">\n  ...\n  214      <act_window\n  215              domain=\"[('requisition_id', '=', active_id)]\"\n  216:             context=\"{'default_requisition_id': active_id}\"\n  217              id=\"act_res_partner_2_purchase_order\"\n  218              name=\"Purchase orders\"\n  ...\n  248              <field name=\"name\">Tender Lines</field>\n  249              <field name=\"res_model\">purchase.order.line</field>\n  250:             <field name=\"context\">{\"search_default_groupby_product\" : True,}</field>\n  251              <field name=\"view_type\">form</field>\n  252              <field name=\"view_mode\">tree_purchase_order_line_compare</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\purchase_requisition\\wizard\\bid_line_qty_view.xml:\n    8                  <form string=\"Quantity\">\n    9                      <group>\n   10:                         <field name=\"qty\" context=\"{'default_qty': 0}\"/>\n   11                      </group>\n   12                      <footer>\n   13                          <button name=\"change_qty\" string=\"Change Quantity\" type=\"object\" class=\"btn-primary\"/>\n   14:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   15                      </footer>\n   16                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\purchase_requisition\\wizard\\purchase_requisition_partner_view.xml:\n    8                  <form string=\"Choose Vendor\">\n    9                      <group>\n   10:                         <field name=\"partner_ids\" widget=\"many2many_tags\" context=\"{'default_supplier': 1, 'default_customer': 0}\"/>\n   11                      </group>\n   12                      <footer>\n   13                          <button name=\"create_order\" string=\"Create Request for Quotation\" type=\"object\" class=\"btn-primary\"/>\n   14:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   15                      </footer>\n   16                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\rating\\models\\rating.py:\n   28      rated_partner_id = fields.Many2one('res.partner', string=\"Rated Partner\", help=\"Owner of the rated ressource\")\n   29      partner_id = fields.Many2one('res.partner', string='Customer', help=\"Author of the rating\")\n   30:     rating = fields.Float(string=\"Rating\", group_operator=\"avg\", default=-1, help=\"Rating value\")\n   31      feedback = fields.Text('Feedback reason', help=\"Reason of the rating\")\n   32:     access_token = fields.Char(string='Security Token', default=new_access_token, help=\"Access token to set the rating of the value\")\n   33  \n   34      message_id = fields.Many2one('mail.message', string=\"Linked message\", help=\"Associated message when posting a review. Mainly used in website addons.\", index=True)\n   ..\n   55                      % (rating.sudo().partner_id.name, _('rated it'), rate),\n   56                      subtype='mail.mt_comment',\n   57:                     author_id=rating.partner_id and rating.partner_id.id or None # None will set the default author in mail_thread.py\n   58                  )\n   59          return rating\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\rating\\static\\src\\xml\\rating_common.xml:\n   15          <input type=\"hidden\" readonly=\"readonly\"\n   16              name=\"rating\"\n   17:             t-att-data-default=\"widget.options.rating_default_value || 0.0\"\n   18              t-att-data-is_disabled=\"widget.options.rating_disabled ? 1 : 0\"/>\n   19          </div>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\rating\\views\\rating_template.xml:\n   20          <!-- Rating Star Widget (Generic widget)\n   21              :param String rating_input_name : the name of the input field to send the rating\n   22:             :param Float rating_default_value : the rate to initialize the widget with\n   23:             :param Boolean rating_disabled : is the widget disabled (False), or it is just used to display information (True). Default value is False\n   24          -->\n   25          <template id=\"rating_star_card\" name=\"Rating Star Widget\">\n   ..\n   37              <input type=\"hidden\" readonly=\"readonly\"\n   38                  t-att-name=\"rating_input_name or 'rating'\"\n   39:                 t-att-data-default=\"rating_default_value or 0.0\"\n   40                  t-att-data-is_disabled=\"rating_disabled and 1 or 0\"/>\n   41              </div>\n   ..\n   59                          data-toggle=\"rating-popover\">\n   60                          <t t-call=\"rating.rating_star_card\">\n   61:                             <t t-set=\"rating_default_value\" t-value=\"'%.2f' % (rating_stat.get('avg', 0.0),)\"/>\n   62                              <t t-set=\"rating_disabled\" t-value=\"True\"/>\n   63                          </t>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\rating_project\\models\\project.py:\n   12          domain=[('model', '=', 'rating.rating')],\n   13          help=\"Select an email template. An email will be sent to the customer when the task reach this step.\")\n   14:     auto_validation_kanban_state = fields.Boolean('Auto Kanban state validation', default=False,\n   15          help=\"Automatically modify the kanban state when the customer reply to the feedback for this stage.\\n\"\n   16              \" * A great feedback from the customer will update the kanban state to 'ready for the new stage' (green bullet).\\n\"\n   ..\n   50  \n   51      percentage_satisfaction_task = fields.Integer(\n   52:         compute='_compute_percentage_satisfaction_task', string='% Happy', store=True, default=-1)\n   53      percentage_satisfaction_project = fields.Integer(\n   54:         compute=\"_compute_percentage_satisfaction_project\", string=\"% Happy\", store=True, default=-1)\n   55:     is_visible_happy_customer = fields.Boolean(string=\"Customer Satisfaction\", default=False,\n   56          help=\"Display informations about rating of the project on kanban and form view. This buttons will only be displayed if at least a rating exists.\")\n   57  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\rating_project_issue\\models\\project_issue.py:\n   69          self.percentage_satisfaction_issue = activity['great'] * 100 / sum(activity.values()) if sum(activity.values()) else -1\n   70  \n   71:     percentage_satisfaction_issue = fields.Integer(compute='_compute_percentage_satisfaction_issue', string='% Happy', store=True, default=-1)\n   72  \n   73      @api.multi\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\report\\controllers\\main.py:\n   63          'Extended93', 'FIM', 'I2of5', 'MSI', 'POSTNET', 'QR', 'Standard39', 'Standard93',\n   64          'UPCA', 'USPS_4State'\n   65:         :param humanreadable: Accepted values: 0 (default) or 1. 1 will insert the readable value\n   66          at the bottom of the output image\n   67          \"\"\"\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\report\\data\\report_paperformat.xml:\n    4          <record id=\"paperformat_euro\" model=\"report.paperformat\">\n    5              <field name=\"name\">European A4</field>\n    6:             <field name=\"default\" eval=\"True\" />\n    7              <field name=\"format\">A4</field>\n    8              <field name=\"page_height\">0</field>\n    .\n   20          <record id=\"paperformat_us\" model=\"report.paperformat\">\n   21              <field name=\"name\">US Letter</field>\n   22:             <field name=\"default\" eval=\"True\" />\n   23              <field name=\"format\">Letter</field>\n   24              <field name=\"page_height\">0</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\report\\models\\report.py:\n   94              if request.website is not None:\n   95                  website = request.website\n   96:                 context = dict(context, translatable=context.get('lang') != request.website.default_lang_code)\n   97  \n   98          values.update(\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\report\\models\\report_paperformat.py:\n   13  \n   14      _columns = {'name': fields.char('Name', required=True),\n   15:                 'default': fields.boolean('Default paper format ?'),\n   16                  'format': fields.selection([('A0', 'A0  5   841 x 1189 mm'),\n   17                                              ('A1', 'A1  6   594 x 841 mm'),\n   ..\n   80      ]\n   81  \n   82:     _defaults = {\n   83          'format': 'A4',\n   84          'margin_top': 40,\n   ..\n  101  \n  102      def init(self, cr):\n  103:         # set a default paperformat based on rml one.\n  104          ref = partial(self.pool['ir.model.data'].xmlid_to_res_id, cr, SUPERUSER_ID)\n  105  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\report_intrastat\\report_intrastat.py:\n   13          'intrastat': fields.boolean('Intrastat member'),\n   14      }\n   15:     _defaults = {\n   16          'intrastat': lambda *a: False,\n   17      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\report_webkit\\__openerp__.py:\n   43  \n   44  If you are experiencing missing header/footer problems on Linux, be sure to\n   45: install a 'static' version of the library. The default ``wkhtmltopdf`` on\n   46  Ubuntu is known to have this issue.\n   47  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\report_webkit\\data.xml:\n    2  <openerp>\n    3      <data noupdate=\"1\">\n    4:         <record id=\"ir_property_webkitheaderdefault0\" model=\"ir.property\">\n    5              <field name=\"fields_id\" ref=\"field_ir_act_report_xml_webkit_header\"/>\n    6:             <field eval=\"&quot;&quot;&quot;webkit_header_default&quot;&quot;&quot;\" name=\"name\"/>\n    7              <field eval=\"&quot;&quot;&quot;ir.header_webkit,1&quot;&quot;&quot;\" name=\"value\"/>\n    8          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\report_webkit\\webkit_report.py:\n  140  \n  141          command.append('--quiet')\n  142:         # default to UTF-8 encoding.  Use <meta charset=\"latin-1\"> to override.\n  143          command.extend(['--encoding', 'utf-8'])\n  144          if header :\n  ...\n  263          if not report_xml.use_global_header :\n  264              header = ''\n  265:             default_head = get_module_resource('report_webkit', 'default_header.html')\n  266:             with open(default_head,'r') as f:\n  267                  header = f.read()\n  268          css = report_xml.webkit_header.css\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\report_webkit\\wizard\\report_webkit_actions.py:\n   15         'open_action':fields.boolean('Open added action', help=\"Check this to view the newly added internal print action after creating it (technical view) \"),\n   16      }\n   17:     _defaults = {\n   18               'print_button': lambda *a: True,\n   19               'open_action': lambda *a: False,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\report_webkit\\wizard\\report_webkit_actions_view.xml:\n   14                      <footer>\n   15                          <button name=\"do_action\" type=\"object\" string=\"_Ok\" class=\"btn-primary\"/>\n   16:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   17                      </footer>\n   18                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\resource\\resource.py:\n    5  from dateutil import rrule\n    6  from dateutil.relativedelta import relativedelta\n    7: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT\n    8  from operator import itemgetter\n    9  \n   ..\n   39          ),\n   40      }\n   41:     _defaults = {\n   42:         'company_id': lambda self, cr, uid, context: self.pool.get('res.company')._company_default_get(cr, uid, 'resource.calendar', context=context)\n   43      }\n   44  \n   ..\n  159          calendar = self.browse(cr, uid, id, context=None)\n  160          weekday = date.weekday()\n  161:         date = date.strftime(DEFAULT_SERVER_DATE_FORMAT)\n  162          res = []\n  163          for att in calendar.attendance_ids:\n  ...\n  167          return res\n  168  \n  169:     def get_weekdays(self, cr, uid, id, default_weekdays=None, context=None):\n  170          \"\"\" Return the list of weekdays that contain at least one working interval.\n  171:         If no id is given (no calendar), return default weekdays. \"\"\"\n  172          if id is None:\n  173:             return default_weekdays if default_weekdays is not None else [0, 1, 2, 3, 4]\n  174          calendar = self.browse(cr, uid, id, context=None)\n  175          weekdays = set()\n  ...\n  254              if leave.resource_id and not resource_id == leave.resource_id.id:\n  255                  continue\n  256:             date_from = datetime.datetime.strptime(leave.date_from, tools.DEFAULT_SERVER_DATETIME_FORMAT)\n  257              if end_datetime and date_from > end_datetime:\n  258                  continue\n  259:             date_to = datetime.datetime.strptime(leave.date_to, tools.DEFAULT_SERVER_DATETIME_FORMAT)\n  260              if start_datetime and date_to < start_datetime:\n  261                  continue\n  ...\n  265      def get_working_intervals_of_day(self, cr, uid, id, start_dt=None, end_dt=None,\n  266                                       leaves=None, compute_leaves=False, resource_id=None,\n  267:                                      default_interval=None, context=None):\n  268          \"\"\" Get the working intervals of the day based on calendar. This method\n  269          handle leaves that come directly from the leaves parameter or can be computed.\n  ...\n  290                                  leaves are computed. If set, generic and\n  291                                  specific leaves are computed.\n  292:         :param tuple default_interval: if no id, try to return a default working\n  293:                                        day using default_interval[0] as beginning\n  294:                                        hour, and default_interval[1] as ending hour.\n  295:                                        Example: default_interval = (8, 16).\n  296                                         Otherwise, a void list of working intervals\n  297                                         is returned when id is None.\n  ...\n  302              id = id[0]\n  303  \n  304:         # Computes start_dt, end_dt (with default values if not set) + off-interval work limits\n  305          work_limits = []\n  306          if start_dt is None and end_dt is not None:\n  ...\n  319          work_dt = start_dt.replace(hour=0, minute=0, second=0)\n  320  \n  321:         # no calendar: try to use the default_interval, then return directly\n  322          if id is None:\n  323              working_interval = []\n  324:             if default_interval:\n  325:                 working_interval = (start_dt.replace(hour=default_interval[0], minute=0, second=0),\n  326:                                     start_dt.replace(hour=default_interval[1], minute=0, second=0))\n  327              intervals = self.interval_remove_leaves(cr, uid, working_interval, work_limits, context=context)\n  328              return intervals\n  ...\n  361      def get_working_hours_of_date(self, cr, uid, id, start_dt=None, end_dt=None,\n  362                                    leaves=None, compute_leaves=False, resource_id=None,\n  363:                                   default_interval=None, context=None):\n  364          \"\"\" Get the working hours of the day based on calendar. This method uses\n  365          get_working_intervals_of_day to have the work intervals of the day. It\n  ...\n  370              start_dt, end_dt, leaves,\n  371              compute_leaves, resource_id,\n  372:             default_interval, context)\n  373          for interval in intervals:\n  374              res += interval[1] - interval[0]\n  ...\n  376  \n  377      def get_working_hours(self, cr, uid, id, start_dt, end_dt, compute_leaves=False,\n  378:                           resource_id=None, default_interval=None, context=None):\n  379          hours = 0.0\n  380          for day in rrule.rrule(rrule.DAILY, dtstart=start_dt,\n  ...\n  390                  cr, uid, id, start_dt=day_start_dt, end_dt=day_end_dt,\n  391                  compute_leaves=compute_leaves, resource_id=resource_id,\n  392:                 default_interval=default_interval,\n  393                  context=context)\n  394          return hours\n  ...\n  400      def _schedule_hours(self, cr, uid, id, hours, day_dt=None,\n  401                          compute_leaves=False, resource_id=None,\n  402:                         default_interval=None, context=None):\n  403          \"\"\" Schedule hours of work, using a calendar and an optional resource to\n  404          compute working and leave days. This method can be used backwards, i.e.\n  ...\n  417                                  leaves are computed. If set, generic and\n  418                                  specific leaves are computed.\n  419:         :param tuple default_interval: if no id, try to return a default working\n  420:                                        day using default_interval[0] as beginning\n  421:                                        hour, and default_interval[1] as ending hour.\n  422:                                        Example: default_interval = (8, 16).\n  423                                         Otherwise, a void list of working intervals\n  424                                         is returned when id is None.\n  ...\n  440          current_datetime = day_dt\n  441  \n  442:         call_args = dict(compute_leaves=compute_leaves, resource_id=resource_id, default_interval=default_interval, context=context)\n  443  \n  444          while float_compare(remaining_hours, 0.0, precision_digits=2) in (1, 0) and iterations < 1000:\n  ...\n  479      def schedule_hours_get_date(self, cr, uid, id, hours, day_dt=None,\n  480                                  compute_leaves=False, resource_id=None,\n  481:                                 default_interval=None, context=None):\n  482          \"\"\" Wrapper on _schedule_hours: return the beginning/ending datetime of\n  483          an hours scheduling. \"\"\"\n  484:         res = self._schedule_hours(cr, uid, id, hours, day_dt, compute_leaves, resource_id, default_interval, context)\n  485          return res and res[0][0] or False\n  486  \n  487      def schedule_hours(self, cr, uid, id, hours, day_dt=None,\n  488                         compute_leaves=False, resource_id=None,\n  489:                        default_interval=None, context=None):\n  490          \"\"\" Wrapper on _schedule_hours: return the working intervals of an hours\n  491          scheduling. \"\"\"\n  492:         return self._schedule_hours(cr, uid, id, hours, day_dt, compute_leaves, resource_id, default_interval, context)\n  493  \n  494  \n  ...\n  498  \n  499      def _schedule_days(self, cr, uid, id, days, day_date=None, compute_leaves=False,\n  500:                        resource_id=None, default_interval=None, context=None):\n  501          \"\"\"Schedule days of work, using a calendar and an optional resource to\n  502          compute working and leave days. This method can be used backwards, i.e.\n  ...\n  515                                  leaves are computed. If set, generic and\n  516                                  specific leaves are computed.\n  517:         :param tuple default_interval: if no id, try to return a default working\n  518:                                        day using default_interval[0] as beginning\n  519:                                        hour, and default_interval[1] as ending hour.\n  520:                                        Example: default_interval = (8, 16).\n  521                                         Otherwise, a void list of working intervals\n  522                                         is returned when id is None.\n  ...\n  542                  cr, uid, id, current_datetime,\n  543                  compute_leaves=compute_leaves, resource_id=resource_id,\n  544:                 default_interval=default_interval,\n  545                  context=context)\n  546              if id is None or working_intervals:  # no calendar -> no working hours, but day is considered as worked\n  ...\n  558  \n  559      def schedule_days_get_date(self, cr, uid, id, days, day_date=None, compute_leaves=False,\n  560:                                resource_id=None, default_interval=None, context=None):\n  561          \"\"\" Wrapper on _schedule_days: return the beginning/ending datetime of\n  562          a days scheduling. \"\"\"\n  563:         res = self._schedule_days(cr, uid, id, days, day_date, compute_leaves, resource_id, default_interval, context)\n  564          return res and res[-1][1] or False\n  565  \n  566      def schedule_days(self, cr, uid, id, days, day_date=None, compute_leaves=False,\n  567:                       resource_id=None, default_interval=None, context=None):\n  568          \"\"\" Wrapper on _schedule_days: return the working intervals of a days\n  569          scheduling. \"\"\"\n  570:         return self._schedule_days(cr, uid, id, days, day_date, compute_leaves, resource_id, default_interval, context)\n  571  \n  572      # --------------------------------------------------\n  ...\n  592              day_dt=dt_from.replace(minute=0, second=0),\n  593              compute_leaves=True, resource_id=resource,\n  594:             default_interval=(8, 16)\n  595          )\n  596  \n  597      def interval_get_multi(self, cr, uid, date_and_hours_by_cal, resource=False, byday=True):\n  598:         \"\"\" Used in mrp_operations/mrp_operations.py (default parameters) and in\n  599          interval_get()\n  600  \n  ...\n  607                  day_dt=datetime.datetime.strptime(dt_str, '%Y-%m-%d %H:%M:%S').replace(second=0),\n  608                  compute_leaves=True, resource_id=resource,\n  609:                 default_interval=(8, 16)\n  610              )\n  611              res[(dt_str, hours, calendar_id)] = result\n  ...\n  635              cr, uid, id, dt_from, dt_to,\n  636              compute_leaves=(not exclude_leaves), resource_id=resource_id,\n  637:             default_interval=(8, 16), context=context)\n  638  \n  639  \n  ...\n  654      _order = 'dayofweek, hour_from'\n  655  \n  656:     _defaults = {\n  657          'dayofweek' : '0'\n  658      }\n  ...\n  674          'resource_type': fields.selection([('user','Human'),('material','Material')], 'Resource Type', required=True),\n  675          'user_id' : fields.many2one('res.users', 'User', help='Related user name for the resource to manage its access.'),\n  676:         'time_efficiency' : fields.float('Efficiency Factor', size=8, required=True, help=\"This field depict the efficiency of the resource to complete tasks. e.g  resource put alone on a phase of 5 days with 5 tasks assigned to him, will show a load of 100% for this phase by default, but if we put a efficiency of 200%, then his load will only be 50%.\"),\n  677          'calendar_id' : fields.many2one(\"resource.calendar\", \"Working Time\", help=\"Define the schedule of resource\"),\n  678      }\n  679  \n  680:     _defaults = {\n  681          'resource_type' : 'user',\n  682          'time_efficiency' : 1,\n  683          'active' : True,\n  684:         'company_id': lambda self, cr, uid, context: self.pool.get('res.company')._company_default_get(cr, uid, 'resource.resource', context=context)\n  685      }\n  686  \n  687:     def copy(self, cr, uid, id, default=None, context=None):\n  688:         if default is None:\n  689:             default = {}\n  690:         if not default.get('name', False):\n  691:             default.update(name=_('%s (copy)') % (self.browse(cr, uid, id, context=context).name))\n  692:         return super(resource_resource, self).copy(cr, uid, id, default, context)\n  693  \n  694  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\resource\\resource_view.xml:\n  148              src_model=\"resource.calendar\"\n  149              view_mode=\"calendar,tree,form\"\n  150:             context=\"{'default_calendar_id': active_id}\"\n  151              domain=\"[('calendar_id','=',active_id), ('resource_id','=',False)]\"/>\n  152  \n  ...\n  157              src_model=\"resource.calendar\"\n  158              view_mode=\"calendar,tree,form\"\n  159:             context=\"{'default_calendar_id': active_id}\"\n  160              domain=\"[('calendar_id','=',active_id), ('resource_id','!=',False)]\"/>\n  161  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\resource\\tests\\test_resource.py:\n  397          # --------------------------------------------------\n  398  \n  399:         # Test without calendar and default_interval\n  400          res = self.resource_calendar.get_working_hours(\n  401              cr, uid, None,\n  ...\n  403              self.date2.replace(hour=23, minute=0),\n  404              compute_leaves=True, resource_id=self.resource1_id,\n  405:             default_interval=(8, 16), context=context)\n  406          self.assertEqual(res, 32.0, 'resource_calendar: wrong get_working_hours computation')\n  407  \n  ...\n  429          # --------------------------------------------------\n  430  \n  431:         # Without calendar, should only count days -> 12 -> 16, 5 days with default intervals\n  432:         res = self.resource_calendar.schedule_days_get_date(cr, uid, None, 5, day_date=self.date1, default_interval=(8, 16), context={'tz': 'UTC'})\n  433          self.assertEqual(res, datetime.strptime('2013-02-16 16:00:00', _format), 'resource_calendar: wrong days scheduling')\n  434  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale\\report\\sale_report_view.xml:\n   92          <field name=\"view_id\"></field>  <!-- force empty -->\n   93          <field name=\"search_view_id\" ref=\"view_order_product_search\"/>\n   94:         <field name=\"context\">{'search_default_Sales':1, 'group_by_no_leaf':1,'group_by':[]}</field>\n   95          <field name=\"help\">This report performs analysis on your quotations and sales orders. Analysis check your sales revenues and sort it by different group criteria (salesman, partner, product, etc.) Use this report to perform analysis on sales not having invoiced yet. If you want to analyse your turnover, you should use the Invoice Analysis report in the Accounting application.</field>\n   96      </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale\\res_config.py:\n   58               'Different prices per Customer: you can assign price on buying of minimum quantity in products sale tab.\\n'\n   59               'Advanced pricing based on formula: You can have all the rights on pricelist'),\n   60:         'default_invoice_policy': fields.selection([\n   61              ('order', 'Invoice ordered quantities'),\n   62              ('delivery', 'Invoice delivered quantities'),\n   63              ('cost', 'Invoice based on costs (time and material, expenses)')\n   64:             ], 'Default Invoicing', default_model='product.template'),\n   65          'deposit_product_id_setting': fields.many2one('product.product', 'Deposit Product',\\\n   66              domain=\"[('type', '=', 'service')]\",\\\n   67:             help='Default product used for payment advances'),\n   68          'auto_done_setting': fields.selection([\n   69              (0, \"Allow to edit sales order from the 'Sales Order' menu (not from the Quotation menu)\"),\n   ..\n   75      }\n   76  \n   77:     _defaults = {\n   78          'sale_pricelist_setting': 'fixed',\n   79:         'default_invoice_policy': 'order',\n   80      }\n   81  \n   82:     def set_sale_defaults(self, cr, uid, ids, context=None):\n   83          sale_price = self.browse(cr, uid, ids, context=context).sale_pricelist_setting\n   84:         res = self.pool.get('ir.values').set_default(cr, SUPERUSER_ID, 'sale.config.settings', 'sale_pricelist_setting', sale_price)\n   85          return res\n   86  \n   87:     def set_deposit_product_id_defaults(self, cr, uid, ids, context=None):\n   88          deposit_product_id = self.browse(cr, uid, ids, context=context).deposit_product_id_setting\n   89:         res = self.pool.get('ir.values').set_default(cr, SUPERUSER_ID, 'sale.config.settings', 'deposit_product_id_setting', deposit_product_id.id)\n   90          return res\n   91  \n   92:     def set_auto_done_defaults(self, cr, uid, ids, context=None):\n   93          auto_done = self.browse(cr, uid, ids, context=context).auto_done_setting\n   94:         res = self.pool.get('ir.values').set_default(cr, SUPERUSER_ID, 'sale.config.settings', 'auto_done_setting', auto_done)\n   95          return res\n   96  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale\\res_config_view.xml:\n   11                          <field name=\"group_product_variant\" widget=\"radio\"/>\n   12                          <field name=\"group_uom\" widget=\"radio\"/>\n   13:                         <field name=\"default_invoice_policy\" widget=\"radio\"/>\n   14                          <field name=\"deposit_product_id_setting\" class=\"oe_inline\"/>\n   15                      </group>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale\\res_partner_view.xml:\n    7              <field name=\"view_type\">form</field>\n    8              <field name=\"view_mode\">tree,form,graph</field>\n    9:             <field name=\"context\">{'search_default_partner_id': active_id, 'show_sale': True}</field>\n   10              <field name=\"groups_id\" eval=\"[(4, ref('base.group_sale_salesman'))]\"/>\n   11              <field name=\"help\" type=\"html\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale\\sale.py:\n    7  import openerp.addons.decimal_precision as dp\n    8  from openerp.exceptions import UserError\n    9: from openerp.tools import float_is_zero, float_compare, DEFAULT_SERVER_DATETIME_FORMAT\n   10  \n   11  \n   12  class res_company(models.Model):\n   13      _inherit = \"res.company\"\n   14:     sale_note = fields.Text(string='Default Terms and Conditions', translate=True)\n   15  \n   16  \n   ..\n   42          Compute the invoice status of a SO. Possible statuses:\n   43          - no: if the SO is not in status 'sale' or 'done', we consider that there is nothing to\n   44:           invoice. This is also hte default value if the conditions of no other status is met.\n   45          - to invoice: if any SO line is 'to invoice', the whole SO is 'to invoice'\n   46          - invoiced: if all SO lines are invoiced, the SO is invoiced.\n   ..\n   78  \n   79      @api.model\n   80:     def _default_note(self):\n   81          return self.env.user.company_id.sale_note\n   82  \n   83      @api.model\n   84:     def _get_default_team(self):\n   85:         default_team_id = self.env['crm.team']._get_default_team_id()\n   86:         return self.env['crm.team'].browse(default_team_id)\n   87  \n   88      @api.onchange('fiscal_position_id')\n   ..\n   94              order.order_line._compute_tax_id()\n   95  \n   96:     name = fields.Char(string='Order Reference', required=True, copy=False, readonly=True, index=True, default='New')\n   97      origin = fields.Char(string='Source Document', help=\"Reference of the document that generated this sales order request.\")\n   98      client_order_ref = fields.Char(string='Customer Reference', copy=False)\n   ..\n  104          ('done', 'Done'),\n  105          ('cancel', 'Cancelled'),\n  106:         ], string='Status', readonly=True, copy=False, index=True, track_visibility='onchange', default='draft')\n  107:     date_order = fields.Datetime(string='Order Date', required=True, readonly=True, index=True, states={'draft': [('readonly', False)], 'sent': [('readonly', False)]}, copy=False, default=fields.Datetime.now)\n  108      validity_date = fields.Date(string='Expiration Date', readonly=True, states={'draft': [('readonly', False)], 'sent': [('readonly', False)]})\n  109      create_date = fields.Datetime(string='Creation Date', readonly=True, index=True, help=\"Date on which sales order is created.\")\n  110  \n  111:     user_id = fields.Many2one('res.users', string='Salesperson', index=True, track_visibility='onchange', default=lambda self: self.env.user)\n  112:     partner_id = fields.Many2one('res.partner', string='Customer', readonly=True, states={'draft': [('readonly', False)], 'sent': [('readonly', False)]}, required=True, change_default=True, index=True, track_visibility='always')\n  113      partner_invoice_id = fields.Many2one('res.partner', string='Invoice Address', readonly=True, required=True, states={'draft': [('readonly', False)], 'sent': [('readonly', False)]}, help=\"Invoice address for current sales order.\")\n  114      partner_shipping_id = fields.Many2one('res.partner', string='Delivery Address', readonly=True, required=True, states={'draft': [('readonly', False)], 'sent': [('readonly', False)]}, help=\"Delivery address for current sales order.\")\n  ...\n  127          ('to invoice', 'To Invoice'),\n  128          ('no', 'Nothing to Invoice')\n  129:         ], string='Invoice Status', compute='_get_invoiced', store=True, readonly=True, default='no')\n  130  \n  131:     note = fields.Text('Terms and conditions', default=_default_note)\n  132  \n  133      amount_untaxed = fields.Monetary(string='Untaxed Amount', store=True, readonly=True, compute='_amount_all', track_visibility='always')\n  ...\n  137      payment_term_id = fields.Many2one('account.payment.term', string='Payment Term', oldname='payment_term')\n  138      fiscal_position_id = fields.Many2one('account.fiscal.position', oldname='fiscal_position', string='Fiscal Position')\n  139:     company_id = fields.Many2one('res.company', 'Company', default=lambda self: self.env['res.company']._company_default_get('sale.order'))\n  140:     team_id = fields.Many2one('crm.team', 'Sales Team', change_default=True, default=_get_default_team)\n  141      procurement_group_id = fields.Many2one('procurement.group', 'Procurement Group', copy=False)\n  142  \n  ...\n  217              partner = self.env['res.partner'].browse(vals.get('partner_id'))\n  218              addr = partner.address_get(['delivery', 'invoice'])\n  219:             vals['partner_invoice_id'] = vals.setdefault('partner_invoice_id', addr['invoice'])\n  220:             vals['partner_shipping_id'] = vals.setdefault('partner_shipping_id', addr['delivery'])\n  221:             vals['pricelist_id'] = vals.setdefault('pricelist_id', partner.property_product_pricelist and partner.property_product_pricelist.id)\n  222          result = super(SaleOrder, self).create(vals)\n  223          return result\n  ...\n  231          \"\"\"\n  232          self.ensure_one()\n  233:         journal_id = self.env['account.invoice'].default_get(['journal_id'])['journal_id']\n  234          if not journal_id:\n  235              raise UserError(_('Please define an accounting sale journal for this company.'))\n  ...\n  342      def action_quotation_send(self):\n  343          '''\n  344:         This function opens a window to compose an email, with the edi sale template message loaded by default\n  345          '''\n  346          self.ensure_one()\n  ...\n  356          ctx = dict()\n  357          ctx.update({\n  358:             'default_model': 'sale.order',\n  359:             'default_res_id': self.ids[0],\n  360:             'default_use_template': bool(template_id),\n  361:             'default_template_id': template_id,\n  362:             'default_composition_mode': 'comment',\n  363              'mark_so_as_sent': True\n  364          })\n  ...\n  380              if email_act and email_act.get('context'):\n  381                  email_ctx = email_act['context']\n  382:                 email_ctx.update(default_email_from=order.company_id.email)\n  383:                 order.with_context(email_ctx).message_post_with_template(email_ctx.get('default_template_id'))\n  384          return True\n  385  \n  ...\n  404                          order._create_analytic_account()\n  405                          break\n  406:         if self.env['ir.values'].get_default('sale.config.settings', 'auto_done_setting'):\n  407              self.action_done()\n  408  \n  ...\n  432          Compute the invoice status of a SO line. Possible statuses:\n  433          - no: if the SO is not in status 'sale' or 'done', we consider that there is nothing to\n  434:           invoice. This is also hte default value if the conditions of no other status is met.\n  435          - to invoice: we refer to the quantity to invoice of the line. Refer to method\n  436            `_get_to_invoice_qty()` for more information on how this quantity is calculated.\n  ...\n  535              'name': self.name,\n  536              'origin': self.order_id.name,\n  537:             'date_planned': datetime.strptime(self.order_id.date_order, DEFAULT_SERVER_DATETIME_FORMAT) + timedelta(days=self.customer_lead),\n  538              'product_id': self.product_id.id,\n  539              'product_qty': self.product_uom_qty,\n  ...\n  606      order_id = fields.Many2one('sale.order', string='Order Reference', required=True, ondelete='cascade', index=True, copy=False)\n  607      name = fields.Text(string='Description', required=True)\n  608:     sequence = fields.Integer(string='Sequence', default=10)\n  609  \n  610      invoice_lines = fields.Many2many('account.invoice.line', 'sale_order_line_invoice_rel', 'order_line_id', 'invoice_line_id', string='Invoice Lines', copy=False)\n  ...\n  614          ('to invoice', 'To Invoice'),\n  615          ('no', 'Nothing to Invoice')\n  616:         ], string='Invoice Status', compute='_compute_invoice_status', store=True, readonly=True, default='no')\n  617:     price_unit = fields.Float('Unit Price', required=True, digits=dp.get_precision('Product Price'), default=0.0)\n  618  \n  619      price_subtotal = fields.Monetary(compute='_compute_amount', string='Subtotal', readonly=True, store=True)\n  ...\n  624      tax_id = fields.Many2many('account.tax', string='Taxes')\n  625  \n  626:     discount = fields.Float(string='Discount (%)', digits=dp.get_precision('Discount'), default=0.0)\n  627  \n  628:     product_id = fields.Many2one('product.product', string='Product', domain=[('sale_ok', '=', True)], change_default=True, ondelete='restrict', required=True)\n  629:     product_uom_qty = fields.Float(string='Quantity', digits=dp.get_precision('Product Unit of Measure'), required=True, default=1.0)\n  630      product_uom = fields.Many2one('product.uom', string='Unit of Measure', required=True)\n  631  \n  632:     qty_delivered_updateable = fields.Boolean(compute='_compute_qty_delivered_updateable', string='Can Edit Delivered', readonly=True, default=True)\n  633:     qty_delivered = fields.Float(string='Delivered', copy=False, digits=dp.get_precision('Product Unit of Measure'), default=0.0)\n  634      qty_to_invoice = fields.Float(\n  635          compute='_get_to_invoice_qty', string='To Invoice', store=True, readonly=True,\n  636:         digits=dp.get_precision('Product Unit of Measure'), default=0.0)\n  637      qty_invoiced = fields.Float(\n  638          compute='_get_invoice_qty', string='Invoiced', store=True, readonly=True,\n  639:         digits=dp.get_precision('Product Unit of Measure'), default=0.0)\n  640  \n  641      salesman_id = fields.Many2one(related='order_id.user_id', store=True, string='Salesperson', readonly=True)\n  ...\n  650          ('done', 'Done'),\n  651          ('cancel', 'Cancelled'),\n  652:     ], related='order_id.state', string='Order Status', readonly=True, copy=False, store=True, default='draft')\n  653  \n  654      customer_lead = fields.Float(\n  655:         'Delivery Lead Time', required=True, default=0.0,\n  656          help=\"Number of days between the order confirmation and the shipping of the products to the customer\", oldname=\"delay\")\n  657      procurement_ids = fields.One2many('procurement.order', 'sale_line_id', string='Procurements')\n  ...\n  785      @api.multi\n  786      def send_mail(self, auto_commit=False):\n  787:         if self._context.get('default_model') == 'sale.order' and self._context.get('default_res_id') and self._context.get('mark_so_as_sent'):\n  788:             order = self.env['sale.order'].browse([self._context['default_res_id']])\n  789              if order.state == 'draft':\n  790                  order.state = 'sent'\n  ...\n  796  \n  797      @api.model\n  798:     def _get_default_team(self):\n  799:         default_team_id = self.env['crm.team']._get_default_team_id()\n  800:         return self.env['crm.team'].browse(default_team_id)\n  801  \n  802:     team_id = fields.Many2one('crm.team', string='Sales Team', default=_get_default_team)\n  803  \n  804      @api.multi\n  ...\n  846  class ProductTemplate(models.Model):\n  847      _inherit = 'product.template'\n  848:     track_service = fields.Selection([('manual', 'Manually set quantities on order')], string='Track Service', default='manual')\n  849  \n  850      @api.multi\n  ...\n  867              'view_mode': action.view_mode,\n  868              'target': action.target,\n  869:             'context': \"{'search_default_product_id': \" + ','.join(map(str, product_ids)) + \", 'default_product_id': \" + str(product_ids[0]) + \"}\",\n  870              'res_model': action.res_model,\n  871              'domain': action.domain,\n  ...\n  877           ('delivery', 'Delivered quantities'),\n  878           ('cost', 'Invoice based on time and material')],\n  879:         string='Invoicing Policy', default='order')\n  880  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale\\sale_analytic.py:\n   23                  continue\n   24              line = self.browse(d['so_line'][0])\n   25:             lines.setdefault(line, 0.0)\n   26              uom = self.env['product.uom'].browse(d['product_uom_id'][0])\n   27              if line.product_uom.category_id == uom.category_id:\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale\\sale_data.xml:\n   35              <field name=\"name\">Quotation sent</field>\n   36              <field name=\"res_model\">sale.order</field>\n   37:             <field name=\"default\" eval=\"False\"/>\n   38              <field name=\"description\">Quotation sent</field>\n   39          </record>\n   ..\n   41              <field name=\"name\">Sales Order Confirmed</field>\n   42              <field name=\"res_model\">sale.order</field>\n   43:             <field name=\"default\" eval=\"False\"/>\n   44              <field name=\"description\">Quotation confirmed</field>\n   45          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale\\sale_view.xml:\n   79                                      </div>\n   80                                      <div class=\"col-xs-6\">\n   81:                                         <span t-attf-class=\"pull-right text-right label #{['draft', 'cancel'].indexOf(record.state.raw_value) > -1 ? 'label-default' : ['done'].indexOf(record.state.raw_value) > -1 ? 'label-success' : 'label-primary'}\"><t t-esc=\"record.state.value\"/></span>\n   82                                      </div>\n   83                                  </div>\n   ..\n  134                          attrs=\"{'invisible': [('invoice_status', '!=', 'to invoice')]}\"/>\n  135                      <button name=\"%(action_view_sale_advance_payment_inv)d\" string=\"Create Invoice\"\n  136:                         type=\"action\" context=\"{'default_advance_payment_method': 'percentage'}\"\n  137                          attrs=\"{'invisible': ['|',('invoice_status', '!=', 'no'), ('state', '!=', 'sale')]}\"/>\n  138                      <button name=\"action_quotation_send\" string=\"Send by Email\" type=\"object\" states=\"draft\" class=\"btn-primary\"/>\n  ...\n  165                      <group>\n  166                          <group>\n  167:                             <field name=\"partner_id\" domain=\"[('customer','=',True)]\" context=\"{'search_default_customer':1, 'show_address': 1}\" options='{\"always_reload\": True}'/>\n  168:                             <field name=\"partner_invoice_id\" groups=\"sale.group_delivery_invoice_address\" context=\"{'default_type':'invoice'}\"/>\n  169:                             <field name=\"partner_shipping_id\" groups=\"sale.group_delivery_invoice_address\" context=\"{'default_type':'delivery'}\"/>\n  170:                             <field name=\"project_id\" context=\"{'default_partner_id':partner_invoice_id, 'default_name':name}\" groups=\"analytic.group_analytic_accounting\"/>\n  171                          </group>\n  172                          <group>\n  ...\n  303                                  <field name=\"amount_total\" nolabel=\"1\" class=\"oe_subtotal_footer_separator\" widget='monetary' options=\"{'currency_field': 'currency_id'}\"/>\n  304                              </group>\n  305:                             <field name=\"note\" class=\"oe_inline\" placeholder=\"Setup default terms and conditions in your company settings.\"/>\n  306                              <div class=\"oe_clear\"/>\n  307                          </page>\n  ...\n  309                              <group>\n  310                                  <group string=\"Sales Information\" name=\"sales_person\">\n  311:                                     <field name=\"user_id\" context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'account.group_account_invoice', 'base.group_sale_salesman_all_leads']}\"/>\n  312                                      <field name=\"team_id\" options=\"{'no_create': True}\"/>\n  313                                      <field name=\"client_order_ref\"/>\n  ...\n  502              <field name=\"name\">Sale Order Lines</field>\n  503              <field name=\"res_model\">sale.order.line</field>\n  504:             <field name=\"context\">{'search_default_product_id': [active_id], 'default_product_id': active_id}</field>\n  505              <field name=\"domain\">[('state', 'in', ['sale', 'done'])]</field>\n  506          </record>\n  ...\n  558                  <xpath expr=\"//group[@name='account_grp']\" position=\"after\">\n  559                      <group name=\"sale_grp\" string=\"Sales\">\n  560:                         <field name=\"sale_note\" nolabel=\"1\" placeholder=\"Default terms &amp; conditions...\"/>\n  561                      </group>\n  562                  </xpath>\n  ...\n  604              <field name=\"context\">{\n  605                      'show_sale': True,\n  606:                     'search_default_team_id': [active_id],\n  607:                     'default_team_id': active_id,\n  608                  }\n  609              </field>\n  ...\n  628              <field name=\"context\">{\n  629                      'show_sale': True,\n  630:                     'search_default_team_id': [active_id],\n  631:                     'default_team_id': active_id,\n  632                  }\n  633              </field>\n  ...\n  642              <field name=\"view_mode\">tree,form,calendar,graph</field>\n  643              <field name=\"context\">{\n  644:                     'search_default_team_id': [active_id],\n  645:                     'default_team_id': active_id,\n  646                      'show_address': 1,\n  647                  }\n  ...\n  672                  ('type', '=', 'out_invoice')]</field>\n  673              <field name=\"context\">{\n  674:                     'search_default_team_id': [active_id],\n  675:                     'default_team_id': active_id,\n  676:                     'default_type':'out_invoice',\n  677                      'type':'out_invoice',\n  678                      'journal_type': 'sale',\n  ...\n  700              <field name=\"view_mode\">graph</field>\n  701              <field name=\"domain\">[('state','=','draft'),('team_id', '=', active_id)]</field>\n  702:             <field name=\"context\">{'search_default_order_month':1}</field>\n  703              <field name=\"help\">This report performs analysis on your quotations. Analysis check your sales revenues and sort it by different group criteria (salesman, partner, product, etc.) Use this report to perform analysis on sales not having invoiced yet. If you want to analyse your turnover, you should use the Invoice Analysis report in the Accounting application.</field>\n  704          </record>\n  ...\n  709              <field name=\"view_mode\">graph</field>\n  710              <field name=\"domain\">[('state','not in',('draft','cancel')),('team_id', '=', active_id)]</field>\n  711:             <field name=\"context\">{'search_default_order_month':1}</field>\n  712              <field name=\"help\">This report performs analysis on your sales orders. Analysis check your sales revenues and sort it by different group criteria (salesman, partner, product, etc.) Use this report to perform analysis on sales not having invoiced yet. If you want to analyse your turnover, you should use the Invoice Analysis report in the Accounting application.</field>\n  713          </record>\n  ...\n  718              <field name=\"view_mode\">graph</field>\n  719              <field name=\"domain\">[('team_id', '=', active_id),('state', 'not in', ['draft', 'cancel'])]</field>\n  720:             <field name=\"context\">{'search_default_month':1}</field>\n  721              <field name=\"help\">From this report, you can have an overview of the amount invoiced to your customer. The search tool can also be used to personalise your Invoices reports and so, match this analysis to your needs.</field>\n  722          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale\\sales_team.py:\n   58      }\n   59  \n   60:     _defaults = {\n   61          'use_quotations': True,\n   62      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale\\sales_team_dashboard.xml:\n    7          <field name=\"view_mode\">form</field>\n    8          <field name=\"context\">{\n    9:                 'search_default_team_id': [active_id],\n   10:                 'default_team_id': active_id,\n   11:                 'default_user_id': uid,\n   12          }\n   13          </field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale\\wizard\\sale_make_invoice_advance.py:\n   29          ('percentage', 'Down payment (percentage)'),\n   30          ('fixed', 'Down payment (fixed amount)')\n   31:         ], string='What do you want to invoice?', default=_get_advance_payment_method, required=True)\n   32      product_id = fields.Many2one('product.product', string='Down Payment Product', domain=[('type', '=', 'service')],\\\n   33:         default=lambda self: self.env['ir.values'].get_default('sale.config.settings', 'deposit_product_id_setting'))\n   34:     count = fields.Integer(default=_count, string='# of Orders')\n   35      amount = fields.Float('Down Payment Amount', digits=dp.get_precision('Account'), help=\"The amount to be invoiced in advance, taxes excluded.\")\n   36      deposit_account_id = fields.Many2one(\"account.account\", string=\"Income Account\", domain=[('deprecated', '=', False)],\\\n   ..\n  111                  vals = self._prepare_deposit_product()\n  112                  self.product_id = self.env['product.product'].create(vals)\n  113:                 self.env['ir.values'].sudo().set_default('sale.config.settings', 'deposit_product_id_setting', self.product_id.id)\n  114  \n  115              sale_line_obj = self.env['sale.order.line']\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale\\wizard\\sale_make_invoice_advance.xml:\n   16                              attrs=\"{'invisible': [('count','&gt;',1)]}\"/>\n   17                          <field name=\"product_id\"\n   18:                             context=\"{'search_default_services': 1, 'default_type': 'service', 'default_invoice_policy': 'order'}\" class=\"oe_inline\"\n   19                              attrs=\"{'invisible': 1}\"/>\n   20                          <label for=\"amount\" attrs=\"{'invisible': [('advance_payment_method', 'not in', ('fixed','percentage'))]}\"/>\n   ..\n   35                          <button name=\"create_invoices\" string=\"Create Invoices\" type=\"object\"\n   36                              class=\"btn-primary\"/>\n   37:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   38                      </footer>\n   39                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale_crm\\crm_lead.py:\n   42          for inv in invoice_ids:\n   43              if inv['date']:\n   44:                 inv_date = datetime.strptime(inv['date'], tools.DEFAULT_SERVER_DATE_FORMAT).date()\n   45                  if inv_date <= date.today() and inv_date >= date.today().replace(day=1):\n   46                      res['invoiced']['this_month'] += inv['amount_untaxed_signed']\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale_crm\\sale_crm_view.xml:\n    8              <field name=\"view_mode\">form,tree,graph</field>\n    9              <field name=\"domain\">[('opportunity_id', '=', active_id)]</field>\n   10:             <field name=\"context\">{'search_default_opportunity_id': active_id, 'default_opportunity_id': active_id}</field>\n   11          </record>\n   12  \n   ..\n   15              <field name=\"res_model\">sale.order</field>\n   16              <field name=\"domain\">[('opportunity_id', '=', active_id)]</field>\n   17:             <field name=\"context\">{'search_default_opportunity_id': [active_id], 'default_opportunity_id': active_id}</field>\n   18          </record>\n   19  \n   ..\n   26                      <xpath expr=\"//field[@name='stage_id']\" position=\"before\">\n   27                          <button attrs=\"{'invisible': [('probability', '=', 0)]}\" string=\"New Quotation\" name=\"%(sale_action_quotations_new)d\" type=\"action\" class=\"oe_highlight\"\n   28:                             context=\"{'search_default_partner_id': partner_id, \n   29:                                       'default_partner_id': partner_id,\n   30:                                       'default_team_id': team_id}\"/>\n   31                          <button attrs=\"{'invisible': [('probability', '>', 0)]}\" string=\"New Quotation\" name=\"%(sale_action_quotations_new)d\" type=\"action\"\n   32:                             context=\"{'search_default_partner_id': partner_id, \n   33:                                       'default_partner_id': partner_id, \n   34:                                       'default_team_id': team_id}\"/>\n   35                      </xpath>\n   36                      <div name=\"button_box\" position=\"inside\">\n   37                          <button class=\"oe_stat_button\" type=\"action\"\n   38                                  name=\"%(sale_action_quotations)d\" icon=\"fa-usd\"\n   39:                                 context=\"{'default_partner_id': partner_id, 'search_default_draft': 1}\">\n   40                              <div class=\"o_stat_info\">\n   41                                  <field name=\"sale_number\" class=\"o_stat_value\"/>\n   ..\n   45                          <button class=\"oe_stat_button\" type=\"action\" attrs=\"{'invisible': [('sale_amount_total', '=', 0)]}\"\n   46                                  name=\"%(sale_action_quotations)d\" icon=\"fa-usd\"\n   47:                                 context=\"{'search_default_partner_id': partner_id, 'default_partner_id': partner_id, 'search_default_sales': 1}\">\n   48                              <div class=\"o_form_field o_stat_info\">\n   49                                  <span class=\"o_stat_value\"><field name=\"sale_amount_total\" widget=\"monetary\" options=\"{'currency_field': 'company_currency'}\"/></span>\n   ..\n   58          <!-- add needaction_menu_ref to reload quotation needaction when opportunity needaction is reloaded -->\n   59          <record model=\"ir.actions.act_window\" id=\"crm.crm_lead_opportunities\">\n   60:             <field name=\"context\">{'stage_type': 'opportunity', 'default_type': 'opportunity', 'default_user_id': uid, 'needaction_menu_ref': 'sale.menu_sale_quotations'}</field>\n   61          </record>\n   62  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale_expense\\models\\product.py:\n   13          help=\"If you invoice at cost, the expense will be invoiced on the sale order at the cost of the analytic line;\"\n   14          \"if you invoice at sales price, the price of the product will be used instead.\",\n   15:         default='cost')\n   16  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale_layout\\models\\sale_layout.py:\n   33      }\n   34  \n   35:     _defaults = {\n   36          'subtotal': True,\n   37          'separator': True,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale_order_dates\\sale_order_dates.py:\n    6  from openerp.osv import fields, osv\n    7  from openerp.tools.translate import _\n    8: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT\n    9  \n   10  class sale_order_dates(osv.osv):\n   ..\n   33          for order in self.browse(cr, uid, ids, context=context):\n   34              dates_list = []\n   35:             order_datetime = datetime.strptime(order.date_order, DEFAULT_SERVER_DATETIME_FORMAT)\n   36              for line in order.order_line:\n   37                  if line.state == 'cancel':\n   38                      continue\n   39                  dt = order_datetime + timedelta(days=line.customer_lead or 0.0)\n   40:                 dt_s = dt.strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n   41                  dates_list.append(dt_s)\n   42              if dates_list:\n   ..\n   73                   \"Leave this field empty if you want the Delivery Order to be \"\n   74                   \"processed as soon as possible. In that case the expected \"\n   75:                  \"date will be computed using the default method: based on \"\n   76                   \"the Product Lead Times and the Company's Security Delay.\"),\n   77          'effective_date': fields.function(_get_effective_date, type='date',\n   ..\n   88          line = self.browse(cr, uid, ids, context=context)\n   89          if line.order_id.requested_date:\n   90:             date_planned = datetime.strptime(line.order_id.requested_date, DEFAULT_SERVER_DATETIME_FORMAT) - timedelta(days=line.order_id.company_id.security_lead)\n   91              vals.update({\n   92:                 'date_planned': date_planned.strftime(DEFAULT_SERVER_DATETIME_FORMAT),\n   93              })\n   94          return vals\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale_service\\models\\sale_service.py:\n  109      }\n  110  \n  111:     _defaults = {\n  112          'closed': False,\n  113      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale_stock\\company.py:\n    7      _inherit = 'res.company'\n    8  \n    9:     security_lead = fields.Float('Sales Safety Days', required=True, default = 0.0,\n   10          help=\"Margin of error for dates promised to customers. \"\\\n   11               \"Products will be scheduled for procurement and delivery \"\\\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale_stock\\res_config.py:\n   13          (1, 'Allow adding shipping costs')\n   14          ], \"Shipping\")\n   15:     default_picking_policy = fields.Selection([\n   16          (0, 'Ship products when some are available, and allow back orders'),\n   17          (1, 'Ship all products at once, without back orders')\n   18:         ], \"Default Shipping Policy\")\n   19      group_mrp_properties = fields.Selection([\n   20          (0, \"Don't use manufacturing properties (recommended as its easier)\"),\n   ..\n   30  \n   31      @api.model\n   32:     def get_default_sale_config(self, fields):\n   33:         default_picking_policy = self.env['ir.values'].get_default('sale.order', 'picking_policy')\n   34          return {\n   35:             'default_picking_policy': 1 if default_picking_policy == 'one' else 0,\n   36          }\n   37  \n   38      @api.multi\n   39:     def set_sale_defaults(self):\n   40          self.ensure_one()\n   41          if not self.env.user._is_admin():\n   42              raise AccessError(_(\"Only administrators can change the settings\"))\n   43  \n   44:         default_picking_policy = 'one' if self.default_picking_policy else 'direct'\n   45:         self.env['ir.values'].sudo().set_default('sale.order', 'picking_policy', default_picking_policy)\n   46:         res = super(SaleConfiguration, self).set_sale_defaults()\n   47          return res\n   48  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale_stock\\res_config_view.xml:\n    9                  <group string=\"Shipping\">\n   10                      <field name=\"module_delivery\" widget=\"radio\"/>\n   11:                     <field name=\"default_picking_policy\" widget=\"radio\"/>\n   12                  </group>\n   13              </xpath>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale_stock\\sale_stock.py:\n    4  from datetime import datetime, timedelta\n    5  from openerp import api, fields, models, _\n    6: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT, float_compare\n    7  from openerp.exceptions import UserError\n    8  \n    .\n   12  \n   13      @api.model\n   14:     def _default_warehouse_id(self):\n   15          company = self.env.user.company_id.id\n   16          warehouse_ids = self.env['stock.warehouse'].search([('company_id', '=', company)], limit=1)\n   ..\n   21          ('direct', 'Deliver each product when available'),\n   22          ('one', 'Deliver all products at once')],\n   23:         string='Shipping Policy', required=True, readonly=True, default='direct',\n   24          states={'draft': [('readonly', False)], 'sent': [('readonly', False)]})\n   25      warehouse_id = fields.Many2one('stock.warehouse', string='Warehouse',\n   26          required=True, readonly=True, states={'draft': [('readonly', False)], 'sent': [('readonly', False)]},\n   27:         default=_default_warehouse_id)\n   28      picking_ids = fields.Many2many('stock.picking', compute='_compute_picking_ids', string='Picking associated to this sale')\n   29      delivery_count = fields.Integer(string='Delivery Orders', compute='_compute_picking_ids')\n   ..\n   92      _inherit = 'sale.order.line'\n   93  \n   94:     product_packaging = fields.Many2one('product.packaging', string='Packaging', default=False)\n   95      route_id = fields.Many2one('stock.location.route', string='Route', domain=[('sale_selectable', '=', True)])\n   96      product_tmpl_id = fields.Many2one('product.template', related='product_id.product_tmpl_id', string='Product Template', readonly=True)\n   ..\n  147      def _prepare_order_line_procurement(self, group_id=False):\n  148          vals = super(SaleOrderLine, self)._prepare_order_line_procurement(group_id=group_id)\n  149:         date_planned = datetime.strptime(self.order_id.date_order, DEFAULT_SERVER_DATETIME_FORMAT)\\\n  150              + timedelta(days=self.customer_lead or 0.0) - timedelta(days=self.order_id.company_id.security_lead)\n  151          vals.update({\n  152:             'date_planned': date_planned.strftime(DEFAULT_SERVER_DATETIME_FORMAT),\n  153              'location_id': self.order_id.partner_shipping_id.property_stock_customer.id,\n  154              'route_ids': self.route_id and [(4, self.route_id.id)] or [],\n  ...\n  175      @api.multi\n  176      def _check_package(self):\n  177:         default_uom = self.product_id.uom_id\n  178          pack = self.product_packaging\n  179          qty = self.product_uom_qty\n  180:         q = self.env['product.uom']._compute_qty_obj(default_uom, pack.qty, self.product_uom)\n  181          if qty and q and (qty % q):\n  182              newqty = qty - (qty % q) + q\n  ...\n  214          if not is_available:\n  215              for pull_rule in product_routes.mapped('pull_ids'):\n  216:                 if pull_rule.picking_type_id.default_location_src_id.usage == 'supplier' and\\\n  217:                         pull_rule.picking_type_id.default_location_dest_id.usage == 'customer':\n  218                      is_available = True\n  219                      break\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale_stock\\sale_stock_view.xml:\n   28                      <xpath expr=\"//page/field[@name='order_line']/form/group/group/field[@name='tax_id']\" position=\"before\">\n   29                          <field name=\"product_tmpl_id\" invisible=\"1\"/>\n   30:                         <field name=\"product_packaging\" context=\"{'default_product_tmpl_id': product_tmpl_id, 'partner_id':parent.partner_id, 'quantity':product_uom_qty, 'pricelist':parent.pricelist_id, 'uom':product_uom, 'company_id': parent.company_id}\" domain=\"[('product_tmpl_id','=',product_tmpl_id)]\" groups=\"product.group_stock_packaging\" />\n   31                      </xpath>\n   32                      <xpath expr=\"//field[@name='order_line']/form/group/group/field[@name='price_unit']\" position=\"before\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale_stock\\tests\\test_sale_stock.py:\n  154          # Create return picking\n  155          StockReturnPicking = self.env['stock.return.picking']\n  156:         default_data = StockReturnPicking.with_context(active_ids=pick.ids, active_id=pick.ids[0]).default_get(['move_dest_exists', 'original_location_id', 'product_return_moves', 'parent_location_id', 'location_id'])\n  157:         return_wiz = StockReturnPicking.with_context(active_ids=pick.ids, active_id=pick.ids[0]).create(default_data)\n  158          res = return_wiz.create_returns()\n  159          return_pick = self.env['stock.picking'].browse(res['res_id'])\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sale_timesheet\\models\\sale_timesheet.py:\n   17          except ValueError:\n   18              return False\n   19:     project_time_mode_id = fields.Many2one('product.uom', string='Timesheet UoM', default=_get_uom_hours)\n   20  \n   21  \n   ..\n   23      _inherit = 'hr.employee'\n   24      # FIXME: this field should be in module hr_timesheet, not sale_timesheet\n   25:     timesheet_cost = fields.Float(string='Timesheet Cost', default=0.0)\n   26  \n   27  \n   ..\n  126                  for line in order.order_line:\n  127                      if line.product_id.track_service == 'timesheet':\n  128:                         order._create_analytic_account(prefix=order.product_id.default_code or None)\n  129                          break\n  130          return result\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sales_team\\sales_team.py:\n   12      _period_number = 5\n   13  \n   14:     def _get_default_team_id(self, cr, uid, context=None, user_id=None):\n   15          if context is None:\n   16              context = {}\n   ..\n   19          team_ids = self.search(cr, uid, ['|', ('user_id', '=', user_id), ('member_ids', 'in', user_id)], limit=1, context=context)\n   20          team_id = team_ids[0] if team_ids else False\n   21:         if not team_id and context.get('default_team_id'):\n   22:             team_id = context['default_team_id']\n   23          if not team_id:\n   24              team_id = self.pool['ir.model.data'].xmlid_to_res_id(cr, uid, 'sales_team.team_sales_department')\n   ..\n   38      }\n   39  \n   40:     _defaults = {\n   41          'active': 1,\n   42:         'company_id': lambda self, cr, uid, context: self.pool.get('res.company')._company_default_get(cr, uid, 'crm.team', context=context),\n   43      }\n   44  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\sales_team\\sales_team.xml:\n   60                          <group>\n   61                              <group name=\"left\">\n   62:                                 <field name=\"user_id\" context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'base.group_sale_salesman_all_leads']}\"/>\n   63                                  <field name=\"code\" groups=\"base.group_no_one\"/>\n   64                              </group>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\__openerp__.py:\n   47      ],\n   48      'data': [\n   49:         'data/default_barcode_patterns.xml',\n   50          'security/stock_security.xml',\n   51          'security/ir.model.access.csv',\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\data\\default_barcode_patterns.xml:\n    4           <record id=\"barcode_rule_weight_three_dec\" model=\"barcode.rule\">\n    5              <field name=\"name\">Weight Barcodes 3 Decimals</field>\n    6:             <field name=\"barcode_nomenclature_id\" ref=\"barcodes.default_barcode_nomenclature\"/>\n    7              <field name=\"sequence\">36</field>\n    8              <field name=\"type\">weight</field>\n    .\n   13          <record id=\"barcode_rule_package\" model=\"barcode.rule\">\n   14              <field name=\"name\">Package barcodes</field>\n   15:             <field name=\"barcode_nomenclature_id\" ref=\"barcodes.default_barcode_nomenclature\"/>\n   16              <field name=\"sequence\">70</field>\n   17              <field name=\"type\">package</field>\n   ..\n   22          <record id=\"barcode_rule_lot\" model=\"barcode.rule\">\n   23              <field name=\"name\">Lot barcodes</field>\n   24:             <field name=\"barcode_nomenclature_id\" ref=\"barcodes.default_barcode_nomenclature\"/>\n   25              <field name=\"sequence\">80</field>\n   26              <field name=\"type\">lot</field>\n   ..\n   31          <record id=\"barcode_rule_location\" model=\"barcode.rule\">\n   32              <field name=\"name\">Location barcodes</field>\n   33:             <field name=\"barcode_nomenclature_id\" ref=\"barcodes.default_barcode_nomenclature\"/>\n   34              <field name=\"sequence\">60</field>\n   35              <field name=\"type\">location</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\data\\web_planner_data.xml:\n  124  \n  125                      <div class=\"panel-group\" id=\"o_product_concepts\" role=\"tablist\" aria-multiselectable=\"true\">\n  126:                       <div class=\"panel panel-default\">\n  127                          <div class=\"panel-heading\" role=\"tab\" id=\"o_concept1\">\n  128                            <h4 class=\"panel-title\">\n  ...\n  140                          </div>\n  141                        </div>\n  142:                       <div class=\"panel panel-default\">\n  143                          <div class=\"panel-heading\" role=\"tab\" id=\"o_concept2\">\n  144                            <h4 class=\"panel-title\">\n  ...\n  161                          </div>\n  162                        </div>\n  163:                       <div class=\"panel panel-default\">\n  164                          <div class=\"panel-heading\" role=\"tab\" id=\"o_concept3\">\n  165                            <h4 class=\"panel-title\">\n  ...\n  176                          </div>\n  177                        </div>\n  178:                       <div class=\"panel panel-default\">\n  179                          <div class=\"panel-heading\" role=\"tab\" id=\"o_concept4\">\n  180                            <h4 class=\"panel-title\">\n  ...\n  186                          <div id=\"o_concept_desc4\" class=\"panel-collapse collapse\" role=\"tabpanel\" aria-labelledby=\"o_concept4\">\n  187                            <div class=\"panel-body\">\n  188:                             <li>By default, Odoo measures products by 'units', which are generic and represent just about anything</li>\n  189                              <li>To use more precise units like pounds or kilograms, activate<i> Some products may be sold/purchased in different unit of measures (advanced)</i> in the <a t-att-href=\"prepare_backend_url('stock.action_stock_config_settings')\">Inventory Settings</a></li>\n  190                              <li>You can review and edit the predefined units via the <a t-att-href=\"prepare_backend_url('product.product_uom_form_action')\">Units of Measures</a> configuration menu</li>\n  ...\n  289                                  </div>\n  290                                  <div class=\"panel-body\">\n  291:                                     <div><span class=\"label label-default text-center odoo_purple\"><a t-att-href=\"prepare_backend_url('sale.action_quotations')\"> Create a Quotation</a></span><div> for a customer and add products</div></div>\n  292                                      <span class=\"fa fa-angle-down fa-2x\"></span>\n  293:                                     <div><span class=\"label label-default text-center odoo_purple\">Confirm Sale</span><div>The quotation becomes a Sale Order and a Transfer Order is created</div></div>\n  294                                      <span class=\"fa fa-angle-down fa-2x\"></span>\n  295:                                     <div><span class=\"label label-default text-center odoo_purple\">Click on <span class=\"fa fa-truck\"/> Delivery</span><div> on the sale order form to see Transfer Order</div></div>\n  296                                  </div>\n  297                              </div>\n  ...\n  305                                  </div>\n  306                                  <div class=\"panel-body\">\n  307:                                     <div><span class=\"label label-default text-center odoo_purple\">'Available'</span><div>is displayed on the transfer if your products supply chain is properly configured. Otherwise, <strong>Check the availability</strong> manually</div></div>\n  308                                      <span class=\"fa fa-angle-down fa-2x\"></span>\n  309:                                     <div><span class=\"label label-default text-center odoo_purple\">Process the products</span><div>either by manually updating the Done quantity on the product lines, or let Odoo do it automatically while validating</div></div>\n  310                                      <span class=\"fa fa-angle-down fa-2x\"></span>\n  311:                                     <div><span class=\"label label-default text-center odoo_purple\">Validate the Delivery</span><div>with the <i>Validate</i> button</div></div>\n  312                                  </div>\n  313                              </div>\n  ...\n  336                                  </div>\n  337                                  <div class=\"panel-body\">\n  338:                                     <div><span class=\"label label-default text-center odoo_purple\"><a t-att-href=\"prepare_backend_url('purchase.purchase_rfq')\">Create a RFQ</a></span><div> from your vendor with the products and the requested quantities</div></div>\n  339                                      <span class=\"fa fa-angle-down fa-2x\"></span>\n  340:                                     <div><span class=\"label label-default text-center odoo_purple\">Confirm Order</span><div>The RFQ becomes a Purchase Order and a Transfer Order is created</div></div>\n  341                                      <span class=\"fa fa-angle-down fa-2x\"></span>\n  342:                                     <div><span class=\"label label-default text-center odoo_purple\">Click on <span class=\"fa fa-truck\"/> Shipment</span><div> on the purchase order form or click on <i>Receive Products</i> to see the Transfer Order</div></div>\n  343                                  </div>\n  344                              </div>\n  ...\n  352                                  </div>\n  353                                  <div class=\"panel-body\">\n  354:                                     <div><span class=\"label label-default text-center odoo_purple\">Find Incoming Shipments</span><div>via the <a t-att-href=\"prepare_backend_url('stock.stock_picking_type_action')\">Dashboard</a> when you receive the ordered products</div></div>\n  355                                      <span class=\"fa fa-angle-down fa-2x\"></span>\n  356:                                     <div><span class=\"label label-default text-center odoo_purple\">Process the products</span><div>either by manually updating the Done quantity on the product lines, or scan them with the Odoo Barcode app, or let Odoo do it automatically while validating</div></div>\n  357                                      <span class=\"fa fa-angle-down fa-2x\"></span>\n  358:                                     <div><span class=\"label label-default text-center odoo_purple\">Validate the Receipt Order</span><div>to mark the products as transferred to your stock location</div></div>\n  359                                  </div>\n  360                              </div>\n  ...\n  402                          <li><strong>No bill of materials defined for production:</strong> you need to create a BoM or indicate that the product can be purchased instead.</li>\n  403                          <li><strong>No supplier available for a purchase:</strong> you have to define a supplier in the Procurements tab of the product form.</li>\n  404:                         <li><strong>No address defined on the supplier partner:</strong> you have to complete an address for the default supplier for the product concerned.</li>\n  405                          <li><strong>No quantity available in stock:</strong> you have to create a reordering rule and put it in the order, or manually procure it.</li>\n  406                      </ul>\n  ...\n  446                      <ul>\n  447                          <li>Manage product manufacturing chains</li>\n  448:                         <li>Manage default locations per product</li>\n  449                          <li>Define routes within your warehouse according to business needs, such as Quality Control, After Sales Services or Supplier Returns</li>\n  450                          <li>Help rental management, by generating automated return moves for rented products</li>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\partner.py:\n   11            relation='stock.location',\n   12            string=\"Customer Location\",\n   13:           help=\"This stock location will be used, instead of the default one, as the destination location for goods you send to this partner\"),\n   14          'property_stock_supplier': fields.property(\n   15            type='many2one',\n   16            relation='stock.location',\n   17            string=\"Vendor Location\",\n   18:           help=\"This stock location will be used, instead of the default one, as the source location for goods you receive from the current partner\"),\n   19      }\n   20  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\procurement.py:\n    5  from openerp.tools.translate import _\n    6  \n    7: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT, DEFAULT_SERVER_DATETIME_FORMAT, float_compare, float_round\n    8  from openerp import SUPERUSER_ID\n    9  from dateutil.relativedelta import relativedelta\n   ..\n   53      }\n   54  \n   55:     _defaults = {\n   56          'procure_method': 'make_to_stock',\n   57          'propagate': True,\n   ..\n  186  \n  187      def _find_suitable_rule_multi(self, cr, uid, procurements, domain = [], context=None):\n  188:         '''we try to first find a rule among the ones defined on the procurement order group and if none is found, we try on the routes defined for the product, and finally we fallback on the default behavior'''\n  189          results_dict = {}\n  190          pull_obj = self.pool.get('procurement.rule')\n  ...\n  238  \n  239      def _search_suitable_rule(self, cr, uid, procurement, domain, context=None):\n  240:         '''we try to first find a rule among the ones defined on the procurement order group and if none is found, we try on the routes defined for the product, and finally we fallback on the default behavior'''\n  241          pull_obj = self.pool.get('procurement.rule')\n  242          warehouse_route_ids = []\n  ...\n  428              days += orderpoint.product_id._select_seller(orderpoint.product_id).delay or 0.0\n  429          date_planned = start_date + relativedelta(days=days)\n  430:         return date_planned.strftime(DEFAULT_SERVER_DATE_FORMAT)\n  431  \n  432      def _prepare_orderpoint_procurement(self, cr, uid, orderpoint, product_qty, context=None):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\product.py:\n  407              string=\"Procurement Location\",\n  408              domain=[('usage','like','procurement')],\n  409:             help=\"This stock location will be used, instead of the default one, as the source location for stock moves generated by procurements.\"),\n  410          'property_stock_production': fields.property(\n  411              type='many2one',\n  ...\n  413              string=\"Production Location\",\n  414              domain=[('usage','like','production')],\n  415:             help=\"This stock location will be used, instead of the default one, as the source location for stock moves generated by manufacturing orders.\"),\n  416          'property_stock_inventory': fields.property(\n  417              type='many2one',\n  ...\n  419              string=\"Inventory Location\",\n  420              domain=[('usage','like','inventory')],\n  421:             help=\"This stock location will be used, instead of the default one, as the source location for stock moves generated when you do an inventory.\"),\n  422          'sale_delay': fields.float('Customer Lead Time', help=\"The average delay in days between the confirmation of the customer order and the delivery of the finished products. It's the time you promise to your customers.\"),\n  423          'tracking': fields.selection(selection=[('serial', 'By Unique Serial Number'), ('lot', 'By Lots'), ('none', 'No Tracking')], string=\"Tracking\", required=True),\n  ...\n  446      }\n  447  \n  448:     _defaults = {\n  449          'sale_delay': 7,\n  450          'tracking': 'none',\n  ...\n  489          result = self._get_act_window_dict(cr, uid, 'stock.product_open_quants', context=context)\n  490          result['domain'] = \"[('product_id','in',[\" + ','.join(map(str, products)) + \"])]\"\n  491:         result['context'] = \"{'search_default_locationgroup': 1, 'search_default_internal_loc': 1}\"\n  492          return result\n  493  \n  ...\n  496          result = self._get_act_window_dict(cr, uid, 'stock.product_open_orderpoint', context=context)\n  497          if len(ids) == 1 and len(products) == 1:\n  498:             result['context'] = \"{'default_product_id': \" + str(products[0]) + \", 'search_default_product_id': \" + str(products[0]) + \"}\"\n  499          else:\n  500              result['domain'] = \"[('product_id','in',[\" + ','.join(map(str, products)) + \"])]\"\n  ...\n  506          result = self._get_act_window_dict(cr, uid, 'stock.act_product_stock_move_open', context=context)\n  507          if products:\n  508:             result['context'] = \"{'default_product_id': %d}\" % products[0]\n  509          result['domain'] = \"[('product_id.product_tmpl_id','in',[\" + ','.join(map(str,ids)) + \"])]\"\n  510          return result\n  ...\n  544      }\n  545  \n  546:     _defaults = {\n  547          'method': 'fixed',\n  548      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\product_view.xml:\n   44              <field name=\"domain\" eval=\"[('picking_id.picking_type_id.code','=','incoming'), ('location_id.usage','!=','internal'), ('location_dest_id.usage', '=', 'internal')]\"/>\n   45              <field name=\"view_id\" ref=\"view_move_tree_receipt_picking\"/>\n   46:             <field name=\"context\" eval=\"'{\\'search_default_product_id\\': [active_id]}'\"/>\n   47              <field name=\"help\" type=\"html\">\n   48                <p class=\"oe_view_nocontent_create\">\n   ..\n   64              <field name=\"view_id\" ref=\"view_move_tree_receipt_picking\"/>\n   65              <field name=\"domain\" eval=\"[('picking_type_id.code','=','outgoing'), ('location_id.usage','=','internal'), ('location_dest_id.usage', '!=', 'internal')]\"/>\n   66:             <field name=\"context\" eval=\"'{\\'search_default_product_id\\': [active_id]}'\"/>\n   67              <field name=\"help\" type=\"html\">\n   68                <p class=\"oe_view_nocontent_create\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\report\\report_stock_forecast.xml:\n   46          <field name=\"view_mode\">pivot,graph</field>\n   47          <field name=\"search_view_id\" ref=\"view_stock_level_forecast_filter\"/>\n   48:         <field name=\"context\">{'search_default_pivot_by':1, 'search_default_graph_by':1, 'search_default_product_tmpl_id': active_id}</field>\n   49          <field name=\"view_id\" ref=\"view_stock_level_forecast_pivot\"/>\n   50      </record>\n   ..\n   56          <field name=\"view_mode\">pivot,graph</field>\n   57          <field name=\"search_view_id\" ref=\"view_stock_level_forecast_filter\"/>\n   58:         <field name=\"context\">{'search_default_pivot_by':1, 'search_default_graph_by':1, 'search_default_product_id': active_id}</field>\n   59          <field name=\"view_id\" ref=\"view_stock_level_forecast_pivot\"/>\n   60      </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\report\\report_stock_view.xml:\n   50              <field name=\"res_model\">report.stock.lines.date</field>\n   51              <field name=\"view_type\">form</field>\n   52:              <field name=\"context\">{'search_default_stockable':1}</field>\n   53              <field name=\"view_mode\">tree,form</field>\n   54              <field name=\"help\">Display the latest Inventories and Moves done on your products and easily sort them with specific filtering criteria. If you do frequent and partial inventories, you need this report in order to ensure that the stock of each product is controlled at least once a year. This also lets you find out which products have seen little move lately and may deserve special measures (discounted sale, quality control...)</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\res_config.py:\n   36          return company_id\n   37  \n   38:     _defaults = {\n   39          'propagation_minimum_delta': 1,\n   40      }\n   ..\n  170          return {}\n  171  \n  172:     def _default_company(self, cr, uid, context=None):\n  173          user = self.pool.get('res.users').browse(cr, uid, uid, context=context)\n  174          return user.company_id.id\n  175  \n  176:     def get_default_dp(self, cr, uid, fields, context=None):\n  177          dp = self.pool.get('ir.model.data').get_object(cr, uid, 'product', 'decimal_stock_weight')\n  178          return {'decimal_precision': dp.digits}\n  179  \n  180:     def set_default_dp(self, cr, uid, ids, context=None):\n  181          config = self.browse(cr, uid, ids[0], context)\n  182          dp = self.pool.get('ir.model.data').get_object(cr, uid, 'product', 'decimal_stock_weight')\n  183          dp.write({'digits': config.decimal_precision})\n  184  \n  185:     _defaults = {\n  186:         'company_id': _default_company,\n  187      }\n  188  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\stock.py:\n   12  from openerp.tools.float_utils import float_compare, float_round\n   13  from openerp.tools.translate import _\n   14: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT, DEFAULT_SERVER_DATE_FORMAT\n   15  from openerp import SUPERUSER_ID, api, models\n   16  import openerp.addons.decimal_precision as dp\n   ..\n   32          'active': fields.boolean('Active', help=\"By unchecking the active field, you may hide an INCOTERM you will not use.\"),\n   33      }\n   34:     _defaults = {\n   35          'active': True,\n   36      }\n   ..\n  127          'scrap_location': fields.boolean('Is a Scrap Location?', help='Check this box to allow using this location to put scrapped/damaged goods.'),\n  128          'return_location': fields.boolean('Is a Return Location?', help='Check this box to allow using this location as a return location.'),\n  129:         'removal_strategy_id': fields.many2one('product.removal', 'Removal Strategy', help=\"Defines the default method used for suggesting the exact location (shelf) where to take the products from, which lot etc. for this location. This method can be enforced at the product category level, and a fallback is made on the parent locations if none is set here.\"),\n  130:         'putaway_strategy_id': fields.many2one('product.putaway', 'Put Away Strategy', help=\"Defines the default method used for suggesting the exact location (shelf) where to store the products. This method can be enforced at the product category level, and a fallback is made on the parent locations if none is set here.\"),\n  131          'barcode': fields.char('Barcode', copy=False, oldname='loc_barcode'),\n  132      }\n  133:     _defaults = {\n  134          'active': True,\n  135          'usage': 'internal',\n  136:         'company_id': lambda self, cr, uid, c: self.pool.get('res.company')._company_default_get(cr, uid, 'stock.location', context=c),\n  137          'posx': 0,\n  138          'posy': 0,\n  ...\n  142      _sql_constraints = [('barcode_company_uniq', 'unique (barcode,company_id)', 'The barcode for a location must be unique per company !')]\n  143  \n  144:     def create(self, cr, uid, default, context=None):\n  145:         if not default.get('barcode', False):\n  146:             default.update({'barcode': default.get('complete_name', False)})\n  147:         return super(stock_location, self).create(cr, uid, default, context=context)\n  148  \n  149      def get_putaway_strategy(self, cr, uid, location, product, context=None):\n  ...\n  158              loc = loc.location_id\n  159  \n  160:     def _default_removal_strategy(self, cr, uid, context=None):\n  161          return 'fifo'\n  162  \n  ...\n  174                  return loc.removal_strategy_id.method\n  175              loc = loc.location_id\n  176:         return self._default_removal_strategy(cr, uid, context=context)\n  177  \n  178      def get_warehouse(self, cr, uid, location, context=None):\n  ...\n  203          'product_selectable': fields.boolean('Applicable on Product', help=\"When checked, the route will be selectable in the Inventory tab of the Product form.  It will take priority over the Warehouse route. \"),\n  204          'product_categ_selectable': fields.boolean('Applicable on Product Category', help=\"When checked, the route will be selectable on the Product Category.  It will take priority over the Warehouse route. \"),\n  205:         'warehouse_selectable': fields.boolean('Applicable on Warehouse', help=\"When a warehouse is selected for this route, this route should be seen as the default route when products pass through this warehouse.  This behaviour can be overridden by the routes on the Product/Product Categories or by the Preferred Routes on the Procurement\"),\n  206          'supplied_wh_id': fields.many2one('stock.warehouse', 'Supplied Warehouse'),\n  207          'supplier_wh_id': fields.many2one('stock.warehouse', 'Supplying Warehouse'),\n  ...\n  213      }\n  214  \n  215:     _defaults = {\n  216          'sequence': lambda self, cr, uid, ctx: 0,\n  217          'active': True,\n  218          'product_selectable': True,\n  219:         'company_id': lambda self, cr, uid, c: self.pool.get('res.company')._company_default_get(cr, uid, 'stock.location.route', context=c),\n  220      }\n  221  \n  ...\n  305          'product_id': fields.many2one('product.product', 'Product', required=True, ondelete=\"restrict\", readonly=True, select=True),\n  306          'location_id': fields.many2one('stock.location', 'Location', required=True, ondelete=\"restrict\", readonly=True, select=True, auto_join=True),\n  307:         'qty': fields.float('Quantity', required=True, help=\"Quantity of products in this quant, in the default unit of measure of the product\", readonly=True, select=True),\n  308          'product_uom_id': fields.related('product_id', 'uom_id', type='many2one', relation=\"product.uom\", string='Unit of Measure', readonly=True),\n  309          'package_id': fields.many2one('stock.quant.package', string='Package', help=\"The package containing this quant\", readonly=True, select=True),\n  ...\n  328      }\n  329  \n  330:     _defaults = {\n  331:         'company_id': lambda self, cr, uid, c: self.pool.get('res.company')._company_default_get(cr, uid, 'stock.quant', context=c),\n  332      }\n  333  \n  ...\n  547              'cost': price_unit,\n  548              'history_ids': [(4, move.id)],\n  549:             'in_date': datetime.now().strftime(DEFAULT_SERVER_DATETIME_FORMAT),\n  550              'company_id': move.company_id.id,\n  551              'lot_id': lot_id,\n  ...\n  590          cr.execute(\"\"\"SELECT move_id FROM stock_quant_move_rel WHERE quant_id = %s\"\"\", (quant.id,))\n  591          res = cr.fetchall()\n  592:         new_quant = self.copy(cr, SUPERUSER_ID, quant.id, default={'qty': new_qty_round, 'history_ids': [(4, x[0]) for x in res]}, context=context)\n  593          self.write(cr, SUPERUSER_ID, quant.id, {'qty': qty_round}, context=context)\n  594          return self.browse(cr, uid, new_quant, context=context)\n  ...\n  782          context = context or {}\n  783          if ('name' not in vals) or (vals.get('name') in ('/', False)):\n  784:             ptype_id = vals.get('picking_type_id', context.get('default_picking_type_id', False))\n  785              sequence_id = self.pool.get('stock.picking.type').browse(cr, user, ptype_id, context=context).sequence_id.id\n  786              vals['name'] = self.pool.get('ir.sequence').next_by_id(cr, user, sequence_id, context=context)\n  ...\n  893          if picking_type_id:\n  894              picking_type = self.pool['stock.picking.type'].browse(cr, uid, picking_type_id, context=context)\n  895:             if not picking_type.default_location_src_id:\n  896                  if partner_id:\n  897                      partner = self.pool['res.partner'].browse(cr, uid, partner_id, context=context)\n  ...\n  901                      location_id = supplierloc.id\n  902              else:\n  903:                 location_id = picking_type.default_location_src_id.id\n  904  \n  905:             if not picking_type.default_location_dest_id:\n  906                  if partner_id:\n  907                      partner = self.pool['res.partner'].browse(cr, uid, partner_id, context=context)\n  ...\n  911                      location_dest_id = customerloc.id\n  912              else:\n  913:                 location_dest_id = picking_type.default_location_dest_id.id\n  914  \n  915              res['value'] = {'location_id': location_id,\n  ...\n  917          return res\n  918  \n  919:     def _default_location_destination(self):\n  920          # retrieve picking type from context; if none this returns an empty recordset\n  921:         picking_type_id = self._context.get('default_picking_type_id')\n  922          picking_type = self.env['stock.picking.type'].browse(picking_type_id)\n  923:         return picking_type.default_location_dest_id\n  924  \n  925:     def _default_location_source(self):\n  926          # retrieve picking type from context; if none this returns an empty recordset\n  927:         picking_type_id = self._context.get('default_picking_type_id')\n  928          picking_type = self.env['stock.picking.type'].browse(picking_type_id)\n  929:         return picking_type.default_location_src_id\n  930  \n  931      _columns = {\n  ...\n  958          ),\n  959          'location_id': fields.many2one('stock.location', required=True, string=\"Source Location Zone\",\n  960:                                       default=_default_location_source, readonly=True, states={'draft': [('readonly', False)]}),\n  961          'location_dest_id': fields.many2one('stock.location', required=True,string=\"Destination Location Zone\",\n  962:                                            default=_default_location_destination, readonly=True, states={'draft': [('readonly', False)]}),\n  963          'move_lines': fields.one2many('stock.move', 'picking_id', string=\"Stock Moves\", copy=True),\n  964          'move_lines_related': fields.related('move_lines', type='one2many', relation='stock.move', string=\"Move Lines\"),\n  ...\n  983          # technical field for attrs in view\n  984          'pack_operation_exist': fields.function(_get_pack_operation_exist, type='boolean', string='Has Pack Operations', help='Check the existance of pack operation on the picking'),\n  985:         'owner_id': fields.many2one('res.partner', 'Owner', states={'done': [('readonly', True)], 'cancel': [('readonly', True)]}, help=\"Default Owner\"),\n  986          'printed': fields.boolean('Printed'),\n  987          # Used to search on pickings\n  ...\n  996      }\n  997  \n  998:     _defaults = {\n  999          'name': '/',\n 1000          'state': 'draft',\n ....\n 1003          'priority': '1',  # normal\n 1004          'date': fields.datetime.now,\n 1005:         'company_id': lambda self, cr, uid, c: self.pool.get('res.company')._company_default_get(cr, uid, 'stock.picking', context=c),\n 1006          'recompute_pack_op': False,\n 1007          'launch_pack_operations': False,\n ....\n 1119  \n 1120              if not picking.date_done:\n 1121:                 self.write(cr, uid, [picking.id], {'date_done': time.strftime(DEFAULT_SERVER_DATETIME_FORMAT)}, context=context)\n 1122              self.action_confirm(cr, uid, [backorder_id], context=context)\n 1123              self.action_assign(cr, uid, [backorder_id], context=context)\n ....\n 1191              return location or picking.location_dest_id.id\n 1192  \n 1193:         # If we encounter an UoM that is smaller than the default UoM or the one already chosen, use the new one instead.\n 1194          product_uom = {} # Determines UoM used in pack operations\n 1195          location_dest_id = None\n ....\n 1248                  qtys_grouped[key] = quant.qty\n 1249              if quant.product_id.tracking != 'none' and quant.lot_id:\n 1250:                 lots_grouped.setdefault(key, {}).setdefault(quant.lot_id.id, 0.0)\n 1251                  lots_grouped[key][quant.lot_id.id] += quant.qty\n 1252  \n ....\n 1492              if op.product_uom_id.factor > product.uom_id.factor: #If the pack operation's is a smaller unit\n 1493                  uom_id = op.product_uom_id.id\n 1494:                 #HALF-UP rounding as only rounding errors will be because of propagation of error from default UoM\n 1495                  qty = uom_obj._compute_qty_obj(cr, uid, product.uom_id, remaining_qty, op.product_uom_id, rounding_method='HALF-UP')\n 1496          picking = op.picking_id\n 1497:         ref = product.default_code\n 1498          name = '[' + ref + ']' + ' ' + product.name if ref else product.name\n 1499          proc_id = False\n ....\n 1731          'create_date': fields.datetime('Creation Date'),\n 1732      }\n 1733:     _defaults = {\n 1734          'name': lambda x, y, z, c: x.pool.get('ir.sequence').next_by_code(y, z, 'stock.lot.serial'),\n 1735          'product_id': lambda x, y, z, c: c.get('product_id', False),\n ....\n 1804              for record in move.linked_move_operation_ids:\n 1805                  qty -= record.qty\n 1806:             # Keeping in product default UoM\n 1807              res[move.id] = float_round(qty, precision_rounding=move.product_id.uom_id.rounding)\n 1808          return res\n ....\n 1889      def _set_product_qty(self, cr, uid, id, field, value, arg, context=None):\n 1890          \"\"\" The meaning of product_qty field changed lately and is now a functional field computing the quantity\n 1891:             in the default product UoM. This code has been added to raise an error if a write is made given a value\n 1892              for `product_qty`, where the same write should set the `product_uom_qty` field instead, in order to\n 1893              detect errors.\n ....\n 1906              _name: (lambda self, cr, uid, ids, c={}: ids, ['product_id', 'product_uom', 'product_uom_qty'], 10),\n 1907          }, string='Quantity',\n 1908:             help='Quantity in the default UoM of the product'),\n 1909          'product_uom_qty': fields.float('Quantity', digits_compute=dp.get_precision('Product Unit of Measure'),\n 1910              required=True, states={'done': [('readonly', True)]},\n ....\n 1954          'backorder_id': fields.related('picking_id', 'backorder_id', type='many2one', relation=\"stock.picking\", string=\"Back Order of\", select=True),\n 1955          'origin': fields.char(\"Source Document\"),\n 1956:         'procure_method': fields.selection([('make_to_stock', 'Default: Take From Stock'), ('make_to_order', 'Advanced: Apply Procurement Rules')], 'Supply Method', required=True, \n 1957:                                            help=\"\"\"By default, the system will take from the stock in the source location and passively wait for availability. The other possibility allows you to directly create a procurement on the source location (and thus ignore its current stock) to gather products. If we want to chain moves and have this one to wait for the previous, this second option should be chosen.\"\"\"),\n 1958  \n 1959          # used for colors in tree views:\n ....\n 1964          'linked_move_operation_ids': fields.one2many('stock.move.operation.link', 'move_id', string='Linked Operations', readonly=True, help='Operations that impact this move for the computation of the remaining quantities'),\n 1965          'remaining_qty': fields.function(_get_remaining_qty, type='float', string='Remaining Quantity', digits=0,\n 1966:                                          states={'done': [('readonly', True)]}, help=\"Remaining Quantity in default UoM according to operations matched with this move\"),\n 1967          'procurement_id': fields.many2one('procurement.order', 'Procurement'),\n 1968          'group_id': fields.many2one('procurement.group', 'Procurement Group'),\n ....\n 1984      }\n 1985  \n 1986:     def _default_destination_address(self, cr, uid, context=None):\n 1987          return False\n 1988  \n 1989:     def _default_group_id(self, cr, uid, context=None):\n 1990          context = context or {}\n 1991:         if context.get('default_picking_id', False):\n 1992:             picking = self.pool.get('stock.picking').browse(cr, uid, context['default_picking_id'], context=context)\n 1993              return picking.group_id.id\n 1994          return False\n 1995  \n 1996:     _defaults = {\n 1997:         'partner_id': _default_destination_address,\n 1998          'state': 'draft',\n 1999          'priority': '1',\n ....\n 2002          'scrapped': False,\n 2003          'date': fields.datetime.now,\n 2004:         'company_id': lambda self, cr, uid, c: self.pool.get('res.company')._company_default_get(cr, uid, 'stock.move', context=c),\n 2005          'date_expected': fields.datetime.now,\n 2006          'procure_method': 'make_to_stock',\n 2007          'propagate': True,\n 2008          'partially_available': False,\n 2009:         'group_id': _default_group_id,\n 2010      }\n 2011  \n ....\n 2156                          propagated_changes_dict.pop('date_expected')\n 2157                      if propagated_date_field:\n 2158:                         current_date = datetime.strptime(move.date_expected, DEFAULT_SERVER_DATETIME_FORMAT)\n 2159:                         new_date = datetime.strptime(vals.get(propagated_date_field), DEFAULT_SERVER_DATETIME_FORMAT)\n 2160                          delta = new_date - current_date\n 2161                          if abs(delta.days) >= move.company_id.propagation_minimum_delta:\n 2162:                             old_move_date = datetime.strptime(move.move_dest_id.date_expected, DEFAULT_SERVER_DATETIME_FORMAT)\n 2163:                             new_move_date = (old_move_date + relativedelta.relativedelta(days=delta.days or 0)).strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n 2164                              propagated_changes_dict['date_expected'] = new_move_date\n 2165                      #For pushed moves as well as for pulled moves, propagate by recursive call of write().\n ....\n 2285          \"\"\"\n 2286          if not date_expected:\n 2287:             date_expected = time.strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n 2288          return {'value': {'date': date_expected}}\n 2289  \n ....\n 2554              # Assign quants already reserved with lot to the correct\n 2555              for quant in quants_taken:\n 2556:                 move_quants_dict.setdefault(quant[0].lot_id.id, [])\n 2557                  move_quants_dict[quant[0].lot_id.id] += [quant]\n 2558              false_quants_move = [x for x in false_quants if x[0].reservation_id.id == move]\n 2559              for lot in lot_qty:\n 2560:                 move_quants_dict.setdefault(lot, [])\n 2561                  redo_false_quants = False\n 2562                  # Take remaining reserved quants with  no lot first\n ....\n 2724          self._check_package_from_moves(cr, uid, ids, context=context)\n 2725          #set the move as done\n 2726:         self.write(cr, uid, ids, {'state': 'done', 'date': time.strftime(DEFAULT_SERVER_DATETIME_FORMAT)}, context=context)\n 2727          self.pool.get('procurement.order').check(cr, uid, list(procurement_ids), context=context)\n 2728          #assign destination moves\n ....\n 2735                  done_picking.append(picking.id)\n 2736          if done_picking:\n 2737:             picking_obj.write(cr, uid, done_picking, {'date_done': time.strftime(DEFAULT_SERVER_DATETIME_FORMAT)}, context=context)\n 2738          return True\n 2739  \n ....\n 2769                  #raise UserError(_('Forbidden operation: it is not allowed to scrap products from a virtual location.'))\n 2770              move_qty = move.product_qty\n 2771:             default_val = {\n 2772                  'location_id': source_location.id,\n 2773                  'product_uom_qty': quantity,\n ....\n 2778                  'restrict_partner_id': restrict_partner_id,\n 2779              }\n 2780:             new_move = self.copy(cr, uid, move.id, default_val)\n 2781  \n 2782              res += [new_move]\n ....\n 2826          context = context or {}\n 2827  \n 2828:         #HALF-UP rounding as only rounding errors will be because of propagation of error from default UoM\n 2829          uom_qty = uom_obj._compute_qty_obj(cr, uid, move.product_id.uom_id, qty, move.product_uom, rounding_method='HALF-UP', context=context)\n 2830:         defaults = {\n 2831              'product_uom_qty': uom_qty,\n 2832              'procure_method': 'make_to_stock',\n ....\n 2839  \n 2840          if restrict_partner_id:\n 2841:             defaults['restrict_partner_id'] = restrict_partner_id\n 2842  \n 2843          if context.get('source_location_id'):\n 2844:             defaults['location_id'] = context['source_location_id']\n 2845:         new_move = self.copy(cr, uid, move.id, defaults, context=context)\n 2846  \n 2847          ctx = context.copy()\n ....\n 2912             :rtype: list of tuple\n 2913          \"\"\"\n 2914:         #default available choices\n 2915          res_filter = [('none', _('All products')), ('partial', _('Select products manually')), ('product', _('One product only'))]\n 2916          settings_obj = self.pool.get('stock.config.settings')\n 2917          config_ids = settings_obj.search(cr, uid, [], limit=1, order='id DESC', context=context)\n 2918:         #If we don't have updated config until now, all fields are by default false and so should be not dipslayed\n 2919          if not config_ids:\n 2920              return res_filter\n ....\n 2964      }\n 2965  \n 2966:     def _default_stock_location(self, cr, uid, context=None):\n 2967          try:\n 2968              warehouse = self.pool.get('ir.model.data').get_object(cr, uid, 'stock', 'warehouse0')\n ....\n 2971              return False\n 2972  \n 2973:     _defaults = {\n 2974          'date': fields.datetime.now,\n 2975          'state': 'draft',\n 2976:         'company_id': lambda self, cr, uid, c: self.pool.get('res.company')._company_default_get(cr, uid, 'stock.inventory', context=c),\n 2977:         'location_id': _default_stock_location,\n 2978          'filter': 'none',\n 2979      }\n ....\n 3042                  for product_line in vals:\n 3043                      inventory_line_obj.create(cr, uid, product_line, context=context)\n 3044:         return self.write(cr, uid, ids, {'state': 'confirm', 'date': time.strftime(DEFAULT_SERVER_DATETIME_FORMAT)})\n 3045  \n 3046      def _get_inventory_lines(self, cr, uid, inventory, context=None):\n ....\n 3155          'partner_id': fields.many2one('res.partner', 'Owner'),\n 3156          'product_name': fields.related('product_id', 'name', type='char', string='Product Name', store={\n 3157:                                                                                             'product.product': (_get_product_name_change, ['name', 'default_code'], 20),\n 3158                                                                                              'stock.inventory.line': (lambda self, cr, uid, ids, c={}: ids, ['product_id'], 20),}),\n 3159:         'product_code': fields.related('product_id', 'default_code', type='char', string='Product Code', store={\n 3160:                                                                                             'product.product': (_get_product_name_change, ['name', 'default_code'], 20),\n 3161                                                                                              'stock.inventory.line': (lambda self, cr, uid, ids, c={}: ids, ['product_id'], 20),}),\n 3162          'location_name': fields.related('location_id', 'complete_name', type='char', string='Location Name', store={\n ....\n 3168      }\n 3169  \n 3170:     _defaults = {\n 3171          'product_qty': 0,\n 3172          'product_uom_id': lambda self, cr, uid, ctx=None: self.pool['ir.model.data'].get_object_reference(cr, uid, 'product', 'product_uom_unit')[1]\n ....\n 3198          uom_obj = self.pool[\"product.uom\"]\n 3199          res = {'value': {}}\n 3200:         # If no UoM already put the default UoM of the product\n 3201          if product_id:\n 3202              product = self.pool.get('product.product').browse(cr, uid, product_id, context=context)\n ....\n 3301          'lot_stock_id': fields.many2one('stock.location', 'Location Stock', domain=[('usage', '=', 'internal')], required=True),\n 3302          'code': fields.char('Short Name', size=5, required=True, help=\"Short name used to identify your warehouse\"),\n 3303:         'route_ids': fields.many2many('stock.location.route', 'stock_route_warehouse', 'warehouse_id', 'route_id', 'Routes', domain=\"[('warehouse_selectable', '=', True)]\", help='Defaults routes through the warehouse'),\n 3304          'reception_steps': fields.selection([\n 3305              ('one_step', 'Receive goods directly in stock (1 step)'),\n 3306              ('two_steps', 'Unload in input location then go to stock (2 steps)'),\n 3307              ('three_steps', 'Unload in input location, go through a quality control before being admitted in stock (3 steps)')], 'Incoming Shipments', \n 3308:                                             help=\"Default incoming route to follow\", required=True),\n 3309          'delivery_steps': fields.selection([\n 3310              ('ship_only', 'Ship directly from stock (Ship only)'),\n 3311              ('pick_ship', 'Bring goods to output location before shipping (Pick + Ship)'),\n 3312              ('pick_pack_ship', 'Make packages into a dedicated location, then bring them to the output location for shipping (Pick + Pack + Ship)')], 'Outgoing Shippings', \n 3313:                                            help=\"Default outgoing route to follow\", required=True),\n 3314          'wh_input_stock_loc_id': fields.many2one('stock.location', 'Input Location'),\n 3315          'wh_qc_stock_loc_id': fields.many2one('stock.location', 'Quality Control Location'),\n ....\n 3329          'resupply_route_ids': fields.one2many('stock.location.route', 'supplied_wh_id', 'Resupply Routes', \n 3330                                                help=\"Routes will be created for these resupply warehouses and you can select them on products and product categories\"),\n 3331:         'default_resupply_wh_id': fields.many2one('stock.warehouse', 'Default Resupply Warehouse', help=\"Goods will always be resupplied from this warehouse\"),\n 3332      }\n 3333  \n 3334:     def onchange_filter_default_resupply_wh_id(self, cr, uid, ids, default_resupply_wh_id, resupply_wh_ids, context=None):\n 3335          resupply_wh_ids = set([x['id'] for x in (self.resolve_2many_commands(cr, uid, 'resupply_wh_ids', resupply_wh_ids, ['id']))])\n 3336:         if default_resupply_wh_id: #If we are removing the default resupply, we don't have default_resupply_wh_id \n 3337:             resupply_wh_ids.add(default_resupply_wh_id)\n 3338          resupply_wh_ids = list(resupply_wh_ids)        \n 3339          return {'value': {'resupply_wh_ids': resupply_wh_ids}}\n ....\n 3359          }\n 3360  \n 3361:     def _create_resupply_routes(self, cr, uid, warehouse, supplier_warehouses, default_resupply_wh, context=None):\n 3362          route_obj = self.pool.get('stock.location.route')\n 3363          pull_obj = self.pool.get('procurement.rule')\n ....\n 3383                  for pull_rule in pull_rules_list:\n 3384                      pull_obj.create(cr, uid, vals=pull_rule, context=context)\n 3385:                 #if the warehouse is also set as default resupply method, assign this route automatically to the warehouse\n 3386:                 if default_resupply_wh and default_resupply_wh.id == wh.id:\n 3387                      self.write(cr, uid, [warehouse.id, wh.id], {'route_ids': [(4, inter_wh_route_id)]}, context=context)\n 3388  \n 3389:     _defaults = {\n 3390:         'company_id': lambda self, cr, uid, c: self.pool.get('res.company')._company_default_get(cr, uid, 'stock.inventory', context=c),\n 3391          'reception_steps': 'one_step',\n 3392          'delivery_steps': 'ship_only',\n ....\n 3601  \n 3602          #create route selectable on the product to resupply the warehouse from another one\n 3603:         self._create_resupply_routes(cr, uid, warehouse, warehouse.resupply_wh_ids, warehouse.default_resupply_wh_id, context=context)\n 3604  \n 3605          #return routes and mto procurement rule to store on the warehouse\n ....\n 3620          new_delivery_step = new_delivery_step or warehouse.delivery_steps\n 3621  \n 3622:         #change the default source and destination location and (de)activate picking types\n 3623          input_loc = warehouse.wh_input_stock_loc_id\n 3624          if new_reception_step == 'one_step':\n ....\n 3627          if new_delivery_step == 'ship_only':\n 3628              output_loc = warehouse.lot_stock_id\n 3629:         picking_type_obj.write(cr, uid, warehouse.in_type_id.id, {'default_location_dest_id': input_loc.id}, context=context)\n 3630:         picking_type_obj.write(cr, uid, warehouse.out_type_id.id, {'default_location_src_id': output_loc.id}, context=context)\n 3631          picking_type_obj.write(cr, uid, warehouse.pick_type_id.id, {\n 3632                  'active': new_delivery_step != 'ship_only',\n 3633:                 'default_location_dest_id': output_loc.id if new_delivery_step == 'pick_ship' else warehouse.wh_pack_stock_loc_id.id,\n 3634              }, context=context)\n 3635          picking_type_obj.write(cr, uid, warehouse.pack_type_id.id, {'active': new_delivery_step == 'pick_pack_ship'}, context=context)\n ....\n 3714              'use_existing_lots': False,\n 3715              'sequence_id': in_seq_id,\n 3716:             'default_location_src_id': False,\n 3717:             'default_location_dest_id': input_loc.id,\n 3718              'sequence': max_sequence + 1,\n 3719              'color': color}, context=context)\n ....\n 3726              'sequence_id': out_seq_id,\n 3727              'return_picking_type_id': in_type_id,\n 3728:             'default_location_src_id': output_loc.id,\n 3729:             'default_location_dest_id': False,\n 3730              'sequence': max_sequence + 4,\n 3731              'color': color}, context=context)\n ....\n 3738              'use_existing_lots': True,\n 3739              'sequence_id': int_seq_id,\n 3740:             'default_location_src_id': wh_stock_loc.id,\n 3741:             'default_location_dest_id': wh_stock_loc.id,\n 3742              'active': not internal_active_false,\n 3743              'sequence': max_sequence + 2,\n ....\n 3750              'use_existing_lots': True,\n 3751              'sequence_id': pack_seq_id,\n 3752:             'default_location_src_id': wh_pack_stock_loc.id,\n 3753:             'default_location_dest_id': output_loc.id,\n 3754              'active': warehouse.delivery_steps == 'pick_pack_ship',\n 3755              'sequence': max_sequence + 3,\n ....\n 3762              'use_existing_lots': True,\n 3763              'sequence_id': pick_seq_id,\n 3764:             'default_location_src_id': wh_stock_loc.id,\n 3765:             'default_location_dest_id': output_loc.id if warehouse.delivery_steps == 'pick_ship' else wh_pack_stock_loc.id,\n 3766              'active': warehouse.delivery_steps != 'ship_only',\n 3767              'sequence': max_sequence + 2,\n ....\n 3800          vals['view_location_id'] = wh_loc_id\n 3801          #create all location\n 3802:         def_values = self.default_get(cr, uid, {'reception_steps', 'delivery_steps'})\n 3803          reception_steps = vals.get('reception_steps',  def_values['reception_steps'])\n 3804          delivery_steps = vals.get('delivery_steps', def_values['delivery_steps'])\n ....\n 3839                  transit_loc = comp_obj.browse(cr, uid, vals.get('company_id'), context=context).internal_transit_location_id.id\n 3840              else:\n 3841:                 transit_loc = comp_obj.browse(cr, uid, comp_obj._company_default_get(cr, uid, 'stock.warehouse', context=context)).internal_transit_location_id.id\n 3842              self.pool['res.partner'].write(cr, uid, [vals['partner_id']], {'property_stock_customer': transit_loc,\n 3843                                                                              'property_stock_supplier': transit_loc}, context=context)\n ....\n 3981                      if to_add_wh_ids:\n 3982                          supplier_warehouses = self.browse(cr, uid, list(to_add_wh_ids), context=context)\n 3983:                         self._create_resupply_routes(cr, uid, warehouse, supplier_warehouses, warehouse.default_resupply_wh_id, context=context)\n 3984                      to_remove_wh_ids = old_ids - new_ids\n 3985                      if to_remove_wh_ids:\n ....\n 3990                      #not implemented\n 3991                      pass\n 3992:         if 'default_resupply_wh_id' in vals:\n 3993:             if vals.get('default_resupply_wh_id') == warehouse.id:\n 3994:                 raise UserError(_('The default resupply warehouse should be different than the warehouse itself!'))\n 3995:             if warehouse.default_resupply_wh_id:\n 3996                  #remove the existing resupplying route on the warehouse\n 3997:                 to_remove_route_ids = route_obj.search(cr, uid, [('supplied_wh_id', '=', warehouse.id), ('supplier_wh_id', '=', warehouse.default_resupply_wh_id.id)], context=context)\n 3998                  for inter_wh_route_id in to_remove_route_ids:\n 3999                      self.write(cr, uid, [warehouse.id], {'route_ids': [(3, inter_wh_route_id)]})\n 4000:             if vals.get('default_resupply_wh_id'):\n 4001                  #assign the new resupplying route on all products\n 4002:                 to_assign_route_ids = route_obj.search(cr, uid, [('supplied_wh_id', '=', warehouse.id), ('supplier_wh_id', '=', vals.get('default_resupply_wh_id'))], context=context)\n 4003                  for inter_wh_route_id in to_assign_route_ids:\n 4004                      self.write(cr, uid, [warehouse.id], {'route_ids': [(4, inter_wh_route_id)]})\n ....\n 4079          'sequence': fields.integer('Sequence'),\n 4080      }\n 4081:     _defaults = {\n 4082          'auto': 'auto',\n 4083          'delay': 0,\n 4084:         'company_id': lambda self, cr, uid, c: self.pool.get('res.company')._company_default_get(cr, uid, 'procurement.order', context=c),\n 4085          'propagate': True,\n 4086          'active': True,\n ....\n 4088  \n 4089      def _prepare_push_apply(self, cr, uid, rule, move, context=None):\n 4090:         newdate = (datetime.strptime(move.date_expected, DEFAULT_SERVER_DATETIME_FORMAT) + relativedelta.relativedelta(days=rule.delay or 0)).strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n 4091          return {\n 4092                  'origin': move.origin or move.picking_id.name or \"/\",\n ....\n 4105      def _apply(self, cr, uid, rule, move, context=None):\n 4106          move_obj = self.pool.get('stock.move')\n 4107:         newdate = (datetime.strptime(move.date_expected, DEFAULT_SERVER_DATETIME_FORMAT) + relativedelta.relativedelta(days=rule.delay or 0)).strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n 4108          if rule.auto == 'transparent':\n 4109              old_dest_location = move.location_dest_id.id\n ....\n 4172      def _get_package_info(self, cr, uid, ids, name, args, context=None):\n 4173          quant_obj = self.pool.get(\"stock.quant\")\n 4174:         default_company_id = self.pool.get('res.users').browse(cr, uid, uid, context=context).company_id.id\n 4175:         res = dict((res_id, {'location_id': False, 'company_id': default_company_id, 'owner_id': False}) for res_id in ids)\n 4176          for pack in self.browse(cr, uid, ids, context=context):\n 4177              quants = quant_obj.search(cr, uid, [('package_id', 'child_of', pack.id)], context=context)\n ....\n 4220                                      }, readonly=True, select=True),\n 4221      }\n 4222:     _defaults = {\n 4223          'name': lambda self, cr, uid, context: self.pool.get('ir.sequence').next_by_code(cr, uid, 'stock.quant.package') or _('Unknown Pack')\n 4224      }\n ....\n 4289  \n 4290      #Remove me?\n 4291:     def copy_pack(self, cr, uid, id, default_pack_values=None, default=None, context=None):\n 4292          stock_pack_operation_obj = self.pool.get('stock.pack.operation')\n 4293:         if default is None:\n 4294:             default = {}\n 4295:         new_package_id = self.copy(cr, uid, id, default_pack_values, context=context)\n 4296:         default['result_package_id'] = new_package_id\n 4297          op_ids = stock_pack_operation_obj.search(cr, uid, [('result_package_id', '=', id)], context=context)\n 4298          for op_id in op_ids:\n 4299:             stock_pack_operation_obj.copy(cr, uid, op_id, default, context=context)\n 4300  \n 4301  \n ....\n 4414          return res\n 4415  \n 4416:     def _get_default_from_loc(self, cr, uid, context=None):\n 4417:         default_loc = context.get('default_location_id')\n 4418:         if default_loc:\n 4419:             return self.pool['stock.location'].browse(cr, uid, default_loc, context=context).name\n 4420  \n 4421:     def _get_default_to_loc(self, cr, uid, context=None):\n 4422:         default_loc = context.get('default_location_dest_id')\n 4423:         if default_loc:\n 4424:             return self.pool['stock.location'].browse(cr, uid, default_loc, context=context).name\n 4425  \n 4426      _columns = {\n ....\n 4437          'owner_id': fields.many2one('res.partner', 'Owner', help=\"Owner of the quants\"),\n 4438          'linked_move_operation_ids': fields.one2many('stock.move.operation.link', 'operation_id', string='Linked Moves', readonly=True, help='Moves impacted by this operation for the computation of the remaining quantities'),\n 4439:         'remaining_qty': fields.function(_get_remaining_qty, type='float', digits = 0, string=\"Remaining Qty\", help=\"Remaining quantity in default UoM according to moves matched with this operation. \"),\n 4440          'location_id': fields.many2one('stock.location', 'Source Location', required=True),\n 4441          'location_dest_id': fields.many2one('stock.location', 'Destination Location', required=True),\n ....\n 4457      }\n 4458  \n 4459:     _defaults = {\n 4460          'date': fields.date.context_today,\n 4461          'qty_done': 0.0,\n ....\n 4463          'processed_boolean': lambda *a: False,\n 4464          'fresh_record': True,\n 4465:         'from_loc': _get_default_from_loc,\n 4466:         'to_loc': _get_default_to_loc,\n 4467      }\n 4468  \n ....\n 4470          for pack in self.browse(cr, uid, ids, context=context):\n 4471              if pack.product_qty - pack.qty_done > 0.0 and pack.qty_done < pack.product_qty:\n 4472:                 pack2 = self.copy(cr, uid, pack.id, default={'qty_done': 0.0, 'product_qty': pack.product_qty - pack.qty_done}, context=context)\n 4473                  self.write(cr, uid, [pack.id], {'product_qty': pack.qty_done}, context=context)\n 4474              else:\n ....\n 4577      }\n 4578  \n 4579:     _defaults = {\n 4580          'qty': lambda cr, uid, ids, c: 1.0,\n 4581          'qty_todo': lambda cr, uid, ids, c: 0.0,\n ....\n 4714           ], 'Lead Type', required=True)\n 4715      }\n 4716:     _defaults = {\n 4717          'active': lambda *a: 1,\n 4718          'lead_days': lambda *a: 1,\n ....\n 4721          'name': lambda self, cr, uid, context: self.pool.get('ir.sequence').next_by_code(cr, uid, 'stock.orderpoint') or '',\n 4722          'product_uom': lambda self, cr, uid, context: context.get('product_uom', False),\n 4723:         'company_id': lambda self, cr, uid, context: self.pool.get('res.company')._company_default_get(cr, uid, 'stock.warehouse.orderpoint', context=context)\n 4724      }\n 4725      _sql_constraints = [\n ....\n 4727      ]\n 4728      _constraints = [\n 4729:         (_check_product_uom, 'You have to select a product unit of measure in the same category than the default unit of measure of the product', ['product_id', 'product_uom']),\n 4730      ]\n 4731  \n 4732:     def default_get(self, cr, uid, fields, context=None):\n 4733          warehouse_obj = self.pool.get('stock.warehouse')\n 4734:         res = super(stock_warehouse_orderpoint, self).default_get(cr, uid, fields, context)\n 4735:         # default 'warehouse_id' and 'location_id'\n 4736          if 'warehouse_id' not in res:\n 4737              warehouse_ids = res.get('company_id') and warehouse_obj.search(cr, uid, [('company_id', '=', res['company_id'])], limit=1, context=context) or []\n ....\n 4797              'count_picking_ready': [('state', 'in', ('assigned', 'partially_available'))],\n 4798              'count_picking': [('state', 'in', ('assigned', 'waiting', 'confirmed', 'partially_available'))],\n 4799:             'count_picking_late': [('min_date', '<', time.strftime(DEFAULT_SERVER_DATETIME_FORMAT)), ('state', 'in', ('assigned', 'waiting', 'confirmed', 'partially_available'))],\n 4800              'count_picking_backorders': [('backorder_id', '!=', False), ('state', 'in', ('confirmed', 'assigned', 'waiting', 'partially_available'))],\n 4801          }\n ....\n 4807              count = dict(map(lambda x: (x['picking_type_id'] and x['picking_type_id'][0], x['picking_type_id_count']), data))\n 4808              for tid in ids:\n 4809:                 result.setdefault(tid, {})[field] = count.get(tid, 0)\n 4810          for tid in ids:\n 4811              if result[tid]['count_picking']:\n ....\n 4851          \n 4852          result = {\n 4853:             'default_location_src_id': stock_loc,\n 4854:             'default_location_dest_id': stock_loc,\n 4855          }\n 4856          if picking_code == 'incoming':\n 4857:             result['default_location_src_id'] = obj_data.xmlid_to_res_id(cr, uid, 'stock.stock_location_suppliers')\n 4858          elif picking_code == 'outgoing':\n 4859:             result['default_location_dest_id'] = obj_data.xmlid_to_res_id(cr, uid, 'stock.stock_location_customers')\n 4860          return {'value': result}\n 4861  \n ....\n 4884          return res\n 4885  \n 4886:     def _default_warehouse(self, cr, uid, context=None):\n 4887          user = self.pool.get('res.users').browse(cr, uid, uid, context)\n 4888          res = self.pool.get('stock.warehouse').search(cr, uid, [('company_id', '=', user.company_id.id)], limit=1, context=context)\n ....\n 4895          'sequence': fields.integer('Sequence', help=\"Used to order the 'All Operations' kanban view\"),\n 4896          'sequence_id': fields.many2one('ir.sequence', 'Reference Sequence', required=True),\n 4897:         'default_location_src_id': fields.many2one('stock.location', 'Default Source Location', help=\"This is the default source location when you create a picking manually with this picking type. It is possible however to change it or that the routes put another location. If it is empty, it will check for the supplier location on the partner. \"),\n 4898:         'default_location_dest_id': fields.many2one('stock.location', 'Default Destination Location', help=\"This is the default destination location when you create a picking manually with this picking type. It is possible however to change it or that the routes put another location. If it is empty, it will check for the customer location on the partner. \"),\n 4899          'code': fields.selection([('incoming', 'Suppliers'), ('outgoing', 'Customers'), ('internal', 'Internal')], 'Type of Operation', required=True),\n 4900          'return_picking_type_id': fields.many2one('stock.picking.type', 'Picking Type for Returns'),\n ....\n 4932      }\n 4933  \n 4934:     _defaults = {\n 4935:         'warehouse_id': _default_warehouse,\n 4936          'active': True,\n 4937          'use_existing_lots': True,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\stock_view.xml:\n  115                          <page string=\"Inventory Details\" >\n  116                              <button name=\"reset_real_qty\" states=\"confirm\" string=\"⇒ Set quantities to 0\" type=\"object\" class=\"oe_link oe_right\" groups=\"stock.group_stock_user\"/>\n  117:                             <field name=\"line_ids\" string=\"Inventory Details\" context=\"{'default_location_id': location_id,  'default_product_id': product_id, 'default_prod_lot_id': lot_id, 'default_package_id': package_id, 'default_partner_id': partner_id}\">\n  118                                  <tree string=\"Inventory Details\" editable=\"bottom\" decoration-info=\"product_qty != theoretical_qty\" decoration-danger=\"theoretical_qty &lt; 0\">\n  119                                      <field name=\"product_id\"  domain=\"[('type','=','product')]\" on_change=\"onchange_createline(location_id, product_id, product_uom_id, package_id, prod_lot_id, partner_id)\"/>\n  120                                      <field name=\"product_uom_id\" groups=\"product.group_uom\" string=\"UoM\" on_change=\"onchange_createline(location_id, product_id, product_uom_id, package_id, prod_lot_id, partner_id)\"/>\n  121                                      <field name=\"location_id\" domain=\"[('id', 'child_of', parent.location_id)]\" groups=\"stock.group_locations\" on_change=\"onchange_createline(location_id, product_id, product_uom_id, package_id, prod_lot_id, partner_id)\"/>\n  122:                                     <field name=\"prod_lot_id\" on_change=\"onchange_createline(location_id, product_id, product_uom_id, package_id, prod_lot_id, partner_id)\" domain=\"[('product_id', '=', product_id)]\" context=\"{'default_product_id': product_id}\"  groups=\"stock.group_production_lot\"/>\n  123                                      <field name=\"package_id\" domain=\"['|', ('location_id','=', False), ('location_id', '=', location_id)]\" on_change=\"onchange_createline(location_id, product_id, product_uom_id, package_id, prod_lot_id, partner_id)\" groups=\"stock.group_tracking_lot\"/>\n  124                                      <field name=\"partner_id\" on_change=\"onchange_createline(location_id, product_id, product_uom_id, package_id, prod_lot_id, partner_id)\" groups=\"stock.group_tracking_owner\"/>\n  ...\n  291  \n  292          <record model=\"ir.actions.act_window\" id=\"location_open_quants\">\n  293:             <field name=\"context\">{'search_default_productgroup': 1}</field>\n  294              <field name=\"domain\">[('location_id', 'child_of', active_ids)]</field>\n  295              <field name=\"name\">Current Stock</field>\n  ...\n  298  \n  299          <act_window\n  300:             context=\"{'location': active_id, 'search_default_real_stock_available': 1, 'search_default_virtual_stock_available': 1,\n  301:                         'search_default_virtual_stock_negative': 1, 'search_default_real_stock_negative': 1}\"\n  302              id=\"act_product_location_open\"\n  303              name=\"Products\"\n  ...\n  314                                  class=\"oe_stat_button\"\n  315                                  icon=\"fa-building-o\" name=\"%(location_open_quants)d\" type=\"action\"\n  316:                                 context=\"{'search_default_internal_loc': 1}\"/>\n  317                          <button string=\"Products\"\n  318                                  class=\"oe_stat_button\"\n  ...\n  498              <field name=\"view_id\" ref=\"view_location_tree2\"/>\n  499              <field name=\"search_view_id\" ref=\"view_location_search\"/>\n  500:             <field name=\"context\">{'search_default_in_location':1}</field>\n  501              <field name=\"help\" type=\"html\">\n  502                <p class=\"oe_view_nocontent_create\">\n  ...\n  550                                      <field name=\"reception_steps\" widget='radio'/>\n  551                                      <field name=\"delivery_steps\" widget='radio'/>\n  552:                                     <field name=\"default_resupply_wh_id\" widget='selection' on_change=\"onchange_filter_default_resupply_wh_id(default_resupply_wh_id, resupply_wh_ids)\"/>\n  553:                                     <field name=\"resupply_wh_ids\" domain=\"[('id', '!=', id)]\" widget='many2many_checkboxes' on_change=\"onchange_filter_default_resupply_wh_id(default_resupply_wh_id, resupply_wh_ids)\"/>\n  554                                  </group>\n  555                              </page>\n  ...\n  604          <!--\n  605              Stock picking\n  606:             Defaults and Internal Pickings\n  607          -->\n  608  \n  ...\n  638                                      </div>\n  639                                      <div class=\"col-xs-6\">\n  640:                                         <strong><span t-attf-class=\"pull-right text-right label #{['draft', 'cancel'].indexOf(record.state.raw_value) > -1 ? 'label-default' : ['none'].indexOf(record.state.raw_value) > -1 ? 'label-danger' : ['waiting', 'confirmed', 'partially_available'].indexOf(record.state.raw_value) > -1 ? 'label-warning' : ['done'].indexOf(record.state.raw_value) > -1 ? 'label-success' : 'label-primary'}\"><t t-esc=\"record.state.value\"/></span></strong>\n  641                                      </div>\n  642                                  </div>\n  ...\n  841                              <field name=\"recompute_pack_op\" invisible=\"1\"/>\n  842                              <field name=\"pack_operation_ids\" invisible=\"1\"/>\n  843:                             <field name=\"pack_operation_product_ids\" options=\"{'reload_on_button': True}\" context=\"{'default_picking_id': id, 'default_location_id': location_id, 'default_location_dest_id': location_dest_id}\">\n  844                                  <tree editable=\"bottom\" decoration-muted=\"result_package_id\" decoration-danger=\"qty_done&gt;product_qty\" decoration-success=\"qty_done==product_qty and state!='done' and not result_package_id\">\n  845                                      <field name=\"package_id\" groups=\"stock.group_tracking_lot\" invisible=\"1\"/>\n  ...\n  864                              </field>\n  865                              <field name=\"picking_type_entire_packs\" invisible=\"1\"/>\n  866:                             <field name=\"pack_operation_pack_ids\" options=\"{'reload_on_button': True}\" attrs=\"{'invisible': [('pack_operation_pack_ids', '=', []), ('picking_type_entire_packs', '=', False)]}\" context=\"{'default_picking_id': id, 'default_location_id': location_id, 'default_location_dest_id': location_dest_id, 'default_picking_id': id}\" groups=\"stock.group_tracking_lot\">\n  867                                  <tree editable=\"bottom\" decoration-muted=\"qty_done&gt;0\">\n  868                                      <field name=\"package_id\" required=\"1\" string=\"Package To Move\"/>\n  ...\n  883                          </page>\n  884                          <page string=\"Initial Demand\" attrs=\"{'invisible': [('state', 'not in', ('draft', 'confirmed', 'waiting'))]}\">\n  885:                             <field name=\"move_lines\" options=\"{'reload_on_button': True}\" mode=\"tree,kanban\" context=\"{'address_in_id': partner_id, 'form_view_ref':'stock.view_move_picking_form', 'tree_view_ref':'stock.view_move_picking_tree', 'default_picking_type_id': picking_type_id, 'default_location_id': location_id, 'default_location_dest_id': location_dest_id}\">\n  886                                      <kanban class=\"o_kanban_mobile\">\n  887                                      <field name=\"product_id\"/>\n  ...\n  915                          </page>\n  916                          <page string=\"Initial Demand\" attrs=\"{'invisible': [('state', 'in', ('draft', 'confirmed', 'waiting', 'done'))]}\">\n  917:                             <field name=\"move_lines_related\" readonly=\"1\" context=\"{'address_in_id': partner_id, 'form_view_ref':'stock.view_move_picking_form', 'tree_view_ref':'stock.view_move_picking_tree', 'default_picking_type_id': picking_type_id, 'default_location_id': location_id, 'default_location_dest_id': location_dest_id}\"/>\n  918                          </page>\n  919                          <page string=\"Additional Info\" name=\"extra\">\n  ...\n 1004              <field name=\"domain\"></field>\n 1005              <field name=\"context\">{\n 1006:                     'search_default_picking_type_id': [active_id],\n 1007:                     'default_picking_type_id': active_id,\n 1008                      'contact_display': 'partner_address',\n 1009              }\n ....\n 1027              <field name=\"domain\"></field>\n 1028              <field name=\"context\">{\n 1029:                     'search_default_picking_type_id': [active_id],\n 1030:                     'default_picking_type_id': active_id,\n 1031                      'contact_display': 'partner_address',\n 1032:                     'search_default_done': 1,\n 1033              }\n 1034              </field>\n ....\n 1051              <field name=\"domain\"></field>\n 1052              <field name=\"context\">{\n 1053:                     'search_default_picking_type_id': [active_id],\n 1054:                     'default_picking_type_id': active_id,\n 1055                      'contact_display': 'partner_address',\n 1056:                     'search_default_available': 1,\n 1057              }\n 1058              </field>\n ....\n 1075              <field name=\"domain\"></field>\n 1076              <field name=\"context\">{\n 1077:                     'search_default_picking_type_id': [active_id],\n 1078:                     'default_picking_type_id': active_id,\n 1079                      'contact_display': 'partner_address',\n 1080:                     'search_default_done': 1,\n 1081                      'group_by': ['date'],\n 1082              }\n ....\n 1100              <field name=\"domain\"></field>\n 1101              <field name=\"context\">{\n 1102:                     'search_default_picking_type_id': [active_id],\n 1103:                     'default_picking_type_id': active_id,\n 1104                      'contact_display': 'partner_address',\n 1105:                     'search_default_waiting': 1,\n 1106              }\n 1107              </field>\n ....\n 1124              <field name=\"domain\"></field>\n 1125              <field name=\"context\">{\n 1126:                     'search_default_picking_type_id': [active_id],\n 1127:                     'default_picking_type_id': active_id,\n 1128                      'contact_display': 'partner_address',\n 1129:                     'search_default_late': 1,\n 1130:                     'search_default_confirmed': 1,\n 1131              }\n 1132              </field>\n ....\n 1149              <field name=\"domain\"></field>\n 1150              <field name=\"context\">{\n 1151:                     'search_default_picking_type_id': [active_id],\n 1152:                     'default_picking_type_id': active_id,\n 1153                      'contact_display': 'partner_address',\n 1154:                     'search_default_backorder': 1,\n 1155:                     'search_default_confirmed': 1,\n 1156              }\n 1157              </field>\n ....\n 1174              <field name=\"domain\"></field>\n 1175              <field name=\"context\">{\n 1176:                     'search_default_picking_type_id': [active_id],\n 1177:                     'default_picking_type_id': active_id,\n 1178                      'contact_display': 'partner_address',\n 1179              }\n ....\n 1200              <field name=\"domain\"></field>\n 1201              <field name=\"context\">{\n 1202:                     'search_default_picking_type_id': [active_id],\n 1203:                     'default_picking_type_id': active_id,\n 1204                      'contact_display': 'partner_address',\n 1205              }\n ....\n 1314                                          on_change=\"onchange_quantity(product_id, product_uom_qty, product_uom)\"/>\n 1315                                      <field name=\"product_uom\" options=\"{'no_open': True, 'no_create': True}\" groups=\"product.group_uom\"/>\n 1316:                                     <button name=\"%(stock.move_scrap)d\" class=\"btn-default\"\n 1317                                              string=\"Scrap\" type=\"action\" context=\"{'scrap': True}\"\n 1318                                              states=\"draft,waiting,confirmed,assigned\"/> <!-- FIXME icon=\"terp-gtk-jump-to-ltr\" -->\n ....\n 1435  \n 1436          <record id=\"act_product_stock_move_open\" model=\"ir.actions.act_window\">\n 1437:             <field name=\"context\">{'search_default_product_id': active_id, 'default_product_id': active_id}</field>\n 1438              <field name=\"name\">Moves</field>\n 1439              <field name=\"res_model\">stock.move</field>\n ....\n 1497              <field name=\"priority\" eval=\"6\"/>\n 1498              <field name=\"arch\" type=\"xml\">\n 1499:                 <tree decoration-muted=\"state == 'cancel'\" default_order='date_expected, picking_id, sequence' string=\"Moves\">\n 1500                      <field name=\"date_expected\" widget='date'/>\n 1501                      <field name=\"date\" widget=\"date\"/>\n ....\n 1543              <field name=\"domain\" eval=\"[('picking_id.picking_type_id.code','=','incoming'), ('location_id.usage','!=','internal'), ('location_dest_id.usage', '=', 'internal')]\"/>\n 1544              <field name=\"view_id\" ref=\"view_move_tree_receipt_picking\"/>\n 1545:             <field name=\"context\">{'product_receive': True, 'search_default_future': True}</field>\n 1546              <field name=\"help\" type=\"html\">\n 1547                <p class=\"oe_view_nocontent_create\">\n ....\n 1642                              </group>\n 1643                              <group string=\"Locations\">\n 1644:                                 <field name=\"default_location_src_id\" attrs=\"{'required': [('code', '=', 'internal')]}\"/>\n 1645:                                 <field name=\"default_location_dest_id\" attrs=\"{'required': [('code', 'in', ('internal', 'incoming'))]}\"/>\n 1646                              </group>\n 1647                          </group>\n ....\n 1663                  The picking type system allows you to assign each stock\n 1664                  operation a specific type which will alter its views accordingly.\n 1665:                 On the picking type you could e.g. specify if packing is needed by default,\n 1666                  if it should show the customer.\n 1667                </p>\n ....\n 1679                      <field name=\"code\" on_change=\"onchange_picking_code(code)\"/>\n 1680                      <field name=\"return_picking_type_id\"/>\n 1681:                     <field name=\"default_location_src_id\" attrs=\"{'required': [('code', '=', 'internal')]}\"/>\n 1682:                     <field name=\"default_location_dest_id\" attrs=\"{'required': [('code', 'in', ('internal', 'incoming'))]}\"/>\n 1683                  </tree>\n 1684              </field>\n ....\n 1822  \n 1823          <act_window\n 1824:             context=\"{'search_default_warehouse_id': active_id, 'default_warehouse_id': active_id}\"\n 1825              id=\"act_stock_warehouse_2_stock_warehouse_orderpoint\"\n 1826              name=\"Reordering Rules\"\n ....\n 1904  \n 1905          <record model=\"ir.actions.act_window\" id=\"procrules\">\n 1906:             <field name=\"context\">{'search_default_route_false':1}</field>\n 1907              <field name=\"name\">Procurement Rules</field>\n 1908              <field name=\"res_model\">procurement.rule</field>\n ....\n 1910  \n 1911          <record model=\"ir.actions.act_window\" id=\"stolocpath\">\n 1912:             <field name=\"context\">{'search_default_route_false':1}</field>\n 1913              <field name=\"name\">Push Rules</field>\n 1914              <field name=\"res_model\">stock.location.path</field>\n ....\n 1950              <field name=\"view_type\">form</field>\n 1951              <field name=\"view_mode\">tree,form</field>\n 1952:             <field name=\"context\">{'search_default_internal_loc': 1, 'group_by': ['product_id', 'location_id']}</field>\n 1953              <field name=\"help\">This analysis gives you a fast overview on the current stock level of your products and their current inventory value.</field>\n 1954          </record>\n ....\n 1979                      <group>\n 1980                          <field name=\"history_ids\" string=\"History\">\n 1981:                             <tree readonly=\"1\" default_order=\"date\">\n 1982                                  <field name=\"picking_id\"/>\n 1983                                  <button type=\"object\" name=\"show_picking\" icon=\"fa-list-alt\" attrs=\"{'invisible': [('picking_id', '=', False)]}\"/>\n ....\n 2056  \n 2057          <record model=\"ir.actions.act_window\" id=\"product_open_orderpoint\">\n 2058:             <field name=\"context\">{'default_product_id': active_id, 'search_default_product_id': active_id}</field>\n 2059              <field name=\"name\">Reordering Rules</field>\n 2060              <field name=\"res_model\">stock.warehouse.orderpoint</field>\n ....\n 2063          <record model=\"ir.actions.act_window\" id=\"product_template_open_quants\">\n 2064              <field name=\"name\">Stock On Hand</field>\n 2065:             <field name=\"context\">{'search_default_internal_loc': 1, 'search_default_productgroup':1, 'search_default_locationgroup':1}</field>\n 2066              <field name=\"domain\">[('product_id.product_tmpl_id', '=', active_id)]</field>\n 2067              <field name=\"res_model\">stock.quant</field>\n ....\n 2069           <record model=\"ir.actions.act_window\" id=\"product_open_quants\">\n 2070              <field name=\"name\">Stock On Hand</field>\n 2071:             <field name=\"context\">{'search_default_internal_loc': 1, 'search_default_locationgroup':1}</field>\n 2072             <field name=\"domain\">[('product_id', '=', active_id)]</field>\n 2073              <field name=\"res_model\">stock.quant</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\tests\\test_resupply.py:\n   13          self.bigwh = self.Warehouse.create({'name': 'BIG', 'code': 'B'})\n   14          self.smallwh = self.Warehouse.create({'name': 'SMALL', 'code': 'S',\n   15:                                               'default_resupply_wh_id': self.bigwh.id,\n   16                                                'resupply_wh_ids': [(6, 0, [self.bigwh.id])],\n   17                                                })\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\wizard\\make_procurement_product.py:\n   30      }\n   31  \n   32:     _defaults = {\n   33          'date_planned': fields.date.context_today,\n   34          'qty': lambda *args: 1.0,\n   ..\n   74           }\n   75  \n   76:     def default_get(self, cr, uid, fields, context=None):\n   77          if context is None:\n   78              context = {}\n   ..\n   84                  record_id = product_ids[0]\n   85  \n   86:         res = super(make_procurement, self).default_get(cr, uid, fields, context=context)\n   87  \n   88          if record_id and 'product_id' in fields:\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\wizard\\make_procurement_view.xml:\n   34                      <footer>\n   35                          <button name=\"make_procurement\" string=\"Ask New Products\" type=\"object\" class=\"btn-primary\"/>\n   36:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   37                      </footer>\n   38                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\wizard\\orderpoint_procurement_view.xml:\n   15                      <footer>\n   16                          <button name=\"procure_calculation\" string=\"Compute Stock\" type=\"object\" class=\"btn-primary\"/>\n   17:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   18                      </footer>\n   19                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\wizard\\stock_backorder_confirmation.py:\n   12  \n   13      @api.model\n   14:     def default_get(self, fields):\n   15          res = {}\n   16          active_id = self._context.get('active_id')\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\wizard\\stock_backorder_confirmation.xml:\n   18                      <button name=\"process\" string=\"Create Backorder\" type=\"object\" class=\"oe_highlight\"/>\n   19                      <button name=\"process_cancel_backorder\" string=\"No Backorder\" type=\"object\" class=\"btn-primary\"/>\n   20:                     <button string=\"_Cancel\" class=\"btn-default\" special=\"cancel\" />\n   21                  </footer>\n   22              </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\wizard\\stock_change_product_qty.py:\n   17          'product_tmpl_id': fields.many2one('product.template', 'Template', required=True),\n   18          'product_variant_count': fields.related('product_tmpl_id', 'product_variant_count', type='integer', string='Variant Number'),\n   19:         'new_quantity': fields.float('New Quantity on Hand', digits_compute=dp.get_precision('Product Unit of Measure'), required=True, help='This quantity is expressed in the Default Unit of Measure of the product.'),\n   20          'lot_id': fields.many2one('stock.production.lot', 'Serial Number', domain=\"[('product_id','=',product_id)]\"),\n   21          'location_id': fields.many2one('stock.location', 'Location', required=True, domain=\"[('usage', '=', 'internal')]\"),\n   22      }\n   23:     _defaults = {\n   24          'new_quantity': 1,\n   25          'product_id': lambda self, cr, uid, ctx: ctx and ctx.get('active_id', False) or False\n   26      }\n   27  \n   28:     def default_get(self, cr, uid, fields, context):\n   29:         res = super(stock_change_product_qty, self).default_get(cr, uid, fields, context=context)\n   30  \n   31          if context.get('active_model') == 'product.template':\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\wizard\\stock_change_product_qty_view.xml:\n   16                          <field name=\"location_id\" groups=\"stock.group_locations\" on_change=\"onchange_location_id(location_id, product_id, context)\"/>\n   17                          <field name=\"new_quantity\"/>\n   18:                         <field name=\"lot_id\"  context=\"{'search_default_product_id':product_id,'default_product_id':product_id}\" groups=\"stock.group_production_lot\"/>\n   19                          <p groups=\"stock.group_production_lot\" class=\"oe_grey\">\n   20                              When you select a serial number (lot), the quantity is corrected with respect to\n   ..\n   24                      <footer>\n   25                          <button name=\"change_product_qty\" string=\"_Apply\" type=\"object\" class=\"btn-primary\"/>\n   26:                         <button string=\"_Cancel\" class=\"btn-default\" special=\"cancel\" />\n   27                      </footer>\n   28                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\wizard\\stock_immediate_transfer.py:\n   13  \n   14      @api.model\n   15:     def default_get(self, fields):\n   16          res = {}\n   17          active_id = self._context.get('active_id')\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\wizard\\stock_immediate_transfer.xml:\n   14                  <footer>\n   15                      <button name=\"process\" string=\"_Apply\" type=\"object\" class=\"btn-primary\"/>\n   16:                     <button string=\"_Cancel\" class=\"btn-default\" special=\"cancel\" />\n   17                  </footer>\n   18              </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\wizard\\stock_move.py:\n   20      }\n   21  \n   22:     _defaults = {\n   23          'location_id': lambda *x: False\n   24      }\n   25  \n   26:     def default_get(self, cr, uid, fields, context=None):\n   27:         \"\"\" Get default values\n   28          @param self: The object pointer.\n   29          @param cr: A database cursor\n   30          @param uid: ID of the user currently logged in\n   31:         @param fields: List of fields for default value\n   32          @param context: A standard dictionary\n   33:         @return: default values of fields\n   34          \"\"\"\n   35          if context is None:\n   36              context = {}\n   37:         res = super(stock_move_scrap, self).default_get(cr, uid, fields, context=context)\n   38          move = self.pool.get('stock.move').browse(cr, uid, context['active_id'], context=context)\n   39  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\wizard\\stock_move_view.xml:\n   18                          </div>\n   19                          <field name=\"restrict_lot_id\" domain=\"[('product_id','=',product_id)]\" groups=\"stock.group_production_lot\"\n   20:                             context=\"{'default_product_id': product_id}\"/>\n   21                          <field name=\"location_id\" string=\"Scrap Location\" widget=\"selection\"\n   22                              domain=\"[('usage','!=','view'),('scrap_location','=',True)]\" groups=\"stock.group_locations\"/>\n   ..\n   24                      <footer>\n   25                          <button name=\"move_scrap\" string=\"Scrap\" type=\"object\" class=\"btn-primary\"/>\n   26:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   27                      </footer>\n   28                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\wizard\\stock_return_picking.py:\n   31      }\n   32  \n   33:     def default_get(self, cr, uid, fields, context=None):\n   34          \"\"\"\n   35:          To get default values for the object.\n   36           @param self: The object pointer.\n   37           @param cr: A database cursor\n   38           @param uid: ID of the user currently logged in\n   39:          @param fields: List of fields for which we want default values\n   40           @param context: A standard dictionary\n   41:          @return: A dictionary with default values for all field in ``fields``\n   42          \"\"\"\n   43          result1 = []\n   ..\n   47              if len(context.get('active_ids')) > 1:\n   48                  raise osv.except_osv(_('Warning!'), _(\"You may only return one picking at a time!\"))\n   49:         res = super(stock_return_picking, self).default_get(cr, uid, fields, context=context)\n   50          record_id = context and context.get('active_id', False) or False\n   51          uom_obj = self.pool.get('product.uom')\n   ..\n  167          ctx = context.copy()\n  168          ctx.update({\n  169:             'search_default_picking_type_id': pick_type_id,\n  170:             'search_default_draft': False,\n  171:             'search_default_assigned': False,\n  172:             'search_default_confirmed': False,\n  173:             'search_default_ready': False,\n  174:             'search_default_late': False,\n  175:             'search_default_available': False,\n  176          })\n  177          return {\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock\\wizard\\stock_return_picking_view.xml:\n   34                      <footer>\n   35                          <button name=\"create_returns\" string=\"Return\" type=\"object\" class=\"btn-primary\"/>\n   36:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   37                      </footer>\n   38                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock_account\\product.py:\n   65      }\n   66  \n   67:     _defaults = {\n   68          'property_valuation': 'manual_periodic',\n   69      }\n   ..\n  205              domain=[('deprecated', '=', False)], oldname=\"property_stock_account_input_categ\",\n  206              help=\"When doing real-time inventory valuation, counterpart journal items for all incoming stock moves will be posted in this account, unless \"\n  207:                  \"there is a specific valuation account set on the source location. This is the default value for all products in this category. It \"\n  208                   \"can also directly be set on each product\"),\n  209          'property_stock_account_output_categ_id': fields.property(\n  ...\n  213              string='Stock Output Account', oldname=\"property_stock_account_output_categ\",\n  214              help=\"When doing real-time inventory valuation, counterpart journal items for all outgoing stock moves will be posted in this account, unless \"\n  215:                  \"there is a specific valuation account set on the destination location. This is the default value for all products in this category. It \"\n  216                   \"can also directly be set on each product\"),\n  217          'property_stock_valuation_account_id': fields.property(\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock_account\\stock_account.py:\n   13      _inherit = \"stock.inventory\"\n   14      _columns = {\n   15:         'accounting_date': fields.date('Force Accounting Date', help=\"Choose the accounting date at which you want to value the stock moves created by the inventory instead of the default one (the inventory end date)\"),\n   16      }\n   17  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock_account\\stock_account_data.xml:\n    3      <data noupdate=\"1\">\n    4  \n    5:         <record forcecreate=\"True\" id=\"default_cost_method\" model=\"ir.property\">\n    6              <field name=\"name\">Cost Method Property</field>\n    7              <field name=\"fields_id\" ref=\"field_product_template_property_cost_method\"/>\n    .\n    9              <field name=\"type\">selection</field>\n   10          </record>\n   11:         <record forcecreate=\"True\" id=\"default_valuation\" model=\"ir.property\">\n   12              <field name=\"name\">Valuation Property</field>\n   13              <field name=\"fields_id\" ref=\"field_product_template_property_valuation\"/>\n   ..\n   16          </record>\n   17  \n   18:         <record forcecreate=\"True\" id=\"default_category_cost_method\" model=\"ir.property\">\n   19              <field name=\"name\">Cost Method Property</field>\n   20              <field name=\"fields_id\" ref=\"field_product_category_property_cost_method\"/>\n   ..\n   22              <field name=\"type\">selection</field>\n   23          </record>\n   24:         <record forcecreate=\"True\" id=\"default_category_valuation\" model=\"ir.property\">\n   25              <field name=\"name\">Valuation Property</field>\n   26              <field name=\"fields_id\" ref=\"field_product_category_property_valuation\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock_account\\stock_account_view.xml:\n   34              <field name=\"arch\" type=\"xml\">\n   35                  <field name=\"move_lines\" position=\"attributes\">\n   36:                     <attribute name=\"context\">{'address_in_id': partner_id, 'form_view_ref':'stock.view_move_picking_form', 'tree_view_ref':'stock.view_move_picking_tree', 'default_picking_type_id': picking_type_id, 'default_location_id': location_id, 'default_location_dest_id': location_dest_id}</attribute>\n   37                  </field>\n   38              </field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock_account\\wizard\\stock_change_standard_price.py:\n   18  \n   19  \n   20:     def default_get(self, cr, uid, fields, context=None):\n   21:         \"\"\" To get default values for the object.\n   22           @param self: The object pointer.\n   23           @param cr: A database cursor\n   24           @param uid: ID of the user currently logged in\n   25:          @param fields: List of fields for which we want default values\n   26           @param context: A standard dictionary\n   27           @return: A dictionary which of fields with values.\n   ..\n   35          product_obj = product_pool.browse(cr, uid, context.get('active_id', False))\n   36  \n   37:         res = super(change_standard_price, self).default_get(cr, uid, fields, context=context)\n   38  \n   39          price = product_obj.standard_price\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock_account\\wizard\\stock_change_standard_price_view.xml:\n   13                    <footer>\n   14                        <button name=\"change_price\" string=\"_Apply\" type=\"object\" class=\"btn-primary\"/>\n   15:                       <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   16                    </footer>\n   17                </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock_account\\wizard\\stock_valuation_history.py:\n   14      }\n   15  \n   16:     _defaults = {\n   17          'choose_date': False,\n   18          'date': fields.datetime.now,\n   ..\n   25          ctx = context.copy()\n   26          ctx['history_date'] = data['date']\n   27:         ctx['search_default_group_by_product'] = True\n   28:         ctx['search_default_group_by_location'] = True\n   29          return {\n   30              'domain': \"[('date', '<=', '\" + data['date'] + \"')]\",\n   ..\n   52              for line in res:\n   53                  domain = line.get('__domain', domain)\n   54:                 group_lines.setdefault(str(domain), self.search(cr, uid, domain, context=context))\n   55              line_ids = set()\n   56              for ids in group_lines.values():\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock_account\\wizard\\stock_valuation_history_view.xml:\n   20                      <footer>\n   21                          <button name=\"open_table\" string=\"Retrieve the Inventory Value\" type=\"object\" class=\"btn-primary\"/>\n   22:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   23                      </footer>\n   24                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock_calendar\\procurement.py:\n    4  from openerp.osv import fields, osv\n    5  from openerp.tools.translate import _\n    6: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT, DEFAULT_SERVER_DATE_FORMAT\n    7  from openerp import SUPERUSER_ID\n    8  from psycopg2 import OperationalError\n    .\n   28              if ops and ops[0]:\n   29                  orderpoint = orderpoint_obj.browse(cr, uid, ops[0], context=context)\n   30:                 date_planned = datetime.strptime(procurement.date_planned, DEFAULT_SERVER_DATETIME_FORMAT)\n   31                  purchase_date, delivery_date = self._get_previous_dates(cr, uid, orderpoint, date_planned, context=context)\n   32                  if purchase_date and delivery_date:\n   33:                     self.write(cr, uid, {'next_delivery_date': delivery_date.strftime(DEFAULT_SERVER_DATETIME_FORMAT),\n   34:                                          'next_purchase_date': purchase_date.strftime(DEFAULT_SERVER_DATETIME_FORMAT),}, context=context)\n   35  \n   36      @api.v8\n   37      def _get_purchase_order_date(self, schedule_date):\n   38          if self.next_purchase_date:\n   39:             return datetime.strptime(self.next_purchase_date, DEFAULT_SERVER_DATETIME_FORMAT)\n   40          return super(procurement_order, self)._get_purchase_order_date(schedule_date)\n   41  \n   ..\n   52          \"\"\"\n   53          if procurement.next_purchase_date:\n   54:             return datetime.strptime(procurement.next_purchase_date, DEFAULT_SERVER_DATETIME_FORMAT)\n   55          return super(procurement_order, self)._get_purchase_order_date(cr, uid, procurement, company, schedule_date, context=context)\n   56  \n   ..\n   58      def _get_purchase_schedule_date(self):\n   59          if self.next_delivery_date:\n   60:             return datetime.strptime(self.next_delivery_date, DEFAULT_SERVER_DATETIME_FORMAT)\n   61          return super(procurement_order, self)._get_purchase_schedule_date()\n   62  \n   ..\n   71          \"\"\"\n   72          if procurement.next_delivery_date:\n   73:             return datetime.strptime(procurement.next_delivery_date, DEFAULT_SERVER_DATETIME_FORMAT)\n   74          return super(procurement_order, self)._get_purchase_schedule_date(cr, uid, procurement, context=context)\n   75  \n   ..\n  195          if orderpoint.purchase_calendar_id and orderpoint.purchase_calendar_id.attendance_ids:\n  196              if orderpoint.last_execution_date:\n  197:                 new_date = datetime.strptime(orderpoint.last_execution_date, DEFAULT_SERVER_DATETIME_FORMAT)\n  198              else:\n  199                  new_date = datetime.utcnow()\n  ...\n  260                      ctx.update({'location': ops_dict[key][0].location_id.id})\n  261                      if res_group[2]:\n  262:                         ctx.update({'to_date': res_group[2].strftime(DEFAULT_SERVER_DATETIME_FORMAT)})\n  263                      prod_qty = product_obj._product_available(cr, uid, [x.id for x in product_dict[key]],\n  264                                                                context=ctx)\n  ...\n  292                                                                       context=context)\n  293                                      tot_procs.append(proc_id)\n  294:                                     orderpoint_obj.write(cr, uid, [op.id], {'last_execution_date': datetime.utcnow().strftime(DEFAULT_SERVER_DATETIME_FORMAT)}, context=context)\n  295                                  if use_new_cursor:\n  296                                      cr.commit()\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock_calendar\\resource.py:\n    2  \n    3  from openerp.osv import fields, osv\n    4: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT, DEFAULT_SERVER_DATE_FORMAT\n    5  \n    6  \n    .\n   53              if leave.resource_id and not resource_id == leave.resource_id.id:\n   54                  continue\n   55:             date_from = datetime.datetime.strptime(leave.date_from, DEFAULT_SERVER_DATETIME_FORMAT)\n   56              if end_datetime and date_from > end_datetime:\n   57                  continue\n   58:             date_to = datetime.datetime.strptime(leave.date_to, DEFAULT_SERVER_DATETIME_FORMAT)\n   59              if start_datetime and date_to < start_datetime:\n   60                  continue\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock_dropshipping\\stock_dropshipping.xml:\n   17              <field name=\"code\">incoming</field>\n   18              <field name=\"warehouse_id\" eval=\"False\"/>\n   19:             <field name=\"default_location_src_id\" ref=\"stock.stock_location_suppliers\"/>\n   20:             <field name=\"default_location_dest_id\" ref=\"stock.stock_location_customers\"/>\n   21          </record>\n   22          \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock_landed_costs\\product.py:\n   20      }\n   21  \n   22:     _defaults = {\n   23          'landed_cost_ok': False,\n   24          'split_method': 'equal',\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock_landed_costs\\stock_landed_costs.py:\n   71      }\n   72  \n   73:     _defaults = {\n   74          'name': lambda obj, cr, uid, context: obj.pool.get('ir.sequence').next_by_code(cr, uid, 'stock.landed.cost'),\n   75          'state': 'draft',\n   ..\n  351      }\n  352  \n  353:     _defaults = {\n  354          'quantity': 1.0,\n  355          'weight': 1.0,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock_landed_costs\\stock_landed_costs_view.xml:\n   39                                              <group>\n   40                                                  <field name=\"product_id\"\n   41:                                                     on_change=\"onchange_product_id(product_id)\" domain=\"[('landed_cost_ok', '=', True)]\" context=\"{'default_landed_cost_ok': True, 'form_view_ref':'stock_landed_costs.view_stock_landed_cost_type_form'}\"/>\n   42                                                  <field name=\"price_unit\"/>\n   43                                              </group>\n   ..\n   51                                      </form>\n   52                                      <tree string=\"Cost Lines\" editable=\"bottom\">\n   53:                                         <field name=\"product_id\" on_change=\"onchange_product_id(product_id)\" domain=\"[('landed_cost_ok', '=', True)]\" context=\"{'default_landed_cost_ok': True, 'form_view_ref':'stock_landed_costs.view_stock_landed_cost_type_form'}\"/>\n   54                                          <field name=\"name\"/>\n   55                                          <field name=\"account_id\"/>\n   ..\n  230              <field name=\"view_type\">form</field>\n  231              <field name=\"view_mode\">tree,form</field>\n  232:             <field name=\"context\">{'default_landed_cost_ok': True}</field>\n  233              <field name=\"search_view_id\" ref=\"product.product_search_form_view\"/>\n  234              <field name=\"help\" type=\"html\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock_picking_wave\\stock_picking_wave.py:\n   16      }\n   17  \n   18:     _defaults = {\n   19          'name': '/',\n   20          'state': 'draft',\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock_picking_wave\\stock_picking_wave_data.xml:\n    5          <field name=\"name\">Stage Changed</field>\n    6          <field name=\"res_model\">stock.picking.wave</field>\n    7:         <field name=\"default\" eval=\"False\"/>\n    8          <field name=\"description\">Stage Changed</field>\n    9      </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock_picking_wave\\stock_picking_wave_demo.xml:\n   53  		<record id=\"product_product_ice_cream_choco\" model=\"product.product\">\n   54  	            <field name=\"name\">Ice Cream Chocolate</field>\n   55: 	            <field name=\"default_code\">IC-CHOCO</field>\n   56  	            <field name=\"categ_id\" ref=\"product.product_category_all\"/>\n   57  	            <field name=\"list_price\">450.0</field>\n   ..\n   64  	    <record id=\"product_product_ice_cream_vani\" model=\"product.product\">\n   65  	            <field name=\"name\">Ice Cream Vanilla</field>\n   66: 	            <field name=\"default_code\">IC-VANI</field>\n   67  	            <field name=\"categ_id\" ref=\"product.product_category_all\"/>\n   68  	            <field name=\"list_price\">450.0</field>\n   ..\n   75  		<record id=\"product_product_dry_specu\" model=\"product.product\">\n   76  	            <field name=\"name\">Speculoos</field>\n   77: 	            <field name=\"default_code\">DRY-SPEC</field>\n   78  	            <field name=\"categ_id\" ref=\"product.product_category_all\"/>\n   79  	            <field name=\"list_price\">150.0</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock_picking_wave\\stock_picking_wave_view.xml:\n   81              <field name=\"view_type\">form</field>\n   82              <field name=\"view_mode\">tree,form</field>\n   83:             <field name=\"context\">{\"search_default_in_progress\" : True,}</field>\n   84              <field name=\"search_view_id\" ref=\"view_picking_wave_filter\"/>\n   85              <field name=\"help\" type=\"html\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\stock_picking_wave\\wizard\\picking_to_wave_view.xml:\n   13                      <footer>\n   14                          <button name=\"attach_pickings\" type=\"object\" string=\"Add to Wave\" class=\"btn-primary\"/>\n   15:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   16                      </footer>\n   17                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\subscription\\subscription.py:\n   19          'field_ids': fields.one2many('subscription.document.fields', 'document_id', 'Fields', copy=True)\n   20      }\n   21:     _defaults = {\n   22          'active' : lambda *a: True,\n   23      }\n   ..\n   29      _columns = {\n   30          'field': fields.many2one('ir.model.fields', 'Field', domain=\"[('model_id', '=', parent.model)]\", required=True),\n   31:         'value': fields.selection([('false','False'),('date','Current Date')], 'Default Value', size=40, help=\"Default value is considered for field when new document is generated.\"),\n   32          'document_id': fields.many2one('subscription.document', 'Subscription Document', ondelete='cascade'),\n   33      }\n   34:     _defaults = {}\n   35  \n   36  def _get_document_types(self, cr, uid, context=None):\n   ..\n   57          'note': fields.text('Notes', help=\"Description or Summary of Subscription\"),\n   58      }\n   59:     _defaults = {\n   60          'date_init': lambda *a: time.strftime('%Y-%m-%d %H:%M:%S'),\n   61          'user_id': lambda obj,cr,uid,context: uid,\n   ..\n  101                  raise UserError(_('Please provide another source document.\\nThis one does not exist!'))\n  102  \n  103:             default = {'state':'draft'}\n  104              doc_obj = self.pool.get('subscription.document')\n  105              document_ids = doc_obj.search(cr, uid, [('model.model','=',model_name)])\n  ...\n  110                  else:\n  111                      value = False\n  112:                 default[f.field.name] = value\n  113  \n  114              state = 'running'\n  ...\n  118              if remaining == 1:\n  119                  state = 'done'\n  120:             id = self.pool[model_name].copy(cr, uid, id, default, context)\n  121              self.pool.get('subscription.subscription.history').create(cr, uid, {'subscription_id': row['id'], 'date':time.strftime('%Y-%m-%d %H:%M:%S'), 'document_id': model_name+','+str(id)})\n  122              self.write(cr, uid, [row['id']], {'state':state})\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\subscription\\subscription_view.xml:\n   19                          <field name=\"name\"/>\n   20                          <field name=\"partner_id\"/>\n   21:                         <field name=\"user_id\" context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'account.group_account_invoice', 'base.group_sale_salesman']}\"/>\n   22                          <field name=\"active\"/>\n   23                      </group>\n   ..\n   87              <field name=\"view_type\">form</field>\n   88              <field name=\"view_id\" ref=\"view_subscription_tree\"/>\n   89:             <field name=\"context\">{'search_default_User':1}</field>\n   90              <field name=\"search_view_id\" ref=\"view_subscription_filter\"/>\n   91          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\survey\\controllers\\main.py:\n   12  from openerp.addons.web import http\n   13  from openerp.addons.web.http import request\n   14: from openerp.tools.misc import DEFAULT_SERVER_DATETIME_FORMAT as DTF, ustr\n   15  \n   16  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\survey\\survey.py:\n    5  from openerp.tools.translate import _\n    6  from openerp import SUPERUSER_ID\n    7: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT as DF\n    8  from openerp.addons.website.models.website import slug\n    9  from urlparse import urljoin\n   ..\n   33          'fold': fields.boolean(string=\"Folded in kanban view\")\n   34      }\n   35:     _defaults = {\n   36          'sequence': 1,\n   37          'closed': False\n   ..\n  187      }\n  188  \n  189:     def _default_stage(self, cr, uid, context=None):\n  190          ids = self.pool['survey.stage'].search(cr, uid, [], limit=1, context=context)\n  191          if ids:\n  ...\n  193          return False\n  194  \n  195:     _defaults = {\n  196          'color': 0,\n  197:         'stage_id': lambda self, *a, **kw: self._default_stage(*a, **kw)\n  198      }\n  199  \n  ...\n  225      # Public methods #\n  226  \n  227:     def copy_data(self, cr, uid, id, default=None, context=None):\n  228          current_rec = self.read(cr, uid, id, fields=['title'], context=context)\n  229          title = _(\"%s (copy)\") % (current_rec.get('title'))\n  230:         default = dict(default or {}, title=title)\n  231:         return super(survey_survey, self).copy_data(cr, uid, id, default,\n  232              context=context)\n  233  \n  ...\n  435          ctx = dict(context)\n  436  \n  437:         ctx.update({'default_model': 'survey.survey',\n  438:                     'default_res_id': ids[0],\n  439:                     'default_survey_id': ids[0],\n  440:                     'default_use_template': bool(template_id),\n  441:                     'default_template_id': template_id,\n  442:                     'default_composition_mode': 'comment'}\n  443                     )\n  444          return {\n  ...\n  515              oldname=\"note\"),\n  516      }\n  517:     _defaults = {\n  518          'sequence': 10\n  519      }\n  ...\n  610      }\n  611  \n  612:     _defaults = {\n  613          'page_id': lambda self, cr, uid, context: context.get('page_id'),\n  614          'sequence': 10,\n  ...\n  806          'quizz_mark': fields.float('Score for this choice', help=\"A positive score indicates a correct choice; a negative or null score indicates a wrong answer\"),\n  807      }\n  808:     _defaults = {\n  809          'sequence': 10,\n  810      }\n  ...\n  864          'quizz_score': fields.function(_quizz_get_score, type=\"float\", string=\"Score for the quiz\")\n  865      }\n  866:     _defaults = {\n  867          'date_create': fields.datetime.now,\n  868          'type': 'manually',\n  ...\n  893          context.update({\n  894              'survey_resent_token': True,\n  895:             'default_partner_ids': record.partner_id and [record.partner_id.id] or [],\n  896:             'default_multi_email': record.email or \"\",\n  897:             'default_public': 'email_private',\n  898          })\n  899          return self.pool.get('survey.survey').action_send_survey(cr, uid,\n  ...\n  973      }\n  974  \n  975:     _defaults = {\n  976          'skipped': False,\n  977          'date_create': fields.datetime.now()\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\survey\\tests\\test_survey.py:\n  128          ctx = dict(self.env.context)\n  129          ctx.update({\n  130:             'default_model': 'survey.survey',\n  131:             'default_res_id': correct_survey.id,\n  132:             'default_survey_id': correct_survey.id,\n  133:             'default_use_template': bool(template_id),\n  134:             'default_template_id': template_id,\n  135:             'default_composition_mode': 'comment'})\n  136  \n  137          self.assertDictEqual(action, {\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\survey\\views\\survey_result.xml:\n   20                      <div t-field=\"survey.description\" class=\"oe_no_empty\" />\n   21                  </div>\n   22:                 <div class=\"panel panel-default hidden-print\">\n   23                      <div class=\"panel-heading\"><span class=\"fa fa-filter\"></span>  Filters <span t-if=\"filter_display_data\" class=\"pull-right text-primary clear_survey_filter\"><i class=\"fa fa-times\"></i> Clear All Filters</span></div>\n   24                      <div class=\"panel-body\">\n   25                          <span t-if=\"filter_finish == True\">\n   26:                             <span class=\"label label-default only_left_radius filter-all\">All surveys</span><span class=\"label label-primary only_right_radius filter-finished\">Finished surveys</span>\n   27                          </span>\n   28                          <span t-if=\"filter_finish == False\">\n   29:                             <span class=\"label label-primary only_left_radius filter-all\">All surveys</span><span class=\"label label-default only_right_radius filter-finished\">Finished surveys</span>\n   30                          </span>\n   31                          <span t-foreach=\"filter_display_data\" t-as=\"filter_data\">\n   ..\n   48                              <span t-field='question.question'></span>\n   49                              <t t-if=\"question.type == 'matrix'\">\n   50:                                 <small><span class=\"label label-default\">Matrix: <span t-field='question.matrix_subtype'/></span></small>\n   51                              </t>\n   52                              <t t-if=\"question.type in ['simple_choice', 'multiple_choice']\">\n   53:                                 <small><span t-field='question.type' class=\"label label-default\"></span></small>\n   54                              </t>\n   55                              <span class=\"pull-right\">\n   ..\n  266          <t t-set=\"text_result\" t-value=\"number_result['input_lines']\" />\n  267          <span class=\"pull-right mt8\">\n  268:             <span class=\"label label-default only_left_radius\">Sum </span> <span class=\"label label-info only_right_radius\" t-esc=\"number_result['sum']\"></span>\n  269:             <span class=\"label label-default only_left_radius\">Maximum </span> <span class=\"label label-success only_right_radius\" t-esc=\"number_result['max']\"></span>\n  270:             <span class=\"label label-default only_left_radius\">Minimum </span> <span class=\"label label-danger only_right_radius\" t-esc=\"number_result['min']\"></span>\n  271:             <span class=\"label label-default only_left_radius\">Average </span> <span class=\"label label-warning only_right_radius\" t-esc=\"number_result['average']\"></span>\n  272          </span>\n  273          <ul class=\"nav nav-tabs hidden-print\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\survey\\views\\survey_templates.xml:\n   65      <template id=\"back\" name=\"Back\">\n   66          <div groups=\"base.group_website_publisher\" t-ignore=\"true\" class=\"pull-right\">\n   67:             <a t-attf-href=\"/web#view_type=form&amp;model=survey.survey&amp;id=#{survey.id}&amp;action=survey.action_survey_form\" class=\"btn btn-default\">Back to Survey</a>\n   68          </div>\n   69      </template>\n   ..\n  140              </t>\n  141              <div class=\"text-center mt16 mb16\">\n  142:                 <button t-if=\"survey.users_can_go_back and page_nr > 0\" type=\"submit\" class=\"btn btn-default\" name=\"button_submit\" value=\"previous\">Previous page</button>\n  143                  <button t-if=\"not last\" type=\"submit\" class=\"btn btn-primary\" name=\"button_submit\" value=\"next\">Next page</button>\n  144                  <button t-if=\"last\" type=\"submit\" class=\"btn btn-primary\" name=\"button_submit\" value=\"finish\">Submit survey</button>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\survey\\views\\survey_views.xml:\n   90              <field name=\"view_id\" ref=\"survey_user_input_tree\"></field>\n   91              <field name=\"search_view_id\" ref=\"survey_user_input_search\"/>\n   92:             <field name=\"context\">{'search_default_group_by_survey': True}</field>\n   93              <field name=\"help\" type=\"html\">\n   94                  <p>Nobody has replied to your surveys yet.</p>\n   ..\n  101              <field name=\"view_id\" ref=\"survey_user_input_tree\"></field>\n  102              <field name=\"search_view_id\" ref=\"survey_user_input_search\"/>\n  103:             <field name=\"context\">{'search_default_survey_id': active_id, 'default_survey_id': active_id}</field>\n  104              <field name=\"help\" type=\"html\">\n  105                  <p>Nobody has replied to your survey yet.</p>\n  ...\n  131                          <notebook>\n  132                              <page string=\"Edit Pages and Questions\">\n  133:                                 <field name=\"page_ids\" mode=\"tree\" context=\"{'default_survey_id': active_id}\" nolabel=\"1\">\n  134                                      <tree>\n  135                                          <field name=\"sequence\" widget=\"handle\"/>\n  ...\n  172              <field name=\"model\">survey.survey</field>\n  173              <field name=\"arch\" type=\"xml\">\n  174:                 <kanban default_group_by=\"stage_id\">\n  175                      <field name=\"stage_id\" />\n  176                      <field name=\"designed\" />\n  ...\n  232              </field>\n  233          </record>\n  234:         <act_window context=\"{'search_default_survey_id': [active_id], 'default_survey_id': active_id}\" id=\"act_survey_pages\" name=\"Pages\" res_model=\"survey.page\" src_model=\"survey.survey\"/>\n  235:         <act_window context=\"{'search_default_survey_id': [active_id], 'default_survey_id': active_id}\" id=\"act_survey_question\" name=\"Questions\" res_model=\"survey.question\" src_model=\"survey.survey\"/>\n  236  \n  237          <!-- PAGES -->\n  ...\n  246                              <h1><field name=\"title\" placeholder=\"Page Title\"/></h1>\n  247                          </div>\n  248:                         <field name=\"question_ids\" nolabel=\"1\" mode=\"tree\" context=\"{'default_page_id': active_id}\">\n  249                              <tree>\n  250                                  <field name=\"sequence\" widget=\"handle\"/>\n  ...\n  290              <field name=\"view_mode\">tree,form</field>\n  291              <field name=\"search_view_id\" ref=\"survey_page_search\"/>\n  292:             <field name=\"context\">{'search_default_group_by_survey': True}</field>\n  293          </record>\n  294:         <act_window context=\"{'search_default_page_id': active_id, 'default_page_id': active_id}\" id=\"act_survey_page_question\" name=\"Questions\" res_model=\"survey.question\" src_model=\"survey.page\"/>\n  295  \n  296          <template id=\"assets_backend\" name=\"survey assets\" inherit_id=\"web.assets_backend\">\n  ...\n  383                                  <label for=\"validation_email\" attrs=\"{'invisible': [('type', '!=', 'textbox')]}\"/>\n  384                                  <separator />\n  385:                                 <field name=\"labels_ids\" string=\"Type of answers\" context=\"{'default_question_id': active_id}\" attrs=\"{'invisible': [('type', 'not in', ['simple_choice', 'multiple_choice', 'matrix'])]}\">\n  386                                      <tree editable=\"bottom\">\n  387                                          <field name=\"sequence\" widget=\"handle\"/>\n  ...\n  392                                  <separator />\n  393                                  <label for=\"labels_ids_2\" attrs=\"{'invisible': [('type', '!=', 'matrix')]}\" />\n  394:                                 <field name=\"labels_ids_2\" context=\"{'default_question_id_2': active_id}\" attrs=\"{'invisible': [('type', '!=', 'matrix')]}\">\n  395                                      <tree editable=\"bottom\">\n  396                                          <field name=\"sequence\" widget=\"handle\"/>\n  ...\n  474              <field name=\"view_mode\">tree,form</field>\n  475              <field name=\"search_view_id\" ref=\"survey_question_search\"/>\n  476:             <field name=\"context\">{'search_default_group_by_page': True}</field>\n  477          </record>\n  478  \n  ...\n  508              <field name=\"view_mode\">tree,form</field>\n  509              <field name=\"search_view_id\" ref=\"survey_label_search\"/>\n  510:             <field name=\"context\">{'search_default_group_by_question': True}</field>\n  511          </record>\n  512  \n  ...\n  574              <field name=\"view_mode\">tree,form</field>\n  575              <field name=\"search_view_id\" ref=\"survey_response_line_search\"/>\n  576:             <field name=\"context\">{'search_default_group_by_survey': True, 'search_default_group_by_user_input': True}</field>\n  577          </record>\n  578  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\survey\\wizard\\survey_email_compose_message.py:\n   53      }\n   54  \n   55:     _defaults = {\n   56          'public': 'public_link',\n   57          'survey_id': lambda self, cr, uid, ctx={}: ctx.get('model') == 'survey.survey' and ctx.get('res_id') or None\n   58      }\n   59  \n   60:     def default_get(self, cr, uid, fields, context=None):\n   61:         res = super(survey_mail_compose_message, self).default_get(cr, uid, fields, context=context)\n   62          if context.get('active_model') == 'res.partner' and context.get('active_ids'):\n   63              res.update({'partner_ids': context.get('active_ids')})\n   ..\n  175                      __URL__ is automaticaly converted into the special url of the survey.\"))\n  176  \n  177:             if not wizard.multi_email and not wizard.partner_ids and (context.get('default_partner_ids') or context.get('default_multi_email')):\n  178:                 wizard.multi_email = context.get('default_multi_email')\n  179:                 wizard.partner_ids = context.get('default_partner_ids')\n  180  \n  181              # quick check of email list\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\survey\\wizard\\survey_email_compose_message.xml:\n   19          </record>\n   20  \n   21:         <!-- Replace the default mass-mailing wizard in base with the composition wizard -->\n   22:         <act_window name=\"Partner Survey Mailing\" res_model=\"survey.mail.compose.message\" src_model=\"res.partner\" view_mode=\"form\" multi=\"True\" target=\"new\" key2=\"client_action_multi\" id=\"survey.action_partner_survey_mail\" context=\"{'default_use_template': True, 'default_template_id': ref('email_template_survey')}\" />\n   23  \n   24          <!-- Composition form (context['survey_resent_token'], if True, hide share option, emails list and partner_ids) -->\n   ..\n   33                      <field name=\"parent_id\" invisible=\"1\"/>\n   34                      <group col=\"2\">\n   35:                         <field name=\"survey_id\" readonly=\"context.get('default_survey_id')\" on_change=\"onchange_survey_id(survey_id)\" />\n   36                          <field name=\"public\" widget=\"radio\" invisible=\"context.get('survey_resent_token')\" />\n   37                      </group>\n   ..\n   68                      <footer attrs=\"{'invisible':['|',('public','=',False),('public','in',['public_link'])]}\">\n   69                          <button string=\"Send\" name=\"send_mail\" type=\"object\" class=\"btn-primary\" />\n   70:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\" />\n   71                          <group class=\"oe_right\" col=\"1\">\n   72                              <div>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\survey_crm\\crm_view.xml:\n    2  <openerp>\n    3      <data>\n    4:         <!--  Replace the default mass-mailing wizard in base with the composition wizard -->\n    5          <act_window name=\"Partner Survey Mailing\"\n    6                  res_model=\"survey.mail.compose.message\"\n    .\n   12                  id=\"survey.action_partner_survey_mail_crm\"\n   13                  context=\"{\n   14:                             'default_use_template': True,\n   15:                             'default_template_id': ref('survey.email_template_survey'),\n   16                          }\" />\n   17      </data>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\survey_crm\\survey.py:\n    8      _inherit = 'survey.mail.compose.message'\n    9  \n   10:     def default_get(self, cr, uid, fields, context=None):\n   11:         res = super(survey_mail_compose_message, self).default_get(cr, uid, fields, context=context)\n   12          if context.get('active_model') == 'crm.lead' and context.get('active_ids'):\n   13              partner_ids = []\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\test_converter\\tests\\test_html.py:\n  300          value = converter('2011-05-03')\n  301  \n  302:         # default lang/format is US\n  303          self.assertEqual(value, '05/03/2011')\n  304  \n  ...\n  308          value = converter('2011-05-03 11:12:13')\n  309  \n  310:         # default lang/format is US\n  311          self.assertEqual(value, '05/03/2011 00:12:13')\n  312  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\test_documentation_examples\\extension.py:\n    6      _name = 'extension.0'\n    7  \n    8:     name = fields.Char(default=\"A\")\n    9  \n   10  class Extension1(models.Model):\n   11      _inherit = 'extension.0'\n   12  \n   13:     description = fields.Char(default=\"Extended\")\n   14  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\test_impex\\models.py:\n   43              'value': field,\n   44          }\n   45:         _defaults = {\n   46              'const': 4,\n   47          }\n   ..\n   90          'child2': fields.one2many('export.one2many.child.2', 'parent_id'),\n   91      }\n   92:     _defaults = {\n   93          'const': 36,\n   94      }\n   ..\n  143  \n  144  \n  145: class SelectionWithDefault(orm.Model):\n  146:     _name = 'export.selection.withdefault'\n  147      _columns = {\n  148          'const': fields.integer(),\n  149          'value': fields.selection([(1, \"Foo\"), (2, \"Bar\")]),\n  150      }\n  151:     _defaults = {\n  152          'const': 4,\n  153          'value': 2,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\test_impex\\tests\\test_load.py:\n  475              moreinfo=\"Foo Bar Qux 4\".split())])\n  476  \n  477: class test_selection_with_default(ImporterCase):\n  478:     model_name = 'export.selection.withdefault'\n  479  \n  480      def test_empty(self):\n  ...\n  489              [False])\n  490  \n  491:     def test_default(self):\n  492:         \"\"\" Non-provided cells should set corresponding field to default\n  493          \"\"\"\n  494          result = self.import_(['const'], [['42']])\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\test_inherit\\models.py:\n   11          'state': osv.fields.selection([('a', 'A'), ('b', 'B')], string='State'),\n   12      }\n   13:     _defaults = {\n   14          'name': 'Foo',\n   15      }\n   ..\n   41      partner_id = fields.Many2one('res.partner')\n   42  \n   43:     # extend the name field: make it required and change its default value\n   44:     name = fields.Char(required=True, default='Bar')\n   45  \n   46      # extend the selection of the state field\n   ..\n   70      template_id = fields.Many2one()\n   71  \n   72:     # change the default value of an inherited field\n   73:     name = fields.Char(default='Baz')\n   74  \n   75  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\test_inherit\\tests\\test_inherit.py:\n   27          daughter = self.env['test.inherit.daughter']\n   28  \n   29:         # the field mother.name must have required=True and \"Bar\" as default\n   30          field = mother._fields['name']\n   31          self.assertTrue(field.required)\n   32:         self.assertEqual(field.default(mother), \"Bar\")\n   33:         self.assertEqual(mother._defaults.get('name'), \"Bar\")\n   34:         self.assertEqual(mother.default_get(['name']), {'name': \"Bar\"})\n   35  \n   36:         # the field daughter.name must have required=False and \"Baz\" as default\n   37          field = daughter._fields['name']\n   38          self.assertFalse(field.required)\n   39:         self.assertEqual(field.default(daughter), \"Baz\")\n   40:         self.assertEqual(daughter._defaults.get('name'), \"Baz\")\n   41:         self.assertEqual(daughter.default_get(['name']), {'name': \"Baz\"})\n   42  \n   43          # the field daughter.template_id should have\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\test_new_api\\models.py:\n  144      discussion = fields.Many2one('test_new_api.discussion', ondelete='cascade')\n  145      body = fields.Text()\n  146:     author = fields.Many2one('res.users', default=lambda self: self.env.user)\n  147      name = fields.Char(string='Title', compute='_compute_name', store=True)\n  148      display_name = fields.Char(string='Abstract', compute='_compute_display_name')\n  ...\n  211      _name = 'test_new_api.mixed'\n  212  \n  213:     number = fields.Float(digits=(10, 2), default=3.14)\n  214      date = fields.Date()\n  215      now = fields.Datetime(compute='_compute_now')\n  ...\n  239      _name = 'domain.bool'\n  240  \n  241:     bool_true = fields.Boolean('b1', default=True)\n  242:     bool_false = fields.Boolean('b2', default=False)\n  243      bool_undefined = fields.Boolean('b3')\n  244  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\test_new_api\\tests\\test_new_fields.py:\n   53      def test_10_computed(self):\n   54          \"\"\" check definition of computed fields \"\"\"\n   55:         # by default function fields are not stored and readonly\n   56          field = self.env['test_new_api.message']._fields['size']\n   57          self.assertFalse(field.store)\n   ..\n  251          self.assertEqual(record.date, '2012-05-01')\n  252  \n  253:         # one may assign dates in the default format, and it must be checked\n  254          record.date = '2012-05-01'\n  255          self.assertEqual(record.date, '2012-05-01')\n  ...\n  322          discussion = message.discussion\n  323  \n  324:         # by default related fields are not stored\n  325          field = message._fields['discussion_name']\n  326          self.assertFalse(field.store)\n  ...\n  463          self.assertEqual(message.discussion_name, discussion.name)\n  464  \n  465:     def test_50_defaults(self):\n  466:         \"\"\" test default values. \"\"\"\n  467          fields = ['discussion', 'body', 'author', 'size']\n  468:         defaults = self.env['test_new_api.message'].default_get(fields)\n  469:         self.assertEqual(defaults, {'author': self.env.uid})\n  470  \n  471:         defaults = self.env['test_new_api.mixed'].default_get(['number'])\n  472:         self.assertEqual(defaults, {'number': 3.14})\n  473  \n  474      def test_50_search_many2one(self):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\test_new_api\\tests\\test_onchange.py:\n   14          self.Message = self.env['test_new_api.message']\n   15  \n   16:     def test_default_get(self):\n   17:         \"\"\" checking values returned by default_get() \"\"\"\n   18          fields = ['name', 'categories', 'participants', 'messages']\n   19:         values = self.Discussion.default_get(fields)\n   20          self.assertEqual(values, {})\n   21  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\test_workflow\\models.py:\n   37      _name = 'test.workflow.trigger'\n   38      _columns = { 'value': openerp.osv.fields.boolean('Value') }\n   39:     _defaults = { 'value': False }\n   40  \n   41  class a(openerp.osv.orm.Model):\n   42      _name = 'test.workflow.model.a'\n   43      _columns = { 'value': openerp.osv.fields.integer('Value') }\n   44:     _defaults = { 'value': 0 }\n   45  \n   46  class b(openerp.osv.orm.Model):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\theme_bootswatch\\views\\theme.xml:\n   19                    <td>\n   20                      <label class=\"checked\">\n   21:                       <img style=\"width: 120px; height: 70px;\" src=\"/theme_bootswatch/static/src/img/bootswatch_default_thumbnail.png\" alt=\"Default Theme\"/>\n   22                        <input name=\"theme\" type=\"radio\" data-xmlid=\"\" checked=\"checked\"/>\n   23                      </label>\n   ..\n  106  \n  107  <!--\n  108:      All Default Themes\n  109  -->\n  110  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\theme_default\\__openerp__.py:\n    1  {\n    2:     'name': 'Default Theme',\n    3:     'description': 'Default website theme to showcase customization possibilities.',\n    4      'category': 'Theme/Hidden',\n    5      'sequence': 1000,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\theme_default\\views\\templates.xml:\n   14                    <!-- <a class=\"btn btn-primary\" href=\"/web#return_label=Website&amp;action=website.action_module_theme\">Click here to change theme</a> -->\n   15                    <hr style=\"margin: 20px -10px 10px -10px;\"/>\n   16:                   <h4 class=\"modal-title\">Customize this default theme</h4>\n   17                </div>\n   18                <div class=\"modal-body\">\n   ..\n   22                            <td class=\" text-center\" width=\"50%\">\n   23                                <label class=\" center-block\">\n   24:                                   <div class=\"text-center\" style=\"background-image: url(/theme_default/static/src/img/theme/layout-full.gif); background-size: 100%; line-height: 40px;\">FULL WIDTH</div>\n   25                                    <input name=\"layoutvar\" type=\"radio\" data-xmlid=\"\"/>\n   26                                </label>\n   ..\n   28                            <td class=\" text-center\">\n   29                                <label class=\" center-block\">\n   30:                                  <div class=\"text-center\" style=\"background-image: url(/theme_default/static/src/img/theme/layout-boxed.gif); background-size: 100%; line-height: 40px;\">BOXED</div>\n   31:                                   <input name=\"layoutvar\" type=\"radio\" data-xmlid=\"theme_default.option_layout_boxed\"/>\n   32                                </label>\n   33                            </td>\n   ..\n   40                            <td>\n   41                                <label class=\"chd-color-combi\">\n   42:                                   <img src=\"/theme_default/static/src/img/theme/variant-stone.gif\" alt=\"Stone\" class=\"chd-color-combi-img\"/>\n   43                                    <input name=\"colorvar\" type=\"radio\" data-xmlid=\"\"/>\n   44                                </label>\n   ..\n   46                            <td>\n   47                                <label class=\"chd-color-combi\">\n   48:                                   <img src=\"/theme_default/static/src/img/theme/variant-emerald.gif\" alt=\"Emerald\" class=\"chd-color-combi-img\"/>\n   49:                                   <input name=\"colorvar\" type=\"radio\" data-xmlid=\"theme_default.option_color_emerald\"/>\n   50                                </label>\n   51                            </td>\n   52                            <td>\n   53                                <label class=\"chd-color-combi\">\n   54:                                   <img src=\"/theme_default/static/src/img/theme/variant-cobalt.gif\" alt=\"Cobalt\" class=\"chd-color-combi-img\"/>\n   55:                                   <input name=\"colorvar\" type=\"radio\" data-xmlid=\"theme_default.option_color_cobalt\"/>\n   56                                </label>\n   57                            </td>\n   58                            <td>\n   59                                <label class=\"chd-color-combi\">\n   60:                                   <img src=\"/theme_default/static/src/img/theme/variant-amethyst.gif\" alt=\"Amethyst\" class=\"chd-color-combi-img\"/>\n   61:                                   <input name=\"colorvar\" type=\"radio\" data-xmlid=\"theme_default.option_color_amethyst\"/>\n   62                                </label>\n   63                            </td>\n   64                            <td>\n   65                                <label class=\"chd-color-combi\">\n   66:                                   <img src=\"/theme_default/static/src/img/theme/variant-ruby.gif\" alt=\"Blue\" class=\"chd-color-combi-img\"/>\n   67:                                   <input name=\"colorvar\" type=\"radio\" data-xmlid=\"theme_default.option_color_ruby\"/>\n   68                                </label>\n   69                            </td>\n   70                            <td>\n   71                                <label class=\"chd-color-combi\">\n   72:                                   <img src=\"/theme_default/static/src/img/theme/variant-gold.gif\" alt=\"Gold\" class=\"chd-color-combi-img\"/>\n   73:                                   <input name=\"colorvar\" type=\"radio\" data-xmlid=\"theme_default.option_color_gold\"/>\n   74                                </label>\n   75                            </td>\n   ..\n   94                                        <span style=\"font-family:Georgia, 'Times New Roman', Times, serif; font-size:11px\" >Georgia</span>\n   95                                        <span style=\"font-family:'Helvetica Neue', Helvetica, Arial, sans-serif; font-size:11px\">/ Helvetica</span>\n   96:                                     <input name=\"theme\" type=\"radio\" data-xmlid=\"theme_default.option_font\"/>\n   97                                    </div>\n   98                                </label>\n   ..\n  109  <template id=\"colors\" name=\"Colors\" inherit_id=\"website.assets_frontend\">\n  110    <xpath expr=\".\" position=\"inside\">\n  111:     <link rel=\"stylesheet\" href='/theme_default/static/src/less/colors.less'/>\n  112    </xpath>\n  113  </template>\n  ...\n  117  <template id=\"option_layout_boxed\" name=\"option_layout_boxed\" inherit_id=\"website.assets_frontend\" active=\"False\" customize_show=\"False\">\n  118    <xpath expr=\".\" position=\"inside\">\n  119:       <link href=\"/theme_default/static/src/less/option_layout_boxed.less\" rel=\"stylesheet\" type=\"text/less\"/>\n  120    </xpath>\n  121  </template>\n  ...\n  125  <template id=\"option_color_stone\" name=\"option_color_stone\" inherit_id=\"website.assets_frontend\" active=\"False\" customize_show=\"False\">\n  126    <xpath expr=\".\" position=\"inside\">\n  127:     <link href=\"/theme_default/static/src/less/option_color_stone.less\" rel=\"stylesheet\" type=\"text/less\"/>\n  128    </xpath>\n  129  </template>\n  ...\n  131  <template id=\"option_color_emerald\" name=\"option_color_emerald\" inherit_id=\"website.assets_frontend\" active=\"False\" customize_show=\"False\">\n  132    <xpath expr=\".\" position=\"inside\">\n  133:     <link href=\"/theme_default/static/src/less/option_color_emerald.less\" rel=\"stylesheet\" type=\"text/less\"/>\n  134    </xpath>\n  135  </template>\n  ...\n  137  <template id=\"option_color_cobalt\" name=\"option_color_cobalt\" inherit_id=\"website.assets_frontend\" active=\"False\" customize_show=\"False\">\n  138    <xpath expr=\".\" position=\"inside\">\n  139:     <link href=\"/theme_default/static/src/less/option_color_cobalt.less\" rel=\"stylesheet\" type=\"text/less\"/>\n  140    </xpath>\n  141  </template>\n  ...\n  143  <template id=\"option_color_amethyst\" name=\"option_color_amethyst\" inherit_id=\"website.assets_frontend\" active=\"False\" customize_show=\"False\">\n  144    <xpath expr=\".\" position=\"inside\">\n  145:     <link href=\"/theme_default/static/src/less/option_color_amethyst.less\" rel=\"stylesheet\" type=\"text/less\"/>\n  146    </xpath>\n  147  </template>\n  ...\n  149  <template id=\"option_color_ruby\" name=\"option_color_ruby\" inherit_id=\"website.assets_frontend\" active=\"False\" customize_show=\"False\">\n  150    <xpath expr=\".\" position=\"inside\">\n  151:     <link href=\"/theme_default/static/src/less/option_color_ruby.less\" rel=\"stylesheet\" type=\"text/less\"/>\n  152    </xpath>\n  153  </template>\n  ...\n  155  <template id=\"option_color_gold\" name=\"option_color_gold\" inherit_id=\"website.assets_frontend\" active=\"False\" customize_show=\"False\">\n  156    <xpath expr=\".\" position=\"inside\">\n  157:     <link href=\"/theme_default/static/src/less/option_color_gold.less\" rel=\"stylesheet\" type=\"text/less\"/>\n  158    </xpath>\n  159  </template>\n  ...\n  163  <template id=\"option_font\" name=\"option_font\" inherit_id=\"website.assets_frontend\" active=\"False\" customize_show=\"False\">\n  164    <xpath expr=\".\" position=\"inside\">\n  165:     <link href=\"/theme_default/static/src/less/option_font.less\" rel=\"stylesheet\" type=\"text/less\"/>\n  166    </xpath>\n  167  </template>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\utm\\models\\utm.py:\n   15          'active': fields.boolean('Active'),\n   16      }\n   17:     _defaults = {\n   18          'active': lambda *a: 1,\n   19      }\n   ..\n   83          return vals\n   84  \n   85:     def _get_default_track(self, cr, uid, field, context=None):\n   86          return self.tracking_get_values(cr, uid, {}, context=context).get(field)\n   87  \n   88:     _defaults = {\n   89:         'source_id': lambda self, cr, uid, ctx: self._get_default_track(cr, uid, 'source_id', ctx),\n   90:         'campaign_id': lambda self, cr, uid, ctx: self._get_default_track(cr, uid, 'campaign_id', ctx),\n   91:         'medium_id': lambda self, cr, uid, ctx: self._get_default_track(cr, uid, 'medium_id', ctx),\n   92      }\n   93  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\warning\\warning.py:\n   26          'invoice_warn_msg' : fields.text('Message for Invoice'),\n   27      }\n   28:     _defaults = {\n   29           'sale_warn' : 'no-message',\n   30           'purchase_warn' : 'no-message',\n   ..\n  183       }\n  184  \n  185:     _defaults = {\n  186           'sale_line_warn' : 'no-message',\n  187           'purchase_line_warn' : 'no-message',\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web\\controllers\\main.py:\n  302  \n  303  def clean_action(action):\n  304:     action.setdefault('flags', {})\n  305:     action_type = action.setdefault('type', 'ir.actions.act_window_close')\n  306      if action_type == 'ir.actions.act_window':\n  307          return fix_view_modes(action)\n  ...\n  423  \n  424  \n  425: def binary_content(xmlid=None, model='ir.attachment', id=None, field='datas', unique=False, filename=None, filename_field='datas_fname', download=False, mimetype=None, default_mimetype='application/octet-stream', env=None):\n  426      return request.registry['ir.http'].binary_content(\n  427          xmlid=xmlid, model=model, id=id, field=field, unique=unique, filename=filename, filename_field=filename_field,\n  428:         download=download, mimetype=mimetype, default_mimetype=default_mimetype, env=env)\n  429  \n  430  def db_info():\n  ...\n  582                                                ['module','src','value','lang'], order='module')\n  583          for mod, msg_group in itertools.groupby(messages, key=operator.itemgetter('module')):\n  584:             translations_per_module.setdefault(mod,{'messages':[]})\n  585              translations_per_module[mod]['messages'].extend({'id': m['src'],\n  586                                                               'string': m['value']} \\\n  ...\n  633  \n  634      def _render_template(self, **d):\n  635:         d.setdefault('manage',True)\n  636          d['insecure'] = openerp.tools.config['admin_passwd'] == 'admin'\n  637          d['list_db'] = openerp.tools.config['list_db']\n  ...\n  912          :param ids: identifiers of the records to resequence, in the new sequence order\n  913          :type ids: list(id)\n  914:         :param str field: field used for sequence specification, defaults to\n  915                            \"sequence\"\n  916          :param int offset: sequence number for first record in ``ids``, allows\n  917                             starting the resequencing from an arbitrary number,\n  918:                            defaults to ``0``\n  919          \"\"\"\n  920          m = request.session.model(model)\n  ...\n  995          '/web/image/<int:id>-<string:unique>/<int:width>x<int:height>/<string:filename>'], type='http', auth=\"public\")\n  996      def content_image(self, xmlid=None, model='ir.attachment', id=None, field='datas', filename_field='datas_fname', unique=None, filename=None, mimetype=None, download=None, width=0, height=0):\n  997:         status, headers, content = binary_content(xmlid=xmlid, model=model, id=id, field=field, unique=unique, filename=filename, filename_field=filename_field, download=download, mimetype=mimetype, default_mimetype='image/png')\n  998          if status == 304:\n  999              return werkzeug.wrappers.Response(status=304, headers=headers)\n ....\n 1246          #\n 1247          # Works the following way:\n 1248:         # * sort the list of fields to export, the default sorting order will\n 1249          #   put the field itself (if present, for xmlid) and all of its\n 1250          #   sub-fields right after it\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web\\doc\\_themes\\flask_theme_support.py:\n    7  class FlaskyStyle(Style):\n    8      background_color = \"#f8f8f8\"\n    9:     default_style = \"\"\n   10  \n   11      styles = {\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web\\doc\\conf.py:\n    9  # autogenerated file.\n   10  #\n   11: # All configuration values have a default; values that are commented out\n   12: # serve to show the default.\n   13  \n   14  import sys, os\n   ..\n   73  exclude_patterns = ['_build']\n   74  \n   75: # The reST default role (used for this markup: `text`) to use for all documents.\n   76: #default_role = None\n   77  \n   78  # If true, '()' will be appended to :func: etc. cross-reference text.\n   ..\n   84  \n   85  # If true, sectionauthor and moduleauthor directives will be shown in the\n   86: # output. They are ignored by default.\n   87  #show_authors = False\n   88  \n   ..\n  108  html_theme_path = ['_themes']\n  109  \n  110: # The name for this set of Sphinx documents.  If None, it defaults to\n  111  # \"<project> v<release> documentation\".\n  112  #html_title = None\n  113  \n  114: # A shorter title for the navigation bar.  Default is the same as html_title.\n  115  #html_short_title = None\n  116  \n  ...\n  126  # Add any paths that contain custom static files (such as style sheets) here,\n  127  # relative to this directory. They are copied after the builtin static files,\n  128: # so a file named \"default.css\" will overwrite the builtin \"default.css\".\n  129  html_static_path = ['_static']\n  130  \n  ...\n  160  #html_show_sourcelink = True\n  161  \n  162: # If true, \"Created using Sphinx\" is shown in the HTML footer. Default is True.\n  163  #html_show_sphinx = True\n  164  \n  165: # If true, \"(C) Copyright ...\" is shown in the HTML footer. Default is True.\n  166  #html_show_copyright = True\n  167  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web\\static\\lib\\py.js\\doc\\conf.py:\n    9  # autogenerated file.\n   10  #\n   11: # All configuration values have a default; values that are commented out\n   12: # serve to show the default.\n   13  \n   14  import sys, os\n   ..\n   67  exclude_patterns = ['_build']\n   68  \n   69: # The reST default role (used for this markup: `text`) to use for all documents.\n   70: #default_role = None\n   71  \n   72: # Default sphinx domain\n   73: default_domain = 'js'\n   74  \n   75  # If true, '()' will be appended to :func: etc. cross-reference text.\n   ..\n   81  \n   82  # If true, sectionauthor and moduleauthor directives will be shown in the\n   83: # output. They are ignored by default.\n   84  #show_authors = False\n   85  \n   86  # The name of the Pygments (syntax highlighting) style to use.\n   87  pygments_style = 'sphinx'\n   88: # default code-block highlighting\n   89  highlight_language = 'javascript'\n   90  \n   ..\n   97  # The theme to use for HTML and HTML Help pages.  See the documentation for\n   98  # a list of builtin themes.\n   99: html_theme = 'default'\n  100  \n  101  # Theme options are theme-specific and customize the look and feel of a theme\n  ...\n  107  #html_theme_path = []\n  108  \n  109: # The name for this set of Sphinx documents.  If None, it defaults to\n  110  # \"<project> v<release> documentation\".\n  111  #html_title = None\n  112  \n  113: # A shorter title for the navigation bar.  Default is the same as html_title.\n  114  #html_short_title = None\n  115  \n  ...\n  125  # Add any paths that contain custom static files (such as style sheets) here,\n  126  # relative to this directory. They are copied after the builtin static files,\n  127: # so a file named \"default.css\" will overwrite the builtin \"default.css\".\n  128  html_static_path = ['_static']\n  129  \n  ...\n  155  #html_show_sourcelink = True\n  156  \n  157: # If true, \"Created using Sphinx\" is shown in the HTML footer. Default is True.\n  158  #html_show_sphinx = True\n  159  \n  160: # If true, \"(C) Copyright ...\" is shown in the HTML footer. Default is True.\n  161  #html_show_copyright = True\n  162  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web\\static\\lib\\qweb\\qweb-benchmark.xml:\n    2  <templates id=\"template\">\n    3  <t t-name=\"benchmark\"><div id=\"oe_notification\" class=\"oe_notification\">\n    4:         <div id=\"oe_notification_default\">\n    5              <a class=\"ui-notify-cross ui-notify-close\" href=\"#\">x</a>\n    6              <h1>title</h1>\n    .\n   41      </div>\n   42      <div id=\"oe_notification\" class=\"oe_notification\">\n   43:         <div id=\"oe_notification_default\">\n   44              <a class=\"ui-notify-cross ui-notify-close\" href=\"#\">x</a>\n   45              <h1>title</h1>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web\\static\\src\\xml\\base.xml:\n   76          <li class=\"dropdown\">\n   77              <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n   78:                 <img class=\"oe_topbar_avatar\" t-att-data-default-src=\"_s + '/web/static/src/img/user_menu_avatar.png'\"/>\n   79                  <span class=\"oe_topbar_name\"/> <b class=\"caret\"></b>\n   80              </a>\n   ..\n  189      <t t-foreach=\"views\" t-as=\"view\">\n  190          <button type=\"button\" t-att-accesskey=\"view.accesskey\"\n  191:             t-attf-class=\"btn btn-default fa #{view.icon} oe-cp-switch-#{view.type}\" \n  192              t-att-data-view-type=\"view.type\" t-att-title=\"view.label\"/>\n  193      </t>\n  ...\n  207          <li class=\"oe_metadata\"><a href=\"#\" data-action=\"get_metadata\">View Metadata</a></li>\n  208          <li class=\"oe_layout\"><a href=\"#\" data-action=\"toggle_layout_outline\">Toggle Form Layout Outline</a></li>\n  209:         <li class=\"oe_defaults\"><a href=\"#\" data-action=\"set_defaults\">Set Defaults</a></li>\n  210      </t>\n  211:     <li class=\"oe_defaults\"><a href=\"#\" data-action=\"perform_js_tests\">JS Tests</a></li>\n  212      <li class=\"oe_fields\"><a href=\"#\" data-action=\"get_view_fields\">View Fields</a></li>\n  213      <li class=\"oe_fvg\"><a href=\"#\" data-action=\"fvg\">Fields View Get</a></li>\n  ...\n  268              <t t-set=\"att_next\" t-value=\"{'accesskey': 'P'}\" />\n  269          </t>\n  270:         <a class=\"fa fa-chevron-left btn btn-default oe-pager-button\" t-att=\"att_prev\" type=\"button\" data-pager-action=\"previous\"></a>\n  271:         <a class=\"fa fa-chevron-right btn btn-default oe-pager-button\" t-att=\"att_next\" type=\"button\" data-pager-action=\"next\"></a>\n  272      </div>\n  273  </span>\n  ...\n  276      <t t-foreach=\"widget.sections\" t-as=\"section\">\n  277          <div class=\"oe_form_dropdown_section btn-group btn-group-sm\">\n  278:             <button type=\"button\" class=\"btn btn-default dropdown-toggle\"\n  279                      t-if=\"section.name != 'buttons'\"\n  280                      data-toggle=\"dropdown\">\n  ...\n  457              Save\n  458          </button>\n  459:         <button type=\"button\" class=\"btn btn-default btn-sm o_list_button_discard\" accesskey=\"D\">\n  460              Discard\n  461          </button>\n  ...\n  495              <button t-if=\"widget.is_action_enabled('edit')\"\n  496                      type=\"button\"\n  497:                     class=\"oe_form_button_edit btn btn-default btn-sm\" accesskey=\"E\">\n  498                  Edit\n  499              </button>\n  500              <button t-if=\"widget.is_action_enabled('create')\"\n  501:                     type=\"button\" class=\"oe_form_button_create btn btn-default btn-sm\"\n  502                      accesskey=\"C\">\n  503                  Create\n  ...\n  506          <span class=\"o_form_buttons_edit\">\n  507              <button type=\"button\" class=\"oe_form_button_save btn btn-primary btn-sm\" accesskey=\"S\">Save</button>\n  508:             <button type=\"button\" class=\"oe_form_button_cancel btn btn-sm btn-default\" accesskey=\"D\">Discard</button>\n  509          </span>\n  510      </t>\n  ...\n  513      <span class=\"oe_form_pager_state\"></span>\n  514  </t>\n  515: <form t-name=\"FormView.set_default\">\n  516      <t t-set=\"args\" t-value=\"widget.args\"/>\n  517      <table style=\"width: 100%\">\n  518          <tr>\n  519              <td>\n  520:                 <label for=\"formview_default_fields\"\n  521                         class=\"oe_label oe_align_right\">\n  522:                     Default:\n  523                  </label>\n  524              </td>\n  525              <td class=\"oe_form_required\">\n  526:                 <select id=\"formview_default_fields\">\n  527                      <option value=\"\"/>\n  528                      <option t-foreach=\"args.fields\" t-as=\"field\"\n  ...\n  535          <tr t-if=\"args.conditions.length\">\n  536              <td>\n  537:                 <label for=\"formview_default_conditions\"\n  538                         class=\"oe_label oe_align_right\">\n  539                      Condition:\n  ...\n  541              </td>\n  542              <td>\n  543:                 <select id=\"formview_default_conditions\">\n  544                      <option value=\"\"/>\n  545                      <option t-foreach=\"args.conditions\" t-as=\"cond\"\n  ...\n  552          <tr>\n  553              <td colspan=\"2\">\n  554:                 <input type=\"radio\" id=\"formview_default_self\"\n  555                         value=\"self\" name=\"scope\" checked=\"checked\"/>\n  556:                 <label for=\"formview_default_self\" class=\"oe_label\"\n  557                         style=\"display: inline;\">\n  558                      Only you\n  559                  </label>\n  560                  <br/>\n  561:                 <input type=\"radio\" id=\"formview_default_all\"\n  562                         value=\"all\" name=\"scope\"/>\n  563:                 <label for=\"formview_default_all\" class=\"oe_label\"\n  564                         style=\"display: inline;\">\n  565                      All users\n  ...\n  614  <t t-name=\"GraphView.buttons\">\n  615      <div class=\"btn-group btn-group-sm\">\n  616:         <button class=\"btn btn-default fa fa-bar-chart-o oe-bar-mode\" title=\"Bar Chart\"></button>\n  617:         <button class=\"btn btn-default fa fa-line-chart oe-line-mode\" title=\"Line Chart\"></button>\n  618:         <button class=\"btn btn-default fa fa-pie-chart oe-pie-mode\" title=\"Pie Chart\"></button>\n  619      </div>\n  620      <div class=\"btn-group btn-group-sm\">\n  621:         <button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">\n  622              Measure <span class=\"caret\"/>\n  623          </button>\n  ...\n  647  <t t-name=\"PivotView.buttons\">\n  648      <div class=\"btn-group btn-group-sm\">\n  649:         <button class=\"btn btn-default fa fa-expand oe-pivot-flip\" title=\"Flip axis\"></button>\n  650:         <button class=\"btn btn-default fa fa-arrows-alt oe-pivot-expand-all\" title=\"Expand all\"></button>\n  651      </div>\n  652      <div class=\"btn-group btn-group-sm\">\n  653:         <button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">\n  654              Measures <span class=\"caret\"/>\n  655          </button>\n  ...\n 1132      <span class=\"oe_facet_remove\">x</span>\n 1133      <span t-if=\"widget.model.has('icon')\"\n 1134:             t-att-class=\"'label label-default fa ' + widget.model.get('icon')\">\n 1135      </span>\n 1136:     <span class=\"label label-default\" t-if=\"!widget.model.has('icon')\">\n 1137          <t t-esc=\"widget.model.get('category')\"/>\n 1138      </span >\n ....\n 1161      <div t-att-style=\"style\">\n 1162          <input type=\"text\" size=\"15\" t-att-name=\"attrs.name\"\n 1163:                t-att-autofocus=\"attrs.default_focus === '1' ? 'autofocus' : undefined\"\n 1164                 t-att-id=\"element_id\"\n 1165:                t-att-value=\"defaults[attrs.name] || ''\"/>\n 1166:         <t t-if=\"filters.length\" t-raw=\"filters.render(defaults)\"/>\n 1167      </div>\n 1168  </t>\n ....\n 1177      <div t-att-style=\"style\">\n 1178          <span t-att-id=\"element_id\"/>\n 1179:         <t t-if=\"filters.length\" t-raw=\"filters.render(defaults)\"/>\n 1180      </div>\n 1181  </t>\n ....\n 1190      <div t-att-style=\"style\">\n 1191          <select t-att-name=\"attrs.name\" t-att-id=\"element_id\"\n 1192:                 t-att-autofocus=\"attrs.default_focus === '1' || undefined\">\n 1193              <option t-if=\"prepend_empty\"/>\n 1194              <t t-foreach=\"attrs.selection\" t-as=\"option\">\n 1195:                 <t t-set=\"selected\" t-value=\"defaults[attrs.name] === option[0]\"/>\n 1196                  <option t-if=\"selected\"\n 1197                          t-attf-selected=\"selected\"\n ....\n 1204              </t>\n 1205          </select>\n 1206:         <t t-if=\"filters.length\" t-raw=\"filters.render(defaults)\"/>\n 1207      </div>\n 1208  </t>\n 1209  <div t-name=\"SearchView.FilterMenu\" class=\"btn-group btn-group-sm\">\n 1210:     <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">\n 1211          <span class=\"fa fa-filter\"/> Filters <span class=\"caret\"/>\n 1212      </button>\n 1213      <ul class=\"dropdown-menu filters-menu\" role=\"menu\">\n 1214          <li class=\"oe-add-filter o_closed_menu\"><a>Add Custom Filter</a></li>\n 1215:         <li class=\"oe-add-filter-menu\"><button type=\"button\" class=\"btn btn-default oe-apply-filter\">Apply</button><a class=\"oe-add-condition\"><span class=\"fa fa-plus-circle\"/> Add a condition</a></li>\n 1216      </ul>\n 1217  </div>\n 1218  \n 1219  <div t-name=\"SearchView.GroupByMenu\" class=\"btn-group btn-group-sm oe-groupby-menu\">\n 1220:     <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">\n 1221          <span class=\"fa fa-bars\"/> Group By <span class=\"caret\"/>\n 1222      </button>\n ....\n 1233          </t>\n 1234      </select></li>\n 1235:     <li><button type=\"button\" class=\"btn btn-default oe-add-group oe-select-group\">Apply</button></li>\n 1236  </t>\n 1237  <div t-name=\"SearchView.FavoriteMenu\" class=\"btn-group btn-group-sm\">\n 1238:     <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">\n 1239          <span class=\"fa fa-star\"/> Favorites <span class=\"caret\"/>\n 1240      </button>\n ....\n 1244          <li class=\"oe-save-name\"><input type=\"text\" class=\"form-control\"></input></li>\n 1245          <li class=\"oe-save-name\">\n 1246:             <span><input type=\"checkbox\"/>Use by default</span>\n 1247          </li>\n 1248          <li class=\"oe-save-name\">\n 1249              <span class=\"oe-share-filter\"><input type=\"checkbox\"/>Share with all users</span>\n 1250          </li>\n 1251:         <li class=\"oe-save-name\"><button type=\"button\" class=\"btn btn-default\">Save</button></li>\n 1252      </ul>\n 1253  </div>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web\\static\\src\\xml\\base_common.xml:\n   68              <t t-esc=\"widget.node.attrs.modifiers\"/>\n   69          </li>\n   70:         <li t-if=\"widget.field and widget.field.change_default\" data-item=\"change_default\">\n   71:             <span class=\"oe_tooltip_technical_title\">Change default:</span>\n   72              Yes\n   73          </li>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web\\static\\src\\xml\\website.tour.xml:\n    9                  <nav class=\"popover-navigation\">\n   10                      <t t-if=\"next\">\n   11:                         <button class=\"btn btn-sm btn-default\" data-role=\"next\"><t t-esc=\"next\"/></button>\n   12                      </t>\n   13                      <small t-if=\"next &amp;&amp; end\">\n   ..\n   16                      </small>\n   17                      <t t-if=\"end &amp;&amp; ! next\">\n   18:                         <button class=\"btn btn-sm btn-default\" data-role=\"end\"><t t-esc=\"end\"/></button>\n   19                      </t>\n   20                  </nav>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web\\views\\webclient_templates.xml:\n  211                              <input type=\"text\" name=\"db\" t-att-value=\"request.db\" id=\"db\" class=\"form-control\" required=\"required\" readonly=\"readonly\"/>\n  212                              <span class=\"input-group-btn\">\n  213:                               <a href=\"/web/database/selector\" class=\"btn btn-default\">Select <i class=\"fa fa-database\"></i></a>\n  214                              </span>\n  215                          </div>\n  ...\n  307                              var token = \"<t t-esc=\"request.csrf_token(None)\"/>\";\n  308                              require('web.core').csrf_token = token;\n  309:                             require('qweb').default_dict.csrf_token = token;\n  310                          });\n  311                          odoo.db_info = <t t-raw=\"db_info\"/>;\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web_calendar\\static\\src\\xml\\web_fullcalendar.xml:\n   45  \n   46              <div class=\"btn-group btn-group-sm\">\n   47:                 <button type=\"button\" class=\"o_calendar_button_day btn btn-sm btn-default\">Day</button>\n   48:                 <button type=\"button\" class=\"o_calendar_button_week btn btn-sm btn-default\">Week</button>\n   49:                 <button type=\"button\" class=\"o_calendar_button_month btn btn-sm btn-default\">Month</button>\n   50              </div>\n   51          </div>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web_diagram\\controllers\\main.py:\n   49          for tr in transitions:\n   50              list_tr.append(tr)\n   51:             connectors.setdefault(tr, {\n   52                  'id': int(tr),\n   53                  's_id': transitions[tr][0],\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web_editor\\models\\ir_qweb.py:\n   26  import openerp\n   27  from openerp.osv import orm, fields\n   28: from openerp.tools import ustr, DEFAULT_SERVER_DATE_FORMAT, DEFAULT_SERVER_DATETIME_FORMAT\n   29  from openerp.tools import html_escape as escape\n   30  from openerp.addons.base.ir import ir_qweb\n   ..\n  213              return False\n  214  \n  215:         datetime.datetime.strptime(value, DEFAULT_SERVER_DATE_FORMAT)\n  216          return value\n  217  \n  ...\n  227          if isinstance(value, basestring):\n  228              value = datetime.datetime.strptime(\n  229:                 value, DEFAULT_SERVER_DATETIME_FORMAT)\n  230          if value:\n  231              # convert from UTC (server timezone) to user timezone\n  232              value = fields.datetime.context_timestamp(\n  233                  cr, uid, timestamp=value, context=context)\n  234:             value = value.strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n  235  \n  236          attrs = super(DateTime, self).attributes(\n  ...\n  268  \n  269          # format back to string\n  270:         return dt.strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n  271  \n  272  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web_editor\\static\\src\\xml\\backend.xml:\n   16      <t t-name=\"web_editor.FieldTextHtml.button.reset\">\n   17          <div class=\"btn-group pull-right\">\n   18:             <button class=\"o_reset_translation btn btn-default btn-sm btn-small\" title=\"Reset from source\"><span class=\"fa fa-upload\"></span></button>\n   19          </div>\n   20      </t>\n   ..\n   22      <t t-name=\"web_editor.FieldTextHtml.button.translate\">\n   23          <div class=\"btn-group pull-right\">\n   24:             <button t-if=\"widget.field.translate\" class=\"oe_field_translate btn btn-default btn-sm btn-small\" style=\"height: 24px; padding: 1px 3px 0px 5px\">\n   25                  <img border=\"0\" class=\"oe_input_icon\" height=\"16\" width=\"16\" src=\"/web/static/src/img/icons/terp-translate.png\" style=\"margin: 2px 0px -2px 0px;\"/>\n   26              </button>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web_editor\\static\\src\\xml\\editor.xml:\n  111                          <div class=\"form-group btn-group\">\n  112                              <input type=\"text\" name=\"url\" class=\"form-control url pull-left\" style=\"width: 320px;\" id=\"iamgeurl\" placeholder=\"http://openerp.com/logo.png\"/>\n  113:                             <button class=\"btn btn-default\" type=\"submit\">Add</button>\n  114                          </div>\n  115                      </div>\n  ...\n  243                          placeholder=\"//www.youtube.com/embed/yws1tbgNV7k\"\n  244                          t-translation=\"off\"/>\n  245:                     <button class=\"btn btn-default\">Preview</button>\n  246                  </div>\n  247                  <div class=\"form-group btn-group\">\n  ...\n  254                          placeholder='&lt;iframe src=\"//www.youtube.com/embed/yws1tbgNV7k\"&gt;&lt;/iframe&gt;'\n  255                          t-translation=\"off\"/>\n  256:                     <button class=\"btn btn-default\">Preview</button>\n  257                  </div>\n  258              </div>\n  ...\n  314                          <div class=\"col-sm-4\">\n  315                              <div class=\"dropdown\" style=\"line-height: 2em;\">\n  316:                                 <a data-toggle=\"dropdown\" class=\"btn btn-default\" href=\"#\">Color Style <span class=\"caret\"></span></a>\n  317                                  <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dLabel\">\n  318                                      <li>\n  ...\n  320                                      </li>\n  321                                      <li>\n  322:                                         <label class=\"btn btn-default\">Basic<input value=\"btn-default\" class=\"link-style\" type=\"radio\" name=\"link-style-type\"/></label>\n  323                                      </li>\n  324                                      <li>\n  ...\n  342                          <div class=\"col-sm-4\">\n  343                              <div class=\"dropdown\" style=\"line-height: 2em;\">\n  344:                                 <a data-toggle=\"dropdown\" class=\"btn btn-default\" href=\"#\">Size <span class=\"caret\"></span></a>\n  345                                  <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dLabel\">\n  346                                      <li>\n  347:                                         <label class=\"btn btn-default btn-xs\">Extra Small<input value=\"btn-xs\" class=\"link-style\" type=\"radio\" name=\"link-style-size\"/></label>\n  348                                      </li>\n  349                                      <li>\n  350:                                         <label class=\"btn btn-default btn-sm\">Small<input value=\"btn-sm\" class=\"link-style\" type=\"radio\" name=\"link-style-size\"/></label>\n  351                                      </li>\n  352                                      <li>\n  353:                                         <label class=\"btn btn-default\">Default<input value=\"\" class=\"link-style\" type=\"radio\" name=\"link-style-size\" checked=\"checked\"/></label>\n  354                                      </li>\n  355                                      <li>\n  356:                                         <label class=\"btn btn-default btn-lg\">Large<input value=\"btn-lg\" class=\"link-style\" type=\"radio\" name=\"link-style-size\"/></label>\n  357                                      </li>\n  358                                  </ul>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web_editor\\static\\src\\xml\\snippets.xml:\n    6          <li class=\"navbar-form\">\n    7              <div class=\"btn-group\">\n    8:                 <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">\n    9                      Block style <span class=\"caret\"></span>\n   10                  </button>\n   ..\n   31              <div class=\"oe_overlay_options\" contentEditable=\"false\">\n   32                  <div class=\"btn-group\">\n   33:                     <a href=\"#\" class=\"btn btn-default btn-sm oe_snippet_parent\" title=\"Select Container Block\"><i class=\"fa fa-upload\"></i></a>\n   34                      <div class=\"dropdown oe_options hidden btn-group\">\n   35                          <a href=\"#\" data-toggle=\"dropdown\" class=\"btn btn-primary btn-sm\" title=\"Customize\">Customize <span class=\"caret\"/></a>\n   36                          <ul class=\"dropdown-menu\" role=\"menu\"></ul>\n   37                      </div>\n   38:                     <a href=\"#\" class=\"btn btn-default btn-sm oe_snippet_move\" title=\"Drag to Move\"><i class=\"fa fa-arrows ml4 mr4\"></i></a>\n   39:                     <a href=\"#\" class=\"btn btn-default btn-sm oe_snippet_clone\" title=\"Duplicate Container\"><i class=\"fa fa-files-o ml4 mr4\"></i></a>\n   40:                     <a href=\"#\" class=\"btn btn-default btn-sm oe_snippet_remove\" title=\"Remove Block\"><i class=\"fa fa-trash-o ml4 mr4\"></i></a>\n   41                  </div>\n   42              </div>\n   ..\n   62      <t t-name=\"web_editor.many2one.button\">\n   63          <div class=\"dropdown\">\n   64:             <a href=\"#\" class=\"btn btn-default btn-sm dropdown-toggle\" data-toggle=\"dropdown\" data-hover=\"dropdown\" title=\"Search Contact\"><i class=\"fa fa-search\"></i></a>\n   65              <ul class=\"dropdown-menu contact_menu\" role=\"menu\">\n   66                  <li><a><input href=\"#\" type=\"email\" placeholder=\"Search\"/></a></li>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web_editor\\views\\editor.xml:\n   40          'module/Codeview', 'module/DragAndDrop', 'module/Fullscreen', 'module/Handle',\n   41          'module/HelpDialog', 'module/ImageDialog', 'module/LinkDialog', 'module/Popover',\n   42:         'module/Statusbar', 'module/Toolbar', 'Renderer', 'EventHandler', 'defaults', 'summernote']\" />\n   43      <t t-foreach=\"summer_js_files\" t-as=\"file\">\n   44          <script>odoo.website_next_define = 'summernote/<t t-esc=\"file\" />';</script>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web_editor\\views\\iframe.xml:\n   44                          var token = \"<t t-esc=\"request.csrf_token(None)\"/>\";\n   45                          require('web.core').csrf_token = token;\n   46:                         require('qweb').default_dict.csrf_token = token;\n   47                      });\n   48                  }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web_kanban\\static\\src\\xml\\web_kanban.xml:\n   53              <input type=\"text\" placeholder=\"Add\"/>\n   54              <button class=\"btn btn-sm btn-primary o_kanban_add\">Add</button>\n   55:             <button class=\"btn btn-sm btn-default o_kanban_cancel\">Discard</button>\n   56          </div>\n   57      </div>\n   ..\n   66          <input type=\"text\" placeholder=\"Add\"/>\n   67          <button class=\"btn btn-sm btn-primary o_kanban_add\">Add</button>\n   68:         <button class=\"btn btn-sm btn-default o_kanban_cancel\">Discard</button>\n   69      </div>\n   70  </t>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web_planner\\models\\web_planner.py:\n   31      tooltip_planner = fields.Html(string='Planner Tooltips', translate=True)\n   32      planner_application = fields.Selection('_get_planner_application', string='Planner Application', required=True)\n   33:     active = fields.Boolean(string=\"Active\", default=True, help=\"If the active field is set to False, it will allow you to hide the planner. This change requires a refreshing a your page.\")\n   34  \n   35      @api.model\n   ..\n   42          planner_find_method_name = '_prepare_%s_data' % planner_app\n   43          if hasattr(self, planner_find_method_name):\n   44:             values.update(getattr(self, planner_find_method_name)()) # update the default value\n   45          return self.env['ir.ui.view'].browse(template_id).render(values=values)\n   46  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web_planner\\views\\web_planner_views.xml:\n   33          <field name='view_mode'>tree</field>\n   34          <field name=\"view_id\" ref=\"web_planner_view_tree\"/>\n   35:         <field name=\"context\">{'search_default_active': True}</field>\n   36          <field name=\"search_view_id\" ref=\"web_planner_view_search\"/>\n   37      </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web_settings_dashboard\\controllers\\main.py:\n    5  from openerp.exceptions import AccessError\n    6  from openerp.http import request\n    7: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT\n    8  \n    9  \n   ..\n   40          # See update.py for this computation\n   41          limit_date = datetime.now() - timedelta(15)\n   42:         enterprise_users = request.env['res.users'].search_count([(\"login_date\", \">=\", limit_date.strftime(DEFAULT_SERVER_DATETIME_FORMAT)), ('share', '=', False)])\n   43  \n   44          return {\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web_settings_dashboard\\models\\res_users.py:\n   19          # Process new email addresses : create new users\n   20          for email in new_emails:\n   21:             default_values = {'login': email, 'name': email.split('@')[0], 'email': email, 'active': True}\n   22:             user = self.with_context(signup_valid=True).create(default_values)\n   23  \n   24          return True\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\web_tip\\web_tip.py:\n   23      highlight_selector = fields.Char('Highlight selector', help='CSS selector for the element to highlight')\n   24      end_selector = fields.Char('End selector', help='CSS selector used to end the tip')\n   25:     end_event = fields.Char('End event', help='Event to end the tip', default='click')\n   26:     placement = fields.Char('Placement', help='Popover placement, bottom, top, left or right', default='auto')\n   27      user_ids = fields.Many2many('res.users', string='Consumed by')\n   28      is_consumed = fields.Boolean(string='Tip consumed', compute='_is_consumed')\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website\\controllers\\main.py:\n   47      #------------------------------------------------------\n   48      # Login - overwrite of the web login so that regular users are redirected to the backend \n   49:     # while portal users are redirected to the frontend by default\n   50      #------------------------------------------------------\n   51      @http.route(website=True, auth=\"public\")\n   ..\n   62      @http.route('/website/lang/<lang>', type='http', auth=\"public\", website=True, multilang=False)\n   63      def change_lang(self, lang, r='/', **kwargs):\n   64:         if lang == 'default':\n   65:             lang = request.website.default_lang_code\n   66              r = '/%s%s' % (lang, r or '/')\n   67          redirect = werkzeug.utils.redirect(r or ('/%s' % lang), 303)\n   ..\n  117          if sitemap:\n  118              # Check if stored version is still valid\n  119:             server_format = openerp.tools.misc.DEFAULT_SERVER_DATETIME_FORMAT\n  120              create_date = datetime.datetime.strptime(sitemap[0]['create_date'], server_format)\n  121              delta = datetime.datetime.now() - create_date\n  ...\n  224      @http.route('/website/customize_template_get', type='json', auth='user', website=True)\n  225      def customize_template_get(self, key, full=False, bundles=False):\n  226:         \"\"\" Get inherit view's informations of the template ``key``. By default, only\n  227          returns ``customize_show`` templates (which can be active or not), if\n  228          ``full=True`` returns inherit view's informations of the template ``key``.\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website\\data\\data.xml:\n    2  <openerp>\n    3      <data noupdate=\"1\">\n    4:         <record id=\"default_website\" model=\"website\">\n    5              <field name=\"name\">www.openerp.com</field>\n    6              <field name=\"company_id\" ref=\"base.main_company\"/>\n    7              <field name=\"language_ids\" eval=\"[(6, 0, [ ref('base.lang_en')])]\"/>\n    8:             <field name=\"default_lang_id\" ref=\"base.lang_en\"/>\n    9              <field name=\"user_id\" ref=\"base.public_user\"/>\n   10          </record>\n   ..\n   12          <record id=\"main_menu\" model=\"website.menu\">\n   13              <field name=\"name\">Top Menu</field>\n   14:             <field name=\"website_id\" ref=\"default_website\"/>\n   15          </record>\n   16  \n   ..\n   20              <field name=\"parent_id\" ref=\"website.main_menu\"/>\n   21              <field name=\"sequence\" type=\"int\">10</field>\n   22:             <field name=\"website_id\" ref=\"default_website\"/>\n   23          </record>\n   24  \n   ..\n   28              <field name=\"parent_id\" ref=\"website.main_menu\"/>\n   29              <field name=\"sequence\" type=\"int\">60</field>\n   30:             <field name=\"website_id\" ref=\"default_website\"/>\n   31          </record>\n   32  \n   ..\n   49              <field name=\"view_type\">form</field>\n   50              <field name=\"view_mode\">kanban,form</field>\n   51:             <field name=\"context\" eval=\"'{\\'search_default_category_id\\':'+str(ref('base.module_category_website'))+'}'\"/>\n   52              <field name=\"help\" type=\"html\">\n   53                <p><b>No website module found!</b></p>\n   ..\n   61              <field name=\"view_type\">form</field>\n   62              <field name=\"view_mode\">kanban,form</field>\n   63:             <field name=\"context\" eval=\"'{\\'search_default_category_id\\':'+str(ref('base.module_category_theme'))+'}'\"/>\n   64              <field name=\"help\" type=\"html\">\n   65                <p><b>No theme module found!</b></p>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website\\data\\demo.xml:\n    3      <data>\n    4  \n    5:         <record id=\"default_website\" model=\"website\">\n    6              <field name=\"social_twitter\">https://twitter.com/Odoo</field>\n    7              <field name=\"social_facebook\">https://www.facebook.com/Odoo</field>\n    .\n  105                      <div class=\"form-group\">\n  106                          <div class=\"col-sm-offset-2 col-sm-10\">\n  107:                             <button type=\"submit\" class=\"btn btn-default btn-primary\">\n  108                                  Send <span class=\"fa fa-long-arrow-right\"/>\n  109                              </button>\n  ...\n  143              <field name=\"social_linkedin\">https://www.linkedin.com/company/odoo</field>\n  144              <field name=\"language_ids\" eval=\"[(6, 0, [ ref('base.lang_en')])]\"/>\n  145:             <field name=\"default_lang_id\" ref=\"base.lang_en\"/>\n  146          </record>\n  147  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website\\data\\web_planner_data.xml:\n  852                                  Use the link in the footer of your website (when logged in) to add\n  853                                  languages from the available list. Also, you can change the\n  854:                                 default language in <a t-att-href=\"prepare_backend_url('website.action_website_configuration')\">Settings > Website</a>\n  855                                  </p>\n  856                              </div>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website\\models\\ir_http.py:\n  137                  preferred_lang = ((cook_lang if cook_lang in langs else False)\n  138                                    or self.get_nearest_lang(request.lang)\n  139:                                   or request.website.default_lang_code)\n  140  \n  141                  is_a_bot = self.is_a_bot()\n  142  \n  143                  request.lang = request.context['lang'] = nearest_lang or preferred_lang\n  144:                 # if lang in url but not the displayed or default language --> change or remove\n  145:                 # or no lang in url, and lang to dispay not the default language --> add lang\n  146                  # and not a POST request\n  147:                 # and not a bot or bot but default lang in url\n  148:                 if ((url_lang and (url_lang != request.lang or url_lang == request.website.default_lang_code))\n  149:                         or (not url_lang and request.website_multilang and request.lang != request.website.default_lang_code)\n  150                          and request.httprequest.method != 'POST') \\\n  151:                         and (not is_a_bot or (url_lang and url_lang == request.website.default_lang_code)):\n  152                      if url_lang:\n  153                          path.pop(1)\n  154:                     if request.lang != request.website.default_lang_code:\n  155                          path.insert(1, request.lang)\n  156                      path = '/'.join(path) or '/'\n  ...\n  162                      path.pop(1)\n  163                      return self.reroute('/'.join(path) or '/')\n  164:             if path[1] == request.website.default_lang_code:\n  165                  request.context['edit_translations'] = False\n  166              if not request.context.get('tz'):\n  ...\n  228              current_path = werkzeug.url_unquote_plus(request.httprequest.path)\n  229              if generated_path != current_path:\n  230:                 if request.lang != request.website.default_lang_code:\n  231                      path = '/' + request.lang + path\n  232                  if request.httprequest.query_string:\n  ...\n  298              return werkzeug.wrappers.Response(html, status=code, content_type='text/html;charset=utf-8')\n  299  \n  300:     def binary_content(self, xmlid=None, model='ir.attachment', id=None, field='datas', unique=False, filename=None, filename_field='datas_fname', download=False, mimetype=None, default_mimetype='application/octet-stream', env=None):\n  301          env = env or request.env\n  302          obj = None\n  ...\n  308              if env[obj._name].sudo().search([('id', '=', obj.id), ('website_published', '=', True)]):\n  309                  env = env(user=openerp.SUPERUSER_ID)\n  310:         return super(ir_http, self).binary_content(xmlid=xmlid, model=model, id=id, field=field, unique=unique, filename=filename, filename_field=filename_field, download=download, mimetype=mimetype, default_mimetype=default_mimetype, env=env)\n  311  \n  312  class ModelConverter(ir.ir_http.ModelConverter):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website\\models\\ir_ui_view.py:\n   22      }\n   23  \n   24:     _defaults = {\n   25          'page': False,\n   26          'customize_show': False,\n   ..\n  149  \n  150          editable = request.website.is_publisher()\n  151:         translatable = editable and context.get('lang') != request.website.default_lang_code\n  152          editable = not translatable and editable\n  153  \n  ...\n  159              res_company=company,\n  160              user_id=self.pool.get(\"res.users\").browse(cr, uid, uid),\n  161:             default_lang_code=request.website.default_lang_code,\n  162              languages=request.website.get_languages(),\n  163              translatable=translatable,\n  ...\n  168  \n  169      def customize_template_get(self, cr, uid, key, full=False, bundles=False, context=None):\n  170:         \"\"\" Get inherit view's informations of the template ``key``. By default, only\n  171          returns ``customize_show`` templates (which can be active or not), if\n  172          ``full=True`` returns inherit view's informations of the template ``key``.\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website\\models\\res_config.py:\n   11  \n   12          'language_ids': fields.related('website_id', 'language_ids', type='many2many', relation='res.lang', string='Languages'),\n   13:         'default_lang_id': fields.related('website_id', 'default_lang_id', type='many2one', relation='res.lang', string='Default language'),\n   14:         'default_lang_code': fields.related('website_id', 'default_lang_code', type=\"char\", string=\"Default language code\"),\n   15          'google_analytics_key': fields.related('website_id', 'google_analytics_key', type=\"char\", string='Google Analytics Key'),\n   16          \n   ..\n   47          return config_id\n   48  \n   49:     _defaults = {\n   50          'website_id': lambda self,cr,uid,c: self.pool.get('website').search(cr, uid, [], context=c)[0],\n   51      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website\\models\\website.py:\n   49                  if force_lang:\n   50                      ps[1] = lang\n   51:                 # Remove the default language unless it's explicitly provided\n   52:                 elif ps[1] == request.website.default_lang_code:\n   53                      ps.pop(1)\n   54              # Insert the context language or the provided language\n   55:             elif lang != request.website.default_lang_code or force_lang:\n   56                  ps.insert(1, lang)\n   57              location = '/'.join(ps)\n   ..\n  121  _UNSLUG_RE = re.compile(r'(?:(\\w{1,2}|\\w[A-Za-z0-9-_]+?\\w)-)?(-?\\d+)(?=$|/)')\n  122  \n  123: DEFAULT_CDN_FILTERS = [\n  124      \"^/[^/]+/static/\",\n  125      \"^/web/(css|js)/\",\n  ...\n  158          'company_id': fields.many2one('res.company', string=\"Company\"),\n  159          'language_ids': fields.many2many('res.lang', 'website_lang_rel', 'website_id', 'lang_id', 'Languages'),\n  160:         'default_lang_id': fields.many2one('res.lang', string=\"Default language\"),\n  161:         'default_lang_code': fields.related('default_lang_id', 'code', type=\"char\", string=\"Default language code\", store=True),\n  162          'social_twitter': fields.char('Twitter Account'),\n  163          'social_facebook': fields.char('Facebook Account'),\n  ...\n  175          'menu_id': fields.function(_get_menu, relation='website.menu', type='many2one', string='Main Menu')\n  176      }\n  177:     _defaults = {\n  178          'user_id': lambda self,cr,uid,c: self.pool['ir.model.data'].xmlid_to_res_id(cr, openerp.SUPERUSER_ID, 'base.public_user'),\n  179          'company_id': lambda self,cr,uid,c: self.pool['ir.model.data'].xmlid_to_res_id(cr, openerp.SUPERUSER_ID,'base.main_company'),\n  ...\n  181          'cdn_activated': False,\n  182          'cdn_url': '//localhost:8069/',\n  183:         'cdn_filters': '\\n'.join(DEFAULT_CDN_FILTERS),\n  184      }\n  185  \n  ...\n  192          return super(website, self).write(cr, uid, ids, vals, context)\n  193  \n  194:     def new_page(self, cr, uid, name, template='website.default_page', ispage=True, context=None):\n  195          context = context or {}\n  196          imd = self.pool.get('ir.model.data')\n  ...\n  353          if req is None:\n  354              req = request.httprequest\n  355:         default = self.get_current_website(cr, uid, context=context).default_lang_code\n  356          uri = req.path\n  357          if req.query_string:\n  ...\n  359          shorts = []\n  360          for code, name in self.get_languages(cr, uid, ids, context=context):\n  361:             lg_path = ('/' + code) if code != default else ''\n  362              lg = code.split('_')\n  363              shorts.append(lg[0])\n  ...\n  480              return False\n  481  \n  482:         # dont't list routes without argument having no default value or converter\n  483          spec = inspect.getargspec(endpoint.method.original_func)\n  484  \n  485:         # remove self and arguments having a default value\n  486:         defaults_count = len(spec.defaults or [])\n  487:         args = spec.args[1:(-defaults_count or None)]\n  488  \n  489          # check that all args have a converter\n  ...\n  495          controllers for dynamic pages (e.g. blog).\n  496  \n  497:         By default, returns template views marked as pages.\n  498  \n  499          :param str query_string: a (user-provided) string, fetches pages\n  ...\n  577      }\n  578  \n  579:     def __defaults_sequence(self, cr, uid, context):\n  580          menu = self.search_read(cr, uid, [(1,\"=\",1)], [\"sequence\"], limit=1, order=\"sequence DESC\", context=context)\n  581          return menu and menu[0][\"sequence\"] or 0\n  582  \n  583:     _defaults = {\n  584          'url': '',\n  585:         'sequence': __defaults_sequence,\n  586          'new_window': False,\n  587      }\n  ...\n  674      }\n  675  \n  676:     def default_get(self, cr, uid, fields, context=None):\n  677          if context is None:\n  678              context = {}\n  679:         defaults = super(base_language_install, self).default_get(cr, uid, fields, context)\n  680          website_id = context.get('params', {}).get('website_id')\n  681          if website_id:\n  682:             if 'website_ids' not in defaults:\n  683:                 defaults['website_ids'] = []\n  684:             defaults['website_ids'].append(website_id)\n  685:         return defaults\n  686  \n  687      def lang_install(self, cr, uid, ids, context=None):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website\\static\\src\\xml\\website.gallery.xml:\n   25                              </div>\n   26                              <div class=\"form-group hidden\">\n   27:                                 <input type=\"submit\" value=\"Upload images\" class=\"btn btn-default\" />\n   28                              </div>\n   29                          </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website\\static\\src\\xml\\website.seo.xml:\n   46                                  <div class=\"row mt8\">\n   47                                      <div class=\"col-md-10 text-center\">\n   48:                                         <button data-action=\"add\" class=\"btn btn-default\" type=\"button\">Add</button>\n   49                                      </div>\n   50                                  </div>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website\\static\\src\\xml\\website.xml:\n   99              <t t-foreach=\"_.keys(dependencies)\" t-as=\"type\">\n  100                  <div class=\"panel-group\" role=\"tablist\">\n  101:                     <div class=\"panel panel-default\">\n  102                        <div class=\"panel-heading\" role=\"tab\" >\n  103                          <h4 class=\"panel-title\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website\\views\\res_config.xml:\n   75                                  </div>\n   76                              </div>\n   77:                             <label for=\"default_lang_id\"/>\n   78:                             <div name=\"default_lang_id\">\n   79                                  <div>\n   80:                                     <div name=\"default_lang_id\" class=\"oe_inline\">\n   81:                                         <field name=\"default_lang_id\" widget=\"selection\"/>\n   82                                      </div>\n   83                                  </div>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website\\views\\snippets.xml:\n  292  \n  293  <template id=\"s_panel\" name=\"Panel\">\n  294:     <div class=\"panel panel-default o_panel s_panel\">\n  295          <div class=\"panel-heading \">\n  296              <h3 class=\"panel-title\">Feature Title</h3>\n  ...\n  513              <h2 class=\"page-header\">Point of Sale Questions <small>v7</small></h2>\n  514              <div class=\"panel-group\" role=\"tablist\">\n  515:                 <div class=\"panel panel-default\">\n  516                      <div class=\"panel-heading\" role=\"tab\" data-toggle=\"collapse\">\n  517                          <h4 class=\"panel-title\">\n  ...\n  533                      </div>\n  534                  </div>\n  535:                 <div class=\"panel panel-default\">\n  536                      <div class=\"panel-heading\" role=\"tab\" data-toggle=\"collapse\">\n  537                          <h4 class=\"panel-title\">\n  ...\n  553                      </div>\n  554                  </div>\n  555:                 <div class=\"panel panel-default\">\n  556                      <div class=\"panel-heading\" role=\"tab\" data-toggle=\"collapse\">\n  557                          <h4 class=\"panel-title\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website\\views\\website_templates.xml:\n  138                      var token = \"<t t-esc=\"request.csrf_token(None)\"/>\";\n  139                      require('web.core').csrf_token = token;\n  140:                     require('qweb').default_dict.csrf_token = token;\n  141                  });\n  142              </script>\n  ...\n  147              <div id=\"wrapwrap\">\n  148                  <header>\n  149:                     <div class=\"navbar navbar-default navbar-static-top\">\n  150                          <div class=\"container\">\n  151                              <div class=\"navbar-header\">\n  ...\n  362            <a\n  363              t-att-href=\"url_for(request.httprequest.path + '?' + keep_query(), lang=lg[0])\"\n  364:             t-att-data-default-lang=\"(editable or translatable) and 'true' if website and lg[0] == website.default_lang_code else None\"\n  365              t-att-data-lang=\"lg[0]\"\n  366              class=\"js_change_lang\"\n  ...\n  379  </template>\n  380  \n  381: <template id=\"footer_default\" inherit_id=\"website.footer_custom\" customize_show=\"True\" name=\"Automatic Footer\">\n  382      <xpath expr=\"//div[@id='footer']\" position=\"replace\">\n  383          <div id=\"footer\" class=\"container hidden-print\">\n  ...\n  437              <button class=\"btn btn-danger js_publish_btn\">Not Published</button>\n  438              <button class=\"btn btn-success js_publish_btn\">Published</button>\n  439:             <button type=\"button\" t-attf-class=\"btn btn-default dropdown-toggle\" t-att-id=\"'dopprod-%s' % object.id\" data-toggle=\"dropdown\">\n  440                  <span class=\"caret\"></span>\n  441              </button>\n  ...\n  635  </template>\n  636  \n  637: <template id=\"default_page\">\n  638      <t t-call=\"website.layout\">\n  639        <div id=\"wrap\" class=\"oe_structure oe_empty\"></div>\n  ...\n  648                  <a class=\"btn btn-primary\" t-attf-href=\"/website/add/#{ path }#{ from_template and '?template=%s' % from_template }\">Create Page</a>\n  649              </div>\n  650:             <div class=\"text-center text-muted\">Edit the content below this line to adapt the default \"page not found\" page.</div>\n  651          </div>\n  652          <hr/>\n  ...\n  670  <template id=\"http_error_debug\">\n  671      <div class=\"container panel-group mb32 mt32\" id=\"debug_infos\">\n  672:         <div class=\"panel panel-default\" t-if=\"exception\">\n  673              <div class=\"panel-heading\">\n  674                  <h4 class=\"panel-title\">\n  ...\n  688              </div>\n  689          </div>\n  690:         <div class=\"panel panel-default\" t-if=\"qweb_exception\">\n  691              <div class=\"panel-heading\">\n  692                  <h4 class=\"panel-title\">\n  ...\n  712              </div>\n  713          </div>\n  714:         <div class=\"panel panel-default\" t-if=\"traceback\">\n  715              <div class=\"panel-heading\">\n  716                  <h4 class=\"panel-title\">\n  ...\n  836              <div id=\"wrapwrap\">\n  837                  <header>\n  838:                     <div class=\"navbar navbar-default navbar-static-top\">\n  839                          <div class=\"container\">\n  840                              <div class=\"collapse navbar-collapse navbar-top-collapse\">\n  ...\n 1007          </div>\n 1008          <span class=\"input-group-btn\">\n 1009:            <button type=\"submit\" class=\"btn btn-default oe_search_button\"><i class=\"fa fa-search\"/></button>\n 1010          </span>\n 1011      </div>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website\\views\\website_views.xml:\n    2  <openerp>\n    3      <data noupdate=\"1\">\n    4:         <record id=\"default_website\" model=\"website\">\n    5              <field name=\"name\">localhost</field>\n    6              <field name=\"domain\">localhost</field>\n    7              <field name=\"company_id\" ref=\"base.main_company\"/>\n    8              <field name=\"language_ids\" eval=\"[(6, 0, [ ref('base.lang_en')])]\"/>\n    9:             <field name=\"default_lang_id\" ref=\"base.lang_en\"/>\n   10          </record>\n   11      </data>\n   ..\n   46                              <field name=\"company_id\" groups=\"base.group_multi_company\"/>\n   47                              <field name=\"language_ids\" widget=\"many2many_checkboxes\"/>\n   48:                             <field name=\"default_lang_id\" widget=\"selection\"/>\n   49                          </group>\n   50                      </div>\n   ..\n   60                      <field name=\"name\"/>\n   61                      <field name=\"company_id\" groups=\"base.group_multi_company\"/>\n   62:                     <field name=\"default_lang_id\"/>\n   63                  </tree>\n   64              </field>\n   ..\n   80              <field name=\"res_model\">website.menu</field>\n   81              <field name=\"view_mode\">list</field>\n   82:             <field name=\"context\">{'search_default_my_websites':1}</field>\n   83          </record>\n   84  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_blog\\controllers\\main.py:\n   25          path = path or self.path\n   26          for k, v in self.args.items():\n   27:             kw.setdefault(k, v)\n   28          path_args = set(path_args or []).union(self.path_args)\n   29          paths, fragments = [], []\n   ..\n   57              groupby=\"create_date\", orderby=\"create_date desc\", context=request.context)\n   58          for group in groups:\n   59:             begin_date = datetime.datetime.strptime(group['__domain'][0][2], tools.DEFAULT_SERVER_DATETIME_FORMAT).date()\n   60:             end_date = datetime.datetime.strptime(group['__domain'][1][2], tools.DEFAULT_SERVER_DATETIME_FORMAT).date()\n   61:             group['date_begin'] = '%s' % datetime.date.strftime(begin_date, tools.DEFAULT_SERVER_DATE_FORMAT)\n   62:             group['date_end'] = '%s' % datetime.date.strftime(end_date, tools.DEFAULT_SERVER_DATE_FORMAT)\n   63          return groups\n   64  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_blog\\data\\website_blog_data.xml:\n   11              <field name=\"parent_id\" ref=\"website.main_menu\"/>\n   12              <field name=\"sequence\" type=\"int\">40</field>\n   13:             <field name=\"website_id\" ref=\"website.default_website\"/>\n   14          </record>\n   15  \n   ..\n   75              <field name=\"name\">Published Post</field>\n   76              <field name=\"res_model\">blog.blog</field>\n   77:             <field name=\"default\" eval=\"True\"/>\n   78              <field name=\"description\">Published Post</field>\n   79          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_blog\\data\\website_blog_demo.xml:\n  193                  website and product database.\n  194              </p><p>\n  195:                 As it comes, there is a default website based on Bootstrap\n  196                  3, the latest industry standard for rapid development of\n  197                  multi-device websites backed by Twitter, so can be directly\n  198                  integrated with many web tools and works across all devices\n  199:                 by default.\n  200              </p>\n  201          </section>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_blog\\models\\website_blog.py:\n   82          res = {}\n   83          for blog_post in self.browse(cr, uid, ids, context=context):\n   84:             age = datetime.now() - datetime.strptime(blog_post.create_date, tools.DEFAULT_SERVER_DATETIME_FORMAT)\n   85              res[blog_post.id] = blog_post.visits * (0.5+random.random()) / max(3, age.days)\n   86          return res\n   87  \n   88:     def _default_content(self, cr, uid, context=None):\n   89          return '''  <div class=\"container\">\n   90                          <section class=\"mt16 mb16\">\n   91:                             <p class=\"o_default_snippet_text\">''' + _(\"Start writing here...\") + '''</p>\n   92                          </section>\n   93                      </div> '''\n   ..\n  138      }\n  139  \n  140:     _defaults = {\n  141          'name': '',\n  142:         'content': _default_content,\n  143          'cover_properties': '{\"background-image\": \"none\", \"background-color\": \"oe_none\", \"opacity\": \"0.6\", \"resize_class\": \"\"}',\n  144          'author_id': lambda self, cr, uid, ctx=None: self.pool['res.users'].browse(cr, uid, uid, context=ctx).partner_id.id,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_blog\\views\\website_blog_templates.xml:\n   21  \n   22  <!-- Layout add nav and footer -->\n   23: <template id=\"header_footer_custom\" inherit_id=\"website.footer_default\" name=\"Footer News Blog Link\">\n   24      <xpath expr=\"//div[@id='info']/ul\" position=\"inside\">\n   25          <li><a t-attf-href=\"/blog/%(website_blog.blog_blog_1)d\">News</a></li>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_blog\\views\\website_blog_views.xml:\n   72                          </group>\n   73                          <group string=\"Technical\" groups=\"base.group_no_one\">\n   74:                             <field name=\"write_uid\" context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'base.group_website_designer']}\"/>\n   75                              <field name=\"write_date\"/>\n   76                          </group>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_crm\\data\\website_crm_data.xml:\n    3      <data>\n    4          <record id=\"crm.model_crm_lead\" model=\"ir.model\">         \n    5:             <field name=\"website_form_default_field_id\" ref=\"crm.field_crm_lead_description\" />\n    6              <field name=\"website_form_access\">True</field>\n    7              <field name=\"website_form_label\">Create a lead</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_crm\\models\\crm_lead.py:\n    7          values['medium_id'] = (\n    8                  values.get('medium_id') or\n    9:                 self.default_get(['medium_id']).get('medium_id') or\n   10                  self.sudo().env['ir.model.data'].xmlid_to_res_id('utm.utm_medium_website')\n   11          )\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_crm_claim\\portal_claim.py:\n    9      _inherit = \"crm.claim\"\n   10  \n   11:     def _get_default_partner_id(self, cr, uid, context=None):\n   12:         \"\"\" Gives default partner_id \"\"\"\n   13          if context is None:\n   14              context = {}\n   ..\n   16              user = self.pool.get('res.users').browse(cr, uid, uid, context=context)\n   17              # Special case for portal users, as they are not allowed to call name_get on res.partner\n   18:             # We save this call for the web client by returning it in default get\n   19              return self.pool['res.partner'].name_get(cr, SUPERUSER_ID, [user.partner_id.id], context=context)[0]\n   20          return False\n   21  \n   22:     _defaults = {\n   23:         'partner_id': lambda s, cr, uid, c: s._get_default_partner_id(cr, uid, c),\n   24      }\n   25  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_crm_partner_assign\\models\\res_partner.py:\n    8      _inherit = ['res.partner.grade', 'website.published.mixin']\n    9  \n   10:     _defaults = {\n   11          'website_published': True,\n   12      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_crm_partner_assign\\views\\website_crm_partner_assign.xml:\n    4  \n    5  <!-- Layout add nav and footer -->\n    6: <template id=\"footer_custom\" inherit_id=\"website.footer_default\" name=\"Footer Partners Link\">\n    7      <xpath expr=\"//div[@id='info']/ul\" position=\"inside\">\n    8          <li><a href=\"/partners\">Resellers</a></li>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_customer\\models\\website_customer.py:\n   18  \n   19      def get_selection_class(self, cr, uid, context=None):\n   20:         classname = ['default', 'primary', 'success', 'warning', 'danger']\n   21          return [(x, str.title(x)) for x in classname]\n   22  \n   ..\n   27          'active': fields.boolean('Active'),\n   28      }\n   29:     _defaults = {\n   30          'active': True,\n   31          'website_published': True,\n   32:         'classname': 'default',\n   33      }\n   34  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_customer\\views\\website_customer.xml:\n    4  \n    5  <!-- Layout add nav and footer -->\n    6: <template id=\"footer_custom\" inherit_id=\"website.footer_default\" name=\"Footer Customer References Link\">\n    7      <xpath expr=\"//div[@id='info']/ul\" position=\"inside\">\n    8          <li><a href=\"/customers\">Our References</a></li>\n    .\n  162  <template id=\"implemented_by_block\" name=\"Partner Implemented By Block\">\n  163          <t t-if=\"partner.assigned_partner_id and partner.assigned_partner_id.website_published\">\n  164:             <div class=\"panel panel-default\">\n  165                  <div class=\"panel-heading\">\n  166                      <h4>Implemented By</h4>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_event\\controllers\\main.py:\n   23          country_obj = request.registry['res.country']\n   24  \n   25:         searches.setdefault('date', 'all')\n   26:         searches.setdefault('type', 'all')\n   27:         searches.setdefault('country', 'all')\n   28  \n   29          domain_search = {}\n   30  \n   31          def sdn(date):\n   32:             return date.replace(hour=23, minute=59, second=59).strftime(tools.DEFAULT_SERVER_DATETIME_FORMAT)\n   33  \n   34          def sd(date):\n   35:             return date.strftime(tools.DEFAULT_SERVER_DATETIME_FORMAT)\n   36          today = datetime.today()\n   37          dates = [\n   ..\n  169              # page not found\n  170              values['path'] = re.sub(r\"^website_event\\.\", '', page)\n  171:             values['from_template'] = 'website_event.default_page'  # .strip('website_event.')\n  172              page = 'website.page_404'\n  173  \n  ...\n  214      def get_formated_date(self, event):\n  215          context = request.context\n  216:         start_date = datetime.strptime(event.date_begin, tools.DEFAULT_SERVER_DATETIME_FORMAT).date()\n  217:         end_date = datetime.strptime(event.date_end, tools.DEFAULT_SERVER_DATETIME_FORMAT).date()\n  218          month = babel.dates.get_month_names('abbreviated', locale=context.get('lang', 'en_US'))[start_date.month]\n  219          return _('%(month)s %(start_day)s%(end_day)s') % {\n  ...\n  266                  global_values[field_name] = value\n  267              else:\n  268:                 registrations.setdefault(counter, dict())[field_name] = value\n  269          for key, value in global_values.iteritems():\n  270              for registration in registrations.values():\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_event\\data\\event_data.xml:\n   22              <field name=\"name\">Event published</field>\n   23              <field name=\"res_model\">event.event</field>\n   24:             <field name=\"default\" eval=\"False\"/>\n   25              <field name=\"description\">Event published</field>\n   26          </record>\n   ..\n   28              <field name=\"name\">Event unpublished</field>\n   29              <field name=\"res_model\">event.event</field>\n   30:             <field name=\"default\" eval=\"False\"/>\n   31              <field name=\"description\">Event unpublished</field>\n   32          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_event\\models\\event.py:\n   12      _inherit = ['event.event', 'website.seo.metadata', 'website.published.mixin']\n   13  \n   14:     twitter_hashtag = fields.Char('Twitter Hashtag', default=lambda self: self._default_hashtag())\n   15      website_published = fields.Boolean(track_visibility='onchange')\n   16      # TDE TODO FIXME: when website_mail/mail_thread.py inheritance work -> this field won't be necessary\n   ..\n   31          return res\n   32  \n   33:     def _default_hashtag(self):\n   34          return re.sub(\"[- \\\\.\\\\(\\\\)\\\\@\\\\#\\\\&]+\", \"\", self.env.user.company_id.name).lower()\n   35  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_event\\views\\website_event.xml:\n   18  \n   19  <!-- Layout add nav and footer -->\n   20: <template id=\"header_footer_custom\" inherit_id=\"website.footer_default\" name=\"Footer Events Link\">\n   21      <xpath expr=\"//ul[@id='products']\" position=\"inside\">\n   22          <li><a href=\"/event\">Events</a></li>\n   ..\n  258  </template>\n  259  \n  260: <template id=\"default_page\">\n  261      <t t-call=\"website.layout\">\n  262          <div class=\"oe_structure oe_empty\"/>\n  ...\n  328              <div class=\"clearfix\"/>\n  329  \n  330:             <div class=\"panel panel-default\" t-if=\"event.address_id\">\n  331                  <div class=\"panel-heading\">\n  332                      <h4>Where</h4>\n  ...\n  343              </div>\n  344  \n  345:             <div class=\"panel panel-default\">\n  346                  <div class=\"panel-heading\">\n  347                      <h4>When</h4>\n  ...\n  353              </div>\n  354  \n  355:             <div class=\"panel panel-default\" t-if=\"event.organizer_id\">\n  356                  <div class=\"panel-heading\">\n  357                      <h4>Organizer</h4>\n  ...\n  363              </div>\n  364  \n  365:             <div class=\"panel panel-default\">\n  366                  <div class=\"panel-heading\">\n  367                      <h4>Social Stream</h4>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_event_questions\\models\\event.py:\n   43      event_id = fields.Many2one('event.event', required=True, ondelete='cascade')\n   44      answer_ids = fields.One2many('event.answer', 'question_id', \"Answers\", required=True)\n   45:     sequence = fields.Integer(default=10)\n   46      is_individual = fields.Boolean('Ask each attendee',\n   47                                     help=\"If True, this question will be asked for every attendee of a reservation. If \"\n   ..\n   55      name = fields.Char('Answer', required=True, translate=True)\n   56      question_id = fields.Many2one('event.question', required=True, ondelete='cascade')\n   57:     sequence = fields.Integer(default=10)\n   58  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_event_sale\\controllers\\main.py:\n   62          try:\n   63              res_id = request.env.ref('event_sale.product_product_event').id\n   64:             context['default_event_ticket_ids'] = [[0, 0, {\n   65                  'name': _('Subscription'),\n   66                  'product_id': res_id,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_event_track\\controllers\\event.py:\n   26          dates = []                      # [ (date, {}) ]\n   27          for track in event_track_ids:\n   28:             locations.setdefault(track.location_id or False, [])\n   29  \n   30          forcetr = True\n   ..\n   33              end_date = start_date + datetime.timedelta(hours = (track.duration or 0.5))\n   34              location = track.location_id or False\n   35:             locations.setdefault(location, [])\n   36  \n   37              # New TR, align all events\n   ..\n   60      @http.route(['''/event/<model(\"event.event\", \"[('show_tracks','=',1)]\"):event>/agenda'''], type='http', auth=\"public\", website=True)\n   61      def event_agenda(self, event, tag=None, **post):\n   62:         days_tracks = collections.defaultdict(lambda: [])\n   63          for track in sorted(event.track_ids, key=lambda x: (x.date, bool(x.location_id))):\n   64              if not track.date: continue\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_event_track\\data\\event_data.xml:\n   21              <field name=\"res_model\">event.event</field>\n   22              <field name=\"description\">New Track Created</field>\n   23:             <field name=\"default\" eval=\"False\"/>\n   24          </record>\n   25  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_event_track\\models\\event.py:\n   33  \n   34      name = fields.Char('Title', required=True, translate=True)\n   35:     user_id = fields.Many2one('res.users', 'Responsible', track_visibility='onchange', default=lambda self: self.env.user)\n   36      partner_id = fields.Many2one('res.partner', 'Proposed by')\n   37      partner_name = fields.Char('Partner Name')\n   ..\n   43      state = fields.Selection([\n   44          ('draft', 'Proposal'), ('confirmed', 'Confirmed'), ('announced', 'Announced'), ('published', 'Published'), ('refused', 'Refused'), ('cancel', 'Cancelled')],\n   45:         'Status', default='draft', required=True, copy=False, track_visibility='onchange')\n   46      description = fields.Html('Track Description', translate=True)\n   47      date = fields.Datetime('Track Date')\n   48:     duration = fields.Float('Duration', digits=(16, 2), default=1.5)\n   49      location_id = fields.Many2one('event.track.location', 'Room')\n   50      event_id = fields.Many2one('event.event', 'Event', required=True)\n   ..\n   53          ('0', 'Low'), ('1', 'Medium'),\n   54          ('2', 'High'), ('3', 'Highest')],\n   55:         'Priority', required=True, default='1')\n   56      image = fields.Binary('Image', compute='_compute_image', store=True, attachment=True)\n   57  \n   ..\n  106          \"\"\" Override read_group to always display all states. \"\"\"\n  107          if groupby and groupby[0] == \"state\":\n  108:             # Default result structure\n  109              # states = self._get_state_list(cr, uid, context=context)\n  110              states = [('draft', 'Proposal'), ('confirmed', 'Confirmed'), ('announced', 'Announced'), ('published', 'Published'), ('cancel', 'Cancelled')]\n  ...\n  117              # Get standard results\n  118              read_group_res = super(event_track, self).read_group(cr, uid, domain, fields, groupby, offset=offset, limit=limit, context=context, orderby=orderby)\n  119:             # Update standard results with default results\n  120              result = []\n  121              for state_value, state_name in states:\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_event_track\\views\\event_backend.xml:\n    8              <field name=\"model\">event.track</field>\n    9              <field name=\"arch\" type=\"xml\">\n   10:                 <kanban default_group_by=\"state\">\n   11                      <templates>\n   12                          <field name=\"color\"/>\n   ..\n  179              <field name=\"view_type\">form</field>\n  180              <field name=\"view_mode\">kanban,tree,form,calendar,graph</field>\n  181:             <field name=\"context\">{'search_default_event_id': active_id, 'default_event_id': active_id, 'group_by': 'state'}</field>\n  182              <field name=\"help\" type=\"html\">\n  183  <p class=\"oe_view_nocontent_create\">\n  ...\n  280              <field name=\"res_model\">event.sponsor</field>\n  281              <field name=\"view_mode\">tree,form</field>\n  282:             <field name=\"context\">{'search_default_event_id': active_id, 'default_event_id': active_id}</field>\n  283          </record>\n  284  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_event_track\\views\\website_event.xml:\n  242                  </div>\n  243                  <div class=\"col-md-4\" id=\"right_column\">\n  244:                     <div class=\"panel panel-default\">\n  245                          <div class=\"panel-heading\">\n  246                              <h4>Practical Info</h4>\n  ...\n  256                      </div>\n  257  \n  258:                     <div class=\"panel panel-default\" t-if=\"False\">\n  259                          <div class=\"panel-heading\">\n  260                              <h4>Documents</h4>\n  ...\n  274  <template id=\"event_track_social\" name=\"Social Widgets\" inherit_id=\"website_event_track.track_view\" active=\"False\" customize_show=\"True\">\n  275      <xpath expr=\"//div[@id='right_column']\" position=\"inside\">\n  276:         <div class=\"panel panel-default\">\n  277              <div class=\"panel-heading\">\n  278                  <h4>Social Stream</h4>\n  ...\n  393                      <div class=\"oe_structure\"/>\n  394                  </div><div class=\"col-md-3 col-md-offset-1\">\n  395:                     <div class=\"panel panel-default\">\n  396                          <div class=\"panel-heading\">\n  397                              <h4>Talks Types</h4>\n  ...\n  411  \n  412  \n  413:                     <div class=\"panel panel-default\">\n  414                          <div class=\"panel-heading\">\n  415                              <h4>Submission Agreement</h4>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_form\\controllers\\main.py:\n  152          record = request.env[model.model].sudo().create(values)\n  153          if custom or meta:\n  154:             default_field = model.website_form_default_field_id\n  155:             default_field_data = values.get(default_field.name, '')\n  156:             custom_content = (default_field_data + \"\\n\\n\" if default_field_data else '') \\\n  157                             + (self._custom_label + custom + \"\\n\\n\" if custom else '') \\\n  158                             + (self._meta_label + meta if meta else '')\n  159  \n  160:             # If there is a default field configured for this model, use it.\n  161              # If there isn't, put the custom data in a message instead\n  162:             if default_field.name:\n  163:                 if default_field.ttype == 'html' or model.model == 'mail.mail':\n  164                      custom_content = nl2br(custom_content)\n  165:                 record.update({default_field.name: custom_content})\n  166              else:\n  167                  values = {\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_form\\models\\models.py:\n   16  \n   17      website_form_access = fields.Boolean('Allowed to use in forms', help='Enable the form builder feature for this model.')\n   18:     website_form_default_field_id = fields.Many2one('ir.model.fields', 'Field for custom form data', domain=\"[('model', '=', model), ('ttype', '=', 'text')]\", help=\"Specify the field wich will contain meta and custom form fields datas.\")\n   19      website_form_label = fields.Char(\"Label for form action\", help=\"Form action label. Ex: crm.lead could be 'Send an e-mail' and project.issue could be 'Create an Issue'.\")\n   20  \n   ..\n   29          Restriction of \"authorized fields\" (fields which can be used in the\n   30          form builders) to fields which have actually been opted into form\n   31:         builders and are writable. By default no field is writable by the\n   32          form builder.\n   33          \"\"\"\n   ..\n   52              fields_get.pop(val,None)\n   53  \n   54:         # Unrequire fields with default values\n   55:         default_values = model.default_get(fields_get.keys())\n   56:         for field in [f for f in fields_get if f in default_values]:\n   57              fields_get[field]['required'] = False\n   58  \n   ..\n   76                     ' SET website_form_blacklisted=true'\n   77                     ' WHERE website_form_blacklisted IS NULL')\n   78:         # add an SQL-level default value on website_form_blacklisted to that\n   79          # pure-SQL ir.model.field creations (e.g. in _field_create) generate\n   80:         # the right default value for a whitelist (aka fields should be\n   81:         # blacklisted by default)\n   82          cr.execute('ALTER TABLE ir_model_fields '\n   83:                    ' ALTER COLUMN website_form_blacklisted SET DEFAULT true')\n   84  \n   85      @api.model\n   ..\n  108  \n  109      website_form_blacklisted = fields.Boolean(\n  110:         'Blacklisted in web forms', default=True, select=True, # required=True,\n  111          help='Blacklist this field for web forms'\n  112      )\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_forum\\controllers\\main.py:\n  130  \n  131          if not sorting:\n  132:             sorting = forum.default_order\n  133  \n  134          question_count = Post.search_count(domain)\n  ...\n  242              'main_object': question,\n  243              'question': question,\n  244:             'can_bump': (question.forum_id.allow_bump and not question.child_ids and (datetime.today() - datetime.strptime(question.write_date, tools.DEFAULT_SERVER_DATETIME_FORMAT)).days > 9),\n  245              'header': {'question_data': True},\n  246              'filters': filters,\n  ...\n  561      @http.route(['/forum/user/<int:user_id>/avatar'], type='http', auth=\"public\", website=True)\n  562      def user_avatar(self, user_id=0, **post):\n  563:         status, headers, content = binary_content(model='res.users', id=user_id, field='image', default_mimetype='image/png', env=request.env(user=openerp.SUPERUSER_ID))\n  564  \n  565          if not content:\n  ...\n  606              return request.website.render(\"website_forum.private_profile\", values)\n  607  \n  608:         # limit length of visible posts by default for performance reasons, except for the high\n  609          # karma users (not many of them, and they need it to properly moderate the forum)\n  610          post_display_limit = None\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_forum\\data\\forum_data.xml:\n   32              <field name=\"name\">New Answer</field>\n   33              <field name=\"res_model\">forum.post</field>\n   34:             <field name=\"default\" eval=\"True\"/>\n   35              <field name=\"hidden\" eval=\"False\"/>\n   36              <field name=\"description\">New Answer</field>\n   ..\n   39              <field name=\"name\">Answer Edited</field>\n   40              <field name=\"res_model\">forum.post</field>\n   41:             <field name=\"default\" eval=\"False\"/>\n   42              <field name=\"description\">Answer Edited</field>\n   43          </record>\n   ..\n   46              <field name=\"name\">New Question</field>\n   47              <field name=\"res_model\">forum.post</field>\n   48:             <field name=\"default\" eval=\"True\"/>\n   49              <field name=\"description\">New Question</field>\n   50          </record>\n   ..\n   52              <field name=\"name\">Question Edited</field>\n   53              <field name=\"res_model\">forum.post</field>\n   54:             <field name=\"default\" eval=\"False\"/>\n   55              <field name=\"description\">Question Edited</field>\n   56          </record>\n   ..\n   59              <field name=\"name\">New Answer</field>\n   60              <field name=\"res_model\">forum.forum</field>\n   61:             <field name=\"default\" eval=\"True\"/>\n   62              <field name=\"hidden\" eval=\"False\"/>\n   63              <field name=\"parent_id\" eval=\"ref('mt_answer_new')\"/>\n   ..\n   67              <field name=\"name\">New Question</field>\n   68              <field name=\"res_model\">forum.forum</field>\n   69:             <field name=\"default\" eval=\"True\"/>\n   70              <field name=\"hidden\" eval=\"False\"/>\n   71              <field name=\"parent_id\" eval=\"ref('mt_question_new')\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_forum\\models\\forum.py:\n   40  \n   41      @api.model\n   42:     def _get_default_faq(self):\n   43:         fname = modules.get_module_resource('website_forum', 'data', 'forum_default_faq.html')\n   44          with open(fname, 'r') as f:\n   45              return f.read()\n   ..\n   48      # description and use\n   49      name = fields.Char('Forum Name', required=True, translate=True)\n   50:     faq = fields.Html('Guidelines', default=_get_default_faq, translate=True)\n   51      description = fields.Text(\n   52          'Description',\n   53          translate=True,\n   54:         default='This community is for professionals and enthusiasts of our products and services. '\n   55                  'Share and discuss the best content and new marketing ideas, '\n   56                  'build your professional profile and become a better marketer together.')\n   57      welcome_message = fields.Html(\n   58          'Welcome Message',\n   59:         default = \"\"\"<section class=\"bg-info\" style=\"height: 168px;\"><div class=\"container\">\n   60                          <div class=\"row\">\n   61                              <div class=\"col-md-12\">\n   ..\n   68                          </div>\n   69                      </section>\"\"\")\n   70:     default_order = fields.Selection([\n   71          ('create_date desc', 'Newest'),\n   72          ('write_date desc', 'Last Updated'),\n   ..\n   74          ('relevancy desc', 'Relevance'),\n   75          ('child_count desc', 'Answered')],\n   76:         string='Default Order', required=True, default='write_date desc')\n   77:     relevancy_post_vote = fields.Float('First Relevance Parameter', default=0.8, help=\"This formula is used in order to sort by relevance. The variable 'votes' represents number of votes for a post, and 'days' is number of days since the post creation\")\n   78:     relevancy_time_decay = fields.Float('Second Relevance Parameter', default=1.8)\n   79:     default_post_type = fields.Selection([\n   80          ('question', 'Question'),\n   81          ('discussion', 'Discussion'),\n   82          ('link', 'Link')],\n   83:         string='Default Post', required=True, default='question')\n   84:     allow_question = fields.Boolean('Questions', help=\"Users can answer only once per question. Contributors can edit answers and mark the right ones.\", default=True)\n   85:     allow_discussion = fields.Boolean('Discussions', default=True)\n   86:     allow_link = fields.Boolean('Links', help=\"When clicking on the post, it redirects to an external link\", default=True)\n   87:     allow_bump = fields.Boolean('Allow Bump', default=True,\n   88                                  help='Check this box to display a popup for posts older than 10 days '\n   89                                       'without any given answer. The popup will offer to share it on social '\n   90                                       'networks. When shared, a question is bumped at the top of the forum.')\n   91:     allow_share = fields.Boolean('Sharing Options', default=True,\n   92                                   help='After posting the user will be proposed to share its question '\n   93                                        'or answer on social networks, enabling social network propagation '\n   ..\n   96      count_flagged_posts = fields.Integer(string='Number of flagged posts', compute='_compute_count_flagged_posts')\n   97      # karma generation\n   98:     karma_gen_question_new = fields.Integer(string='Asking a question', default=2)\n   99:     karma_gen_question_upvote = fields.Integer(string='Question upvoted', default=5)\n  100:     karma_gen_question_downvote = fields.Integer(string='Question downvoted', default=-2)\n  101:     karma_gen_answer_upvote = fields.Integer(string='Answer upvoted', default=10)\n  102:     karma_gen_answer_downvote = fields.Integer(string='Answer downvoted', default=-2)\n  103:     karma_gen_answer_accept = fields.Integer(string='Accepting an answer', default=2)\n  104:     karma_gen_answer_accepted = fields.Integer(string='Answer accepted', default=15)\n  105:     karma_gen_answer_flagged = fields.Integer(string='Answer flagged', default=-100)\n  106      # karma-based actions\n  107:     karma_ask = fields.Integer(string='Ask questions', default=3)\n  108:     karma_answer = fields.Integer(string='Answer questions', default=3)\n  109:     karma_edit_own = fields.Integer(string='Edit own posts', default=1)\n  110:     karma_edit_all = fields.Integer(string='Edit all posts', default=300)\n  111:     karma_close_own = fields.Integer(string='Close own posts', default=100)\n  112:     karma_close_all = fields.Integer(string='Close all posts', default=500)\n  113:     karma_unlink_own = fields.Integer(string='Delete own posts', default=500)\n  114:     karma_unlink_all = fields.Integer(string='Delete all posts', default=1000)\n  115:     karma_upvote = fields.Integer(string='Upvote', default=5)\n  116:     karma_downvote = fields.Integer(string='Downvote', default=50)\n  117:     karma_answer_accept_own = fields.Integer(string='Accept an answer on own questions', default=20)\n  118:     karma_answer_accept_all = fields.Integer(string='Accept an answer to all questions', default=500)\n  119:     karma_comment_own = fields.Integer(string='Comment own posts', default=1)\n  120:     karma_comment_all = fields.Integer(string='Comment all posts', default=1)\n  121:     karma_comment_convert_own = fields.Integer(string='Convert own answers to comments and vice versa', default=50)\n  122:     karma_comment_convert_all = fields.Integer(string='Convert all answers to comments and vice versa', default=500)\n  123:     karma_comment_unlink_own = fields.Integer(string='Unlink own comments', default=50)\n  124:     karma_comment_unlink_all = fields.Integer(string='Unlink all comments', default=500)\n  125:     karma_retag = fields.Integer(string='Change question tags', default=75)\n  126:     karma_flag = fields.Integer(string='Flag a post as offensive', default=500)\n  127:     karma_dofollow = fields.Integer(string='Nofollow links', help='If the author has not enough karma, a nofollow attribute is added to links', default=500)\n  128      karma_editor = fields.Integer(string='Editor Features: image and links',\n  129:                                   default=30, oldname='karma_editor_link_files')\n  130:     karma_user_bio = fields.Integer(string='Display detailed user biography', default=750)\n  131:     karma_post = fields.Integer(string='Ask questions without validation', default=100)\n  132:     karma_moderate = fields.Integer(string='Moderate posts', default=1000)\n  133  \n  134      @api.one\n  135:     @api.constrains('allow_question', 'allow_discussion', 'allow_link', 'default_post_type')\n  136:     def _check_default_post_type(self):\n  137:         if (self.default_post_type == 'question' and not self.allow_question) \\\n  138:                 or (self.default_post_type == 'discussion' and not self.allow_discussion) \\\n  139:                 or (self.default_post_type == 'link' and not self.allow_link):\n  140:             raise UserError(_('You cannot choose %s as default post since the forum does not allow it.') % self.default_post_type)\n  141  \n  142      @api.one\n  ...\n  195      content_link = fields.Char('URL', help=\"URL of Link Articles\")\n  196      tag_ids = fields.Many2many('forum.tag', 'forum_tag_rel', 'forum_id', 'forum_tag_id', string='Tags')\n  197:     state = fields.Selection([('active', 'Active'), ('pending', 'Waiting Validation'), ('close', 'Close'), ('offensive', 'Offensive'), ('flagged', 'Flagged')], string='Status', default='active')\n  198:     views = fields.Integer('Number of Views', default=0)\n  199:     active = fields.Boolean('Active', default=True)\n  200      post_type = fields.Selection([\n  201          ('question', 'Question'),\n  202          ('link', 'Article'),\n  203          ('discussion', 'Discussion')],\n  204:         string='Type', default='question', required=True)\n  205      website_message_ids = fields.One2many(\n  206          'mail.message', 'res_id',\n  ...\n  312      def _compute_relevancy(self):\n  313          if self.create_date:\n  314:             days = (datetime.today() - datetime.strptime(self.create_date, tools.DEFAULT_SERVER_DATETIME_FORMAT)).days\n  315              self.relevancy = math.copysign(1, self.vote_count) * (abs(self.vote_count - 1) ** self.forum_id.relevancy_post_vote / (days + 2) ** self.forum_id.relevancy_time_decay)\n  316          else:\n  ...\n  553              'state': 'close',\n  554              'closed_uid': self._uid,\n  555:             'closed_date': datetime.today().strftime(tools.DEFAULT_SERVER_DATETIME_FORMAT),\n  556              'closed_reason_id': reason_id,\n  557          })\n  ...\n  611              'state': 'offensive',\n  612              'moderator_id': self.env.user.id,\n  613:             'closed_date': datetime.today().strftime(tools.DEFAULT_SERVER_DATETIME_FORMAT),\n  614              'closed_reason_id': reason_id,\n  615              'active': False,\n  ...\n  633          field. One cannot bump a question more than once every 10 days. \"\"\"\n  634          self.ensure_one()\n  635:         if self.forum_id.allow_bump and not self.child_ids and (datetime.today() - datetime.strptime(self.write_date, tools.DEFAULT_SERVER_DATETIME_FORMAT)).days > 9:\n  636              # write through super to bypass karma; sudo to allow public user to bump any post\n  637              return self.sudo().write({'bump_date': fields.Datetime.now()})\n  ...\n  686  \n  687      @api.model\n  688:     def convert_comment_to_answer(self, message_id, default=None):\n  689          \"\"\" Tool to convert a comment (mail.message) into an answer (forum.post).\n  690          The original comment is unlinked and a new answer from the comment's author\n  ...\n  795  \n  796      post_id = fields.Many2one('forum.post', string='Post', ondelete='cascade', required=True)\n  797:     user_id = fields.Many2one('res.users', string='User', required=True, default=lambda self: self._uid)\n  798:     vote = fields.Selection([('1', '1'), ('-1', '-1'), ('0', '0')], string='Vote', required=True, default='1')\n  799      create_date = fields.Datetime('Create Date', select=True, readonly=True)\n  800      forum_id = fields.Many2one('forum.forum', string='Forum', related=\"post_id.forum_id\", store=True)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_forum\\models\\res_users.py:\n   20  \n   21      create_date = fields.Datetime('Create Date', readonly=True, copy=False, select=True)\n   22:     karma = fields.Integer('Karma', default=0)\n   23      badge_ids = fields.One2many('gamification.badge.user', 'user_id', string='Badges', copy=False)\n   24      gold_badge = fields.Integer('Gold badges count', compute=\"_get_user_badge_level\")\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_forum\\static\\src\\xml\\website_forum_share_templates.xml:\n   12                      <t t-if=\"target_type == 'question'\" t-call=\"website_forum.social_message_question\"/>\n   13                      <t t-if=\"target_type == 'answer'\" t-call=\"website_forum.social_message_answer\"/>\n   14:                     <t t-if=\"target_type == 'default'\" t-call=\"website_forum.social_message_default\"/>\n   15                      <div class=\"share-icons text-center\">\n   16                          <t t-foreach=\"medias\" t-as=\"media\">\n   ..\n   36          <a href=\"https://www.odoo.com/forum/how-to/miscellaneous-14/how-does-karma-work-odoo-v8-forum-software-57845\" target=\"_blank\">here</a>.</p>\n   37      </t>\n   38:     <t t-name=\"website_forum.social_message_default\">\n   39          <p>Share this content to increase your chances to be featured on the front page and attract more visitors.</p>\n   40      </t>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_forum\\views\\forum.xml:\n   38                                  <field name=\"allow_link\"/>\n   39                                  <field name=\"allow_discussion\"/>\n   40:                                 <field name=\"default_post_type\"/>\n   41                                </group>\n   42                                <group string=\"Orders\">\n   43:                                 <field name=\"default_order\"/>\n   44                                  <label for=\"relevancy_post_vote\" string=\"Relevance Computation\" groups=\"base.group_no_one\"/>\n   45                                  <div groups=\"base.group_no_one\">\n   ..\n  214              <field name=\"view_id\" ref=\"view_forum_post_list\"/>\n  215              <field name=\"search_view_id\" ref=\"view_forum_post_search\"/>\n  216:             <field name=\"context\">{'search_default_questions':1}</field>\n  217          </record>\n  218  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_forum\\views\\website_forum.xml:\n   23  \n   24  <!-- Layout add nav and footer -->\n   25: <template id=\"header_footer_custom\" inherit_id=\"website.footer_default\"\n   26      name=\"Footer Questions Link\">\n   27      <xpath expr=\"//ul[@id='products']\" position=\"inside\">\n   ..\n   54  \n   55          <div class=\"container mt16 website_forum\">\n   56:             <div class=\"navbar navbar-default\">\n   57                  <div class=\"navbar-header\">\n   58                      <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#oe-help-navbar-collapse\">\n   ..\n   93                                  <t t-call=\"website.website_search_box\"/>\n   94                                  <span class=\"dropdown\" groups=\"base.group_erp_manager\">\n   95:                                     <button class=\"btn btn-default dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\">\n   96                                          <i class=\"fa fa-cog\"/>\n   97                                      </button>\n   ..\n  136                      <div t-if=\"not header.get('ask_hide')\" t-attf-class=\"btn-group btn-block mb16 #{(user.karma &lt; forum.karma_ask) and not is_public_user and 'karma_required' or ''}\" t-attf-data-karma=\"#{forum.karma_ask}\">\n  137                          <t t-set=\"multi_type\" t-value=\"(forum.allow_link and forum.allow_question) or (forum.allow_link and forum.allow_discussion) or (forum.allow_question and forum.allow_discussion)\"/>\n  138:                         <a type=\"button\"  t-attf-class=\"btn btn-primary btn-lg #{'col-sm-10' if multi_type else 'col-sm-12'}\" t-attf-href=\"/forum/#{slug(forum)}/ask?post_type=#{forum.default_post_type}\">\n  139:                             <t t-if=\"forum.default_post_type == 'question'\">Ask a Question</t>\n  140:                             <t t-if=\"forum.default_post_type == 'link'\">Submit a Link</t>\n  141:                             <t t-if=\"forum.default_post_type == 'discussion'\">New Discussion</t>\n  142                          </a>\n  143                          <t t-if=\"multi_type\">\n  ...\n  153                          </t>\n  154                      </div>\n  155:                     <div class=\"panel panel-default\">\n  156                          <div class=\"panel-heading\">\n  157                              <h3 class=\"panel-title\">Keep Informed</h3>\n  ...\n  164                          </div>\n  165                      </div>\n  166:                     <div class=\"panel panel-default\" id=\"about_forum\">\n  167                          <div class=\"panel-heading\">\n  168                              <h3 class=\"panel-title\">About This Community</h3>\n  ...\n  174                          </div>\n  175                      </div>\n  176:                     <div class=\"panel panel-default\" id=\"moderation_tools\" t-if=\"user.karma>=forum.karma_moderate\">\n  177                          <div class=\"panel-heading\">\n  178                              <h3 class=\"panel-title\">Moderation Tools</h3>\n  ...\n  185                      </div>\n  186                      <div t-if=\"header.get('question_data')\">\n  187:                         <div class=\"panel panel-default\">\n  188                              <div class=\"panel-heading text-center\">\n  189                                  <h3 class=\"panel-title\">Question tools</h3>\n  ...\n  243          <t t-foreach=\"question.tag_ids\" t-as=\"question_tag\">\n  244              <a t-attf-href=\"/forum/#{ slug(forum) }/tag/#{slug(question_tag)}/questions\">\n  245:                 <span t-attf-class=\"pull-right label #{tag and tag.name == question_tag.name and 'label-primary' or 'label-default'}\" t-field=\"question_tag.name\"\n  246                      style=\"margin-right: 4px;\"/>\n  247              </a>\n  ...\n  544              <button type=\"submit\" t-attf-class=\"btn btn-primary #{forum.allow_share and 'oe_social_share_call' or ''} #{(user.karma &lt; forum.karma_ask) and 'karma_required' or ''}\"\n  545                  t-att-data-karma=\"forum.karma_ask\"\n  546:                 data-hashtags=\"#discussion\" data-social-target-type=\"default\">Post Your Topic</button>\n  547          </form>\n  548      </t>\n  ...\n  760                      <div class=\"text-right\">\n  761                          <t t-foreach=\"question.tag_ids\" t-as=\"tag\">\n  762:                             <a t-attf-href=\"/forum/#{ slug(forum) }/tag/#{ tag.id }/questions\" class=\"label label-default\" t-field=\"tag.name\"/>\n  763                          </t>\n  764                      </div>\n  ...\n 1089              <div class=\"col-sm-3 mt16\" t-foreach=\"tags\" t-as=\"tag\">\n 1090                  <span><t t-esc=\"tag.posts_count\"/>&amp;nbsp;&amp;nbsp;<i class='fa fa-times'/>&amp;nbsp;&amp;nbsp;</span>\n 1091:                 <a t-attf-href=\"/forum/#{ slug(forum) }/tag/#{ slug(tag) }/questions?{{ keep_query( filters='tag') }}\" class=\"label label-default\">\n 1092                      <span t-field=\"tag.name\"/>\n 1093                  </a>\n ....\n 1190          <div t-foreach=\"posts_ids\" t-as=\"question\" class=\"mb16 row\" style=\"padding-bottom:16px;border-bottom:1px solid #e7e7e7;\">\n 1191              <div class=\"col-sm-2\">\n 1192:                 <div class=\"panel panel-default text-center\" style=\"background-color:#eee;margin:0;padding:5px 12px 5px 12px;\">\n 1193                      <a t-attf-href=\"/forum/#{slug(forum)}/post/#{slug(question)}/validate\" style=\"padding-right:8px;\"><i class=\"fa fa-check fa-2x\"/></a>\n 1194                      <a t-if=\"queue_type == 'validation'\" t-attf-href=\"/forum/#{slug(forum)}/post/#{slug(question)}/refuse\"><i class=\"fa fa-times fa-2x\"/></a>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_forum_doc\\models\\documentation.py:\n   68      }\n   69  \n   70:     def _get_default_stage_id(self, cr, uid, context=None):\n   71          stage_ids = self.pool[\"forum.documentation.stage\"].search(cr, uid, [], limit=1, context=context)\n   72          return stage_ids and stage_ids[0] or False\n   73  \n   74:     _defaults = {\n   75:         'documentation_stage_id': _get_default_stage_id,\n   76      }\n   77  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_forum_doc\\views\\doc.xml:\n   32              <field name=\"model\">forum.post</field>\n   33              <field name=\"arch\" type=\"xml\">\n   34:                 <kanban default_group_by=\"documentation_stage_id\" >\n   35                      <field name=\"documentation_stage_id\"/>\n   36                      <field name=\"create_uid\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_forum_doc\\views\\website_doc.xml:\n   11  \n   12          <!-- Layout add nav and footer -->\n   13:         <template id=\"header_footer_custom\" inherit_id=\"website.footer_default\"\n   14              name=\"Footer Documentation Link\">\n   15              <xpath expr=\"//ul[@id='products']\" position=\"inside\">\n   ..\n   74                                          name=\"search\" placeholder=\"Search...\"\n   75                                          t-att-value=\"search or ''\"/>\n   76:                                     <button type=\"submit\" class=\"btn btn-default\">Search</button>\n   77                                  </div>\n   78                              </form>\n   ..\n  113                                          name=\"search\" placeholder=\"Search...\"\n  114                                          t-att-value=\"search or ''\"/>\n  115:                                     <button type=\"submit\" class=\"btn btn-default\">Search</button>\n  116                                  </div>\n  117                              </form>\n  ...\n  142                              </div>\n  143                          </div><div class=\"col-sm-3\">\n  144:                             <div class=\"panel panel-default mt48\" id=\"about_doc\">\n  145                                  <div class=\"panel-heading\">\n  146                                      <h3 class=\"panel-title\">Need more info?</h3>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_gengo\\controllers\\main.py:\n    6  import time\n    7  \n    8: GENGO_DEFAULT_LIMIT = 20\n    9  \n   10  class website_gengo(http.Controller):\n   ..\n   36      @http.route('/website/post_gengo_jobs', type='json', auth='user', website=True)\n   37      def post_gengo_jobs(self):\n   38:         request.registry['base.gengo.translations']._sync_request(request.cr, request.uid, limit=GENGO_DEFAULT_LIMIT, context=request.context)\n   39          return True\n   40  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_hr_recruitment\\controllers\\main.py:\n   36          countries = set(o.country_id for o in offices if o.country_id)\n   37  \n   38:         # Default search by user country\n   39          if not (country or department or office_id or kwargs.get('all_countries')):\n   40              country_code = request.session['geoip'].get('country_code')\n   ..\n   81      def jobs_apply(self, job, **kwargs):\n   82          error = {}\n   83:         default = {}\n   84          if 'website_hr_recruitment_error' in request.session:\n   85              error = request.session.pop('website_hr_recruitment_error')\n   86:             default = request.session.pop('website_hr_recruitment_default')\n   87          return request.render(\"website_hr_recruitment.apply\", {\n   88              'job': job,\n   89              'error': error,\n   90:             'default': default,\n   91          })\n   92  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_hr_recruitment\\data\\config_data.xml:\n   20      <data>\n   21          <record id=\"hr_recruitment.model_hr_applicant\" model=\"ir.model\">         \n   22:             <field name=\"website_form_default_field_id\" ref=\"hr_recruitment.field_hr_applicant_description\" />\n   23              <field name=\"website_form_access\">True</field>\n   24              <field name=\"website_form_label\">Apply for a Job</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_hr_recruitment\\data\\hr_job_demo.xml:\n   21              <div class=\"col-md-4 mt16\">\n   22                  <div class=\"panel panel-info\">\n   23:                     <!-- Default panel contents -->\n   24                      <div class=\"panel-heading text-center\">\n   25                          <h2 style=\"margin: 0\">Responsibilities</h2>\n   ..\n   45              <div class=\"col-md-4 mt16\">\n   46                  <div class=\"panel panel-info\">\n   47:                     <!-- Default panel contents -->\n   48                      <div class=\"panel-heading text-center\">\n   49                          <h2 style=\"margin: 0\">Skills</h2>\n   ..\n   68              <div class=\"col-md-4 mt16\">\n   69                  <div class=\"panel panel-info\">\n   70:                     <!-- Default panel contents -->\n   71                      <div class=\"panel-heading text-center\">\n   72                          <h2 style=\"margin: 0\">Nice to have</h2>\n   ..\n  152              <div class=\"col-md-4 mt16\">\n  153                  <div class=\"panel panel-info\">\n  154:                     <!-- Default panel contents -->\n  155                      <div class=\"panel-heading text-center\">\n  156                          <h2 style=\"margin: 0\">Responsibilities</h2>\n  ...\n  175              <div class=\"col-md-4 mt16\">\n  176                  <div class=\"panel panel-info\">\n  177:                     <!-- Default panel contents -->\n  178                      <div class=\"panel-heading text-center\">\n  179                          <h2 style=\"margin: 0\">Skills</h2>\n  ...\n  199              <div class=\"col-md-4 mt16\">\n  200                  <div class=\"panel panel-info\">\n  201:                     <!-- Default panel contents -->\n  202                      <div class=\"panel-heading text-center\">\n  203                          <h2 style=\"margin: 0\">Nice to have</h2>\n  ...\n  285              <div class=\"col-md-4 mt16\">\n  286                  <div class=\"panel panel-info\">\n  287:                     <!-- Default panel contents -->\n  288                      <div class=\"panel-heading text-center\">\n  289                          <h2 style=\"margin: 0\">Responsibilities</h2>\n  ...\n  311              <div class=\"col-md-4 mt16\">\n  312                  <div class=\"panel panel-info\">\n  313:                     <!-- Default panel contents -->\n  314                      <div class=\"panel-heading text-center\">\n  315                          <h2 style=\"margin: 0\">Skills</h2>\n  ...\n  335              <div class=\"col-md-4 mt16\">\n  336                  <div class=\"panel panel-info\">\n  337:                     <!-- Default panel contents -->\n  338                      <div class=\"panel-heading text-center\">\n  339                          <h2 style=\"margin: 0\">Nice to have</h2>\n  ...\n  419              <div class=\"col-md-4 mt16\">\n  420                  <div class=\"panel panel-info\">\n  421:                     <!-- Default panel contents -->\n  422                      <div class=\"panel-heading text-center\">\n  423                          <h2 style=\"margin: 0\">Responsibilities</h2>\n  ...\n  442              <div class=\"col-md-4 mt16\">\n  443                  <div class=\"panel panel-info\">\n  444:                     <!-- Default panel contents -->\n  445                      <div class=\"panel-heading text-center\">\n  446                          <h2 style=\"margin: 0\">Skills</h2>\n  ...\n  465              <div class=\"col-md-4 mt16\">\n  466                  <div class=\"panel panel-info\">\n  467:                     <!-- Default panel contents -->\n  468                      <div class=\"panel-heading text-center\">\n  469                          <h2 style=\"margin: 0\">Nice to have</h2>\n  ...\n  547              <div class=\"col-md-4 mt16\">\n  548                  <div class=\"panel panel-info\">\n  549:                     <!-- Default panel contents -->\n  550                          <div class=\"panel-heading text-center\">\n  551                              <h2 style=\"margin: 0\">Responsibilities</h2>\n  ...\n  570              <div class=\"col-md-4 mt16\">\n  571              <div class=\"panel panel-info\">\n  572:                 <!-- Default panel contents -->\n  573                      <div class=\"panel-heading text-center\">\n  574                          <h2 style=\"margin: 0\">Skills</h2>\n  ...\n  593              <div class=\"col-md-4 mt16\">\n  594                  <div class=\"panel panel-info\">\n  595:                     <!-- Default panel contents -->\n  596                      <div class=\"panel-heading text-center\">\n  597                          <h2 style=\"margin: 0\">Nice to have</h2>\n  ...\n  675              <div class=\"col-md-4 mt16\">\n  676                  <div class=\"panel panel-info\">\n  677:                     <!-- Default panel contents -->\n  678                      <div class=\"panel-heading text-center\">\n  679                          <h2 style=\"margin: 0\">Responsibilities</h2>\n  ...\n  698              <div class=\"col-md-4 mt16\">\n  699                  <div class=\"panel panel-info\">\n  700:                     <!-- Default panel contents -->\n  701                      <div class=\"panel-heading text-center\">\n  702                          <h2 style=\"margin: 0\">Skills</h2>\n  ...\n  721              <div class=\"col-md-4 mt16\">\n  722                  <div class=\"panel panel-info\">\n  723:                     <!-- Default panel contents -->\n  724                      <div class=\"panel-heading text-center\">\n  725                          <h2 style=\"margin: 0\">Nice to have</h2>\n  ...\n  804              <div class=\"col-md-4 mt16\" style=\"width:30%;\">\n  805                  <div class=\"panel panel-info\">\n  806:                     <!-- Default panel contents -->\n  807                      <div class=\"panel-heading text-center\">\n  808                          <h2 style=\"margin: 0\">Responsibilities</h2>\n  ...\n  827              <div class=\"col-md-4 mt16\">\n  828                  <div class=\"panel panel-info\">\n  829:                     <!-- Default panel contents -->\n  830                      <div class=\"panel-heading text-center\">\n  831                          <h2 style=\"margin: 0\">Skills</h2>\n  ...\n  850              <div class=\"col-md-4 mt16\">\n  851                  <div class=\"panel panel-info\">\n  852:                     <!-- Default panel contents -->\n  853                      <div class=\"panel-heading text-center\">\n  854                          <h2 style=\"margin: 0\">Nice to have</h2>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_hr_recruitment\\models\\hr_applicant.py:\n    8      def website_form_input_filter(self, request, values):\n    9          if 'partner_name' in values:\n   10:             values.setdefault('name', '%s\\'s Application' % values['partner_name'])\n   11          return values\n   12  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_hr_recruitment\\views\\templates.xml:\n    3  <data>\n    4  \n    5: <template id=\"job_footer_custom\" inherit_id=\"website.footer_default\" name=\"Footer Job Link\">\n    6      <xpath expr=\"//div[@id='info']/ul\" position=\"inside\">\n    7      <li><a href=\"/jobs\">Jobs</a></li>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_issue\\data\\website_issue_data.xml:\n    3      <data>\n    4          <record id=\"project_issue.model_project_issue\" model=\"ir.model\">         \n    5:             <field name=\"website_form_default_field_id\" ref=\"project_issue.field_project_issue_description\" />\n    6              <field name=\"website_form_access\">True</field>\n    7              <field name=\"website_form_label\">Create an issue</field>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_livechat\\models\\im_livechat.py:\n   17          return res\n   18  \n   19:     website_description = fields.Html(\"Website description\", default=False, help=\"Description of the channel displayed on the website page\")\n   20  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_livechat\\views\\website_livechat.xml:\n   31  \n   32          <!-- Layout add footer -->\n   33:         <template id=\"header_footer_custom\" inherit_id=\"website.footer_default\" name=\"Footer Rating Livechat Link\">\n   34              <xpath expr=\"//ul[@id='products']\" position=\"inside\">\n   35                  <li><a href=\"/livechat/\">Livechat Support</a></li>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_livechat\\website_livechat_data.xml:\n    5           <record id=\"im_livechat_channel_data_website\" model=\"im_livechat.channel\">\n    6               <field name=\"name\">YourWebsiteWithOdoo.com</field>\n    7:              <field name=\"default_message\">Hello, how may I help you?</field>\n    8           </record>\n    9  \n   10:          <record id=\"website.default_website\" model=\"website\">\n   11               <field name=\"channel_id\" ref=\"website_livechat.im_livechat_channel_data_website\"></field>\n   12           </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_mail\\controllers\\main.py:\n   37          :param string token: access token if the object's model uses some kind of public access\n   38                               using tokens (usually a uuid4) to bypass access rules\n   39:         :param string token_field: name of the field that contains the token on the object (defaults to 'token')\n   40          :param string sha_in: sha1 hash of the string composed of res_model, res_id and the dabase secret in ir.config_parameter\n   41                                 if you wish to allow public users to write on the object with some security but you don't want\n   ..\n   44                                 to generate the shasign, you can import the function object_shasign from this file in your controller\n   45          :param str sha_time: timestamp of sha signature generation (signatures are valid for 24h)\n   46:         :param bool nosubscribe: set False if you want the partner to be set as follower of the object when posting (default to True)\n   47  \n   48          The rest of the kwargs are passed on to message_post()\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_mail\\models\\mail_message.py:\n   31      }\n   32  \n   33:     def default_get(self, cr, uid, fields_list, context=None):\n   34:         defaults = super(MailMessage, self).default_get(cr, uid, fields_list, context=context)\n   35  \n   36:         # Note: explicitly implemented in default_get() instead of _defaults,\n   37          # to avoid setting to True for all existing messages during upgrades.\n   38:         # TODO: this default should probably be dynamic according to the model\n   39          # on which the messages are attached, thus moved to create().\n   40          if 'website_published' in fields_list:\n   41:             defaults.setdefault('website_published', True)\n   42  \n   43:         return defaults\n   44  \n   45      def _search(self, cr, uid, args, offset=0, limit=None, order=None,\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_mail\\views\\website_mail.xml:\n   12                    groups=\"base.group_public\"/>\n   13              <span class=\"input-group-btn\">\n   14:                 <button href=\"#\" t-attf-class=\"btn btn-default js_unfollow_btn\">Unsubscribe</button>\n   15                  <button href=\"#\" t-attf-class=\"btn btn-primary js_follow_btn\">Subscribe</button>\n   16              </span>\n   ..\n   34                           you can use a token to verify the identity of the user;\n   35                           the message will be posted with the identity of the partner_id of the object\n   36:                 :token_field string (optional): name of the field that contains the token on the object (default to 'token')\n   37                  :sha_in string (optional): if you use the shasign to allow commenting by non-logged user, you need to set it in this variable using the\n   38                                   object_shasign function defined in the main controller of website_portal\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_mail_channel\\controllers\\main.py:\n   20              groupby=\"date\", orderby=\"date desc\", context=request.context)\n   21          for group in groups:\n   22:             begin_date = datetime.datetime.strptime(group['__domain'][0][2], tools.DEFAULT_SERVER_DATETIME_FORMAT).date()\n   23:             end_date = datetime.datetime.strptime(group['__domain'][1][2], tools.DEFAULT_SERVER_DATETIME_FORMAT).date()\n   24:             group['date_begin'] = '%s' % datetime.date.strftime(begin_date, tools.DEFAULT_SERVER_DATE_FORMAT)\n   25:             group['date_end'] = '%s' % datetime.date.strftime(end_date, tools.DEFAULT_SERVER_DATE_FORMAT)\n   26          return groups\n   27  \n   ..\n   38          result = mail_message_obj.read_group(\n   39              cr, SUPERUSER_ID,\n   40:             [('model', '=', 'mail.channel'), ('date', '>=', month_date.strftime(tools.DEFAULT_SERVER_DATETIME_FORMAT))],\n   41              [], ['res_id'],\n   42              context=context)\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_mail_channel\\models\\mail_mail.py:\n   11  \n   12      def send_get_mail_body(self, cr, uid, ids, partner=None, context=None):\n   13:         \"\"\" Short-circuit parent method for mail groups, replace the default\n   14              footer with one appropriate for mailing-lists.\"\"\"\n   15          # TDE: temporary addition (mail was parameter) due to semi-new-API\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_mail_channel\\views\\website_mail_channel.xml:\n    3  <data>\n    4  \n    5: <template id=\"footer_mailing_list\" inherit_id=\"website.footer_default\" name=\"Footer Mailing List Link\">\n    6      <xpath expr=\"//div[@id='info']/ul\" position=\"inside\">\n    7          <li><a t-attf-href=\"/groups\">Mailing List</a></li>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_membership\\controllers\\main.py:\n    4  from openerp.addons.web.http import request\n    5  from openerp.addons.website.models.website import unslug\n    6: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT\n    7  from openerp.tools.translate import _\n    8  \n    .\n   38          post_name = post.get('search') or post.get('name', '')\n   39          current_country = None\n   40:         today = time.strftime(DEFAULT_SERVER_DATE_FORMAT)\n   41  \n   42          # base domain for groupby / searches\n   ..\n  126          memberships_partner_ids = {}\n  127          for line in membership_lines:\n  128:             memberships_partner_ids.setdefault(line.membership_id.id, []).append(line.partner.id)\n  129          if free_partner_ids:\n  130              memberships_data.append({'id': 'free', 'name': _('Free Members')})\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_membership\\views\\website_membership.xml:\n    4  \n    5  <!-- Layout add nav and footer -->\n    6: <template id=\"footer_custom\" inherit_id=\"website.footer_default\" name=\"Footer Associations Link\">\n    7      <xpath expr=\"//div[@id='info']/ul\" position=\"inside\">\n    8          <li><a href=\"/members\">Members</a></li>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_partner\\models\\res_partner.py:\n   42          return res\n   43  \n   44:     _defaults = {\n   45          'website_private': True,\n   46      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_payment\\controllers\\main.py:\n   34          currency = env['res.currency'].browse(currency_id)\n   35  \n   36:         # Try default one then fallback on first\n   37          acquirer_id = acquirer_id and int(acquirer_id) or \\\n   38:             env['ir.values'].get_default('payment.acquirer', 'acquirer_id') or \\\n   39              env['payment.acquirer'].search([('website_published', '=', True)])[0].id\n   40  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_payment\\models\\res_config.py:\n    5      _inherit = 'account.config.settings'\n    6  \n    7:     default_acquirer = fields.Many2one(\"payment.acquirer\",\n    8:                                        string=\"Default Acquirer\",\n    9:                                        help=\"Default payment acquirer for website payments; your provider needs to be visible in the website.\",\n   10                                         domain=\"[('website_published','=',True)]\"\n   11                                         )\n   12  \n   13      @api.model\n   14:     def get_default_acquirer(self, fields):\n   15:         default_acquirer = False\n   16:         if 'default_acquirer' in fields:\n   17:             default_acquirer = self.env['ir.values'].get_default('payment.transaction', 'acquirer_id', company_id=self.env.user.company_id.id)\n   18          return {\n   19:             'default_acquirer': default_acquirer\n   20          }\n   21  \n   22      @api.multi\n   23:     def set_default_acquirer(self):\n   24          for wizard in self:\n   25:             self.env['ir.values'].set_default('payment.transaction', 'acquirer_id', wizard.default_acquirer.id, company_id=self.env.user.company_id.id)\n   26  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_payment\\views\\res_config_view.xml:\n    2  <odoo>\n    3      <data>\n    4:         <record id=\"website_default_acquirer\" model=\"ir.ui.view\">\n    5              <field name=\"name\">account.config.settings.inherit</field>\n    6              <field name=\"model\">account.config.settings</field>\n    .\n    9                  <xpath expr=\"//div[@name='configure_payments_button']\" position=\"after\">\n   10                      <div name=\"customer_payments\">\n   11:                         <label for=\"default_acquirer\"/>\n   12:                         <field name=\"default_acquirer\" class=\"oe_inline\"/>\n   13                      </div>\n   14                  </xpath>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_portal\\views\\templates.xml:\n   22                      <div id=\"o_my_sidebar\" class=\"col-md-3 col-md-offset-1 o_my_sidebar\">\n   23                          <div class=\"o_my_details\">\n   24:                             <h3 class=\"page-header\">Your Details <a href=\"/my/account\" class=\"btn btn-default btn-xs\">Change</a></h3>\n   25                              <div t-field=\"user.partner_id\" t-field-options='{\"widget\": \"contact\", \"fields\": [\"email\", \"phone\", \"address\", \"name\"]}'/>\n   26                          </div>\n   ..\n  134                                  </div>\n  135                                  <div class=\"clearfix\">\n  136:                                     <button type=\"submit\" class=\"btn btn-default btn-primary pull-right mb32 \">\n  137                                          Confirm\n  138                                          <span class=\"fa fa-long-arrow-right\" />\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_portal_sale\\views\\templates.xml:\n   38                          <td>\n   39                            <t t-if=\"quotation.state == 'cancel'\">\n   40:                             <span class=\"label label-default\"><i class=\"fa fa-fw fa-remove\"/> Cancelled</span>\n   41                            </t>\n   42                            <t t-if=\"quotation.validity_date and quotation.validity_date &lt; date\">\n   43:                             <span class=\"label label-default\"><i class=\"fa fa-fw fa-clock-o\"/> Expired</span>\n   44                            </t>\n   45                          </td>\n   ..\n   49                  </t>\n   50                  <tr t-att-class=\"'hidden' if len(quotations) &lt; 5 else ''\">\n   51:                   <td colspan=\"5\"><a href=\"\" class=\"o_my_show_more btn btn-xs btn-default\"><span>Show more</span><span class=\"hidden\">Show less</span></a></td>\n   52                  </tr>\n   53              </table>\n   ..\n   84                              </t>\n   85                              <t t-if=\"order.state == 'done'\">\n   86:                                 <span class=\"label label-default\"><i class=\"fa fa-fw fa-check\"/> Done</span>\n   87                              </t>\n   88                          </td>\n   ..\n   91                  </t>\n   92                  <tr t-att-class=\"'hidden' if len(orders) &lt; 5 else ''\">\n   93:                   <td colspan=\"4\"><a href=\"\" class=\"o_my_show_more btn btn-xs btn-default\"><span>Show more</span><span class=\"hidden\">Show less</span></a></td>\n   94                  </tr>\n   95              </table>\n   ..\n  126                              </t>\n  127                              <t t-if=\"invoice.state == 'paid'\">\n  128:                                 <span class=\"label label-default\"><i class=\"fa fa-fw fa-check\"/> Paid</span>\n  129                              </t>\n  130                              <t t-if=\"invoice.state == 'cancel'\">\n  131:                                 <span class=\"label label-default\"><i class=\"fa fa-fw fa-remove\"/> Cancelled</span>\n  132                              </t>\n  133                          </td>\n  ...\n  139                  </t>\n  140                  <tr t-att-class=\"'hidden' if len(invoices) &lt; 5 else ''\">\n  141:                   <td colspan=\"5\"><a href=\"\" class=\"o_my_show_more btn btn-xs btn-default\"><span>Show more</span><span class=\"hidden\">Show less</span></a></td>\n  142                  </tr>\n  143              </table>\n  ...\n  170                <div class=\"container\">\n  171  \n  172:                   <div class=\"panel panel-default\">\n  173                      <div class=\"panel-heading\">\n  174                        <div class=\"row\">\n  ...\n  321      <template id=\"sale_backend_link\" inherit_id='website_portal_sale.sale_orders' customize_show=\"True\" name=\"Link to Sales Backend\" active=\"False\">\n  322          <xpath expr=\"//h3[@class='page-header']\" position=\"inside\">\n  323:             <a href=\"/web#action=portal_sale.action_orders_portal\" target=\"_blank\" class=\"btn btn-default btn-xs pull-right\"> Access the complete Sale application</a>\n  324          </xpath>\n  325      </template>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_project_issue\\views\\project_issue_templates.xml:\n   25                      <tr t-att-class=\"'hidden' if len(issues) &lt; 6 else ''\">\n   26                          <td colspan=\"4\">\n   27:                             <a href=\"\" class=\"o_my_show_more btn btn-xs btn-default\"><span>Show more</span><span class=\"hidden\">Show less</span></a>\n   28                          </td>\n   29                      </tr>\n   ..\n   48                      </div>\n   49                      <div class=\"container\">\n   50:                         <div class=\"panel panel-default\">\n   51                              <div class=\"panel-heading\">\n   52                                  <div class=\"row\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_quote\\data\\website_quotation_data.xml:\n   20           so users can freely customize/delete them -->\n   21      <data noupdate=\"1\">\n   22:         <record id=\"website_quote_template_default\" model=\"sale.quote.template\">\n   23:             <field name=\"name\">Default Template</field>\n   24              <field name=\"number_of_days\">30</field>\n   25              <field name=\"website_description\" type=\"xml\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_quote\\data\\website_quotation_demo.xml:\n   15          <record id=\"product_product_quote_1\" model=\"product.product\">\n   16              <field name=\"product_tmpl_id\" ref=\"product_template_quote_1\"/>\n   17:             <field name=\"default_code\">QF11</field>\n   18          </record>\n   19  \n   ..\n   31          <record id=\"product_product_quote_2\" model=\"product.product\">\n   32              <field name=\"product_tmpl_id\" ref=\"product_template_quote_2\"/>\n   33:             <field name=\"default_code\">QF12</field>\n   34          </record>\n   35  \n   ..\n   47          <record id=\"product_product_quote_3\" model=\"product.product\">\n   48              <field name=\"product_tmpl_id\" ref=\"product_template_quote_3\"/>\n   49:             <field name=\"default_code\">QF13</field>\n   50          </record>\n   51  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_quote\\models\\order.py:\n   50      }\n   51      _order = 'sequence, id'\n   52:     _defaults = {\n   53          'product_uom_qty': 1,\n   54          'discount': 0.0,\n   ..\n  158      def _get_template_id(self, cr, uid, context=None):\n  159          try:\n  160:             template_id = self.pool.get('ir.model.data').get_object_reference(cr, uid, 'website_quote', 'website_quote_template_default')[1]\n  161          except ValueError:\n  162              template_id = False\n  163          return template_id\n  164  \n  165:     _defaults = {\n  166          'access_token': lambda self, cr, uid, ctx={}: str(uuid.uuid4()),\n  167          'template_id' : _get_template_id,\n  ...\n  282              else:\n  283                  action['context'].update({\n  284:                     'default_template_id': template_id,\n  285:                     'default_use_template': True\n  286                  })\n  287  \n  ...\n  303      def create(self, cr, uid, values, context=None):\n  304          if not values.get('template_id'):\n  305:             defaults = self.default_get(cr, uid, ['template_id'], context=context)\n  306:             template_values = self.onchange_template_id(cr, uid, [], defaults.get('template_id'), partner=values.get('partner_id'), fiscal_position_id=values.get('fiscal_position'), context=context).get('value', {})\n  307              values = dict(template_values, **values)\n  308          return super(sale_order, self).create(cr, uid, values, context=context)\n  ...\n  322          'quantity': fields.float('Quantity', required=True, digits_compute= dp.get_precision('Product UoS')),\n  323      }\n  324:     _defaults = {\n  325          'quantity': 1,\n  326      }\n  ...\n  370      }\n  371  \n  372:     _defaults = {\n  373          'quantity': 1,\n  374      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_quote\\views\\website_quotation.xml:\n  493    <template id=\"opt_quotation_signature\" name=\"Ask Signature\" customize_show=\"True\" inherit_id=\"website_quote.so_quotation\">\n  494        <xpath expr=\"//div[@id='sign-dialog']\" position=\"inside\">\n  495:         <div class=\"panel panel-default mt16 mb0\" id=\"drawsign\">\n  496              <div class=\"panel-heading\">\n  497                  <div class=\"pull-right\">\n  ...\n  638                        <td>\n  639                          <t t-if=\"quotation.state == 'cancel'\">\n  640:                           <span class=\"label label-default\"><i class=\"fa fa-fw fa-remove\"/> Cancelled</span>\n  641                          </t>\n  642                          <t t-if=\"quotation.validity_date and quotation.validity_date &lt; date\">\n  643:                           <span class=\"label label-default\"><i class=\"fa fa-fw fa-clock-o\"/> Expired</span>\n  644                          </t>\n  645                        </td>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_quote\\views\\website_quotation_backend.xml:\n  128                          </notebook>\n  129                          <field name=\"website_description\" invisible=\"1\"/>\n  130:                         <field name=\"note\" placeholder=\"An administrator can set up default Terms and conditions in your Company settings.\"  nolabel=\"1\"/>\n  131                      </sheet>\n  132                  </form>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_rating_project_issue\\views\\website_rating_project.xml:\n   10  \n   11          <!-- Layout add footer -->\n   12:         <template id=\"header_footer_custom\" inherit_id=\"website.footer_default\" name=\"Project Issue Rating Footer Link\">\n   13              <xpath expr=\"//ul[@id='products']\" position=\"inside\">\n   14                  <li><a href=\"/project/rating/\">Project Customer Satisfaction</a></li>\n   ..\n   33                                          <div>\n   34                                              <div class=\"caption\">\n   35:                                                 <span class=\"label label-default pull-right\"><t t-esc=\"project.privacy_visibility\"/></span>\n   36                                                  <h4><t t-esc=\"project.name\"/></h4>\n   37                                                  <p t-if=\"project.date\"  class=\"text-muted\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_sale\\controllers\\main.py:\n   23                      res = False\n   24                      break\n   25:                 row = self.table.setdefault(posy+y, {})\n   26:                 if row.setdefault(posx+x) is not None:\n   27                      res = False\n   28                      break\n   29              for x in range(PPR):\n   30:                 self.table[posy+y].setdefault(x, None)\n   31          return res\n   32  \n   ..\n   91              path = self.path\n   92          for k,v in self.args.items():\n   93:             kw.setdefault(k,v)\n   94          l = []\n   95          for k,v in kw.items():\n   ..\n  145                  domain += [\n  146                      '|', '|', '|', ('name', 'ilike', srch), ('description', 'ilike', srch),\n  147:                     ('description_sale', 'ilike', srch), ('product_variant_ids.default_code', 'ilike', srch)]\n  148  \n  149          if category:\n  ...\n  470          checkout['shipping_id'] = shipping_id\n  471  \n  472:         # Default search by user country\n  473          if not checkout.get('country_id'):\n  474              country_code = request.session['geoip'].get('country_code')\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_sale\\controllers\\website_mail.py:\n   25              })\n   26              message_data.update({\n   27:                 'rating_default_value': rating.rating,\n   28                  'rating_disabled': True,\n   29              })\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_sale\\data\\data.xml:\n   34          </record>\n   35  \n   36:         <record model=\"website\" id=\"website.default_website\">\n   37              <field name=\"salesteam_id\" ref=\"website.salesteam_website_sales\"/>\n   38          </record>\n   ..\n   40          <record id=\"wlist0\" model=\"website_pricelist\">\n   41              <field name=\"selectable\" eval=\"True\" />\n   42:             <field name=\"website_id\" ref=\"website.default_website\" />\n   43              <field name=\"pricelist_id\" ref='product.list0' />\n   44              <field name=\"country_group_ids\" eval=\"[(6,0,[ref('base.europe')])]\" />\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_sale\\data\\demo.xml:\n   75                                  </p>\n   76  \n   77:                                 <div class=\"panel panel-default mt48\">\n   78                                      <div class=\"panel-heading\">\n   79                                          <h3 class=\"panel-title\">Characteristics</h3>\n   ..\n  820          <record id=\"wlist-US\" model=\"website_pricelist\">\n  821              <field name=\"selectable\" eval=\"True\" />\n  822:             <field name=\"website_id\" ref=\"website.default_website\" />\n  823              <field name=\"pricelist_id\" ref='product.list0' />\n  824              <field name=\"country_group_ids\" eval=\"[(6,0,[ref('US_CA')])]\" />\n  ...\n  827          <record id=\"wlist-CHRISTMAS\" model=\"website_pricelist\">\n  828              <field name=\"selectable\" eval=\"False\" />\n  829:             <field name=\"website_id\" ref=\"website.default_website\" />\n  830              <field name=\"pricelist_id\" ref='list_christmas' />\n  831              <field name=\"country_group_ids\" eval=\"[(6,0,[ref('benelux')])]\" />\n  ...\n  834          <record id=\"wlist-BENELUX\" model=\"website_pricelist\">\n  835              <field name=\"selectable\" eval=\"True\" />\n  836:             <field name=\"website_id\" ref=\"website.default_website\" />\n  837              <field name=\"pricelist_id\" ref='list_benelux' />\n  838              <field name=\"country_group_ids\" eval=\"[(6,0,[ref('benelux')])]\" />\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_sale\\models\\product.py:\n   54      }\n   55  \n   56:     # NOTE: there is no 'default image', because by default we don't show\n   57      # thumbnails for categories. However if we have a thumbnail for at least one\n   58:     # category, then we display a default image on the other, so that the\n   59      # buttons have consistent styling.\n   60:     # In this case, the default image is set by the js code.\n   61      image = openerp.fields.Binary(\"Image\", attachment=True,\n   62          help=\"This field holds the image used as image for the category, limited to 1024x1024px.\")\n   ..\n  117      }\n  118  \n  119:     def _defaults_website_sequence(self, cr, uid, *l, **kwargs):\n  120          cr.execute('SELECT MIN(website_sequence)-1 FROM product_template')\n  121          next_sequence = cr.fetchone()[0] or 10\n  122          return next_sequence\n  123  \n  124:     _defaults = {\n  125          'website_size_x': 1,\n  126          'website_size_y': 1,\n  127:         'website_sequence': _defaults_website_sequence,\n  128      }\n  129  \n  ...\n  182          'type': fields.selection([('radio', 'Radio'), ('select', 'Select'), ('color', 'Color'), ('hidden', 'Hidden')], string=\"Type\"),\n  183      }\n  184:     _defaults = {\n  185          'type': lambda *a: 'radio',\n  186      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_sale\\models\\sale_order.py:\n  147      _columns = {\n  148          'pricelist_id': fields.function(_get_pricelist_id,\\\n  149:             type='many2one', relation=\"product.pricelist\", string='Default Pricelist'),\n  150          'currency_id': fields.related(\n  151              'pricelist_id', 'currency_id',\n  152:             type='many2one', relation='res.currency', string='Default Currency'),\n  153          'salesperson_id': fields.many2one('res.users', 'Salesperson'),\n  154          'salesteam_id': fields.many2one('crm.team', 'Sales Team'),\n  ...\n  163          :param str country_code: code iso or False, If set, we search only price list available for this country\n  164          :param bool show_visible: if True, we don't display pricelist where selectable is False (Eg: Code promo)\n  165:         :param int website_pl: The default pricelist used on this website\n  166          :param int current_pl: The current pricelist used on the website\n  167                                 (If not selectable but the current pricelist we had this pricelist anyway)\n  ...\n  267          :param bool force_create: Create sale order if not already existing\n  268          :param str code: Code to force a pricelist (promo code)\n  269:                          If empty, it's a special case to reset the pricelist with the first available else the default.\n  270          :param bool update_pricelist: Force to recompute all the lines from sale order to adapt the price with the current pricelist.\n  271          :param int force_pricelist: pricelist_id - if set,  we change the pricelist with this one\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_sale\\res_config_view.xml:\n   29                          <label for=\"module_sale_ebay\"/>\n   30                      </div>\n   31:                     <label string=\"Default Sales Team\" for=\"salesteam_id\"/>\n   32                      <div>\n   33                          <field name=\"salesteam_id\" class=\"oe_inline\"/>\n   34                      </div>\n   35:                     <label string=\"Default Salesperson\" for=\"salesperson_id\"/>\n   36                      <div>\n   37                          <field name=\"salesperson_id\" class=\"oe_inline\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_sale\\views\\templates.xml:\n  123      <input name=\"product_id\" t-att-value=\"product.product_variant_ids[0].id\" type=\"hidden\"/>\n  124      <t t-if=\"len(product.product_variant_ids) == 1\">\n  125:       <a class=\"btn btn-default btn-xs a-submit\"><span class=\"fa fa-shopping-cart\"/></a>\n  126      </t>\n  127      <t t-if=\"len(product.product_variant_ids) &gt; 1\">\n  128:       <a class=\"btn btn-default btn-xs\" t-att-href=\"keep('/shop/product/%s' % slug(product), page=(pager['page']['num'] if pager['page']['num']>1 else None))\"><span class=\"fa fa-shopping-cart\"/></a>\n  129      </t>\n  130    </xpath>\n  ...\n  136    <div t-attf-class=\"#{website_sale_pricelists and len(website_sale_pricelists)>1 and 'dropdown' or 'hidden'} btn-group\">\n  137      <t t-set=\"curr_pl\" t-value=\"website.get_current_pricelist()\"/>\n  138:     <a href=\"#\" class=\"dropdown-toggle btn btn-default\" data-toggle=\"dropdown\">\n  139        <t t-esc=\"curr_pl and curr_pl.name or ' - '\" />\n  140        <span class=\"caret\"></span>\n  ...\n  419    <div itemprop=\"offers\" itemscope=\"itemscope\" itemtype=\"http://schema.org/Offer\" class=\"product_price mt16\">\n  420        <h4 class=\"oe_price_h4 css_editable_mode_hidden\">\n  421:           <span class=\"text-danger oe_default_price\" style=\"text-decoration: line-through; white-space: nowrap;\"\n  422              t-field=\"product.lst_price\"\n  423              t-field-options='{\n  ...\n  453      </t>\n  454      <t t-if=\"len(product.product_variant_ids) &gt; 1\">\n  455:       <label label-default=\"label-default\" class=\"radio\" t-foreach=\"product.product_variant_ids\" t-as=\"variant_id\">\n  456          <input type=\"radio\" name=\"product_id\" class=\"js_product_change\" t-att-checked=\"'checked' if variant_id_index == 0 else ''\" t-att-value=\"variant_id.id\" t-att-data-lst_price=\"variant_id.lst_price\" t-att-data-price=\"variant_id.price\"/>\n  457          <span t-esc=\"variant_id.name_get()[0][1]\"/>\n  ...\n  621        <div t-if=\"rating_message_values.get(message.id)\">\n  622          <t t-call=\"rating.rating_star_card\">\n  623:           <t t-set=\"rating_default_value\" t-value=\"rating_message_values.get(message.id)\"/>\n  624            <t t-set=\"rating_disabled\" t-value=\"True\"/>\n  625          </t>\n  ...\n  694                <div class=\"form-group\">\n  695                  <div class=\"col-sm-offset-2 col-sm-10\">\n  696:                   <button name=\"post_values\" type=\"submit\" class=\"btn btn-default\">Continue</button>\n  697                  </div>\n  698                </div>\n  ...\n  756                    <div>\n  757                        <a t-attf-href=\"/shop/product/#{ slug(line.product_id.product_tmpl_id) }\">\n  758:                           <strong t-esc=\"line.product_id.with_context(display_default_code=False).display_name\"/>\n  759                        </a>\n  760                    </div>\n  ...\n  846              <div class='col-xs-9'>\n  847                  <a t-attf-href=\"/shop/product/#{ slug(line.product_id.product_tmpl_id) }\">\n  848:                     <span t-esc=\"line.product_id.with_context(display_default_code=False).display_name\" class=\"h6\"/>\n  849                  </a>\n  850                  <br/><small>Qty: <t t-esc=\"int(line.product_uom_qty)\"/></small>\n  ...\n  921  <template id=\"continue_shopping\" inherit_id=\"website_sale.cart\" customize_show=\"True\" name=\"Continue Shopping Button\">\n  922    <xpath expr=\"//a[@href='/shop/checkout']\" position=\"before\">\n  923:     <a href=\"/shop\" class=\"btn btn-default mb32\"><span class=\"fa fa-long-arrow-left\"/> <span class=\"hidden-xs\">Continue Shopping</span><span class=\"visible-xs-inline\">Continue</span></a>\n  924    </xpath>\n  925  </template>\n  ...\n  939                <input name=\"promo\" class='form-control' type=\"text\" placeholder=\"code...\" t-att-value=\"website_sale_order.pricelist_id.code or ''\"/>\n  940                <div class=\"input-group-btn\">\n  941:                   <a class=\"btn btn-default a-submit\">Apply</a>\n  942                </div>\n  943            </div>\n  ...\n 1092                </div>\n 1093                <div class=\"clearfix\">\n 1094:                 <a href=\"/shop/cart\" class=\"btn btn-default mb32\"><span class=\"fa fa-long-arrow-left\"/> Return to Cart</a>\n 1095:                 <a class=\"btn btn-default btn-primary pull-right mb32 a-submit\">Confirm <span class=\"fa fa-long-arrow-right\"/></a>\n 1096                </div>\n 1097            </div>\n ....\n 1147                            </td>\n 1148                            <td t-if=\"line.product_id.product_tmpl_id\">\n 1149:                              <strong t-field=\"line.product_id.with_context(display_default_code=False).display_name\"/>\n 1150                            </td>\n 1151                            <td>\n ....\n 1282                                      <div>\n 1283                                          <a t-attf-href=\"/shop/product/#{ slug(line.product_id.product_tmpl_id) }\">\n 1284:                                             <strong t-esc=\"line.product_id.with_context(display_default_code=False).display_name\"/>\n 1285                                          </a>\n 1286                                      </div>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_sale_delivery\\models\\sale_order.py:\n   19          'website_description': fields.related('product_id', 'description_sale', type=\"text\", string='Description for Online Quotations'),\n   20      }\n   21:     _defaults = {\n   22          'website_published': False\n   23      }\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_sale_delivery\\views\\website_sale_delivery.xml:\n   53  \n   54      <template id=\"country_state_shipping\" name=\"Shipping Country and states\" inherit_id=\"website_sale.checkout\">\n   55:         <!-- By default, with 'ship to the same address', we can only ship to restricted countries & states -->\n   56          <xpath expr=\"//select[@name='country_id']\" position=\"attributes\">\n   57              <attribute name=\"t-att-disabled\">not shipping_id and 'disabled' or ''</attribute>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_sale_digital\\product.py:\n   35              'view_mode': 'kanban,form',\n   36              'view_type': 'form',\n   37:             'context': \"{'default_res_model': '%s','default_res_id': %d}\" % (self._name, self.id),\n   38          }\n   39  \n   ..\n   60              'view_mode': 'kanban,form',\n   61              'view_type': 'form',\n   62:             'context': \"{'default_res_model': '%s','default_res_id': %d}\" % (self._name, self.id),\n   63          }\n   64  \n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_sale_digital\\views\\website_sale_digital.xml:\n    6              <t t-if=\"attachments\">\n    7                  <span class=\"dropdown\">\n    8:                     <button class=\"btn btn-xs btn-default dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\">\n    9                          Downloads <span class=\"caret\"></span>\n   10                      </button>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_sale_options\\data\\demo.xml:\n   27              <field name=\"uom_po_id\" ref=\"product.product_uom_unit\"/>\n   28              <field name=\"description_sale\">Warranty, issued to the purchaser of an article by its manufacturer, promising to repair or replace it if necessary within a specified period of time.</field>\n   29:             <field name=\"default_code\">W0001</field>\n   30              <field name=\"attribute_value_ids\" eval=\"[(6,0,[ref('product_attribute_value_1')])]\"/>\n   31          </record>\n   32          <record id=\"product_product_1b\" model=\"product.product\">\n   33:             <field name=\"default_code\">W0002</field>\n   34              <field name=\"product_tmpl_id\" ref=\"product_product_1_product_template\"/>\n   35              <field name=\"attribute_value_ids\" eval=\"[(6,0,[ref('product_attribute_value_2')])]\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_sale_options\\views\\templates.xml:\n   56                  </td>\n   57                  <td>\n   58:                   <span t-attf-class=\"text-danger oe_default_price\" t-att-style=\"'' if (compute_currency(product.lst_price) - product.price) &gt; 0.1 else 'display: none;'\" style=\"text-decoration: line-through; white-space: nowrap;\"\n   59                      t-field=\"product.lst_price\"\n   60                      t-field-options='{\n   ..\n  134          </div>\n  135          <div class=\"modal-footer\">\n  136:           <a class=\"btn btn-default a-submit js_goto_shop\"><i class=\"fa fa-chevron-left\"></i> <span class=\"hidden-xs\">Continue Shopping</span><span class=\"visible-xs-inline\">Continue</span></a>\n  137            <a class=\"btn btn-primary pull-right a-submit\"><i class=\"fa fa-shopping-cart fa-fw\"></i> <span class=\"hidden-xs\">Proceed to checkout</span><span class=\"visible-xs-inline\">Checkout</span></a>\n  138          </div>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_slides\\controllers\\main.py:\n   23      def _set_viewed_slide(self, slide, view_mode):\n   24          slide_key = '%s_%s' % (view_mode, request.session_id)\n   25:         viewed_slides = request.session.setdefault(slide_key, list())\n   26          if slide.id not in viewed_slides:\n   27              if view_mode == 'slide':\n   ..\n  172          \"\"\" Controller for message_post. Public user can post; their name and\n  173          email is used to find or create a partner and post as admin with the\n  174:         right partner. Their comments are not published by default. Logged\n  175          users can post as usual. \"\"\"\n  176          # TDE TODO :\n  ...\n  180              return werkzeug.utils.redirect(request.httprequest.referrer + \"#discuss\")\n  181          # public user: check or find author based on email, do not subscribe public user\n  182:         # and do not publish their comments by default to avoid direct spam\n  183          if request.uid == request.website.user_id.id:\n  184              if not post.get('email'):\n  ...\n  201                  'email_from': partner.email,\n  202              }\n  203:         # logged user: as usual, published by default\n  204          else:\n  205              contextual_slide = slide\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_slides\\data\\website_slides_data.xml:\n  122              <field name=\"website_published\" eval=\"True\"/>\n  123              <field name=\"visibility\">public</field>\n  124:             <field name=\"description\">Default channel for slides, all public users can access content of this channel.</field>\n  125          </record>\n  126          <record model=\"slide.channel\" id=\"channel_partial\">\n  ...\n  143              <field name=\"name\">Presentation Published</field>\n  144              <field name=\"res_model\">slide.channel</field>\n  145:             <field name=\"default\" eval=\"True\"/>\n  146              <field name=\"description\">Presentation Published</field>\n  147          </record>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_slides\\data\\website_slides_demo.xml:\n  174  6. Magento o Version 1.8.1.0 o Custom Data / Module – Home page and widgets – Added some products and their description\n  175  7. Drupal o Version 7.27 o Custom Data / Modules – CK-Editor &amp; CK-Finder – Ubercart for e-commerce, Rules, ctools, views, entity\n  176: 8. Prestashop o Version 1.6 o No Custom Data / Modules – Use default demo shop\n  177  9. Performance Google PageSpeed Insight &amp; Pingdom\n  178  10. Google PageSpeed Insights Home page on desktop Computed by Google Page Speed Insight : https://developers.google.com/speed/pagespeed/insights/\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_slides\\models\\res_config.py:\n   11  \n   12      @api.model\n   13:     def get_default_website_slide_google_app_key(self, fields):\n   14          website_slide_google_app_key = False\n   15          if 'website_slide_google_app_key' in fields:\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_slides\\models\\slides.py:\n   32      name = fields.Char('Name', translate=True, required=True)\n   33      description = fields.Html('Description', translate=True)\n   34:     sequence = fields.Integer(default=10, help='Display order')\n   35      category_ids = fields.One2many('slide.category', 'channel_id', string=\"Categories\")\n   36      slide_ids = fields.One2many('slide.slide', 'channel_id', string=\"Slides\")\n   ..\n   41          ('most_viewed', 'Most Viewed'),\n   42          ('custom', 'Featured Presentation')],\n   43:         string=\"Featuring Policy\", default='most_voted', required=True)\n   44      custom_slide_id = fields.Many2one('slide.slide', string='Slide to Promote')\n   45      promoted_slide_id = fields.Many2one('slide.slide', string='Featured Slide', compute='_compute_promoted_slide_id', store=True)\n   ..\n   84          'mail.template', string='Published Template',\n   85          help=\"Email template to send slide publication through email\",\n   86:         default=lambda self: self.env['ir.model.data'].xmlid_to_res_id('website_slides.slide_template_published'))\n   87      share_template_id = fields.Many2one(\n   88          'mail.template', string='Shared Template',\n   89          help=\"Email template used when sharing a slide\",\n   90:         default=lambda self: self.env['ir.model.data'].xmlid_to_res_id('website_slides.slide_template_shared'))\n   91      visibility = fields.Selection([\n   92          ('public', 'Public'),\n   93          ('private', 'Private'),\n   94          ('partial', 'Show channel but restrict presentations')],\n   95:         default='public', required=True)\n   96      group_ids = fields.Many2many(\n   97          'res.groups', 'rel_channel_groups', 'channel_id', 'group_id',\n   ..\n   99      access_error_msg = fields.Html(\n  100          'Error Message', help=\"Message to display when not accessible due to access rights\",\n  101:         default=\"<p>This channel is private and its content is restricted to some users.</p>\", translate=True)\n  102      upload_group_ids = fields.Many2many(\n  103          'res.groups', 'rel_upload_groups', 'channel_id', 'group_id',\n  ...\n  137      name = fields.Char('Name', translate=True, required=True)\n  138      channel_id = fields.Many2one('slide.channel', string=\"Channel\", required=True, ondelete='cascade')\n  139:     sequence = fields.Integer(default=10, help='Display order')\n  140      slide_ids = fields.One2many('slide.slide', 'category_id', string=\"Slides\")\n  141      nbr_presentations = fields.Integer(\"Number of Presentations\", compute='_count_presentations', store=True)\n  ...\n  170      slide_id = fields.Many2one('slide.slide', string=\"Presentation\", required=True, select=1)\n  171      url = fields.Char('Third Party Website URL', required=True)\n  172:     count_views = fields.Integer('# Views', default=1)\n  173  \n  174      def add_embed_url(self, slide_id, url):\n  ...\n  231          [('none', 'No One'), ('user', 'Authentified Users Only'), ('public', 'Everyone')],\n  232          string='Download Security',\n  233:         required=True, default='user')\n  234      image = fields.Binary('Image', attachment=True)\n  235      image_medium = fields.Binary('Medium', compute=\"_get_image\", store=True, attachment=True)\n  ...\n  253          ('video', 'Video')],\n  254          string='Type', required=True,\n  255:         default='document',\n  256          help=\"Document type will be set automatically depending on file type, height and width.\")\n  257      index_content = fields.Text('Transcript')\n  ...\n  286      slide_views = fields.Integer('# of Website Views')\n  287      embed_views = fields.Integer('# of Embedded Views')\n  288:     total_views = fields.Integer(\"Total # Views\", default=\"0\", compute='_compute_total', store=True)\n  289  \n  290      @api.depends('slide_views', 'embed_views')\n  ...\n  335              doc_data = self._parse_document_url(values['url']).get('values', dict())\n  336              for key, value in doc_data.iteritems():\n  337:                 values.setdefault(key, value)\n  338          # Do not publish slide if user has not publisher rights\n  339          if not self.user_has_groups('base.group_website_publisher'):\n  ...\n  349              doc_data = self._parse_document_url(values['url']).get('values', dict())\n  350              for key, value in doc_data.iteritems():\n  351:                 values.setdefault(key, value)\n  352          res = super(Slide, self).write(values)\n  353          if values.get('website_published'):\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_slides\\view\\website_slides.xml:\n    4  \n    5  <!-- add link to the standard footer -->\n    6: <template id=\"slide_footer\" inherit_id=\"website.footer_default\" name=\"Footer Slides Link\">\n    7      <xpath expr=\"//div[@id='info']//ul[@class='list-unstyled']\" position=\"inside\">\n    8          <li>\n    .\n   45                                  <a t-attf-href=\"/slides/#{slug(channel)}\">\n   46                                      <img t-if=\"channel.promoted_slide_id\" t-attf-src=\"/web/image/slide.slide/#{channel.promoted_slide_id.id}/image_medium\" class=\"img-responsive oe_slides_channel_thumbnail\"/>\n   47:                                     <img t-if=\"not channel.promoted_slide_id\" src=\"/website_slides/static/description/channel-default.jpg\" class=\"img-responsive oe_slides_opacity\"/>\n   48                                  </a>\n   49                              </div>\n   ..\n  231                              <div class=\"row mt8 mb8\" t-if=\"channel.promoted_slide_id.tag_ids\">\n  232                                  <t t-foreach=\"channel.promoted_slide_id.tag_ids\" t-as=\"slide_tag\">\n  233:                                     <a t-attf-href=\"/slides/#{slug(channel)}/tag/#{slug(slide_tag)}\" t-attf-class=\"label label-default #{tag and tag.id == slide_tag.id and 'label-primary' ''}\" t-field=\"slide_tag.name\"/>\n  234                                  </t>\n  235                              </div>\n  ...\n  360                  <p t-if=\"slide.tag_ids\" style=\"padding-top: 5px;\">\n  361                      <t t-foreach=\"slide.tag_ids\" t-as=\"att_tag\">\n  362:                         <a t-attf-href=\"/slides/#{slug(channel)}/tag/#{slug(att_tag)}\" t-attf-class=\"label label-default #{tag and tag.name == att_tag.name and 'label-primary' ''} text-muted\" t-field=\"att_tag.name\"/>\n  363                      </t>\n  364                  </p>\n  ...\n  409                                      <div class=\"col-md-8\" t-if=\"slide.tag_ids\">\n  410                                          <t t-foreach=\"slide.tag_ids\" t-as=\"slide_tag\">\n  411:                                             <a t-attf-href=\"/slides/#{slug(slide.channel_id)}/tag/#{slug(slide_tag)}\"  t-attf-class=\"label label-default ml4 mb4 pull-right #{tag and tag.id == slide_tag.id and 'label-primary' ''}\" t-field=\"slide_tag.name\"/>\n  412                                          </t>\n  413                                      </div>\n  ...\n  686                      <div class=\"tab-content\">\n  687                          <div id=\"related\" class=\"tab-pane active mt4\">\n  688:                             <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 panel panel-default\">\n  689                                  <ul class=\"media-list panel-body\">\n  690                                      <t t-set=\"related_slides_list\" t-value=\"list(related_slides)\"/>\n  ...\n  699                          </div>\n  700                          <div id=\"most_viewed\" class=\"tab-pane  mt4\">\n  701:                             <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 panel panel-default\">\n  702                                  <ul class=\"media-list panel-body\">\n  703                                      <t t-set=\"most_viewed_slides_list\" t-value=\"list(most_viewed_slides)\"/>\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_slides\\view\\website_slides_backend.xml:\n   53                              </div>\n   54                              <h1>\n   55:                                 <field name=\"name\" default_focus=\"1\" placeholder=\"Name\"/>\n   56                              </h1>\n   57                              <field name=\"tag_ids\" widget=\"many2many_tags\" placeholder=\"Tags...\"/>\n   ..\n   59                          <group>\n   60                              <field name=\"channel_id\"/>\n   61:                             <field name=\"category_id\" context=\"{'default_channel_id': channel_id}\"/>\n   62                              <field name=\"website_url\"/>\n   63                          </group>\n   ..\n  206                              </div>\n  207                              <h1>\n  208:                                 <field name=\"name\" default_focus=\"1\" placeholder=\"Name\"/>\n  209                              </h1>\n  210                          </div>\n  211:                         <field name=\"category_ids\" widget=\"many2many_tags\" placeholder=\"Categories\" context=\"{'default_channel_id': active_id}\"\n  212                              domain=\"[('channel_id','=', active_id)]\"/>\n  213                          <notebook colspan=\"4\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_slides\\view\\website_slides_embed.xml:\n   35                  </body>\n   36                  <body>\n   37:                 <div id=\"PDFViewer\" t-if=\"not private\" class=\"panel panel-default oe_slides_panel\">\n   38                      <!-- PDF Viewer Header : contains the name, and the share links -->\n   39:                     <div t-if=\"is_embedded\" class=\"navbar-default oe_slides_share_bar\">\n   40                          <div class=\"container-fluid\">\n   41                              <div class=\"row\">\n   ..\n   64                              t-attf-data-slideurl=\"/slides/slide/#{slide.id}/pdf_content\"\n   65                              t-attf-data-downloadable=\"#{slide.download_security}\"\n   66:                             t-att-data-defaultpage=\"page\">\n   67                          <t t-if=\"is_embedded\">\n   68                              <div id=\"slide_share\" class=\"oe_slide_embed_option\">\n   ..\n  105                      </div>\n  106                      <!-- Fixed bottom navbar -->\n  107:                     <div class=\"navbar navbar-default navbar-fixed-bottom\" role=\"navigation\" t-if=\"slide.slide_type in ('presentation', 'document')\">\n  108                          <div class=\"container-fluid oe_slides_panel_footer\">\n  109                              <div class=\"row\" style=\"padding-top:15px;\">\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_theme_install\\models\\ir_module_module.py:\n   41          self.search([ # Uninstall the theme(s) which is (are) installed\n   42              ('state', '=', 'installed'),\n   43:             '|', ('category_id', 'not in', [self.env.ref('base.module_category_hidden').id, self.env.ref('base.module_category_theme_hidden').id]), ('name', '=', 'theme_default'),\n   44              '|', ('category_id', '=', theme_category_id), ('category_id.parent_id', '=', theme_category_id)\n   45          ]).button_immediate_uninstall()\n\nC:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons\\website_theme_install\\views\\views.xml:\n    6          <field name=\"model\">ir.module.module</field>\n    7          <field name=\"arch\" type=\"xml\">\n    8:             <kanban create=\"false\" class=\"o_theme_kanban\" default_order=\"sequence,name\">\n    9                  <field name=\"icon\"/>\n   10                  <field name=\"name\"/>\n   ..\n   55          <field name=\"search_view_id\" ref=\"theme_view_search\"/>\n   56          <field name=\"domain\" eval=\"[\n   57:             '|', ('category_id', 'not in', [ref('base.module_category_hidden'), ref('base.module_category_theme_hidden')]), ('name', '=', 'theme_default'),\n   58              '|', ('category_id', '=', ref('base.module_category_theme')), ('category_id.parent_id', '=', ref('base.module_category_theme'))\n   59          ]\"/>\n\nG:\\Software\\Work\\falinwa_module\\account_bank_statement_reconciliation\\account_bank_statement_reconciliation.py:\n   31              return {}\n   32          res = super(account_bank_statement, self).onchange_journal_id(cr, uid, statement_id, journal_id, context=context)\n   33:         account_id = self.pool.get('account.journal').read(cr, uid, journal_id, ['default_debit_account_id'], context=context)['default_debit_account_id']\n   34          res['value'].update({'account_id': account_id})\n   35          return res\n   ..\n   55                  if move_line.currency_id.id == stmt_currency_id and move_line.amount_currency != 0:\n   56                      if move_line.debit > 0 and move_line.account_id.id in \\\n   57:                                 [statement.journal_id.default_debit_account_id.id, statement.journal_id.default_credit_account_id.id]:\n   58                          res[statement.id] += move_line.amount_currency\n   59                      else:\n   60                          if move_line.credit > 0 and move_line.account_id.id in \\\n   61:                                     [statement.journal_id.default_debit_account_id.id, statement.journal_id.default_credit_account_id.id]:\n   62                              res[statement.id] += move_line.amount_currency\n   63                  else:\n   ..\n   65                      ctx.update({'date': move_line.date})\n   66                      if move_line.debit > 0 and move_line.account_id.id in \\\n   67:                                 [statement.journal_id.default_debit_account_id.id, statement.journal_id.default_credit_account_id.id]:\n   68                              res[statement.id] += res_currency_obj.compute(cursor,\n   69                                      user, company_currency_id, stmt_currency_id,\n   ..\n   71                      else:\n   72                          if move_line.credit > 0 and move_line.account_id.id in \\\n   73:                                 [statement.journal_id.default_debit_account_id.id, statement.journal_id.default_credit_account_id.id]:\n   74                              res[statement.id] -= res_currency_obj.compute(cursor,\n   75                                      user, company_currency_id, stmt_currency_id,\n\nG:\\Software\\Work\\falinwa_module\\account_prepayment\\account.py:\n   34              view_load=True,\n   35              domain=\"[('type', '=', 'payable')]\",\n   36:             help=\"This account will be used instead of the default one as the prepayment payable account for the current partner\",\n   37              required=True),\n   38          'property_account_prereceivable': fields.property(\n   ..\n   42              view_load=True,\n   43              domain=\"[('type', '=', 'receivable')]\",\n   44:             help=\"This account will be used instead of the default one as the prepayment receivable account for the current partner\",\n   45              required=True),\n   46      }\n   ..\n   52          'use_prepayment_account': fields.boolean('Use Prepayment account', help=\"Check this if you want to input a prepayment on the prepayment accounts.\"),\n   53      }\n   54:     _defaults = {\n   55          'use_prepayment_account': False,\n   56      }\n\nG:\\Software\\Work\\falinwa_module\\alurida_field_ext\\models\\account_invoice.py:\n   62      fal_product_image = fields.Binary(string='Product Image', related=\"product_id.image_medium\")\n   63      fal_hs_code = fields.Char(string='HS Code')\n   64:     fal_initial_package_id = fields.Many2one('product.packaging', string='Package (Initial)', default=False)\n   65:     fal_final_package_id = fields.Many2one('product.packaging', string='Package (Final)', default=False)\n   66      fal_estimated_weight = fields.Float(string='Estimated Weight (KG)', compute='_compute_estimated', store=True)\n   67      fal_estimated_volume = fields.Float(string='Estimated Volume (CBM)', compute='_compute_estimated', store=True)\n\nG:\\Software\\Work\\falinwa_module\\alurida_field_ext\\models\\sale.py:\n   49      fal_estimated_amount_taxed = fields.Monetary(string='Total Amount (Estimated)', compute='_amount_estimated_all', readonly=True, store=True)\n   50      fal_estimated_amount_tax = fields.Monetary(string='Tax Amount (Estimated)', compute='_amount_estimated_all', readonly=True, store=True)\n   51:     fal_with_image_hs = fields.Boolean('Print with Image and HS Code', default=False)\n   52      fal_credit_limit_exceeded = fields.Boolean(compute='_get_fal_credit_limit_exceeded', string='Credit Limit Exceeded')\n   53      fal_invisible_flag = fields.Boolean(compute='_get_hide_flag', string='Hide Flag')\n   ..\n   62          ('done', 'Done'),\n   63          ('cancel', 'Cancelled'),\n   64:         ], string='Status', readonly=True, copy=False, index=True, track_visibility='onchange', default='draft')\n   65  \n   66      @api.multi\n   ..\n  150      def _get_uom_id_new(self):\n  151          \"\"\"\n  152:         Override original version. Should be defaulted to kg which is used by Alurida.\n  153          The total amount calculation based on kg.\n  154          \"\"\"\n  ...\n  158      fal_product_image = fields.Binary(string='Product Image', related='product_id.image_medium')\n  159      fal_hs_code = fields.Char(string='HS Code')\n  160:     fal_estimated_qty = fields.Float(string='Order Qty', required=True, default=1.0)\n  161:     fal_weight_uom_id = fields.Many2one('product.uom', string='Order Unit', default=_get_uom_id_new)\n  162      fal_price = fields.Float(string='Price')\n  163      fal_unit_of_price_id = fields.Many2one('fal.unit.of.price', string='Unit Of Price', required=True)\n  164:     fal_initial_package_id = fields.Many2one('product.packaging', string='Package (Initial)', default=False)\n  165      fal_estimated_weight = fields.Float(string='Estimated Weight (KG)', compute='_compute_estimated', store=True)\n  166      fal_estimated_volume = fields.Float(string='Estimated Volume (CBM)', compute='_compute_estimated', store=True)\n  ...\n  170      fal_estimated_amount_taxed = fields.Monetary(string='Total Amount Untaxed (Estimated)', compute='_compute_amount', readonly=True, store=True)\n  171      fal_estimated_amount_tax = fields.Monetary(string='Tax Amount (Estimated)', compute='_compute_amount', readonly=True, store=True)\n  172:     price_unit = fields.Float(required=True, digits=dp.get_precision('Product Price'), default=0.0, string='Unit Price (KG)', compute='_compute_kg_price')\n  173:     product_uom_qty = fields.Float(default=0.0, string='Loaded Weight (KG)')\n  174  \n  175      @api.multi\n\nG:\\Software\\Work\\falinwa_module\\alurida_field_ext\\models\\stock.py:\n   17      fal_arrival_date = fields.Date(string='Arrival Date')\n   18      fal_carrier_id = fields.Many2one('res.partner', string='Carrier')\n   19:     fal_shipment_mode = fields.Selection([('air', 'Air'), ('sea', 'Sea'), ('land', 'Land')], string='Shipment Mode', default='sea')\n   20      fal_container_information_ids = fields.One2many('fal.container.information', 'wave_id', string='Container Information')\n   21  \n\nG:\\Software\\Work\\falinwa_module\\alurida_field_ext\\views\\sale_view.xml:\n  108                  <field name=\"fal_price\"/>\n  109                  <field name=\"fal_unit_of_price_id\"/>\n  110:                 <field name=\"fal_initial_package_id\" context=\"{'default_product_tmpl_id': product_tmpl_id, 'partner_id':parent.partner_id, 'quantity':product_uom_qty, 'pricelist':parent.pricelist_id, 'uom':product_uom, 'company_id': parent.company_id}\" domain=\"[('product_tmpl_id','=',product_tmpl_id)]\" groups=\"product.group_stock_packaging\"/>\n  111                  <field name=\"fal_estimated_weight\"/>\n  112                  <field name=\"fal_estimated_volume\"/>\n  113                  <field name=\"fal_loaded_qty\"/>\n  114:                 <field name=\"product_packaging\" context=\"{'default_product_tmpl_id': product_tmpl_id, 'partner_id':parent.partner_id, 'quantity':product_uom_qty, 'pricelist':parent.pricelist_id, 'uom':product_uom, 'company_id': parent.company_id}\" domain=\"[('product_tmpl_id','=',product_tmpl_id)]\" string=\"Package (Final)\" groups=\"product.group_stock_packaging\"/>\n  115              </xpath>\n  116              <xpath expr=\"//field[@name='order_line']/tree/field[@name='product_uom_qty']\" position=\"after\">\n  ...\n  158                          <field name=\"fal_price\"/>\n  159                          <field name=\"fal_unit_of_price_id\"/>\n  160:                         <field name=\"fal_initial_package_id\" context=\"{'default_product_tmpl_id': product_tmpl_id, 'partner_id':parent.partner_id, 'quantity':product_uom_qty, 'pricelist':parent.pricelist_id, 'uom':product_uom, 'company_id': parent.company_id}\" domain=\"[('product_tmpl_id','=',product_tmpl_id)]\"/>\n  161                          <field name=\"fal_estimated_weight\"/>\n  162                          <field name=\"fal_estimated_volume\"/>\n  ...\n  165                      <group name=\"alurida_loaded\">\n  166                          <field name=\"fal_loaded_qty\"/>\n  167:                         <field name=\"product_packaging\" context=\"{'default_product_tmpl_id': product_tmpl_id, 'partner_id':parent.partner_id, 'quantity':product_uom_qty, 'pricelist':parent.pricelist_id, 'uom':product_uom, 'company_id': parent.company_id}\" domain=\"[('product_tmpl_id','=',product_tmpl_id)]\" string=\"Package (Final)\"/>\n  168                          <field context=\"{'partner_id':parent.partner_id, 'quantity':product_uom_qty, 'pricelist':parent.pricelist_id, 'uom':product_uom, 'uom_qty_change':True, 'company_id': parent.company_id}\" name=\"product_uom_qty\"/>\n  169                          <field name=\"fal_loaded_volume\"/>\n\nG:\\Software\\Work\\falinwa_module\\analytic_multicurrency\\__openerp__.py:\n   47    the right currency (owner's company)\n   48  \n   49: * By default, nothing changes for single company implementation.\n   50  \n   51  As a result, we can now really share the same analytic account between\n\nG:\\Software\\Work\\falinwa_module\\analytic_multicurrency\\analytic.py:\n   39              return sums\n   40          for child_id, field in product(child_ids, fields):\n   41:             sums.setdefault(child_id, {})[field] = 0.0\n   42  \n   43          where_date = ''\n\nG:\\Software\\Work\\falinwa_module\\analytic_multicurrency\\analytic_analysis.py:\n   37              return res\n   38          for child_id, field in product(child_ids, name):\n   39:             sums.setdefault(child_id, {})[name] = 0.0\n   40  \n   41          sql = (\"SELECT account_analytic_line.account_id, \"\n   ..\n   67              return sums\n   68          for child_id, field in product(child_ids, name):\n   69:             sums.setdefault(child_id, {})[name] = 0.0\n   70  \n   71          sql = (\"SELECT account_analytic_line.account_id, \"\n\nG:\\Software\\Work\\falinwa_module\\crm_timesheet\\views\\crm_lead_view.xml:\n   14              <page string=\"Timesheet\">\n   15                  <field name=\"timesheet_ids\"\n   16:                     context=\"{'default_account_id': analytic_account_id,\n   17:                               'default_user_id': uid}\">\n   18                      <tree editable=\"bottom\">\n   19                          <field name=\"date\"/>\n   20                          <field name=\"user_id\" required=\"1\" options='{\"no_open\": True}'\n   21:                             context=\"{'default_groups_ref': ['base.group_user']}\"/>\n   22                          <field name=\"name\"/>\n   23:                         <field name=\"account_id\" context=\"{'default_type': 'contract'}\" options=\"{'no_open': True, 'no_create': True}\"/>\n   24                          <field name=\"unit_amount\" string=\"Duration\" sum=\"Total time\" widget=\"float_time\"/>\n   25                          <field name=\"is_timesheet\" invisible=\"1\"/>\n   ..\n   42              <page string=\"Timesheet\">\n   43                  <field name=\"timesheet_ids\"\n   44:                     context=\"{'default_account_id': analytic_account_id,\n   45:                               'default_user_id': uid}\">\n   46                      <tree editable=\"bottom\">\n   47                          <field name=\"date\"/>\n   48                          <field name=\"user_id\" required=\"1\" options='{\"no_open\": True}'\n   49:                             context=\"{'default_groups_ref': ['base.group_user']}\"/>\n   50                          <field name=\"name\"/>\n   51:                         <field name=\"account_id\" context=\"{'default_type': 'contract'}\" options=\"{'no_open': True, 'no_create': True}\"/>\n   52                          <field name=\"unit_amount\" string=\"Duration\" sum=\"Total time\" widget=\"float_time\"/>\n   53                          <field name=\"is_timesheet\" invisible=\"1\"/>\n\nG:\\Software\\Work\\falinwa_module\\currency_rate_update\\model\\currency_rate_update.py:\n  217      note = fields.Text('Update logs')\n  218      max_delta_days = fields.Integer(\n  219:         string='Max delta days', default=4, required=True,\n  220          help=\"If the time delta between the rate date given by the \"\n  221          \"webservice and the current date exceeds this value, \"\n  ...\n  226          ('months', 'Month(s)')],\n  227          string='Currency update frequency',\n  228:         default='days')\n  229:     interval_number = fields.Integer(string='Frequency', default=1)\n  230:     next_run = fields.Date(string='Next run on', default=fields.Date.today())\n  231  \n  232      _sql_constraints = [('curr_service_unique',\n\nG:\\Software\\Work\\falinwa_module\\currency_rate_update\\services\\update_service_CH_ADMIN.py:\n   27  \n   28  from datetime import datetime\n   29: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT\n   30  \n   31  \n   ..\n   74          rate_date = rate_date[0]\n   75          rate_date_datetime = datetime.strptime(rate_date,\n   76:                                                DEFAULT_SERVER_DATE_FORMAT)\n   77          self.check_rate_date(rate_date_datetime, max_delta_days)\n   78          # we dynamically update supported currencies\n\nG:\\Software\\Work\\falinwa_module\\currency_rate_update\\services\\update_service_ECB.py:\n   24  \n   25  from datetime import datetime\n   26: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT\n   27  \n   28  import logging\n   ..\n   73                                namespaces=ecb_ns)[0]\n   74          rate_date_datetime = datetime.strptime(rate_date,\n   75:                                                DEFAULT_SERVER_DATE_FORMAT)\n   76          self.check_rate_date(rate_date_datetime, max_delta_days)\n   77          # We dynamically update supported currencies\n\nG:\\Software\\Work\\falinwa_module\\currency_rate_update\\services\\update_service_PL_NBP.py:\n   24  \n   25  from datetime import datetime\n   26: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT\n   27  \n   28  import logging\n   ..\n   68                                namespaces=ns)[0]\n   69          rate_date_datetime = datetime.strptime(rate_date,\n   70:                                                DEFAULT_SERVER_DATE_FORMAT)\n   71          self.check_rate_date(rate_date_datetime, max_delta_days)\n   72          # We dynamically update supported currencies\n\nG:\\Software\\Work\\falinwa_module\\fal_account_budget_ext\\models\\account_budget.py:\n   39          return True\n   40      \n   41:     sequence = fields.Integer(default=10)\n   42      name = fields.Char('Name', size=128, translate=1)\n   43      parent_id = fields.Many2one('fal.account.budget.tags', 'Parent Budget Tags')\n   44:     type = fields.Selection([('regular','Regular'), ('view','View')], 'Type', required=1, default='regular')\n   45      child_ids = fields.One2many('fal.account.budget.tags', 'parent_id', 'Child Budget Tags', copy=False)\n   46  \n\nG:\\Software\\Work\\falinwa_module\\fal_account_periods_lock\\models\\fal_account_periods_lock.py:\n    8  from openerp.osv import expression\n    9  from openerp.tools.float_utils import float_round as round\n   10: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT, DEFAULT_SERVER_DATETIME_FORMAT\n   11  from openerp.exceptions import UserError, ValidationError, RedirectWarning\n   12  from openerp import api, fields, models, _\n   ..\n   21      code = fields.Char(string='Code', size=6, required=True)\n   22      company_id = fields.Many2one('res.company', string='Company', required=True,\n   23:         default=lambda self: self.env['res.users'].browse(self._uid).company_id.id, )\n   24      date_start = fields.Date(string='Start Date', required=True)\n   25      date_stop = fields.Date(string='End Date', required=True)\n   ..\n   29          ('done', 'Closed'),\n   30          ],\n   31:         string='Status', readonly=True, copy=False, default='draft')\n   32:     lock_gap_days_non_adviser = fields.Integer('Lock Gap Days Non-Adviser', default=8)\n   33:     lock_gap_days_adviser = fields.Integer('Lock Gap Days Adviser', default=10)\n   34  \n   35  \n   ..\n  190                  if self.user_has_groups('account.group_account_manager'):\n  191                      lock_date = period_ids[0].adviser_locking_date\n  192:                 if fields.date.today() >= datetime.strptime(lock_date, DEFAULT_SERVER_DATE_FORMAT).date():\n  193                      raise UserError(_(\"You cannot add/modify entries prior to and inclusive of the lock date %s. Check the company settings or ask someone with the 'Adviser' role\") % (lock_date))\n  194          return True\n\nG:\\Software\\Work\\falinwa_module\\fal_account_periods_lock\\views\\fal_account_periods_lock_view.xml:\n  163              <field name=\"view_type\">form</field>\n  164              <field name=\"view_mode\">tree,form</field>\n  165:             <field name=\"context\">{'search_default_draft': 1}</field>\n  166              <field name=\"help\" type=\"html\">\n  167                <p class=\"oe_view_nocontent_create\">\n\nG:\\Software\\Work\\falinwa_module\\fal_account_sequence\\models\\account.py:\n    7      _order = \"sequence, code\"\n    8      \n    9:     sequence = fields.Integer(default=10)\n   10      \n   11  # end of AccountAccount()\n   ..\n   16      _order = 'sequence, code, name asc'\n   17      \n   18:     sequence = fields.Integer(default=10)\n   19      \n   20  # end of AccountAnalytic()\n\nG:\\Software\\Work\\falinwa_module\\fal_analytic_account_d2\\models\\fal_analytic_account_d2.py:\n   75      name = fields.Char(string='Analytic Account D2', index=True, required=True, track_visibility='onchange')\n   76      code = fields.Char(string='Reference', index=True, track_visibility='onchange')\n   77:     company_id = fields.Many2one('res.company', string='Company', default=lambda self: self.env.user.company_id)\n   78      complete_name = fields.Char(string='Full Name', compute=_compute_get_full_name, store=True)\n   79      account_type = fields.Selection([('view','Analytic View'), ('normal','Analytic Account')], 'Type of Account', required=True,\n   80                                   help=\"If you select the View Type, it means you won\\'t allow to create journal entries using that account.\\n\"\\\n   81:                                   \"The type 'Analytic account' stands for usual accounts that you only want to use in accounting.\", default='normal')\n   82      parent_id = fields.Many2one('fal.analytic.account.d2', 'Parent Analytic Account', domain=\"[('account_type', '=', 'view')]\")\n   83      child_ids = fields.One2many('fal.analytic.account.d2', 'parent_id', 'Child Accounts', copy=False)\n   84      child_complete_ids = fields.Many2many('fal.analytic.account.d2', compute=_compute_child_compute, string=\"Account Hierarchy\")\n   85:     sequence = fields.Integer(default=10)\n   86:     active = fields.Boolean('Active', default=True)\n   87      #end here\n   88      \n\nG:\\Software\\Work\\falinwa_module\\fal_analytic_account_d2\\models\\purchase.py:\n    6      _inherit = \"purchase.order.line\"\n    7      \n    8:     def _default_fal_account_analytic_d2_id(self):\n    9          fal_account_analytic_d2_id = False\n   10          if self.env.context.get('partner', False):\n   11              partner_id = self.env['res.partner'].browse(self.env.context.get('partner', False))\n   12:             fal_account_analytic_d2_id = partner_id.fal_default_account_analytic_d2_id and partner_id.fal_default_account_analytic_d2_id.id\n   13          return fal_account_analytic_d2_id\n   14      \n   15      fal_account_analytic_d2_id = fields.Many2one('fal.analytic.account.d2',\n   16:         string='Analytic Account D2', domain=\"[('account_type', '=', 'normal')]\", default=_default_fal_account_analytic_d2_id)      \n   17      \n   18   #end of PurchaseOrderLine()\n\nG:\\Software\\Work\\falinwa_module\\fal_analytic_account_d2\\models\\res_partner.py:\n    6      _inherit = \"res.partner\"\n    7      \n    8:     fal_default_account_analytic_d2_id = fields.Many2one('fal.analytic.account.d2',\n    9:         string='Default Analytic Account D2', domain=\"[('account_type', '=', 'normal')]\")      \n   10      \n   11   #end of ResPartner()\n\nG:\\Software\\Work\\falinwa_module\\fal_analytic_account_d2\\models\\sale.py:\n    6      _inherit = \"sale.order.line\"\n    7      \n    8:     def _default_fal_account_analytic_d2_id(self):\n    9          fal_account_analytic_d2_id = False\n   10          if self.env.context.get('partner', False):\n   11              partner_id = self.env['res.partner'].browse(self.env.context.get('partner', False))\n   12:             fal_account_analytic_d2_id = partner_id.fal_default_account_analytic_d2_id and partner_id.fal_default_account_analytic_d2_id.id\n   13          return fal_account_analytic_d2_id\n   14          \n   15      fal_account_analytic_d2_id = fields.Many2one('fal.analytic.account.d2',\n   16:         string='Analytic Account D2', domain=\"[('account_type', '=', 'normal')]\", default=_default_fal_account_analytic_d2_id)    \n   17  \n   18      @api.multi\n\nG:\\Software\\Work\\falinwa_module\\fal_analytic_account_d2\\views\\general_view.xml:\n    9              <field name=\"arch\" type=\"xml\">\n   10                  <xpath expr=\"//group/field[@name='category_id']\" position=\"after\">\n   11:                     <field name=\"fal_default_account_analytic_d2_id\" />                    \n   12                  </xpath>\n   13              </field>\n\nG:\\Software\\Work\\falinwa_module\\fal_analytic_account_multicompany_ext\\models\\analytic.py:\n    6      _inherit = \"account.analytic.account\"\n    7      \n    8:     company_id = fields.Many2one(required=False, default=False)\n    9      \n   10  \n\nG:\\Software\\Work\\falinwa_module\\fal_asset_behaviour_ext\\models\\account_asset.py:\n    3  from openerp import api, fields, models, _\n    4  import datetime, openerp.addons.decimal_precision as dp\n    5: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT as DF\n    6  from datetime import date, datetime\n    7  from dateutil.relativedelta import relativedelta\n    .\n   39          return True\n   40          \n   41:     fal_type = fields.Selection([('view','Account View'), ('normal','Normal')], 'Type', required=True, default='normal')\n   42      parent_id = fields.Many2one('account.asset.category', 'Parent Account', domain=\"[('fal_type', '=', 'view')]\")\n   43      child_ids = fields.One2many('account.asset.category', 'parent_id', 'Children', copy=False)\n   ..\n  243              'view_id': False,\n  244              'type': 'ir.actions.act_window',\n  245:             'context': dict(self.env.context or {}, search_default_invoice_id=self.id, default_invoice_id=self.id),\n  246          }\n  247          \n\nG:\\Software\\Work\\falinwa_module\\fal_bank_account_iban_format\\models\\account.py:\n    7      _rec_name = \"fal_display_name\"\n    8      \n    9:     fal_bank_account_type = fields.Selection([('iban','IBAN'), ('open','Open Number')], string=\"Bank Account Type\", default=\"iban\", required=True)\n   10      fal_iban_account_code1 = fields.Char('IBAN1', size=4)\n   11      fal_iban_account_code2 = fields.Char('IBAN2', size=4)\n\nG:\\Software\\Work\\falinwa_module\\fal_bank_balance_computation\\wizard\\bank_balance_computation_wizard.py:\n    2  from openerp.tools.translate import _\n    3  import openerp.addons.decimal_precision as dp\n    4: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT, DEFAULT_SERVER_DATETIME_FORMAT, DATETIME_FORMATS_MAP, float_compare\n    5  import time\n    6  \n    .\n   27      ]\n   28  \n   29:     def _get_default_temp(self, cr, uid, ids, target_moves='posted', date_start=False, date_stop=False, context=None):\n   30          if context is None:\n   31              context = {}\n   ..\n   65          return temp\n   66  \n   67:     _defaults = {\n   68          'target_moves' : 'posted',\n   69          'state' : 'draft',\n   70:         'temp' : _get_default_temp,\n   71      }\n   72      \n   ..\n   79  \n   80          #get temp\n   81:         temp = self._get_default_temp(cr, uid, ids, target_moves=data_wizard.target_moves, date_start=data_wizard.date_start, date_stop=data_wizard.date_stop, context=context)\n   82  \n   83          temp_del = []\n\nG:\\Software\\Work\\falinwa_module\\fal_calendar_meeting_ext\\models\\calendar_event.py:\n    8  \n    9      # Start Field Definition\n   10:     fal_meeting_double_validation = fields.Boolean('Meeting Double Validation', default=False)\n   11      # End Field Definition\n   12  \n\nG:\\Software\\Work\\falinwa_module\\fal_calendar_meeting_ext\\wizard\\fal_calendar_meeting_wizard.py:\n   18              calendar_event_meeting_wizard.calendar_event_id.state = \"open\"\n   19  \n   20:     calendar_event_id = fields.Many2one(\"calendar.event\", \"Calendar ID\", default=lambda s: s._context['calendar_event_id'])\n   21      warning_msg = fields.Char(\"Warning Message\", compute=_generate_warning_message)\n   22  \n\nG:\\Software\\Work\\falinwa_module\\fal_company_blank\\__openerp__.py:\n    5      'author': 'Falinwa Hans',\n    6      \"description\": \"\"\"\n    7:     Module to give blank default value to company\n    8      \"\"\",\n    9      \"depends\" : ['base','product'],\n\nG:\\Software\\Work\\falinwa_module\\fal_company_blank\\models\\product.py:\n    7      _inherit = \"product.template\"\n    8      \n    9:     _defaults = {\n   10          'company_id' : False,\n   11      }\n\nG:\\Software\\Work\\falinwa_module\\fal_company_blank\\models\\res_partner.py:\n    7      _inherit = \"res.partner\"\n    8      \n    9:     _defaults = {\n   10          'company_id' : False,\n   11      }\n\nG:\\Software\\Work\\falinwa_module\\fal_crm_probability_ext\\models\\crm.py:\n   80      child_ids = fields.One2many('fal.customer.project.type', 'parent_id', 'Child Accounts', copy=False)\n   81      child_complete_ids = fields.Many2many('fal.customer.project.type', compute=_compute_child_compute, string=\"Account Hierarchy\")\n   82:     sequence = fields.Integer(string='Sequence', default=10)\n   83      type = fields.Selection([('view', 'View'), ('normal', 'Normal')], string='Type')\n   84  \n\nG:\\Software\\Work\\falinwa_module\\fal_crm_project\\models\\crm_lead.py:\n  200              analytic_id = analytic_obj.create(analytic_data)\n  201              for expertise_skill_tag_line in lead.fal_lead_expertise_tag_line_ids:\n  202:                 project_id = expertise_skill_tag_line.sudo().project_template_id.copy(default={\n  203                      'fal_origin_lead_id': lead.id,\n  204                      'name': lead.name + ' - ' + expertise_skill_tag_line.expertise_skill_tag_id.name,\n  ...\n  220                          if count_name < 10:\n  221                              str_count = '0' + str_count\n  222:                         project_duplicate_id = self.env['project.project'].sudo().search([('analytic_account_id', '=', child_project.id)]).copy(default={\n  223                              'name': child_project.name,\n  224                              'fal_origin_lead_id': project_id.fal_origin_lead_id.id,\n  ...\n  310      project_template_id = fields.Many2one('project.project', 'Project Template')\n  311      sustainable_building = fields.Boolean('Is Suistainable Building')\n  312:     sequence = fields.Integer(default=10, required=True)\n  313      fal_offer_category_tags_ids = fields.Many2many('fal.offer.category.tag', 'fal_offer_category_expertiseskill_tag_rel', 'expertise_skill_tag__id', 'tag_id', string=\"Offer Category Tags\")\n  314  \n  ...\n  322  \n  323      @api.model\n  324:     def _get_default_account_analytic_id(self):\n  325          return self.user_id.fal_analytic_account_id and self.user_id.fal_analytic_account_id.id\n  326  \n  ...\n  331      expected_date = fields.Date(string='Expected Date')\n  332      realized_date = fields.Date(string='Realized Date')\n  333:     state = fields.Selection([('done', 'Done'), ('not_done', 'Not Done')], default='not_done', string='Status')\n  334      lead_id = fields.Many2one('crm.lead', 'Lead', ondelete='cascade')\n  335:     sequence = fields.Integer(string='Sequence', default=10)\n  336:     account_analytic_id = fields.Many2one('account.analytic.account', 'Account Analytic', default=_get_default_account_analytic_id)\n  337      duration = fields.Float(string=\"Duration\")\n  338  \n  ...\n  360      _inherit = 'crm.team'\n  361  \n  362:     def _get_default_team_id(self, cr, uid, context=None, user_id=None):\n  363          if context is None:\n  364              context = {}\n  ...\n  367          team_id = self.pool['ir.model.data'].xmlid_to_res_id(cr, uid, 'fal_crm_project.fal_classic_sales_team')\n  368          context = dict(context)\n  369:         context['default_team_id'] = team_id\n  370:         return super(crm_team, self)._get_default_team_id(cr, uid, context=context, user_id=user_id)\n  371  \n  372  # end of crm_team()\n  ...\n  383      child_ids = fields.One2many('fal.offer.category.tag', 'parent_id', 'Child Tag')\n  384      expertise_skill_tag_ids = fields.Many2many('fal.expertise.skill.tag', 'fal_offer_category_expertiseskill_tag_rel', 'tag_id', 'expertise_skill_tag__id',  string=\"Expertise Skill Tags\")\n  385:     sequence = fields.Integer(string='Sequence', default=10)\n  386  \n  387  # end of fal_offer_category_tag()\n  ...\n  424      lead_id = fields.Many2one('crm.lead', 'Lead')\n  425      type = fields.Selection([('cam', 'Team CAM'), ('competitior', 'Competitor')],\n  426:         'Type', invisible=True, default='cam')\n  427      type_id = fields.Many2one('fal.crm.project.team.type', 'Type', required=True)\n  428      partner_ids = fields.Many2many('res.partner', 'fal_crmprojectteam_partner_rel', 'crm_project_team_id', 'partner_id', string=\"Member\")\n\nG:\\Software\\Work\\falinwa_module\\fal_crm_project\\models\\project.py:\n   54              for child_project in project.fal_project_template_id.child_ids:\n   55                  if not child_project.fal_is_chiffrage:\n   56:                     project_duplicate_id = self.env['project.project'].sudo().search([('analytic_account_id', '=', child_project.id)]).copy(default={\n   57                          'name': child_project.name,\n   58                          'fal_origin_lead_id': project.fal_origin_lead_id.id,\n\nG:\\Software\\Work\\falinwa_module\\fal_crm_project\\views\\crm_lead_view.xml:\n  490              <field name=\"view_mode\">tree,form</field>\n  491              <field name=\"context\">{\n  492:                     'search_default_assigned_to_me': 1\n  493                  }\n  494              </field>\n\nG:\\Software\\Work\\falinwa_module\\fal_crm_project\\views\\project_view.xml:\n   91              <field name=\"view_mode\">kanban,tree,form,pivot</field>\n   92              <field name=\"search_view_id\" ref=\"project.view_project_project_filter\"/>\n   93:             <field name=\"context\">{'search_default_Current': 1}</field>\n   94              <field name=\"help\" type=\"html\">\n   95                  <p class=\"oe_view_nocontent_create\">\n\nG:\\Software\\Work\\falinwa_module\\fal_deduplicate_leads\\wizard\\fal_deduplicate_leads_wizard.py:\n   95      }\n   96  \n   97:     def default_get(self, cr, uid, fields, context=None):\n   98          if context is None:\n   99              context = {}\n  100:         res = super(FalMergeLeadsAutomatic, self).default_get(cr, uid, fields, context)\n  101          if context.get('active_model') == 'crm.lead' and context.get('active_ids'):\n  102              leads_ids = context['active_ids']\n  ...\n  106          return res\n  107  \n  108:     _defaults = {\n  109          'state': 'option'\n  110      }\n\nG:\\Software\\Work\\falinwa_module\\fal_easy_reporting\\wizard\\easy_exporting_wizard.py:\n   22      }\n   23  \n   24:     _defaults = {\n   25          'file_format': 'Excel',\n   26      }\n\nG:\\Software\\Work\\falinwa_module\\fal_expense_control\\models\\hr_expense.py:\n  100      unit_amount = fields.Float(string='Unit Price', digits_compute=dp.get_precision('Product Price'))\n  101      fal_real_amount = fields.Float(string='Real Price', digits_compute=dp.get_precision('Product Price'))\n  102:     fal_real_currency = fields.Many2one('res.currency', string='Real Currency', required=True, default=_get_currency)\n  103      fal_reason = fields.Text(string='Explanation')\n  104      fal_reason_why = fields.Selection([('customer', 'With Customer'), ('manager', 'With Manager'), ('director', 'Require Refund To Director'), ('employee', 'Require at Employee Charge')], string='Reason')\n  105      fal_confirm_refund = fields.Boolean(string='Confirm Refund')\n  106:     fal_quantity = fields.Float(string='Quantity', digits_compute=dp.get_precision('Product Unit of Measure'), default=1.0)\n  107      fal_document_currency_id = fields.Many2one('res.currency', string='Document Currency')\n  108      fal_state = fields.Selection(related='expense_id.state', string=\"State\")\n\nG:\\Software\\Work\\falinwa_module\\fal_expense_control\\views\\hr_expense_view.xml:\n   13                      </xpath>\n   14                      <xpath expr=\"//field[@name='line_ids']\" position=\"attributes\">\n   15:                         <attribute name=\"context\">{'currency_id': currency_id, 'default_fal_document_currency_id': currency_id, 'default_analytic_account': context.get('analytic_account', '')}</attribute>\n   16                      </xpath>\n   17                      <!-- <xpath expr=\"//button[@name='confirm']\" position=\"attributes\">\n\nG:\\Software\\Work\\falinwa_module\\fal_expense_ext\\views\\account_voucher_view.xml:\n   32              <field name=\"view_type\">form</field>\n   33              <field name=\"domain\">[('journal_id.type','in',['purchase','purchase_refund']), ('type','=','purchase'), ('fal_is_employee_receipt','=',0), ('fal_is_tax_receipt','=',0) ]</field>\n   34:             <field name=\"context\">{'default_type': 'purchase', 'type': 'purchase'}</field>\n   35              <field name=\"view_id\" eval=\"False\"/>\n   36              <field name=\"search_view_id\" ref=\"account_voucher.view_voucher_filter_vendor\"/>\n   ..\n   51              <field name=\"view_type\">form</field>\n   52              <field name=\"domain\">[('journal_id.type','in',['purchase','purchase_refund']), ('type','=','purchase') , ('fal_is_employee_receipt','=',1)]</field>\n   53:             <field name=\"context\">{'default_type': 'purchase', 'type': 'purchase', 'default_fal_is_employee_receipt':1}</field>\n   54              <field name=\"view_id\" eval=\"False\"/>\n   55              <field name=\"search_view_id\" ref=\"account_voucher.view_voucher_filter_vendor\"/>\n   ..\n   82              <field name=\"view_type\">form</field>\n   83              <field name=\"domain\">[('journal_id.type','in',['purchase','purchase_refund']), ('type','=','purchase') , ('fal_is_tax_receipt','=',1)]</field>\n   84:             <field name=\"context\">{'default_type': 'purchase', 'type': 'purchase', 'default_fal_is_tax_receipt':1}</field>\n   85              <field name=\"view_id\" eval=\"False\"/>\n   86              <field name=\"search_view_id\" ref=\"account_voucher.view_voucher_filter_vendor\"/>\n   ..\n  131              <field name=\"view_type\">form</field>\n  132              <field name=\"domain\">[('journal_id.type', 'in', ['bank', 'cash']), ('type','=','payment'), ('fal_is_expense_employee','=',1)]</field>\n  133:             <field name=\"context\">{'type':'payment','default_fal_is_expense_employee':1}</field>\n  134              <field name=\"view_id\" eval=\"False\"/>\n  135              <!-- <field name=\"search_view_id\" ref=\"account_voucher.view_voucher_filter_vendor_pay\"/> -->\n  ...\n  176                      <group>\n  177                          <group>\n  178:                             <field name=\"partner_id\" required=\"1\" invisible=\"context.get('line_type', False)\" on_change=\"onchange_partner_id(partner_id, journal_id, amount, currency_id, type, date, context)\" context=\"{'invoice_currency':currency_id, 'default_customer': 0, 'search_default_fal_is_salary_tax_partner': 1, 'default_fal_is_salary_tax_partner': 1}\"  string=\"Pay To\" domain=\"[('fal_is_salary_tax_partner','=', True)]\" />\n  179                              <field name=\"currency_id\" invisible=\"1\"/>\n  180                              <field name=\"amount\" invisible=\"1\" on_change=\"onchange_amount(amount, payment_rate, partner_id, journal_id, currency_id, type, date, payment_rate_currency_id, company_id, context)\" class=\"oe_inline\" widget='monetary' options='{\"currency_field\": \"currency_id\"}'/>\n  ...\n  269              <field name=\"view_type\">form</field>\n  270              <field name=\"domain\">[('journal_id.type', 'in', ['bank', 'cash']), ('type','=','payment'), ('fal_is_tax_employee','=',1)]</field>\n  271:             <field name=\"context\">{'type':'payment','default_fal_is_tax_employee':1}</field>\n  272              <field name=\"view_id\" eval=\"False\"/>\n  273              <!-- <field name=\"search_view_id\" ref=\"account_voucher.view_voucher_filter_vendor_pay\"/> -->\n\nG:\\Software\\Work\\falinwa_module\\fal_expense_sheet\\models\\hr_expense.py:\n   24  \n   25      name = fields.Char('Description', required=True, readonly=True, states={'draft':[('readonly',False)], 'confirm':[('readonly',False)]})\n   26:     date = fields.Date('Date', select=True, readonly=True, states={'draft':[('readonly',False)], 'confirm':[('readonly',False)]}, default=fields.Date.context_today)\n   27      employee_id = fields.Many2one('hr.employee', \"Employee\", required=True, readonly=True)\n   28      date_confirm = fields.Date('Confirmation Date', select=True, copy=False,\n   ..\n   36      note = fields.Text('Note')\n   37      department_id = fields.Many2one('hr.department','Department', readonly=True)\n   38:     company_id = fields.Many2one('res.company', 'Company', required=True, readonly=True, default=lambda self: self.env.user.company_id)\n   39      state = fields.Selection([\n   40              ('draft', 'New'),\n   ..\n   47              'Status', readonly=True, track_visibility='onchange', copy=False,\n   48              help='When the expense request is created the status is \\'Draft\\'.\\n It is confirmed by the user and request is sent to admin, the status is \\'Waiting Confirmation\\'.\\\n   49:             \\nIf the admin accepts it, the status is \\'Accepted\\'.\\n If the accounting entries are made for the expense request, the status is \\'Waiting Payment\\'.', default='draft')\n   50      amount = fields.Monetary(compute=_compute_amount, string='Total Amount', digits_compute=dp.get_precision('Account'), store=1)   \n   51      currency_id = fields.Many2one('res.currency', 'Currency', required=True, readonly=True)\n   ..\n   59      \n   60      expense_id = fields.Many2one('hr.expense.expense', 'Expense Sheet')\n   61:     sequence = fields.Integer(default=10)\n   62      \n   63  #end of HrExpense()\n\nG:\\Software\\Work\\falinwa_module\\fal_expense_sheet\\views\\hr_expense_view.xml:\n   44                          <group>\n   45                              <field name=\"name\"/>\n   46:                             <!-- field name=\"user_valid\" attrs=\"{'invisible': [('state','=','draft')]}\" context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'base.group_hr_user']}\"/ -->\n   47                              <field name=\"currency_id\" groups=\"base.group_multi_currency\"/>\n   48                          </group>\n   ..\n   50                      <notebook>\n   51                          <page string=\"Description\">\n   52:                             <field name=\"line_ids\" context=\"{'default_analytic_account': context.get('analytic_account', '')}\">\n   53                                  <form string=\"Expense Lines\">\n   54                                      <group>\n   ..\n   73                                  <tree string=\"Expense Lines\" editable=\"bottom\">\n   74                                      <field name=\"sequence\" widget=\"handle\" />\n   75:                                     <field name=\"product_id\" context=\"{'default_hr_expense_ok':1}\" readonly=\"1\"/>\n   76                                      <field name=\"date\" string=\"Expense Date\" readonly=\"1\"/>\n   77                                      <field name=\"name\" readonly=\"1\"/>\n\nG:\\Software\\Work\\falinwa_module\\fal_finished_product_sequence\\models\\mrp.py:\n   24          return super(mrp_production, self).action_confirm(cr, uid, ids, context=context)\n   25  \n   26:     def copy(self, cr, uid, id, default=None, context=None):\n   27:         default = default or {}\n   28:         default.update({\n   29              'fal_mo_line_ids':[],\n   30          })\n   31:         return super(mrp_production, self).copy(cr, uid, id, default, context)\n   32  \n   33  #end of mrp_production()\n\nG:\\Software\\Work\\falinwa_module\\fal_hps_sale_project\\models\\project.py:\n  114      }\n  115              \n  116:     _defaults = {\n  117          'fal_mold_qty_uom' : 'Molds',\n  118      }\n  ...\n  175      }\n  176              \n  177:     _defaults = {\n  178          'fal_mold_qty_uom' : 'Molds',\n  179      }\n\nG:\\Software\\Work\\falinwa_module\\fal_hps_sale_project\\views\\project_view.xml:\n  129              <field name=\"view_type\">form</field>\n  130              <field name=\"view_mode\">kanban,tree,form</field>\n  131:             <field name=\"context\">{\"search_default_is_final_customer\":1, \"default_user_id\":uid, \"default_is_final_customer\":1,\"default_customer\":0}</field>\n  132              <field name=\"domain\">[('user_id','=',uid),('is_final_customer','=',1)]</field>\n  133              <field name=\"search_view_id\" ref=\"base.view_res_partner_filter\"/>\n  ...\n  150              <field name=\"view_mode\">kanban,tree,form</field>\n  151              <field name=\"domain\">[('customer','=',1),('user_id','=',uid)]</field>\n  152:             <field name=\"context\">{'default_customer':1, 'default_user_id':uid, 'search_default_customer':1}</field>\n  153              <field name=\"search_view_id\" ref=\"base.view_res_partner_filter\"/>\n  154              <field name=\"help\" type=\"html\">\n  ...\n  171              <field name=\"view_id\" ref=\"project.view_project_kanban\"/>\n  172              <field name=\"search_view_id\" ref=\"fal_project_ext.view_project_project_filter_falpext\"/>\n  173:             <field name=\"context\">{'search_default_Current': 1, 'default_project_opportunities':1}</field>\n  174              <field name=\"help\" type=\"html\">\n  175                  <p class=\"oe_view_nocontent_create\">\n  ...\n  193              <field name=\"view_id\" ref=\"project.view_project_kanban\"/>\n  194              <field name=\"search_view_id\" ref=\"fal_project_ext.view_project_project_filter_falpext\"/>\n  195:             <field name=\"context\">{'search_default_Current': 1, 'default_project_opportunities':1, 'default_fal_is_program':1}</field>\n  196              <field name=\"help\" type=\"html\">\n  197                  <p class=\"oe_view_nocontent_create\">\n\nG:\\Software\\Work\\falinwa_module\\fal_hps_sale_project\\wizard\\program_generate_project_wizard.py:\n   10      }\n   11      \n   12:     def _default_program_id(self, cr, uid, context=None):        \n   13          return context.get('active_id', False)\n   14      \n   15:     _defaults = {\n   16:         'program_id' : _default_program_id,\n   17      }\n   18      \n\nG:\\Software\\Work\\falinwa_module\\fal_hr_contract_template\\models\\hr_contract.py:\n   43      notes = fields.Text('Notes')\n   44      struct_id = fields.Many2one('hr.payroll.structure', 'Salary Structure')\n   45:     active = fields.Boolean('Active', default=True)\n   46      \n   47  #end of FalHrContractTemplate()\n\nG:\\Software\\Work\\falinwa_module\\fal_hr_payroll_account\\models\\hr_payroll_account.py:\n   76  \n   77              if float_compare(credit_sum, debit_sum, precision_digits=precision) == -1:\n   78:                 acc_id = slip.journal_id.default_credit_account_id.id\n   79                  if not acc_id:\n   80                      raise orm.except_orm(_('Configuration Error!'), _('The Salary Journal \"%s\" has not properly configured the Credit Account!') % (slip.journal_id.name))\n   ..\n   92  \n   93              elif float_compare(debit_sum, credit_sum, precision_digits=precision) == -1:\n   94:                 acc_id = slip.journal_id.default_debit_account_id.id\n   95                  if not acc_id:\n   96                      raise orm.except_orm(_('Configuration Error!'), _('The Salary Journal \"%s\" has not properly configured the Debit Account!') % (slip.journal_id.name))\n\nG:\\Software\\Work\\falinwa_module\\fal_invoice_balance_date\\wizard\\invoice_balance_wizard.py:\n   15              ('out_refund','Customer Refund'),\n   16              ('in_refund','Supplier Refund'),\n   17:             ],'Type', select=True, change_default=True, required=True),\n   18      }\n   19      \n\nG:\\Software\\Work\\falinwa_module\\fal_invoice_line_account_change\\wizard\\fal_invoice_line_account_change_wizard_view.xml:\n   15                          <button name=\"changeAccount\" string=\"Confirm\" type=\"object\"\n   16                              class=\"btn-primary\"/>\n   17:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   18                      </footer>\n   19                  </form>\n\nG:\\Software\\Work\\falinwa_module\\fal_invoice_line_analytic_account_change\\wizard\\fal_invoice_line_analytic_account_change_wizard_view.xml:\n   15                          <button name=\"changeAnalayticAccount\" string=\"Confirm\" type=\"object\"\n   16                              class=\"btn-primary\"/>\n   17:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   18                      </footer>\n   19                  </form>\n\nG:\\Software\\Work\\falinwa_module\\fal_invoice_reminder\\models\\res_partner.py:\n   14      }\n   15  \n   16:     _defaults = {\n   17          'invoice_reminder': 1,\n   18      }\n\nG:\\Software\\Work\\falinwa_module\\fal_l10n_cn\\data\\account_chart_general_business_template.xml:\n 2899              <field name=\"name\">中国会计科目表 (详细版）</field>\n 2900              <field name=\"model\">account.chart.template</field>\n 2901:             <field name=\"key\">default</field>\n 2902              <field name=\"res_id\" ref=\"l10n_gen_chart_china\"/>\n 2903              <field name=\"value\" ref=\"base.CNY\"/>\n\nG:\\Software\\Work\\falinwa_module\\fal_l10n_cn\\data\\account_chart_small_business_template.xml:\n  611              <field name=\"name\">小企业会计科目表（财会[2011]17号《小企业会计准则》）</field>\n  612              <field name=\"model\">account.chart.template</field>\n  613:             <field name=\"key\">default</field>\n  614              <field name=\"res_id\" ref=\"l10n_chart_china_small_business\"/>\n  615              <field name=\"value\" ref=\"base.CNY\"/>\n\nG:\\Software\\Work\\falinwa_module\\fal_l10n_cn\\data\\account_chart_template.xml:\n  855              <field name=\"name\">中国会计科目表  （财会[2006]3号《企业会计准则》）</field>\n  856              <field name=\"model\">account.chart.template</field>\n  857:             <field name=\"key\">default</field>\n  858              <field name=\"res_id\" ref=\"l10n_chart_china\"/>\n  859              <field name=\"value\" ref=\"base.CNY\"/>\n\nG:\\Software\\Work\\falinwa_module\\fal_l10n_cn\\data\\base_data.xml:\n    7  \n    8  依据《 中华人民共和国行政区划代码（国家标准  GB/T 2260-2007》 编制\n    9: http://www.cvh.org.cn/cms/sites/default/files/GBT2260-2007.pdf\n   10  -->\n   11  \n\nG:\\Software\\Work\\falinwa_module\\fal_l10n_cn_report\\wizard\\fal_journal_entry_report_wizard.py:\n    3  from datetime import datetime, date, timedelta\n    4  from openerp.exceptions import UserError, ValidationError\n    5: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT\n    6  \n    7  \n\nG:\\Software\\Work\\falinwa_module\\fal_lang_format_ext\\models\\lang.py:\n    5      _inherit = \"res.lang\"\n    6      \n    7:     vat_format  = fields.Integer('TIN Format', required=True, default=4)\n    8:     vat_sep = fields.Char('TIN Separator', default=\"|\")\n    9:     iban_format  = fields.Integer('IBAN Format', required=True, default=4)\n   10:     iban_sep =  fields.Char('IBAN Separator', default=\"|\")\n   11      \n   12      \"\"\"\n\nG:\\Software\\Work\\falinwa_module\\fal_leave_timesheet\\models\\hr_holidays.py:\n    7  from operator import attrgetter\n    8  from werkzeug import url_encode\n    9: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT\n   10  \n   11  from dateutil.relativedelta import relativedelta\n   ..\n   35          account_analytic_line_obj = self.env[\"account.analytic.line\"]\n   36          for holiday in (holidays for holidays in self if holidays.date_from and holidays.date_to):\n   37:             date_from = datetime.datetime.strptime(holiday.date_from, DEFAULT_SERVER_DATETIME_FORMAT)\n   38:             date_to = datetime.datetime.strptime(holiday.date_to, DEFAULT_SERVER_DATETIME_FORMAT)\n   39              if res:\n   40                  not_working_days = ['0', '1', '2', '3', '4', '5', '6']\n\nG:\\Software\\Work\\falinwa_module\\fal_leave_timesheet_d2\\models\\hr_holidays.py:\n    7  from operator import attrgetter\n    8  from werkzeug import url_encode\n    9: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT\n   10  \n   11  from dateutil.relativedelta import relativedelta\n\nG:\\Software\\Work\\falinwa_module\\fal_mrp_conditional_choice\\models\\mrp.py:\n    4  import openerp.addons.decimal_precision as dp\n    5  import time\n    6: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT, DEFAULT_SERVER_DATETIME_FORMAT, DATETIME_FORMATS_MAP, float_compare\n    7  from openerp import SUPERUSER_ID\n    8  \n    .\n   57      }\n   58  \n   59:     _defaults = {\n   60          'fal_cote_x' : 0,\n   61      }\n\nG:\\Software\\Work\\falinwa_module\\fal_mrp_sale_conditional_choice\\models\\mrp.py:\n    5  import openerp.addons.decimal_precision as dp\n    6  from openerp.osv import fields, orm\n    7: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT, DATETIME_FORMATS_MAP\n    8  from openerp.tools import float_compare\n    9  from openerp.tools.translate import _\n\nG:\\Software\\Work\\falinwa_module\\fal_order_line_invoice_milestone\\models\\fal_order_line_invoice_milestone.py:\n    3  import openerp.addons.decimal_precision as dp\n    4  from openerp.exceptions import UserError\n    5: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT, DEFAULT_SERVER_DATETIME_FORMAT\n    6  from datetime import datetime\n    7  from dateutil.relativedelta import relativedelta\n    .\n   56                  temp.append((0,0, {\n   57                      'percentage': line.percentage,\n   58:                     'date' : datetime.strptime(self.order_id.date_order, DEFAULT_SERVER_DATETIME_FORMAT) + relativedelta(days=line.number_of_days),\n   59                      'sequence': line.sequence,\n   60                  }))\n   ..\n   70      percentage = fields.Float('Percentage (%)')\n   71      date = fields.Date('Invoice Planning Date')\n   72:     sequence = fields.Integer('Sequence', default=10)\n   73      invoice_id = fields.Many2one('account.invoice', 'Invoiced', readonly=\"1\")\n   74      is_final = fields.Boolean('Is Final Term', compute='_compute_is_final')\n   ..\n  141              vals = self._prepare_deposit_product()\n  142              self.product_id = self.env['product.product'].create(vals)\n  143:             self.env['ir.values'].set_default('sale.config.settings', 'deposit_product_id_setting', self.product_id.id)\n  144          amount = order_line_need_invoice_id.price_subtotal * term_line.percentage / 100\n  145          print 'asdsadasdx2'\n  ...\n  220              vals = self._prepare_deposit_product()\n  221              self.product_id = self.env['product.product'].create(vals)\n  222:             self.env['ir.values'].set_default('sale.config.settings', 'deposit_product_id_setting', self.product_id.id)\n  223          amount = milestone_line.fal_sale_order_line_id.price_subtotal * milestone_line.percentage / 100\n  224          print 'asdsadasd'\n  ...\n  307      name = fields.Char('Name', size=64, required=1)\n  308      fal_invoice_term_line_ids = fields.One2many('fal.invoice.term.line', 'fal_invoice_term_id')\n  309:     active = fields.Boolean('Active', default=1)\n  310:     sequence = fields.Integer('Sequence', default=10)\n  311      total_percentage = fields.Float(compute=\"_compute_total_percentage\", string=\"Total Percentage(%)\", store=1)\n  312:     type = fields.Selection([('date','By Date'), ('number_of_days', 'By Number of Days')], 'Type', default='date', required=1)\n  313      \n  314      @api.one\n  ...\n  339      number_of_days = fields.Integer('Number of Days')\n  340      date = fields.Date('Invoice Date')\n  341:     sequence = fields.Integer('Sequence', default=10)\n  342      invoice_term_type = fields.Char('Invoice Term Type', compute='_compute_invoice_term_type')\n  343      sale_order_line_invoiced_ids = fields.Many2many('sale.order.line', 'fal_invoice_term_line_sale_order_lineinvoice_rel', 'term_line_id', 'sale_order_line_id', 'Invoiced Sale Order Line', copy=False)\n  ...\n  380              print order_line_need_invoice_ids\n  381              for order_line_need_invoice_id in order_line_need_invoice_ids:\n  382:                 term_line_ids = order_line_need_invoice_id.fal_invoice_milestone_line_date_ids.filtered(lambda l: datetime.strptime(l.date, DEFAULT_SERVER_DATE_FORMAT)  <= current_date and order_line_need_invoice_id.id not in l.sale_order_line_invoiced_ids.ids )\n  383                  print term_line_ids\n  384                  for term_line in term_line_ids:\n\nG:\\Software\\Work\\falinwa_module\\fal_parent_account\\models\\account.py:\n   70      #fields start here\n   71      complete_name = fields.Char(string='Full Name', compute=_compute_get_full_name, store=True)\n   72:     account_type = fields.Selection([('view','Account View'), ('normal','Normal Account')], 'Type of Account', required=True, default='normal')\n   73      parent_id = fields.Many2one('account.account', 'Parent Account', domain=\"[('account_type', '=', 'view')]\")\n   74      child_ids = fields.One2many('account.account', 'parent_id', 'Child Accounts', copy=False)\n   ..\n  158      account_type = fields.Selection([('view','Analytic View'), ('normal','Analytic Account')], 'Type of Account', required=True,\n  159                                   help=\"If you select the View Type, it means you won\\'t allow to create journal entries using that account.\\n\"\\\n  160:                                   \"The type 'Analytic account' stands for usual accounts that you only want to use in accounting.\", default='normal')\n  161      parent_id = fields.Many2one('account.analytic.account', 'Parent Analytic Account', domain=\"[('account_type', '=', 'view')]\")\n  162      child_ids = fields.One2many('account.analytic.account', 'parent_id', 'Child Accounts', copy=False)\n  ...\n  179      _inherit = \"account.account.template\"\n  180      \n  181:     account_type = fields.Selection([('view','Account View'), ('normal','Normal Account')], 'Type of Account', required=True, default='normal')\n  182      parent_id = fields.Many2one('account.account.template', 'Parent Account')\n  183      \n\nG:\\Software\\Work\\falinwa_module\\fal_periods_lock_ext\\models\\fal_periods_lock.py:\n    8  from openerp.osv import expression\n    9  from openerp.tools.float_utils import float_round as round\n   10: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT, DEFAULT_SERVER_DATETIME_FORMAT\n   11  from openerp.exceptions import UserError, ValidationError, RedirectWarning\n   12  from openerp import api, fields, models, _\n   ..\n   25      _inherit = \"fal.account.periods.lock\"\n   26  \n   27:     lock_gap_days_employee = fields.Integer('Lock Gap Days Employee', default=2)\n   28:     lock_gap_days_manager = fields.Integer('Lock Gap Days Manager', default=5)\n   29  \n   30      def prepare_account_period_lock_line_vals(self, interval, fy, ds):\n   ..\n   57      _inherit = \"res.company\"\n   58  \n   59:     fal_schedule_working_id = fields.Many2one('resource.calendar', 'Default Working Schedule')\n   60  \n   61  #end of ResCompany(models.Model)\n   ..\n   77                  if self.user_has_groups('account.group_account_manager'):\n   78                      lock_date = period_ids[0].adviser_locking_date\n   79:                 if fields.date.today() >= datetime.strptime(lock_date, DEFAULT_SERVER_DATE_FORMAT).date():\n   80                      raise UserError(_(\"You cannot add/modify entries prior to and inclusive of the lock date %s. Check the company settings or ask someone with the 'Adviser' role\") % (lock_date))\n   81          return True\n   ..\n  106                  if self.user_has_groups('account.group_account_manager'):\n  107                      lock_date = period_ids[0].adviser_locking_date\n  108:                 if fields.date.today() >= datetime.strptime(lock_date, DEFAULT_SERVER_DATE_FORMAT).date():\n  109                      raise UserError(_(\"You cannot add/modify entries prior to and inclusive of the lock date %s. Check the company settings or ask someone with the 'Adviser' role\") % (lock_date))\n  110          return True\n\nG:\\Software\\Work\\falinwa_module\\fal_plm\\models\\fal_plm.py:\n   41  \n   42      # fields start in here\n   43:     version_name = fields.Char(string=\"Version Name\", require=True, default=_get_version_name)\n   44:     date1 = fields.Date('Date', required=True, default=_get_date)\n   45:     fal_information_line_ids = fields.Many2many('fal.information.line', 'fal_information_line_id', 'version_id', 'line_id', 'Information', default=_get_fal_information_line_ids)\n   46      fal_product_version_id = fields.Many2one('product.product', string='Product Version')\n   47      # end in here\n\nG:\\Software\\Work\\falinwa_module\\fal_procurement_scheduler_report\\models\\schedulers.py:\n   27  from openerp.osv import fields\n   28  from openerp.tools.translate import _\n   29: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT, DEFAULT_SERVER_DATETIME_FORMAT\n   30  from openerp import tools\n   31  \n   ..\n   55      }\n   56      \n   57:     _defaults = {\n   58          'act_from': lambda obj,cr,uid,context=None: uid,\n   59          'state': 'draft',\n\nG:\\Software\\Work\\falinwa_module\\fal_procurement_scheduler_report\\views\\res_request_view.xml:\n   98              <field name=\"view_mode\">tree,form,calendar</field>\n   99              <field name=\"search_view_id\" ref=\"res_request_search_view\"/>\n  100:             <field name=\"context\">{\"search_default_act_to\":uid}</field>\n  101          </record>\n  102          <menuitem action=\"res_request-act\" id=\"menu_res_request_act\" parent=\"stock.menu_stock_sched\" sequence=\"99\"/>\n\nG:\\Software\\Work\\falinwa_module\\fal_project_budget\\models\\fal_project_budget.py:\n    4  from openerp.exceptions import UserError\n    5  from datetime import date, datetime\n    6: from openerp.tools import ustr, DEFAULT_SERVER_DATE_FORMAT\n    7  import openerp.addons.decimal_precision as dp\n    8  \n    .\n   14  \n   15  def strToDatetime(strdate):\n   16:     return datetime.strptime(strdate, DEFAULT_SERVER_DATE_FORMAT)\n   17  \n   18  class FalProjectBudgetTags(models.Model):\n   ..\n   50          return True\n   51          \n   52:     sequence = fields.Integer(default=10)    \n   53      name = fields.Char('Name', size=128, translate=1)\n   54      parent_id = fields.Many2one('fal.project.budget.tags', 'Parent Project Budget Tags')\n   55:     type = fields.Selection([('regular','Regular'), ('view','View')], 'Type', required=1, default='regular')\n   56      child_ids = fields.One2many('fal.project.budget.tags', 'parent_id', 'Child Project Budget Tags', copy=False)\n   57      \n   ..\n   70      \n   71      name = fields.Char('Project Budget Name', required=True, states={'done':[('readonly',True)]}, translate=1, track_visibility='onchange')\n   72:     responsible_id = fields.Many2one('res.users', 'Responsible', default=lambda self: self.env.user, states={'done':[('readonly',True)]}, track_visibility='onchange')\n   73      date_from = fields.Date('Start Date', required=True, states={'done':[('readonly',True)]}, track_visibility='onchange')\n   74      date_to = fields.Date('End Date', required=True, states={'done':[('readonly',True)]}, track_visibility='onchange')\n   75:     state = fields.Selection([('draft','Draft'),('cancel', 'Cancelled'),('confirm','Confirmed'),('validate','Validated'),('done','Done')], 'Status', select=True, readonly=True, copy=False, track_visibility='always', default='draft')\n   76      fal_project_budget_line_ids = fields.One2many('fal.project.budget.line', 'fal_project_budget_id', 'Project Budget Lines', states={'done':[('readonly',True)]}, copy=True)\n   77:     company_id = fields.Many2one('res.company', 'Company', required=True, default=lambda self: self.env.user.company_id, states={'done':[('readonly',True)]}, track_visibility='onchange')\n   78      project_id = fields.Many2one('account.analytic.account', 'Analytic Account', required=True, states={'done':[('readonly',True)]}, track_visibility='onchange')\n   79      parent_id = fields.Many2one('fal.project.budget', 'Parent Project Budget', states={'done':[('readonly',True)]}, track_visibility='onchange')\n   80:     type = fields.Selection([('regular','Regular'), ('view','View')], 'Type', required=1, default='regular', states={'done':[('readonly',True)]}, track_visibility='onchange')\n   81      child_ids = fields.One2many('fal.project.budget', 'parent_id', 'Child Project Budget', copy=False, states={'done':[('readonly',True)]})\n   82      child_complete_ids = fields.Many2many('fal.project.budget', compute='_compute_child_complete_ids', string=\"Project Budget Hierarchy\")\n   ..\n  233      \n  234      @api.model\n  235:     def _default_fal_budget_tags_ids(self):\n  236          return self.env.context.get('budget_tags', [])\n  237      \n  ...\n  250      reference = fields.Char('Reference', size=128)\n  251      fal_practical_amount_currency = fields.Float(compute='_compute_practical_amount_currency', string='Realized Amount Currency', digits=0)\n  252:     fal_budget_tags_ids = fields.Many2many('fal.project.budget.tags', 'fal_project_budget_tags_rel', 'budget_id', 'tag_id', 'Project Budget Tags', domain=\"[('type', '!=', 'view')]\", default=_default_fal_budget_tags_ids)\n  253      partner_id = fields.Many2one('res.partner', 'Partner')\n  254      product_id = fields.Many2one('product.product', 'Product')\n\nG:\\Software\\Work\\falinwa_module\\fal_project_budget\\views\\fal_project_budget_view.xml:\n   25                          <group>\n   26                              <group>\n   27:                                 <field name=\"responsible_id\" attrs=\"{'readonly':[('state','!=','draft')]}\" context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'account.group_account_user']}\"/>\n   28                                  <field name=\"type\" />\n   29                                  <field name=\"project_id\" />\n   ..\n   42                          <notebook>\n   43                              <page string=\"Project Budget Lines\" attrs=\"{'invisible': [('type', '=', 'view')]}\">\n   44:                                 <field name=\"fal_project_budget_line_ids\" context=\"{'default_date_from': date_from,'default_date_to': date_to, 'budget_tags': fal_budget_tags_ids}\" colspan=\"4\" nolabel=\"1\" attrs=\"{'readonly':[('state','!=','draft')], 'invisible': [('type', '=', 'view')]}\">\n   45                                      <tree string=\"Project Budget Lines\">                                        \n   46                                          <field name=\"general_budget_id\"/>\n\nG:\\Software\\Work\\falinwa_module\\fal_project_budget_layout\\models\\fal_project_budget.py:\n    4  from openerp.exceptions import UserError\n    5  from datetime import date, datetime\n    6: from openerp.tools import ustr, DEFAULT_SERVER_DATE_FORMAT\n    7  import openerp.addons.decimal_precision as dp\n    8  \n\nG:\\Software\\Work\\falinwa_module\\fal_project_budget_layout\\wizard\\fal_create_project_budget_line_wizard.py:\n    7          \n    8      @api.model\n    9:     def default_get(self, fields):\n   10:         res = super(FalCreateProjectBudgetLineWizard, self).default_get(fields)        \n   11          if self.env.context.get('active_id', False):\n   12              data = self.env['fal.project.budget'].browse(self.env.context.get('active_id', False))\n\nG:\\Software\\Work\\falinwa_module\\fal_project_budget_layout\\wizard\\fal_create_project_budget_line_wizard_view.xml:\n   32                      <footer>\n   33                          <button name=\"action_create_project_budget_line\" string=\"Create\" type=\"object\" class=\"btn-primary\"/>\n   34:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   35                      </footer>\n   36                  </form>\n\nG:\\Software\\Work\\falinwa_module\\fal_project_budget_layout\\wizard\\fal_edit_project_budget_line_wizard.py:\n    7      \n    8      @api.model\n    9:     def default_get(self, fields):\n   10:         res = super(FalEditProjectBudgetLineWizard, self).default_get(fields)        \n   11          if self.env.context.get('active_id', False):\n   12              data = self.env['fal.project.budget.line'].browse(self.env.context.get('active_id', False))\n\nG:\\Software\\Work\\falinwa_module\\fal_project_budget_layout\\wizard\\fal_edit_project_budget_line_wizard_view.xml:\n   30                      <footer>\n   31                          <button name=\"action_edit_project_budget_line\" string=\"Confirm\" type=\"object\" class=\"btn-primary\"/>\n   32:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   33                      </footer>\n   34                  </form>\n\nG:\\Software\\Work\\falinwa_module\\fal_project_budget_template\\models\\fal_project_budget_template.py:\n    4  from openerp.exceptions import UserError\n    5  from datetime import date, datetime\n    6: from openerp.tools import ustr, DEFAULT_SERVER_DATE_FORMAT\n    7  import openerp.addons.decimal_precision as dp\n    8  \n    .\n   18      \n   19      name = fields.Char('Project Budget Name', required=True, translate=1, track_visibility='onchange')\n   20:     responsible_id = fields.Many2one('res.users', 'Responsible', default=lambda self: self.env.user, track_visibility='onchange')\n   21      date_from = fields.Date('Start Date', required=True, track_visibility='onchange')\n   22      date_to = fields.Date('End Date', required=True, track_visibility='onchange')\n   23      fal_project_budget_template_line_ids = fields.One2many('fal.project.budget.template.line', 'fal_project_budget_template_id', 'Project Budget Template Lines', copy=True)\n   24:     company_id = fields.Many2one('res.company', 'Company', required=True, default=lambda self: self.env.user.company_id, track_visibility='onchange')\n   25      project_id = fields.Many2one('account.analytic.account', 'Analytic Account', required=True, track_visibility='onchange')\n   26      parent_id = fields.Many2one('fal.project.budget.template', 'Parent Project Budget Template', track_visibility='onchange')\n   27:     type = fields.Selection([('regular','Regular'), ('view','View')], 'Type', required=1, default='regular', track_visibility='onchange')\n   28      child_ids = fields.One2many('fal.project.budget.template', 'parent_id', 'Child Project Budget', copy=False)\n   29      child_complete_ids = fields.Many2many('fal.project.budget', compute='_compute_child_complete_ids', string=\"Project Budget Hierarchy\")\n   ..\n   40  \n   41      @api.model\n   42:     def _default_fal_budget_tags_ids(self):\n   43          return self.env.context.get('budget_tags', [])\n   44          \n   ..\n   53      name = fields.Char('Name', size=128, translate=1)\n   54      reference = fields.Char('Reference', size=128)\n   55:     fal_budget_tags_ids = fields.Many2many('fal.project.budget.tags', 'fal_project_budget_line_template_tags_rel', 'budget_id', 'tag_id', 'Project Budget Tags', domain=\"[('type', '!=', 'view')]\", default=_default_fal_budget_tags_ids)\n   56      partner_id = fields.Many2one('res.partner', 'Partner')\n   57      product_id = fields.Many2one('product.product', 'Product')\n\nG:\\Software\\Work\\falinwa_module\\fal_project_budget_template\\views\\fal_project_budget_template_view.xml:\n   19                          <group>\n   20                              <group>\n   21:                                 <field name=\"responsible_id\" context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'account.group_account_user']}\"/>\n   22                                  <field name=\"type\" />\n   23                                  <field name=\"project_id\" />\n   ..\n   36                          <notebook>\n   37                              <page string=\"Project Budget Template Lines\" attrs=\"{'invisible': [('type', '=', 'view')]}\">\n   38:                                 <field name=\"fal_project_budget_template_line_ids\" context=\"{'default_date_from': date_from,'default_date_to': date_to, 'budget_tags': fal_budget_tags_ids}\" colspan=\"4\" nolabel=\"1\" attrs=\"{'invisible': [('type', '=', 'view')]}\">\n   39                                      <tree string=\"Project Budget Template Lines\">                                        \n   40                                          <field name=\"general_budget_id\"/>\n\nG:\\Software\\Work\\falinwa_module\\fal_project_ext\\models\\project.py:\n   21  \n   22      def _get_type_common(self, cr, uid, context):\n   23:         ids = self.pool.get('project.task.type').search(cr, uid, [('case_default','=',1)], context=context)\n   24:         if context.get('default_project_opportunities',False):\n   25:             ids = self.pool.get('project.task.type').search(cr, uid, [('project_opportunities_default','=',1)], context=context)\n   26          return ids\n   27      \n   28      \n   29:     _defaults = {\n   30          'type_ids': _get_type_common,\n   31          'label_tasks': 'Tools',\n   ..\n   37      _inherit = 'project.task.type'\n   38      _columns = {\n   39:         'project_opportunities_default' : fields.boolean('Default for Project Opportunities',\n   40:                         help=\"If you check this field, this stage will be proposed by default on each new Project Opportunities. It will not assign this stage to existing Project Opportunities.\"),\n   41:         'case_default': fields.boolean('Default for New Projects',\n   42:                         help=\"If you check this field, this stage will be proposed by default on each new project. It will not assign this stage to existing projects.\"),\n   43      }\n   44  #end of project_task_type()\n   ..\n   57          return {}\n   58          \n   59:     _defaults = {\n   60          'partner_id': False\n   61      }\n\nG:\\Software\\Work\\falinwa_module\\fal_project_ext\\views\\project_view.xml:\n   84              <field name=\"res_model\">project.task</field>\n   85              <field name=\"view_mode\">kanban,tree,form,calendar,graph</field>\n   86:             <field name=\"context\">{'search_default_project_id': [active_id], 'default_project_id': active_id, 'active_test': False}</field>\n   87              <field name=\"search_view_id\" ref=\"view_task_search_form_falpext\"/>\n   88              <field name=\"help\" type=\"html\">\n   ..\n  344                      <group>\n  345                          <group>\n  346:                             <field name=\"project_id\" string=\"Opportunities\"  on_change=\"onchange_project(project_id)\" context=\"{'default_use_tasks':1}\"/>\n  347                              <field name=\"partner_id\" required=\"1\" domain=\"[('customer','=',1)]\" />\n  348                              <field name=\"user_id\" options='{\"no_open\": True}'/>\n  ...\n  436              <field name=\"model\">project.task</field>\n  437              <field name=\"arch\" type=\"xml\">\n  438:                 <kanban default_group_by=\"stage_id\" class=\"o_kanban_small_column\">\n  439                      <field name=\"color\"/>\n  440                      <field name=\"priority\"/>\n  ...\n  494                                  </div>\n  495                                  <div class=\"text-muted\">\n  496:                                     <field name=\"project_id\" invisible=\"context.get('default_project_id', False)\"/>\n  497                                      <t t-if=\"record.date_deadline.raw_value and record.date_deadline.raw_value lt (new Date())\" t-set=\"red\">oe_kanban_text_red</t>\n  498                                      <span t-attf-class=\"#{red || ''}\"><i><field name=\"date_deadline\"/></i></span>\n  ...\n  529                  <data>\n  530                      <field name=\"fold\" position=\"after\">\n  531:                         <field name=\"case_default\" />\n  532:                         <field name=\"project_opportunities_default\" />\n  533                      </field>\n  534                  </data>\n  ...\n  544              <field name=\"view_id\" ref=\"project.view_project_kanban\"/>\n  545              <field name=\"search_view_id\" ref=\"view_project_project_filter_falpext\"/>\n  546:             <field name=\"context\">{'search_default_Current': 1, 'default_project_opportunities':1}</field>\n  547              <field name=\"help\" type=\"html\">\n  548                  <p class=\"oe_view_nocontent_create\">\n  ...\n  609              <field name=\"view_id\" ref=\"project.view_project_kanban\"/>\n  610              <field name=\"search_view_id\" ref=\"view_project_project_filter_falpext\"/>\n  611:             <field name=\"context\">{'search_default_Current': 1, 'default_classic_project':1}</field>\n  612              <field name=\"help\" type=\"html\">\n  613                  <p class=\"oe_view_nocontent_create\">\n  ...\n  685              <field name=\"res_model\">project.task</field>\n  686              <field name=\"search_view_id\" ref=\"project_gtd.view_task_gtd_search\"/>\n  687:             <field name=\"context\">{'set_editable':True,'set_visible':True,'gtd':True,'user_invisible':True, \"search_default_open\": 1}</field>\n  688              <field name=\"domain\">[('user_id','=',uid),('project_id.project_opportunities','=',1)]</field>\n  689              <field name=\"view_type\">form</field>\n  ...\n  717              <field name=\"res_model\">project.task</field>\n  718              <field name=\"search_view_id\" ref=\"project_gtd.view_task_gtd_search\"/>\n  719:             <field name=\"context\">{'set_editable':True,'set_visible':True,'gtd':True,'user_invisible':True, \"search_default_open\": 1}</field>\n  720              <field name=\"domain\">[('user_id','=',uid),('project_id.classic_project','=',1)]</field>\n  721              <field name=\"view_type\">form</field>\n\nG:\\Software\\Work\\falinwa_module\\fal_project_ext\\views\\res_partner_view.xml:\n   22              <field name=\"view_type\">form</field>\n   23              <field name=\"view_mode\">kanban,tree,form</field>\n   24:             <field name=\"context\">{\"search_default_is_final_customer\":1,\"default_is_final_customer\":1,\"default_customer\":0}</field>\n   25              <field name=\"search_view_id\" ref=\"base.view_res_partner_filter\"/>\n   26              <field name=\"help\" type=\"html\">\n\nG:\\Software\\Work\\falinwa_module\\fal_project_in_partner_product\\__openerp__.py:\n    5      'author': 'Falinwa Hans',\n    6      \"description\": \"\"\"\n    7:     Module to define a project in partner and product and it will be default value of each document.\n    8      \"\"\",\n    9      \"depends\" : ['account','sale','purchase','fal_project_in_product','fal_statement_product'],\n\nG:\\Software\\Work\\falinwa_module\\fal_project_in_partner_product\\models\\account.py:\n    9      _inherit = 'account.invoice.line'\n   10      \n   11:     def _get_default_project(self, cr, uid, context=None):\n   12          project_id = False\n   13          if context.get('partner', False):            \n   ..\n   16          return project_id\n   17          \n   18:     _defaults = {\n   19:         'account_analytic_id' : _get_default_project,\n   20      }\n   21      \n\nG:\\Software\\Work\\falinwa_module\\fal_project_in_partner_product\\models\\purchase.py:\n    9      _inherit = \"purchase.order.line\"\n   10      \n   11:     def _get_default_project(self, cr, uid, context=None):\n   12          project_id = False\n   13          if context.get('partner', False):            \n   ..\n   16          return project_id\n   17          \n   18:     _defaults = {\n   19:         'account_analytic_id' : _get_default_project,\n   20      }\n   21      \n\nG:\\Software\\Work\\falinwa_module\\fal_project_in_partner_product\\models\\sale.py:\n    4  import openerp.addons.decimal_precision as dp\n    5  import time\n    6: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT, DEFAULT_SERVER_DATETIME_FORMAT, DATETIME_FORMATS_MAP, float_compare\n    7  \n    8  class sale_order(orm.Model):\n\nG:\\Software\\Work\\falinwa_module\\fal_project_in_product\\views\\product_view.xml:\n    7            <field name=\"inherit_id\" ref=\"product.product_product_tree_view\"/>\n    8            <field name=\"arch\" type=\"xml\">\n    9:             <field name=\"default_code\" position=\"after\">\n   10                <field name=\"project_id\" />\n   11                <field name=\"customer_code\" />\n   ..\n   20              <field name=\"arch\" type=\"xml\">\n   21                  <data>\n   22:                     <field name=\"default_code\" position=\"after\">\n   23                          <field name=\"project_id\" />\n   24                          <field name=\"customer_code\" />\n\nG:\\Software\\Work\\falinwa_module\\fal_project_summary\\views\\project_view.xml:\n   36                                      <field name=\"product_uom\" groups=\"product.group_uom\"/>\n   37                                      <field name=\"price_unit\"/>\n   38:                                     <field name=\"taxes_id\" widget=\"many2many_tags\" domain=\"[('type_tax_use','=','purchase')]\" context=\"{'default_type_tax_use': 'purchase'}\"/>\n   39                                      <field name=\"price_subtotal\" widget=\"monetary\"/>\n   40                                      <field name=\"state\" />\n\nG:\\Software\\Work\\falinwa_module\\fal_purchase_cp\\models\\purchase.py:\n   11      }\n   12  \n   13:     _defaults = {\n   14          'fal_user_id': lambda obj, cr, uid, context: uid,\n   15      }\n\nG:\\Software\\Work\\falinwa_module\\fal_purchase_subscription\\models\\purchase_subscription.py:\n    7  \n    8  from openerp import api, fields, models\n    9: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT\n   10  from openerp.tools.translate import _\n   11  from openerp.exceptions import UserError\n   ..\n   40                  if write_pending:\n   41                      account.write({'state': 'pending'})\n   42:                 remind_user = remind.setdefault(account.manager_id.id, {})\n   43:                 remind_type = remind_user.setdefault(key, {})\n   44:                 remind_partner = remind_type.setdefault(account.partner_id, []).append(account)\n   45  \n   46          # Already expired\n   ..\n   71              account.recurring_total = sum(line.price_subtotal for line in account.recurring_invoice_line_ids)\n   72  \n   73:     state = fields.Selection([('draft', 'New'), ('open', 'In Progress'), ('pending', 'To Renew'), ('close', 'Closed'), ('cancel', 'Cancelled')], 'Status', required=True, track_visibility='onchange', copy=False, default=\"draft\")\n   74      analytic_account_id = fields.Many2one('account.analytic.account', 'Analytic Account', required=True, ondelete=\"cascade\", auto_join=True)\n   75:     date_start = fields.Date('Start Date', default=time.strftime('%Y-%m-%d'))\n   76      date = fields.Date('End Date', track_visibility='onchange')\n   77      pricelist_id = fields.Many2one('product.pricelist', 'Pricelist')\n   78      currency_id = fields.Many2one('res.currency', string='Currency', related='pricelist_id.currency_id', readonly=True)\n   79      recurring_invoice_line_ids = fields.One2many('fal.purchase.subscription.line', 'analytic_account_id', 'Invoice Lines', copy=True)\n   80:     recurring_rule_type = fields.Selection([('daily', 'Day(s)'), ('weekly', 'Week(s)'), ('monthly', 'Month(s)'), ('yearly', 'Year(s)'), ], 'Recurrency', help=\"Invoice automatically repeat at specified interval\", default=\"monthly\")\n   81:     recurring_interval = fields.Integer('Repeat Every', help=\"Repeat every (Days/Week/Month/Year)\", default=1)\n   82:     recurring_next_date = fields.Date('Date of Next Invoice', default=lambda self: fields.Date.today())\n   83      recurring_total = fields.Float(string=\"Recurring Price\", compute=_get_recurring_price, track_visibility='onchange')\n   84      close_reason_id = fields.Many2one(\"sale.subscription.close.reason\", \"Close Reason\", track_visibility='onchange')\n   85:     type = fields.Selection([('contract', 'Contract'), ('template', 'Template')], 'Type', default=\"contract\")\n   86      template_id = fields.Many2one('fal.purchase.subscription', 'Subscription Template', domain=[('type', '=', 'template')], track_visibility='onchange')\n   87      description = fields.Text('Description')\n   ..\n   90      # Fields that only matters on template\n   91      plan_description = fields.Html(string='Plan Description', help=\"Describe this subscription in a few lines\",)\n   92:     user_selectable = fields.Boolean(string='Allow Online Order', default=True, help=\"\"\"Leave this unchecked if you don't want this subscription template to be available to the customer in the frontend (for a free trial, for example)\"\"\")\n   93  \n   94:     _defaults = {\n   95          'name': 'New',\n   96          'code': lambda s, c, u, ctx: s.pool['ir.sequence'].next_by_code(c, u, 'sale.subscription', context=ctx) or 'New',\n   ..\n  107  \n  108      def set_close(self, cr, uid, ids, context=None):\n  109:         return self.write(cr, uid, ids, {'state': 'close', 'date': datetime.date.today().strftime(DEFAULT_SERVER_DATE_FORMAT)}, context=context)\n  110  \n  111      @api.onchange(\"template_id\")\n  ...\n  332      def increment_period(self, cr, uid, ids, context=None):\n  333          for account in self.browse(cr, uid, ids, context=context):\n  334:             current_date = account.recurring_next_date or self.default_get(cr, uid, ['recurring_next_date'], context=context)['recurring_next_date']\n  335              next_date = datetime.datetime.strptime(current_date, \"%Y-%m-%d\")\n  336              periods = {'daily': 'days', 'weekly': 'weeks', 'monthly': 'months', 'yearly': 'years'}\n  ...\n  416      name = fields.Text('Description', required=True)\n  417      quantity = fields.Float(string='Quantity', compute=_compute_quantity, store=True, help=\"Max between actual and sold quantities; this quantity will be invoiced\")\n  418:     actual_quantity = fields.Float('Actual Quantity', help=\"Quantity actually used by the customer\", default=0)\n  419:     sold_quantity = fields.Float('Sold Quantity', help=\"Quantity sold to the customer\", required=True, default=1)\n  420      uom_id = fields.Many2one('product.uom', 'Unit of Measure', required=True)\n  421      price_unit = fields.Float('Unit Price', required=True)\n\nG:\\Software\\Work\\falinwa_module\\fal_purchase_subscription\\views\\purchase_subscription_view.xml:\n   49          <field name=\"view_type\">form</field>\n   50          <field name=\"view_mode\">tree,form</field>\n   51:         <field name=\"context\">{'search_default_open':1, 'search_default_pending':1, 'search_default_manager_id':uid}</field>\n   52          <field name=\"domain\">[('type','=','contract')]</field>\n   53          <field name=\"search_view_id\" ref=\"purchase_subscription_view_search\"/>\n   ..\n   87                              icon=\"fa-book\"\n   88                              name=\"%(purchase_subscription_action)d\"\n   89:                             context=\"{'search_default_template_id': [active_id], 'default_template_id': active_id}\"\n   90                              type=\"action\" attrs=\"{'invisible': [('type','!=','template')]}\"/>\n   91                      </div>\n   ..\n  115                                  <field name=\"recurring_rule_type\" class=\"oe_inline\"/>\n  116                              </div>\n  117:                             <field name=\"template_id\" attrs=\"{'required': [('type','=','contract')], 'invisible': [('type','=','template')]}\" context=\"{'default_type': 'template'}\" domain=\"[('type', '=', 'template'), ('state', '=', 'open')]\"/>\n  118                              <field name=\"manager_id\"/>\n  119                              <field name=\"company_id\" groups=\"base.group_multi_company\"/>\n  ...\n  133                                   <field name=\"recurring_invoice_line_ids\">\n  134                                      <tree editable=\"bottom\">\n  135:                                         <field name=\"product_id\" on_change=\"product_id_change(product_id, uom_id, quantity, False, parent.partner_id, False, parent.pricelist_id, parent.company_id)\" context=\"{'default_recurring_invoice': True}\"/>\n  136                                          <field name=\"name\"/>\n  137                                          <field name=\"quantity\" readonly=\"1\" groups=\"base.group_no_one\"/>\n  ...\n  211          <field name=\"view_type\">form</field>\n  212          <field name=\"view_mode\">tree,form</field>\n  213:         <field name=\"context\">{'search_default_manager_id':uid, 'search_default_pending':1, 'search_default_renew':1}</field>\n  214          <field name=\"domain\">[('type','=','contract')]</field>\n  215          <field name=\"search_view_id\" ref=\"purchase_subscription_view_search\"/>\n  ...\n  254          <field name=\"view_id\" ref=\"purchase_subscription_view_list_template\"/>\n  255          <field name=\"domain\">[('type','=','template')]</field>\n  256:         <field name=\"context\">{'search_default_type':'template','default_type' : 'template', 'search_default_open':1, 'default_state': 'open'}</field>\n  257          <field name=\"search_view_id\" ref=\"purchase_subscription_view_search_template\"/> \n  258          <field name=\"help\" type=\"html\">\n  ...\n  308      <!-- res.partner -->\n  309      <record id=\"purchase_subscription_action_res_partner\" model=\"ir.actions.act_window\">\n  310:         <field name=\"context\">{'search_default_partner_id': [active_id], 'default_partner_id': active_id}</field>\n  311          <field name=\"name\">Purchase Subscriptions</field>\n  312          <field name=\"res_model\">fal.purchase.subscription</field>\n  ...\n  352          <field name=\"view_mode\">kanban,tree,form</field>\n  353          <field name=\"view_type\">form</field>\n  354:         <field name=\"context\">{\"default_recurring_invoice\": True, \"search_default_filter_recurring\": True}</field>\n  355          <field name=\"view_id\" ref=\"product.product_template_tree_view\"/>\n  356          <field name=\"search_view_id\" ref=\"product_template_search_view_inherit_purchase_contract\"/>\n\nG:\\Software\\Work\\falinwa_module\\fal_record_line_product_category\\models\\general.py:\n   35              self.env.cr.execute(\"update product_category set complete_name= %s where id= %s\", (name, ac.id))\n   36          \n   37:     fal_default_product_id = fields.Many2one('product.product', 'Default Product')\n   38      complete_name = fields.Char(compute='_get_fal_full_name', store=1)\n   39      \n   ..\n   58      def _onchange_fal_product_category_id(self):\n   59          if self.fal_product_category_id:\n   60:             self.product_id =  self.fal_product_category_id.fal_default_product_id and self.fal_product_category_id.fal_default_product_id.id\n   61      \n   62  # end of PurchaseOrderLine()\n   ..\n   70      def _onchange_fal_product_category_id(self):\n   71          if self.fal_product_category_id:\n   72:             self.product_id =  self.fal_product_category_id.fal_default_product_id and self.fal_product_category_id.fal_default_product_id.id\n   73  \n   74      @api.multi\n   ..\n  101      def _onchange_fal_product_category_id(self):\n  102          if self.fal_product_category_id:\n  103:             self.product_id =  self.fal_product_category_id.fal_default_product_id and self.fal_product_category_id.fal_default_product_id.id\n  104              \n  105  # end of AccountInvoiceLine()\n\nG:\\Software\\Work\\falinwa_module\\fal_record_line_product_category\\views\\general_view.xml:\n    9              <field name=\"arch\" type=\"xml\">\n   10                  <field name=\"type\" position=\"after\">\n   11:                     <field name=\"fal_default_product_id\" />\n   12                  </field>\n   13              </field>\n\nG:\\Software\\Work\\falinwa_module\\fal_sale_condition_choice\\models\\sale.py:\n    4  import openerp.addons.decimal_precision as dp\n    5  import time\n    6: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT, DEFAULT_SERVER_DATETIME_FORMAT, DATETIME_FORMATS_MAP, float_compare\n    7  \n    8  class sale_order_line(orm.Model):\n    .\n   56      }\n   57      \n   58:     _defaults = {\n   59          'fal_cote_x' : 0,\n   60      }\n\nG:\\Software\\Work\\falinwa_module\\fal_sale_quote_template_route\\models\\fal_sale_quote_template_route.py:\n   14      _name = 'fal.sale.quote.template.route'\n   15  \n   16:     sequence = fields.Integer(default=10)\n   17      product_tmpl_id = fields.Many2one('product.template', 'Product Template')\n   18      sale_quote_template_id = fields.Many2one('sale.quote.template', 'Quote Template', required=1)\n   ..\n   38              for quote_line in route.sale_quote_template_id.quote_line:\n   39                  temp_line.append((0, 0, self._fal_prepare_line_value(order_line, route, quote_line)))\n   40:             duplicate_sale_id = self.sudo().with_context(force_company=route.sale_quote_template_id.company_id.id).copy(default=self._fal_prepare_val_copy_order(route, temp_line))        \n   41          return True\n   42      \n\nG:\\Software\\Work\\falinwa_module\\fal_statement_product\\models\\account_bank_statement.py:\n   34              string=\"General Account\",\n   35              view_load=True,\n   36:             help=\"This account will be used for statement instead of the default one to value for the current product.\"),\n   37      }\n   38  #end of product_category()\n   ..\n   48              string=\"General Account\",\n   49              view_load=True,\n   50:             help=\"This account will be used for statement instead of the default one to value for the current product.\"),\n   51      }\n   52          \n\nG:\\Software\\Work\\falinwa_module\\fal_subcontract_service\\models\\purchase.py:\n    1  # -*- coding: utf-8 -*-\n    2: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT\n    3  from openerp import api, fields, models, _\n    4  \n    .\n   79              'origin': self.origin,\n   80              'payment_term_id': partner.property_supplier_payment_term_id.id,\n   81:             'date_order': purchase_date.strftime(DEFAULT_SERVER_DATETIME_FORMAT),\n   82              'fiscal_position_id': fpos,\n   83              'group_id': group\n\nG:\\Software\\Work\\falinwa_module\\fal_tax_comment\\models\\fal_tax_comment.py:\n    3  from openerp import api, fields, models, _\n    4  import datetime, openerp.addons.decimal_precision as dp\n    5: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT as DF\n    6  from datetime import date, datetime\n    7  from dateutil.relativedelta import relativedelta\n\nG:\\Software\\Work\\falinwa_module\\fal_timesheet_invoice_ext\\views\\hr_view.xml:\n  118                  Click to add a new type of invoicing.\n  119                </p><p>\n  120:                 Odoo allows you to create default invoicing types. You might\n  121                  have to regularly assign discounts because of a specific\n  122                  contract or agreement with a customer. From this menu, you can\n\nG:\\Software\\Work\\falinwa_module\\fal_timesheet_template\\models\\hr.py:\n   21  \n   22      @api.model\n   23:     def _default_fal_template(self):\n   24          res = False\n   25          emp_id = self.env['hr.employee'].search([('user_id', '=', self._uid)], limit=1)\n   ..\n   37              sheet.display_name = _('Week ')+str(datetime.strptime(sheet.date_from, '%Y-%m-%d').isocalendar()[1])\n   38  \n   39:     fal_timesheet_template_id = fields.Many2one('fal.timesheet.template', 'Timesheet Template', default=_default_fal_template)\n   40      display_name = fields.Char(compute='fal_get_display_name', string='Display Name', store='True')\n   41  \n   ..\n  156      fal_timesheet_template_id = fields.Many2one('fal.timesheet.template', 'Timesheet Template')\n  157      analytic_account_id = fields.Many2one('account.analytic.account', 'Analytic Account', domain=\"[('account_type', '=', 'normal')]\")\n  158:     unit_amount = fields.Float('Quantity', default=0.0)\n  159      week_id = fields.Many2one('fal.timesheet.template.weekly.line', string='Day ID')\n  160      task_id = fields.Many2one('project.task', string='Task')\n\nG:\\Software\\Work\\falinwa_module\\fal_todo_list\\models\\project.py:\n   14      def _get_type_common(self, cr, uid, context):\n   15          ids = super(project, self)._get_type_common(cr, uid, context)\n   16:         if context.get('default_project_todo_list', False):\n   17:             ids = self.pool.get('project.task.type').search(cr, uid, [('todolist_default', '=', 1)], context=context)\n   18          return ids\n   19  \n   20:     _defaults = {\n   21          'type_ids': _get_type_common,\n   22      }\n   ..\n   28      _inherit = 'project.task.type'\n   29      _columns = {\n   30:         'todolist_default': fields.boolean('Default for New To do List',\n   31:                         help=\"If you check this field, this stage will be proposed by default on each new To do List. It will not assign this stage to existing To do List.\"),\n   32      }\n   33  # end of project_task_type()\n\nG:\\Software\\Work\\falinwa_module\\fal_todo_list\\views\\project_view.xml:\n   22              <field name=\"res_model\">project.task</field>\n   23              <field name=\"view_mode\">kanban,tree,form,calendar,gantt,graph</field>\n   24:             <field name=\"context\">{'search_default_project_id': [active_id], 'default_project_id': active_id, 'active_test': False}</field>\n   25              <field name=\"search_view_id\" ref=\"project.view_task_search_form\"/>\n   26              <field name=\"help\" type=\"html\">\n   ..\n   50                      <group>\n   51                          <group>\n   52:                             <field name=\"project_id\"  on_change=\"onchange_project(project_id)\" context=\"{'default_use_tasks':1}\"/>\n   53:                             <field name=\"user_id\"  options='{\"no_open\": True}' context=\"{'default_groups_ref': ['base.group_user', 'base.group_partner_manager', 'project.group_project_user']}\" />\n   54                              <field name=\"planned_hours\" widget=\"float_time\"\n   55                                      groups=\"project.group_time_work_estimation_tasks\"\n   ..\n  334                  <data>\n  335                      <field name=\"sequence\" position=\"after\">\n  336:                         <field name=\"todolist_default\" />\n  337                      </field>\n  338                  </data>\n  ...\n  369              <field name=\"view_id\" ref=\"project.view_project_kanban\"/>\n  370              <field name=\"search_view_id\" ref=\"project.view_project_project_filter\"/>\n  371:             <field name=\"context\">{'search_default_Current': 1, 'default_project_todo_list':1}</field>\n  372              <field name=\"help\" type=\"html\">\n  373                  <p class=\"oe_view_nocontent_create\">\n  ...\n  415              <field name=\"view_id\" ref=\"project.view_project_kanban\"/>\n  416              <field name=\"search_view_id\" ref=\"project.view_project_project_filter\"/>\n  417:             <field name=\"context\">{'search_default_Current': 1, 'default_classic_project':1}</field>\n  418              <field name=\"help\" type=\"html\">\n  419                  <p class=\"oe_view_nocontent_create\">\n  ...\n  491              <field name=\"res_model\">project.task</field>\n  492              <field name=\"search_view_id\" ref=\"project_gtd.view_task_gtd_search\"/>\n  493:             <field name=\"context\">{'set_editable':True,'set_visible':True,'gtd':True,'user_invisible':True, \"search_default_open\": 1}</field>\n  494              <field name=\"domain\">[('user_id','=',uid),('project_id.project_todo_list','=',1)]</field>\n  495              <field name=\"view_type\">form</field>\n  ...\n  523              <field name=\"res_model\">project.task</field>\n  524              <field name=\"search_view_id\" ref=\"project_gtd.view_task_gtd_search\"/>\n  525:             <field name=\"context\">{'set_editable':True,'set_visible':True,'gtd':True,'user_invisible':True, \"search_default_open\": 1}</field>\n  526              <field name=\"domain\">[('user_id','=',uid),('project_id.classic_project','=',1)]</field>\n  527              <field name=\"view_type\">form</field>\n\nG:\\Software\\Work\\falinwa_module\\fal_website_blocks\\views\\snippets.xml:\n  455            <div class=\"row\">\n  456              <div class=\"col-lg-12 wow fadeInDown animated\" data-wow-delay=\"1s\">\n  457:               <div class=\"title-About-us p-top-20 o_default_snippet_text\" align=\"center\">CONTACT US</div>\n  458                <form name=\"\" action=\"\" method=\"post\" class=\"wpcf7-form\">\n  459                  <div id=\"name\">\n  ...\n  483              <div class=\"row\">\n  484                <div class=\"col-md-3 col-sm-6 col-xs-12 xs-custom-fal animated fadeInLeft wow\" data-wow-delay=\"1.5s\">\n  485:                 <div class=\"address-one o_default_snippet_text\">Office Falinwa China</div>\n  486                  <div class=\"address-fal\">\n  487                    <div class=\"address-fal-00\">\n  488                      <i class=\"fa fa-phone custom-item-fal\"/>\n  489                    </div>\n  490:                   <div class=\"address-fal-01 o_default_snippet_text\">(086)-755-86586490</div>\n  491                    <div class=\"clear\"/>\n  492                  </div>\n  ...\n  495                      <i class=\"fa fa-map-marker custom-item-fal\"/>\n  496                    </div>\n  497:                   <div class=\"address-fal-01 o_default_snippet_text\">21/F, On Hing Building 1 On Hing Terrace Central Hongkong , China HongKong China</div>\n  498                    <div class=\"clear\"/>\n  499                  </div>\n  ...\n  502                      <i class=\"fa fa-mail-reply custom-item-fal\"/>\n  503                    </div>\n  504:                   <div class=\"address-fal-01 o_default_snippet_text\">nrc@falinwa.com</div>\n  505                    <div class=\"clear\"/>\n  506                  </div>\n  507                </div>\n  508                <div class=\"col-md-3 col-sm-6 col-xs-12 xs-custom-fal animated fadeInLeft wow\" data-wow-delay=\"2s\">\n  509:                 <div class=\"address-one o_default_snippet_text\">Office Falinwa China</div>\n  510                  <div class=\"address-fal\">\n  511                    <div class=\"address-fal-00\">\n  512                      <i class=\"fa fa-phone custom-item-fal\"/>\n  513                    </div>\n  514:                   <div class=\"address-fal-01 o_default_snippet_text\">(086)-755-86586490</div>\n  515                    <div class=\"clear\"/>\n  516                  </div>\n  ...\n  519                      <i class=\"fa fa-map-marker custom-item-fal\"/>\n  520                    </div>\n  521:                   <div class=\"address-fal-01 o_default_snippet_text\">21/F, On Hing Building 1 On Hing Terrace Central Hongkong , China HongKong China</div>\n  522                    <div class=\"clear\"/>\n  523                  </div>\n  ...\n  526                      <i class=\"fa fa-mail-reply custom-item-fal\"/>\n  527                    </div>\n  528:                   <div class=\"address-fal-01 o_default_snippet_text\">nrc@falinwa.com</div>\n  529                    <div class=\"clear\"/>\n  530                  </div>\n  531                </div>\n  532                <div class=\"col-md-3 col-sm-6 col-xs-12 xs-custom-fal animated fadeInLeft wow\" data-wow-delay=\"2.5s\">\n  533:                 <div class=\"address-one o_default_snippet_text\">Office Falinwa China</div>\n  534                  <div class=\"address-fal\">\n  535                    <div class=\"address-fal-00\">\n  536                      <i class=\"fa fa-phone custom-item-fal\"/>\n  537                    </div>\n  538:                   <div class=\"address-fal-01 o_default_snippet_text\">(086)-755-86586490</div>\n  539                    <div class=\"clear\"/>\n  540                  </div>\n  ...\n  543                      <i class=\"fa fa-map-marker custom-item-fal\"/>\n  544                    </div>\n  545:                   <div class=\"address-fal-01 o_default_snippet_text\">21/F, On Hing Building 1 On Hing Terrace Central Hongkong , China HongKong China</div>\n  546                    <div class=\"clear\"/>\n  547                  </div>\n  ...\n  550                      <i class=\"fa fa-mail-reply custom-item-fal\"/>\n  551                    </div>\n  552:                   <div class=\"address-fal-01 o_default_snippet_text\">nrc@falinwa.com</div>\n  553                    <div class=\"clear\"/>\n  554                  </div>\n  555                </div>\n  556                <div class=\"col-md-3 col-sm-6 col-xs-12 xs-custom-fal animated fadeInLeft wow\" data-wow-delay=\"3s\">\n  557:                 <div class=\"address-one o_default_snippet_text\">Office Falinwa China</div>\n  558                  <div class=\"address-fal\">\n  559                    <div class=\"address-fal-00\">\n  560                      <i class=\"fa fa-phone custom-item-fal\"/>\n  561                    </div>\n  562:                   <div class=\"address-fal-01 o_default_snippet_text\">(086)-755-86586490</div>\n  563                    <div class=\"clear\"/>\n  564                  </div>\n  ...\n  567                      <i class=\"fa fa-map-marker custom-item-fal\"/>\n  568                    </div>\n  569:                   <div class=\"address-fal-01 o_default_snippet_text\">21/F, On Hing Building 1 On Hing Terrace Central Hongkong , China HongKong China</div>\n  570                    <div class=\"clear\"/>\n  571                  </div>\n  ...\n  574                      <i class=\"fa fa-mail-reply custom-item-fal\"/>\n  575                    </div>\n  576:                   <div class=\"address-fal-01 o_default_snippet_text\">nrc@falinwa.com</div>\n  577                    <div class=\"clear\"/>\n  578                  </div>\n  ...\n 1321                <div class=\"col-lg-12\">\n 1322                  <div class=\"position-x01\">\n 1323:                   <div  data-wow-delay=\"1s\" class=\"title-section-banner000 animated fadeInLeft wow animated o_default_snippet_text animated animated\">Lorem Ipsum Sit ,dolor ame</div>\n 1324:                   <div  data-wow-delay=\"1.5s\" class=\"sub-title-section-banner000 animated fadeInLeft wow animated o_default_snippet_text animated animated\">Get your inside sales (CRM) fully integrated with online sales (eCommerce), in-store sales (Point of Sale) and marketplaces like eBay and Amazon.</div>\n 1325                    <div data-wow-delay=\"1.5s\" class=\"fl re-xustom-old animated fadeInLeft wow animated animated animated animated\">\n 1326                      <a href=\"\">\n 1327:                       <div align=\"center\" style=\"padding:12px;\" class=\"bg-00 o_default_snippet_text\">CONTACT US TODAY !</div>\n 1328                      </a>\n 1329                    </div>\n\nG:\\Software\\Work\\falinwa_module\\fal_working_schedule_ext\\models\\fal_working_schedule.py:\n    2  from openerp import api, fields, models, _\n    3  import datetime\n    4: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT\n    5  from openerp.exceptions import UserError, AccessError\n    6  \n    .\n   28      allocate_date = fields.Date(string=\"Allocation Date\", required=True)\n   29      number_of_date = fields.Float(string=\"Number of Days\")\n   30:     period_type = fields.Selection([('in', \"IN\"), ('out', \"OUT\")], default='in', string=\"Period Type\", required=True)\n   31:     state = fields.Selection([('draft', 'Draft'), ('validate', 'Validate')], 'State', default=\"draft\", required=True)\n   32  \n   33      @api.model\n   34      def auto_periodic_leave_allocation(self):\n   35          for auto_periodic_leave_allocation_id in self.search([]):\n   36:             if datetime.datetime.strptime(auto_periodic_leave_allocation_id.allocate_date, DEFAULT_SERVER_DATE_FORMAT).date() <= datetime.date.today() and auto_periodic_leave_allocation_id.state == 'draft':\n   37                  employee_ids = self.env['hr.employee'].search([('company_id', '=', auto_periodic_leave_allocation_id.resource_calendar_id.company_id.id)])\n   38                  for employee_id in employee_ids:\n   ..\n   59      fal_already_assigned = fields.Boolean(string=\"Already Assigned?\", readonly=True)\n   60      fal_fix_date_line_ids = fields.One2many(\"fal.fix.date.line\", \"fal_fix_date_id\", string=\"Fixed Date\")\n   61:     state = fields.Selection([('draft', 'Draft'), ('validate', 'Validate')], 'State', default=\"draft\", required=True)\n   62  \n   63      @api.onchange(\"fal_fix_date_wizard_line_ids\")\n   ..\n  101  \n  102      @api.one\n  103:     def copy(self, default=None):\n  104:         default = dict(default or {})\n  105          fal_fix_date_line_list = []\n  106          for all_fix_date_line in self.fal_fix_date_line_ids:\n  ...\n  112                  'fal_ending_date_time_selection': all_fix_date_line.fal_ending_date_time_selection,\n  113                  }).id)\n  114:         default.update({\n  115               'fal_fix_date_line_ids': [(6, 0, fal_fix_date_line_list)],\n  116               'state': 'draft',\n  117              })\n  118:         return super(fal_fix_date, self).copy(default)\n  119  \n  120  # end of fal_fix_date()\n  ...\n  126      fal_fix_date_id = fields.Many2one(\"fal.fix.date\", \"Fixed Date\")\n  127      fal_opening_date = fields.Date(string=\"Opening Date\")\n  128:     fal_opening_date_time_selection = fields.Selection([('morning', 'Morning'), ('afternoon', 'Afternoon')], string=\"Time\", default=\"morning\")\n  129      fal_ending_date = fields.Date(string=\"Ending Date\")\n  130:     fal_ending_date_time_selection = fields.Selection([('morning', 'Morning'), ('afternoon', 'Afternoon')], string=\"Time\", default=\"afternoon\")\n  131  \n  132      @api.model\n  ...\n  136              if not self.fal_ending_date or (self.fal_ending_date and self.fal_opening_date > self.fal_ending_date):\n  137                  if self.fal_opening_date_time_selection == 'afternoon':\n  138:                     self.fal_ending_date = datetime.datetime.strptime(self.fal_opening_date, DEFAULT_SERVER_DATE_FORMAT) + datetime.timedelta(days=1)\n  139                      self.fal_ending_date_time_selection = 'morning'\n  140                  else:\n\nG:\\Software\\Work\\falinwa_module\\fal_working_schedule_ext\\models\\hr_contract.py:\n    2  from openerp import api, models, _\n    3  import datetime\n    4: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT\n    5  from openerp.exceptions import UserError, AccessError\n    6  from openerp.osv import osv, fields\n    .\n   30              total_remaining_holiday = 0\n   31              for fix_date_line in fix_date.fal_fix_date_line_ids:\n   32:                 if datetime.datetime.strptime(fix_date_line.fal_opening_date, DEFAULT_SERVER_DATE_FORMAT).date() >= datetime.date.today():\n   33                      total_remaining_holiday += fix_date_line._get_number_of_days()\n   34              res = holiday_obj.create({'fal_fix_holiday_line_id': fix_date.id, 'holiday_type': 'employee', 'employee_id': self.employee_id.id, 'holiday_status_id': fix_date.holiday_status_id.id, 'name': 'Auto Assigned Leave', 'number_of_days_temp': total_remaining_holiday, 'type': 'add'})\n   ..\n   40                  res.signal_workflow('validate')\n   41              for fal_fix_date_line in fix_date.fal_fix_date_line_ids:\n   42:                 if datetime.datetime.strptime(fal_fix_date_line.fal_opening_date, DEFAULT_SERVER_DATE_FORMAT).date() >= datetime.date.today():\n   43                      res = holiday_obj.create({'fal_fix_holiday_line_id': fix_date.id, 'is_fixed': True, 'holiday_type': 'employee', 'employee_id': self.employee_id.id, 'holiday_status_id': fix_date.holiday_status_id.id, 'name': 'Auto Take Leave', 'date_from': fal_fix_date_line.fal_opening_date, 'date_to': fal_fix_date_line.fal_ending_date, 'date_from_time_selection': fal_fix_date_line.fal_opening_date_time_selection, 'date_to_time_selection': fal_fix_date_line.fal_ending_date_time_selection, 'number_of_days_temp': fal_fix_date_line._get_number_of_days(), 'type': 'remove'})\n   44                      res.signal_workflow('confirm')\n\nG:\\Software\\Work\\falinwa_module\\fal_working_schedule_ext\\wizard\\fal_working_schedule_wizard.py:\n    3  from datetime import datetime, date, timedelta\n    4  from openerp.exceptions import UserError, ValidationError\n    5: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT\n    6  from dateutil.relativedelta import relativedelta\n    7  \n    .\n   40      fal_fix_date_wizard_id = fields.Many2one(\"fal.fix.date.wizard\", string=\"Fix Date Wizard\")\n   41      fal_opening_date = fields.Date(string=\"Opening Date\")\n   42:     fal_opening_date_time_selection = fields.Selection([('morning', 'Morning'), ('afternoon', 'Afternoon')], string=\"Time\", default=\"morning\")\n   43      fal_ending_date = fields.Date(string=\"Ending Date\")\n   44:     fal_ending_date_time_selection = fields.Selection([('morning', 'Morning'), ('afternoon', 'Afternoon')], string=\"Time\", default=\"afternoon\")\n   45  \n   46          # TODO: can be improved using resource calendar method\n   ..\n   74              if not self.fal_ending_date or (self.fal_ending_date and self.fal_opening_date > self.fal_ending_date):\n   75                  if self.fal_opening_date_time_selection == 'afternoon':\n   76:                     self.fal_ending_date = datetime.datetime.strptime(self.fal_opening_date, DEFAULT_SERVER_DATE_FORMAT) + datetime.timedelta(days=1)\n   77                      self.fal_ending_date_time_selection = 'morning'\n   78                  else:\n   ..\n  104                  if all_periodic_allocation_wizard.period_type == 'in':\n  105                      allocate_date = False\n  106:                     departure_date = datetime.strptime(all_periodic_allocation_wizard.holiday_status_id.fal_period_in_departure_date, DEFAULT_SERVER_DATE_FORMAT)\n  107:                     end_date = datetime.strptime(all_periodic_allocation_wizard.holiday_status_id.fal_period_in_ending_date, DEFAULT_SERVER_DATE_FORMAT)\n  108                      if departure_date.day <= 25:\n  109                          allocate_date = datetime(departure_date.year, departure_date.month, 25)\n  ...\n  118                  elif all_periodic_allocation_wizard.period_type == 'out':\n  119                      allocate_date = False\n  120:                     departure_date = datetime.strptime(all_periodic_allocation_wizard.holiday_status_id.fal_period_out_departure_date, DEFAULT_SERVER_DATE_FORMAT)\n  121:                     end_date = datetime.strptime(all_periodic_allocation_wizard.holiday_status_id.fal_period_out_ending_date, DEFAULT_SERVER_DATE_FORMAT)\n  122                      if departure_date.day <= 25:\n  123                          allocate_date = datetime(departure_date.year, departure_date.month, 25)\n\nG:\\Software\\Work\\falinwa_module\\falinwa_website_ext\\views\\website.xml:\n    2  <openerp>\n    3    <data>\n    4:     <template id=\"footer_default2\" inherit_id=\"website.footer_default\">\n    5        <xpath expr=\"//div[@id='footer']\" position=\"attributes\">\n    6          <attribute name=\"style\">display:none</attribute>\n    7        </xpath>\n    8      </template>\n    9:     <template id=\"footer_fal_one\" inherit_id=\"website.footer_default\">\n   10        <xpath expr=\"//div[@id='footer']\" position=\"after\">\n   11          <div class=\"container\">\n   ..\n   34      </template>\n   35      <template id=\"header_custom_falinwa\" inherit_id=\"website.layout\">\n   36:       <xpath expr=\"//header//div[@class='navbar navbar-default navbar-static-top']\" position=\"attributes\">\n   37          <attribute name=\"style\">display:none</attribute>\n   38        </xpath>\n   39      </template>\n   40      <template id=\"header_custom_falinwa-2\" inherit_id=\"website.layout\">\n   41:       <xpath expr=\"//header//div[@class='navbar navbar-default navbar-static-top']\" position=\"after\">\n   42          <header>\n   43:           <nav class=\"navbar navbar-default navbar-static-top custom-fixed-00\" role=\"navigation\" >\n   44              <div class=\"container\">\n   45                <div class=\"navbar-header\">\n\nG:\\Software\\Work\\falinwa_module\\gleize_expense_ext\\models\\hr_expense.py:\n   66          for x in data:\n   67              for k, v in x.items():\n   68:                 default = 'default_%s' % k\n   69:                 context[default] = v\n   70          return{\n   71              'name': _('Expense Line'),\n   ..\n  143  class ProductProduct(models.Model):\n  144      _inherit = 'product.product'\n  145:     _order = 'sequence,default_code,name_template'\n  146  \n  147      @api.multi\n  ...\n  220  \n  221      @api.multi\n  222:     def copy_data(self, default=None):\n  223          # Prevent to duplicate expense while duplicating invoice line\n  224          ctx = dict(self._context)\n  225          if ctx.get('type') == 'in_invoice':\n  226:             default = {'no_create_expense': True}\n  227:         return super(AccountInvoiceLine, self).copy_data(default)[0]\n  228  \n  229      @api.multi\n\nG:\\Software\\Work\\falinwa_module\\gleize_expense_ext\\views\\hr_expense_view.xml:\n   55                  </field>\n   56                  <field name=\"analytic_account_id\" position=\"before\">\n   57:                     <field name=\"product_id\" context=\"{'default_can_be_expensed': 1, 'no_code': True}\"/>\n   58                      <field name=\"fal_refund_cost_price\" invisible=\"1\"/>\n   59                      <field name=\"fal_is_related_fleet\" invisible=\"1\"/>\n   ..\n  112                  </field>\n  113                  <field name=\"analytic_account_id\" position=\"before\">\n  114:                     <field name=\"product_id\" context=\"{'default_can_be_expensed': 1, 'no_code': True}\"/>\n  115                      <field name=\"fal_refund_cost_price\" invisible=\"1\"/>\n  116                      <field name=\"fal_is_related_fleet\" invisible=\"1\"/>\n  ...\n  207                  </field>\n  208                  <field name=\"product_id\" position=\"attributes\">\n  209:                     <attribute name=\"context\">{'default_can_be_expensed': 1, 'no_code': True}</attribute>\n  210                  </field>\n  211                  <field name=\"date\" position=\"after\">\n  ...\n  235              <field name=\"arch\" type=\"xml\">\n  236                  <xpath expr=\"///field[@name='line_ids']/form/group/group/field[@name='product_id']\" position=\"attributes\">\n  237:                     <attribute name=\"context\">{'default_can_be_expensed': 1, 'no_code': True}</attribute>\n  238                  </xpath>\n  239                  <xpath expr=\"///field[@name='line_ids']/form/group/group/field[@name='analytic_account_id']\" position=\"attributes\">\n  ...\n  241                  </xpath>\n  242                  <xpath expr=\"///field[@name='line_ids']/tree/field[@name='product_id']\" position=\"attributes\">\n  243:                     <attribute name=\"context\">{'default_can_be_expensed': 1, 'no_code': True}</attribute>\n  244                  </xpath>\n  245                  <xpath expr=\"///field[@name='line_ids']/tree/field[@name='analytic_account_id']\" position=\"attributes\">\n\nG:\\Software\\Work\\falinwa_module\\gleize_field_ext\\models\\hr.py:\n    3  from datetime import datetime as dt\n    4  from dateutil.relativedelta import relativedelta\n    5: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT\n    6  \n    7  \n    .\n   25              worked_years = 0.0\n   26              if worker.fal_started_work_date:\n   27:                 worked_years = float((dt.today() - dt.strptime(worker.fal_started_work_date, DEFAULT_SERVER_DATE_FORMAT)).days) / 365.0\n   28                  worker.fal_seniority = worked_years\n   29  \n   ..\n   64      fal_seniority = fields.Float(compute='get_fal_seniority', string='Seniority', help='Worked years in company')\n   65      fal_emergency_contact_ids = fields.One2many('fal.hr.emergency.contact', 'employee_id', string='Emergency Contact')\n   66:     fal_state = fields.Selection([('draft', 'Draft'), ('it_validate', 'To Validate IT'), ('hr_validate', 'To Validate HR'), ('validate', 'Validated')], string='Validation Status', default='draft')\n   67      fal_firstname = fields.Char(string='Firstname')\n   68      fal_firstname_lastname = fields.Char(compute='_get_fal_name', store=True, select=True, string='Name')\n   ..\n  130          for contract in self.search([('trial_date_end', '!=', False), ('trial_date_end', '<=', (dt.today() + relativedelta(months=1))), ('fal_is_probation_last_month', '!=', True)]):\n  131              contract.fal_is_probation_last_month = True\n  132:             if dt.strptime(contract.trial_date_end, DEFAULT_SERVER_DATE_FORMAT) <= dt.today():\n  133                  contract.fal_is_probation_end = True\n  134              else:\n  ...\n  173      @api.onchange(\"trial_date_end\")\n  174      def _onchange_check_probation_duration(self):\n  175:         if self.trial_date_end and dt.strptime(self.trial_date_end, DEFAULT_SERVER_DATE_FORMAT) <= (dt.today() + relativedelta(months=1)):\n  176              self.fal_is_probation_last_month = True\n  177:             if dt.strptime(self.trial_date_end, DEFAULT_SERVER_DATE_FORMAT) <= dt.today():\n  178                  self.fal_is_probation_end = True\n  179              else:\n  ...\n  193      fal_probation_duration_2_start = fields.Date('Probation 2 Date Start')\n  194      fal_probation_duration_2_end = fields.Date('Probation 2 Date End')\n  195:     fal_is_probation_last_month = fields.Boolean(\"Probation's Last Month\", default=False)\n  196:     fal_is_probation_2_last_month = fields.Boolean(\"Probation's 2 Last Month\", default=False)\n  197:     fal_is_contract_last_month = fields.Boolean(\"Contract's Last Month\", default=False)\n  198:     fal_is_probation_end = fields.Boolean(\"Probation's Time Ended\", default=False)\n  199      fal_attachment_ids = fields.Many2many('ir.attachment', 'fal_attachment_ids_contract', 'contract_id', 'file_id', string='Attachment', track_visibility='onchange')\n  200:     struct_id = fields.Many2one(default=lambda s: s.env.ref('hr_payroll.structure_base'))\n  201      state = fields.Selection(\n  202              [('draft', 'New'), ('probation', 'In Probation'), ('open', 'Running'), ('pending', 'To Renew'), ('close', 'Expired')],\n  ...\n  264      fal_variable_gross_salary = fields.Float('Variable Gross Salary')\n  265      fal_advantage_nature = fields.Float('Advantage in Nature(Monthly)')\n  266:     fal_departure_date = fields.Date('Departure Date', required=True, default=fields.Date.context_today)\n  267      fal_end_date = fields.Date('End Date')\n  268      fal_hr_contract_id = fields.Many2one('hr.contract', 'Contract')\n  269      fal_advantages = fields.Text(string='Comment')\n  270:     state = fields.Selection([('draft', 'Draft'), ('confirmed', 'Confirmed')], 'State', required=True, default='draft', readonly=1)\n  271  \n  272      @api.multi\n\nG:\\Software\\Work\\falinwa_module\\gleize_field_ext\\models\\mail.py:\n    5      _inherit = \"mail.template\"\n    6      \n    7:     fal_can_send = fields.Boolean(\"Can send?\", default=False)\n    8  \n    9      @api.multi\n\nG:\\Software\\Work\\falinwa_module\\gleize_field_ext\\models\\partner.py:\n    9      _inherit = 'res.partner'\n   10  \n   11:     def _get_lead_default(self, cr, uid, context=None):\n   12          res = {\n   13              'name': '',\n   ..\n   35          string=\"Account Payable\", oldname=\"property_account_payable\",\n   36          domain=\"[('internal_type', '=', 'payable'), ('deprecated', '=', False)]\",\n   37:         help=\"This account will be used instead of the default one as the payable account for the current partner\",\n   38          required=False)\n   39      property_account_receivable_id = fields.Many2one('account.account', company_dependent=True,\n   40          string=\"Account Receivable\", oldname=\"property_account_receivable\",\n   41          domain=\"[('internal_type', '=', 'receivable'), ('deprecated', '=', False)]\",\n   42:         help=\"This account will be used instead of the default one as the receivable account for the current partner\",\n   43          required=False)\n   44      fal_is_main_customer = fields.Boolean(\"Grand compte\")\n   ..\n   46      fal_is_agent = fields.Boolean(\"Is Agent\")\n   47      fal_partner_type_ids = fields.Many2many('fal.partner.type', 'fal_partner_type_tag_rel', id1='partner_id', id2='category_id', string='Partner Type')\n   48:     fal_qualification_state = fields.Selection([('to_qualify', 'To Qualify'), ('unqualified', 'Unqualified'), ('qualified', 'Qualified')], 'Qualification State', required=True, default='to_qualify', readonly=1)\n   49      fal_construction_type = fields.Many2many('fal.construction.type', 'fal_construction_type_partner_rel', 'partner_id', 'construction_id', string='Construction Type')\n   50      type = fields.Selection(selection_add=[('site', 'Site address'), ('business', 'Business Unit')])\n   ..\n   58      fal_activity_with_ges_id = fields.Many2one('fal.activities.with.ges', string='Activities with GES')\n   59      fal_parent_company_id = fields.Many2one('res.partner', string='Parent Company', domain=\"[('is_company', '=', True)]\")\n   60:     notify_email = fields.Selection(selection_add=[('portal', 'Message Référent énergie')], default='none')\n   61:     fal_address_type = fields.Selection([('work', 'Work Contact'), ('private', 'Private Contact'), ('contact', 'Contact (own address)'), ('nonheadquarter', 'Contact (at non headquarter address)'), ('headquarter', 'Contact (at headquarter address)')], string='Address Type', default='headquarter')\n   62      fal_non_headquarter_id = fields.Many2one('res.partner', string='Agency')\n   63      fal_firstname = fields.Char(string='Firstname')\n   ..\n   78              partner.display_name = partner.with_context(context).name_get()[0][1] if partner.name_get() else ''\n   79  \n   80:     _defaults = {\n   81:         'name': lambda s, cr, uid, c: s._get_lead_default(cr, uid, c).get('name', ''),\n   82:         'email': lambda s, cr, uid, c: s._get_lead_default(cr, uid, c).get('email', ''),\n   83:         'phone': lambda s, cr, uid, c: s._get_lead_default(cr, uid, c).get('phone', ''),\n   84:         'mobile': lambda s, cr, uid, c: s._get_lead_default(cr, uid, c).get('mobile', ''),\n   85:         'fax': lambda s, cr, uid, c: s._get_lead_default(cr, uid, c).get('fax', ''),\n   86:         'street': lambda s, cr, uid, c: s._get_lead_default(cr, uid, c).get('street', ''),\n   87:         'street2': lambda s, cr, uid, c: s._get_lead_default(cr, uid, c).get('street2', ''),\n   88:         'city': lambda s, cr, uid, c: s._get_lead_default(cr, uid, c).get('city', ''),\n   89:         'state_id': lambda s, cr, uid, c: s._get_lead_default(cr, uid, c).get('state_id', False),\n   90:         'country_id': lambda s, cr, uid, c: s._get_lead_default(cr, uid, c).get('country_id', False),\n   91          'company_id': False,\n   92          'company_type': 'company',\n   ..\n  133          res = super(res_partner, self).on_change_company_type(company_type)\n  134          if company_type == 'company':\n  135:             res['value']['image'] = self._get_default_image(True, True)\n  136          else:\n  137:             res['value']['image'] = self._get_default_image(False, True)\n  138          return res\n  139  \n  ...\n  217                  'body': _('There is a new prospect to qualify'),\n  218                  'subject': _('New Prospect'),\n  219:                 'author_id': mail_obj._get_default_author().id,\n  220:                 'email_from': mail_obj._get_default_from(),\n  221                  'date': fields.Datetime.now(),\n  222                  'message_type': 'comment',\n  ...\n  313      child_ids = fields.One2many('fal.partner.type', 'parent_id', 'Childs')\n  314      type = fields.Selection([('view', 'View'), ('normal', 'Normal')], string='Type')\n  315:     is_project_manager = fields.Boolean(\"Is Project Manager\", default=False)\n  316  \n  317  # end of fal_partner_type()\n  ...\n  326      child_ids = fields.One2many('fal.construction.type', 'parent_id', 'Childs')\n  327      housing = fields.Boolean('Is Housing')\n  328:     sequence = fields.Integer(string='Sequence', default=1)\n  329      type = fields.Selection([('view', 'View'), ('normal', 'Normal')], string='Type')\n  330  \n  ...\n  337  \n  338      # Fields Definition\n  339:     sequence = fields.Integer(string='Sequence', default=1)\n  340      type = fields.Selection([('view', 'View'), ('normal', 'Normal')], string='Type')\n  341  \n\nG:\\Software\\Work\\falinwa_module\\gleize_field_ext\\models\\sale.py:\n    4  from datetime import datetime, date, timedelta\n    5  from dateutil.relativedelta import relativedelta\n    6: from openerp.tools import DEFAULT_SERVER_DATETIME_FORMAT, DEFAULT_SERVER_DATE_FORMAT\n    7  \n    8  \n    .\n   11  \n   12      name = fields.Char(\"Name\")\n   13:     in_sales_forecast = fields.Boolean(\"In Sales Forecast\", default=False)\n   14:     in_invoice_forecast = fields.Boolean(\"In Invoice Forecast\", default=False)\n   15  \n   16  # end of fal_sales_order_consolidation()\n   ..\n   30          return domain\n   31  \n   32:     def _get_partner_default(self, cr, uid, context=None):\n   33          res = False\n   34          if context is None:\n   ..\n  147  \n  148      @api.model\n  149:     def _default_user_id(self):\n  150          res = False\n  151          if self.partner_id:\n  ...\n  231      fal_sale_sent_amount_total = fields.Float(compute='_get_fal_sale_amount_total', string=\"Sum of Orders\", readonly=True, digits=0)\n  232      fal_sale_sent_number = fields.Integer(compute='_get_fal_sale_amount_total', string=\"Number of Quotations\", readonly=True)\n  233:     user_id = fields.Many2one(related=\"partner_id.user_id\", string=\"Partner Salesperson\", store=True, default=_default_user_id)\n  234      fal_user_id_display = fields.Many2one(related=\"user_id\", string=\"Partner Salesperson\", store=False, readonly=\"1\")\n  235      fal_confirm_variable_cost_margin_total = fields.Float(compute='_get_fal_sale_amount_total', string=\"Sum of Variable Cost Margin\", readonly=True, digits=0)\n  ...\n  257      fal_number_of_lines = fields.Float('Number of Lines')\n  258      fal_installing_type_id = fields.Many2one('fal.installing.type', 'Installing Type')\n  259:     fal_warning = fields.Selection([('portrait', 'Portrait'), ('landscape', 'Landscape')], 'Warning', default=\"portrait\")\n  260      fal_number_of_string = fields.Float('Number of Strings')\n  261      fal_construction_duration = fields.Float('Construction Duration(days)')\n  ...\n  265      fal_credit_agency_agricole = fields.Many2one('res.partner', 'Agence Credit Agricole', domain=[('fal_is_ca_agency', '=', True)])\n  266      fal_skill_tags_has_building = fields.Boolean(compute='_get_skill_tag_has_building', string='Has Sustainable Building Tag')\n  267:     fal_can_convert_to_opportunity = fields.Boolean(string='Can Convert to Opportunity', compute='_get_can_convert_to_opportunity', default=False)\n  268:     fal_state_won_or_lost = fields.Boolean(string='Win or Lost', default=False)\n  269      fal_last_call = fields.Char(string='Last Call')  # Dernière Communication\n  270      fal_gross_margin = fields.Float(string='Gross Margin', compute='_compute_gross_margin', store=True)\n  ...\n  274      fal_planned_revenue_manual = fields.Float(string='Expected Revenue')\n  275      fal_net_margin_manual = fields.Float(string='Net Margin')\n  276:     fal_revenue_source = fields.Selection([('declarative', 'Declarative'), ('consolidated', 'Consolidated')], string='Revenue Source', required=1, default='declarative')\n  277      fal_sales_forecast_history = fields.One2many(\"fal.sales.forecast.history\", \"opportunity_id\", string=\"Forecast History\")\n  278      partner_id = fields.Many2one(string=\"Customer\")\n  279      fal_previous_probability = fields.Float(string=\"Previous Probability\", readonly=True)\n  280:     fal_confirm_probability_change = fields.Boolean(\"Confirm Probability Change\", default=True)\n  281      fal_partner_project_manager = fields.Many2one(\"res.partner\", domain=domain_is_partner_project_manager, string=\"Partner Project Manager\")\n  282      fal_ratio_gross_margin = fields.Float(\"Gross Margin Ratio\", compute=_compute_ratio_gross_margin)\n  283      fal_ratio_net_margin = fields.Float(\"Net Margin Ratio\", compute=_compute_ratio_net_margin)\n  284  \n  285:     _defaults = {\n  286:        'partner_id': lambda s, cr, uid, c: s._get_partner_default(cr, uid, c),\n  287         'company_id': lambda s, cr, uid, c: s.pool.get('res.users').browse(cr, uid, uid).company_id.id\n  288      }\n  ...\n  347              temp.append((0, 0, {\n  348                  'technical_parameter_id': ntp.id,\n  349:                 'uom_id': ntp.default_uom_id.id,\n  350                  'value': value,\n  351              }))\n  ...\n  392                                  temp.append((0, 0, {\n  393                                      'technical_parameter_id': ntp.id,\n  394:                                     'uom_id': ntp.default_uom_id.id,\n  395                                      'value': value,\n  396                                  }))\n  ...\n  505          for activity in activities:\n  506              if activity.expected_date:\n  507:                 expected_date = datetime.strptime(activity.expected_date, tools.DEFAULT_SERVER_DATE_FORMAT).date()\n  508  \n  509                  if expected_date == date.today():\n  ...\n  518          for activity in activities_done:\n  519              if activity.realized_date:\n  520:                 realized_date = datetime.strptime(activity.realized_date, tools.DEFAULT_SERVER_DATE_FORMAT).date()\n  521  \n  522                  # undefined date_act. Will be an error if the code flows through here. FIXED.\n  ...\n  530          for quoted in quoteds:\n  531              if quoted.date_order:\n  532:                 quoted_date = datetime.strptime(quoted.date_order, tools.DEFAULT_SERVER_DATETIME_FORMAT).date()\n  533                  \"\"\"\n  534                  amount_untaxed = quoted.amount_untaxed\n  ...\n  549          for sale in sales:\n  550              if sale.date_order:\n  551:                 sale_date = datetime.strptime(sale.date_order, tools.DEFAULT_SERVER_DATETIME_FORMAT).date()\n  552                  \"\"\"\n  553                  amount_untaxed = sale.amount_untaxed\n  ...\n  576                  my_opportunity_deadline = False\n  577                  if my_opportunity.date_deadline:\n  578:                     my_opportunity_deadline = datetime.strptime(my_opportunity.date_deadline, tools.DEFAULT_SERVER_DATE_FORMAT).date()\n  579                  if my_opportunity.probability >= 80 and my_opportunity.probability != 100 and my_opportunity.date_deadline and my_opportunity_deadline <= date.today() + timedelta(days=+(6*365/12)):\n  580                      res['fal_my']['fal_direct_sale_forecast'] += my_opportunity.planned_revenue\n  ...\n  590                  global_opportunity_deadline = False\n  591                  if global_opportunity.date_deadline:\n  592:                     global_opportunity_deadline = datetime.strptime(global_opportunity.date_deadline, tools.DEFAULT_SERVER_DATE_FORMAT).date()\n  593                  if global_opportunity.probability >= 80 and global_opportunity.probability != 100 and global_opportunity.date_deadline and global_opportunity_deadline <= date.today() + timedelta(days=+(6*365/12)):\n  594                      res['fal_global']['fal_direct_sale_forecast'] += global_opportunity.planned_revenue\n  ...\n  630      parent_id = fields.Many2one('fal.offer.type', 'Parent')\n  631      child_ids = fields.One2many('fal.offer.type', 'parent_id', 'Childs')\n  632:     sequence = fields.Integer(string='Sequence', default=1)\n  633      type = fields.Selection([('view', 'View'), ('normal', 'Normal')], string='Type')\n  634  \n  ...\n  651      _order = 'sequence'\n  652  \n  653:     sequence = fields.Integer(string='Sequence', default=1)\n  654  \n  655  # end of crmLeadTag()\n  ...\n  660  \n  661      @api.model\n  662:     def _default_fal_in_consolidation(self):\n  663          return self.env['ir.model.data'].xmlid_to_object(\"gleize_field_ext.fal_sales_order_consolidation_1\")\n  664  \n  ...\n  684      fal_quotation_margin = fields.Binary(string='Quotation - Margin Computation', attachment=True, track_visibility='on_change')\n  685      fal_quotation_margin_filename = fields.Char('Quotation - Margin Computation', track_visibility='on_change')\n  686:     fal_without_tax = fields.Boolean(string='Without Tax Amount', default=True)\n  687      fal_amount_untaxed = fields.Monetary(string='Untaxed Amount')\n  688      fal_original_quot_number = fields.Char(string='Original Quotation Number')\n  689:     fal_version_number = fields.Integer(string='Version Number', default=0)\n  690      fal_affaire_number = fields.Char(string='Affaire Number')\n  691      fal_name = fields.Char(compute='_get_new_version_number', string='Quotation Number', store=True, readonly=True)\n  ...\n  700      fal_probability = fields.Float(string='Probability')\n  701      fal_expected_signature_date = fields.Date(string=\"Expected Signature Date\")\n  702:     fal_in_consolidation = fields.Many2one(\"fal.sales.order.consolidation\", string=\"In Consolidation\", default=_default_fal_in_consolidation)\n  703  \n  704      # Method definitions\n  ...\n  729          for sale in self:\n  730              # Create new quotation\n  731:             defaults = {\n  732                  'state': 'draft',\n  733                  'project_id': sale.project_id and sale.project_id.id or False,\n  734                  'fal_version_number': sale.fal_version_number + 1,\n  735              }\n  736:             new_sale_id = sale.copy(defaults)\n  737  \n  738              # Cancel previous quotation\n  ...\n  808              if lead.type == 'lead' and lead.stage_id.id in [in_qualification, incoming] and ((uid in team_member_ids and (uid == lead.user_id.id or uid == lead.fal_lead_sales_person_id.id)) or uid in manager_users):\n  809                  lead_nbr += 1\n  810:                 create_date = datetime.strptime(lead.create_date, DEFAULT_SERVER_DATETIME_FORMAT)\n  811                  if (create_date < vente_classique_limit and self.id == vente_classique_id) or (create_date < vente_numero_limit and self.id == vente_numero_id):\n  812                      red_lead_nbr += 1\n  ...\n  834              _ctx = dict(self._context or {})\n  835              _ctx.update({\n  836:                 'search_default_team_id': [team.id],\n  837:                 # 'search_default_fal_lead_filter_stage': 1,\n  838:                 'search_default_fal_aged_lead_filter': 1,\n  839:                 'default_team_id': team.id,\n  840:                 'default_type': 'lead',\n  841                  'stage_type': 'lead',\n  842:                 'default_user_id': self._uid,\n  843                  'tree_view_ref': 'crm.crm_case_tree_view_leads',\n  844              })\n  845              if self._uid not in manager_users:\n  846:                 _ctx.update({'search_default_fal_lead_sales_person_id': 1, 'search_default_assigned_to_me': 1})\n  847              search_view_id = data_model.xmlid_to_object('gleize_field_ext.view_crm_case_leads_filter_gleize').id\n  848              return {\n  ...\n  866              _ctx = dict(self._context or {})\n  867              _ctx.update({\n  868:                 'search_default_team_id': [team.id],\n  869:                 'search_default_fal_lead_filter_stage': 1,\n  870:                 'default_team_id': team.id,\n  871:                 'default_type': 'lead',\n  872                  'stage_type': 'lead',\n  873:                 'default_user_id': self._uid,\n  874                  'tree_view_ref': 'crm.crm_case_tree_view_leads',\n  875              })\n  876              if self._uid not in manager_users:\n  877:                 _ctx.update({'search_default_fal_lead_sales_person_id': 1, 'search_default_assigned_to_me': 1})\n  878              search_view_id = data_model.xmlid_to_object('gleize_field_ext.view_crm_case_leads_filter_gleize').id\n  879              return {\n  ...\n  897              _ctx = dict(self._context or {})\n  898              _ctx.update({\n  899:                 'search_default_team_id': [team.id],\n  900:                 'search_default_fal_oppor_filter_stage': 1,\n  901:                 'default_team_id': team.id,\n  902:                 'default_type': 'opportunity',\n  903                  'stage_type': 'opportunity',\n  904:                 'default_user_id': self._uid,\n  905                  'form_view_ref': 'crm.crm_case_form_view_oppor',\n  906              })\n  907              if self._uid not in manager_users:\n  908:                 _ctx.update({'search_default_fal_lead_sales_person_id': 1, 'search_default_assigned_to_me': 1})\n  909              search_view_id = data_model.xmlid_to_object('gleize_field_ext.view_crm_case_opportunities_filter_gleize').id\n  910              return {\n  ...\n  935  </p>\"\"\"\n  936              if user_team_id:\n  937:                 action['help'] += \"<p>As you don't belong to any sales team, Odoo opens the first one by default.</p>\"\n  938  \n  939          action_context = eval(action['context'], {'uid': uid})\n  940          if user_team_id:\n  941              action_context.update({\n  942:                 'default_team_id': user_team_id,\n  943:                 'search_default_team_id': user_team_id,\n  944:                 'search_default_fal_date_deadline_under_today': 1,\n  945:                 'search_default_groupby_customerprojecttype': 1,\n  946              })\n  947  \n  ...\n 1043                  if self.user_has_groups('account.group_account_manager'):\n 1044                      lock_date = period_ids[0].adviser_locking_date\n 1045:                 if fields.date.today() >= datetime.strptime(lock_date, DEFAULT_SERVER_DATE_FORMAT).date():\n 1046                      raise UserError(_(\"You cannot add/modify entries prior to and inclusive of the lock date %s. Check the company settings or ask someone with the 'Adviser' role\") % (lock_date))\n 1047          return True\n\nG:\\Software\\Work\\falinwa_module\\gleize_field_ext\\models\\technical_parameter.py:\n    8  \n    9      name = fields.Char('Name', required=1, translate=1)\n   10:     default_uom_id = fields.Many2one('product.uom', 'Unit of Measure')\n   11      expertise_skill_tags_ids = fields.Many2many('fal.expertise.skill.tag', 'fal_technical_parameter_expertise_skill_tag', 'techinal_parameter_id', 'tags_id', string=\"Expertise Skill Tags\")\n   12:     sequence = fields.Integer(default=10)\n   13:     type = fields.Selection([('char', 'Quantity'), ('selection', 'List of Choices')], string='Type', default='char')\n   14      param_selection_ids = fields.Many2many('fal.technical.parameter.selection', 'fal_technical_parameter_selection_rel', 'techinal_parameter_id', 'selection_id', string=\"Parameter Selection\")\n   15      code = fields.Char('Code')\n   ..\n   33      def onchange_technical_parameter_id(self):\n   34          if self.technical_parameter_id:\n   35:             self.uom_id = self.technical_parameter_id.default_uom_id\n   36  \n   37  # end of FalTechnicalParametersField()\n\nG:\\Software\\Work\\falinwa_module\\gleize_field_ext\\static\\src\\xml\\gleize_field_ext.xml:\n  323                          <input type=\"text\" placeholder=\"Add\"/>\n  324                          <button class=\"btn btn-sm btn-primary o_kanban_add\">Add</button>\n  325:                         <button class=\"btn btn-sm btn-default o_kanban_cancel\">Discard</button>\n  326                      </div>\n  327                  </div>\n\nG:\\Software\\Work\\falinwa_module\\gleize_field_ext\\views\\hr_view.xml:\n  241                  Click to create an employee gender.\n  242                </p><p>\n  243:                 By default, only male and female available.\n  244                </p>\n  245              </field>\n\nG:\\Software\\Work\\falinwa_module\\gleize_field_ext\\views\\sale_view.xml:\n  582                  <data>\n  583                      <xpath expr=\"//button[@name='%(sale_crm.sale_action_quotations_new)d'][1]\" position=\"attributes\">\n  584:                         <attribute name=\"context\">{'search_default_partner_id': partner_id,\n  585:                                       'default_partner_id': partner_id,\n  586:                                       'default_team_id': team_id,\n  587:                                       'default_fal_lead_sales_person_id': fal_lead_sales_person_id}</attribute>\n  588                      </xpath>\n  589                      <xpath expr=\"//button[@name='%(sale_crm.sale_action_quotations_new)d'][2]\" position=\"attributes\">\n  590:                         <attribute name=\"context\">{'search_default_partner_id': partner_id,\n  591:                                       'default_partner_id': partner_id,\n  592:                                       'default_team_id': team_id,\n  593:                                       'default_fal_lead_sales_person_id': fal_lead_sales_person_id}</attribute>\n  594                      </xpath>\n  595                      <xpath expr=\"//div[@name='button_box']/button[3]\" position=\"replace\">\n  596                          <button class=\"o_form_field oe_stat_button\" type=\"action\"\n  597                                  name=\"%(sale_crm.sale_action_quotations)d\" icon=\"fa-usd\"\n  598:                                 context=\"{'default_partner_id': partner_id, 'search_default_sent': 1, 'default_team_id': team_id,\n  599:                                       'default_fal_lead_sales_person_id': fal_lead_sales_person_id, 'search_default_partner_id': partner_id}\">\n  600                              <div class=\"o_stat_info\">\n  601                                  <span class=\"o_stat_value\"><field name=\"fal_sale_sent_amount_total\" widget=\"monetary\" options=\"{'currency_field': 'company_currency'}\"/></span>\n  ...\n  606                          <button class=\"o_form_field oe_stat_button\" type=\"action\"\n  607                                  name=\"%(sale_crm.sale_action_quotations)d\" icon=\"fa-usd\"\n  608:                                 context=\"{'default_partner_id': partner_id, 'search_default_sent': 1, 'default_team_id': team_id,\n  609:                                       'default_fal_lead_sales_person_id': fal_lead_sales_person_id, 'search_default_partner_id': partner_id}\">\n  610                              <div class=\"o_stat_info\">\n  611                                  <span class=\"o_stat_value\"><field name=\"fal_sent_gross_margin_total\" widget=\"monetary\" options=\"{'currency_field': 'company_currency'}\"/></span>\n  ...\n  618                          <button class=\"oe_stat_button\" type=\"action\" attrs=\"{'invisible': [('fal_sale_confirm_amount_total', '=', 0)]}\"\n  619                                  name=\"%(sale_crm.sale_action_quotations)d\" icon=\"fa-usd\"\n  620:                                 context=\"{'search_default_partner_id': partner_id, 'default_partner_id': partner_id, 'search_default_order': 1}\">\n  621                              <div class=\"o_form_field o_stat_info\">\n  622                                  <span class=\"o_stat_value\"><field name=\"fal_sale_confirm_amount_total\" widget=\"monetary\" options=\"{'currency_field': 'company_currency'}\"/></span>\n  ...\n  627                          <button class=\"oe_stat_button\" type=\"action\" attrs=\"{'invisible': [('fal_sale_confirm_amount_total', '=', 0)]}\"\n  628                                  name=\"%(sale_crm.sale_action_quotations)d\" icon=\"fa-usd\"\n  629:                                 context=\"{'search_default_partner_id': partner_id, 'default_partner_id': partner_id, 'search_default_order': 1}\">\n  630                              <div class=\"o_stat_info\">\n  631                                  <span class=\"o_stat_value\"><field name=\"fal_confirm_gross_margin_total\" widget=\"monetary\" options=\"{'currency_field': 'company_currency'}\"/></span>\n  ...\n  843              <field name=\"view_mode\">graph,pivot</field>\n  844              <field name=\"domain\">[('state','=','sent'),('user_id', '=', uid)]</field>\n  845:             <!-- field name=\"context\">{'search_default_order_month':1}</field -->\n  846              <field name=\"help\">This report performs analysis on your quotations. Analysis check your sales revenues and sort it by different group criteria (salesman, partner, product, etc.) Use this report to perform analysis on sales not having invoiced yet. If you want to analyse your turnover, you should use the Invoice Analysis report in the Accounting application.</field>\n  847          </record>\n  ...\n  852              <field name=\"view_mode\">graph,pivot</field>\n  853              <field name=\"domain\">[('state','in',['sale','done']),('user_id', '=', uid)]</field>\n  854:             <!-- field name=\"context\">{'search_default_order_month':1}</field -->\n  855              <field name=\"help\">This report performs analysis on your sales orders. Analysis check your sales revenues and sort it by different group criteria (salesman, partner, product, etc.) Use this report to perform analysis on sales not having invoiced yet. If you want to analyse your turnover, you should use the Invoice Analysis report in the Accounting application.</field>\n  856          </record>\n  ...\n  894              <field name=\"search_view_id\" ref=\"gleize_field_ext.view_crm_lead_dashboard_search\"/>\n  895              <field name=\"view_id\" ref=\"gleize_field_ext.crm_case_tree_view_oppor_falcrmpro_gleize\"/>\n  896:             <field name=\"context\">{'search_default_partner_salesperson_is_me': 1,\n  897:                                     'search_default_direct_sales_forecast': 1, 'form_view_ref': 'gleize_field_ext.crm_case_form_view_oppor_gleizext', 'tree_view_ref': 'gleize_field_ext.crm_case_tree_view_oppor_falcrmpro_gleize'}</field>\n  898              <field name=\"help\">Empty Customer Project, You should create one!</field>\n  899          </record>\n  ...\n  905              <field name=\"search_view_id\" ref=\"gleize_field_ext.view_crm_lead_dashboard_search\"/>\n  906              <field name=\"view_id\" ref=\"gleize_field_ext.crm_case_tree_view_oppor_falcrmpro_gleize\"/>\n  907:             <field name=\"context\">{'search_default_partner_salesperson_is_me': 1,\n  908:                                     'search_default_other_direct_sales_forecast': 1, 'form_view_ref': 'gleize_field_ext.crm_case_form_view_oppor_gleizext', 'tree_view_ref': 'gleize_field_ext.crm_case_tree_view_oppor_falcrmpro_gleize'}</field>\n  909              <field name=\"help\">Empty Customer Project, You should create one!</field>\n  910          </record>\n  ...\n  916              <field name=\"search_view_id\" ref=\"gleize_field_ext.view_crm_lead_dashboard_search\"/>\n  917              <field name=\"view_id\" ref=\"gleize_field_ext.crm_case_tree_view_oppor_falcrmpro_gleize\"/>\n  918:             <field name=\"context\">{'search_default_partner_salesperson_is_me': 1,\n  919:                                     'search_default_development_forecast': 1, 'form_view_ref': 'gleize_field_ext.crm_case_form_view_oppor_gleizext', 'tree_view_ref': 'gleize_field_ext.crm_case_tree_view_oppor_falcrmpro_gleize'}</field>\n  920              <field name=\"help\">Empty Customer Project, You should create one!</field>\n  921          </record>\n  ...\n  927              <field name=\"search_view_id\" ref=\"gleize_field_ext.view_crm_lead_dashboard_search\"/>\n  928              <field name=\"view_id\" ref=\"gleize_field_ext.crm_case_tree_view_oppor_falcrmpro_gleize\"/>\n  929:             <field name=\"context\">{'search_default_direct_sales_forecast': 1, 'form_view_ref': 'gleize_field_ext.crm_case_form_view_oppor_gleizext', 'tree_view_ref': 'gleize_field_ext.crm_case_tree_view_oppor_falcrmpro_gleize'}</field>\n  930              <field name=\"help\">Empty Customer Project, You should create one!</field>\n  931          </record>\n  ...\n  937              <field name=\"search_view_id\" ref=\"gleize_field_ext.view_crm_lead_dashboard_search\"/>\n  938              <field name=\"view_id\" ref=\"gleize_field_ext.crm_case_tree_view_oppor_falcrmpro_gleize\"/>\n  939:             <field name=\"context\">{'search_default_other_direct_sales_forecast': 1, 'form_view_ref': 'gleize_field_ext.crm_case_form_view_oppor_gleizext', 'tree_view_ref': 'gleize_field_ext.crm_case_tree_view_oppor_falcrmpro_gleize'}</field>\n  940              <field name=\"help\">Empty Customer Project, You should create one!</field>\n  941          </record>\n  ...\n  947              <field name=\"search_view_id\" ref=\"gleize_field_ext.view_crm_lead_dashboard_search\"/>\n  948              <field name=\"view_id\" ref=\"gleize_field_ext.crm_case_tree_view_oppor_falcrmpro_gleize\"/>\n  949:             <field name=\"context\">{'search_default_development_forecast': 1, 'form_view_ref': 'gleize_field_ext.crm_case_form_view_oppor_gleizext', 'tree_view_ref': 'gleize_field_ext.crm_case_tree_view_oppor_falcrmpro_gleize'}</field>\n  950              <field name=\"help\">Empty Customer Project, You should create one!</field>\n  951          </record>\n\nG:\\Software\\Work\\falinwa_module\\gleize_field_ext\\views\\technical_parameters_view.xml:\n   10                      <group col=\"4\">\n   11                          <field name=\"name\" />\n   12:                         <field name=\"default_uom_id\" />\n   13                          <field name=\"code\" />\n   14                          <field name=\"type\" />\n\nG:\\Software\\Work\\falinwa_module\\gleize_field_ext\\wizard\\validate_sales_forecast_wizard.py:\n    3  from datetime import datetime, date, timedelta\n    4  from openerp.exceptions import UserError, ValidationError\n    5: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT\n    6  \n    7  \n    .\n   25                      })]})\n   26                  opportunity.message_post(\n   27:                       body=\"Sale Forecast Created At \" + datetime.strftime(date.today(), DEFAULT_SERVER_DATE_FORMAT),\n   28                        subject=\"Sale Forecast Created\",\n   29                        )\n\nG:\\Software\\Work\\falinwa_module\\gleize_leave_ext\\models\\hr_holidays.py:\n    5  import math\n    6  from openerp.exceptions import UserError, AccessError\n    7: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT\n    8  \n    9  \n   ..\n   84              account_analytic_line_obj = self.env[\"account.analytic.line\"]\n   85              for holiday in (holidays for holidays in self if holidays.date_from and holidays.date_to):\n   86:                 date_from = datetime.datetime.strptime(holiday.date_from, DEFAULT_SERVER_DATE_FORMAT)\n   87:                 date_to = datetime.datetime.strptime(holiday.date_to, DEFAULT_SERVER_DATE_FORMAT)\n   88                  not_working_days = ['0', '1', '2', '3', '4', '5', '6']\n   89                  employee_id_obj = holiday.employee_id\n   ..\n  151                      result['value']['date_to_time_selection'] = 'afternoon'\n  152                  elif date_from_time_selection == 'afternoon':\n  153:                     date_to_with_delta = datetime.datetime.strptime(date_from, tools.DEFAULT_SERVER_DATE_FORMAT) + datetime.timedelta(days=1)\n  154                      result['value']['date_to'] = str(date_to_with_delta)\n  155                      result['value']['date_to_time_selection'] = 'morning'\n  ...\n  260  \n  261      date_from = fields.Date(string='Start Date', readonly=True, states={'draft': [('readonly', False)], 'confirm': [('readonly', False)]}, select=True, copy=False)\n  262:     date_from_time_selection = fields.Selection([('morning', 'Morning'), ('afternoon', 'Afternoon')], string=\"Time\", default=\"morning\")\n  263      date_to = fields.Date(string='End Date', readonly=True, states={'draft': [('readonly', False)], 'confirm': [('readonly', False)]}, copy=False)\n  264:     date_to_time_selection = fields.Selection([('morning', 'Morning'), ('afternoon', 'Afternoon')], string=\"Time\", default=\"afternoon\")\n  265      holiday_status_id = fields.Many2one(\"hr.holidays.status\", \"Leave Type\", required=True, readonly=True, states={'draft': [('readonly', False)], 'confirm': [('readonly', False)]}, domain=\"[('fal_type', '=', 'normal')]\")\n  266:     is_fixed = fields.Boolean(\"Fixed Holidays\", default=False, readonly=True, help=\"If checked, It will not checked for overlapped holiday constraints\")\n  267      fal_fix_holiday_line_id = fields.Many2one('fal.fix.date', 'From Fix Date', readonly=True, ondelete=\"restrict\")\n  268      number_of_days_temp = fields.Float(string='Request')\n  269:     state = fields.Selection(default=\"draft\")\n  270      can_reset = fields.Boolean(\n  271:             compute=\"_get_can_reset\", string=\"Can reset\", default=False,\n  272              )\n  273      fal_company_id = fields.Many2one('res.company', 'Company', compute='_get_fal_company_id', store=True)\n  274:     fal_btp_validated = fields.Boolean(\"BTP Validated\", default=False)\n  275:     fal_spesial_remove = fields.Boolean(\"Spesial Remove\", default=False)\n  276  \n  277      @api.multi\n  ...\n  344          return name_get_res_with_year\n  345  \n  346:     fal_year = fields.Char(string=\"Year\", default=lambda self: datetime.date.today().strftime(\"%Y\"))\n  347      fal_period_in_departure_date = fields.Date(string=\"Period In Departure Date\")\n  348      fal_period_in_ending_date = fields.Date(string=\"Period In Ending Date\")\n  349      fal_period_out_departure_date = fields.Date(string=\"Period Out Departure Date\")\n  350      fal_period_out_ending_date = fields.Date(string=\"Period Out Ending Date\")\n  351:     fal_type = fields.Selection([('view', 'Leave Type View'), ('normal', 'Normal')], 'Type', required=True, default='normal')\n  352      child_ids = fields.One2many('hr.holidays.status', 'parent_id', string=\"Child\")\n  353      parent_id = fields.Many2one('hr.holidays.status', string=\"Parent\", domain=\"[('fal_type', '=', 'view')]\")\n\nG:\\Software\\Work\\falinwa_module\\gleize_leave_ext\\views\\hr_holidays_view.xml:\n  211              <field name=\"view_id\" eval=\"view_holiday_simple_fal\"/>\n  212              <field name=\"context\">{\n  213:                 'search_default_group_type': 1,\n  214:                 'search_default_year': 1 ,\n  215:                 'search_default_my_leaves': 1,\n  216:                 'search_default_is_not_cancelled': 1,\n  217                  'needaction_menu_ref':\n  218                  [\n  ...\n  233              <field name=\"view_id\" ref=\"hr_holidays.edit_holiday_new\"/>\n  234              <field name=\"context\">{\n  235:                 'default_type': 'remove',\n  236:                 'search_default_my_leaves':1,\n  237:                 'search_default_is_not_cancelled': 1,\n  238                  'needaction_menu_ref':\n  239                  [\n  ...\n  260              <field name=\"view_type\">form</field>\n  261              <field name=\"context\">{\n  262:                 'default_type':'add',\n  263:                 'search_default_my_leaves':1,\n  264:                 'search_default_is_not_cancelled': 1,\n  265                  'needaction_menu_ref':\n  266                  [\n\nG:\\Software\\Work\\falinwa_module\\gleize_leave_ext\\wizard\\hr_holidays_postpone_wizard.py:\n   37              self.duration = duration\n   38  \n   39:     holidays_status_id = fields.Many2one('hr.holidays.status', string='Leave Type', default=lambda self: self.env.context['active_ids'][0])\n   40:     lost_days_reason = fields.Selection([('pu', 'Lost Leave - PU'), ('py', 'Lost Leave - PY')], string=\"Lost Days Reason\", default=\"pu\", required=True)\n   41      description = fields.Char(string=\"Description\", required=True)\n   42      employee_id = fields.Many2one('hr.employee', string=\"Employee\", required=True)\n\nG:\\Software\\Work\\falinwa_module\\gleize_project_ext\\models\\project.py:\n    3  from openerp.exceptions import UserError\n    4  from datetime import datetime, date\n    5: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT\n    6  \n    7  \n\nG:\\Software\\Work\\falinwa_module\\gleize_timesheet_ext\\models\\hr_timesheet.py:\n    3  from openerp.exceptions import UserError\n    4  from datetime import datetime, date\n    5: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT\n    6  \n    7  \n    .\n   20              else:\n   21                  sheet_by_date_list[sheet_ids.date] = sheet_ids.unit_amount\n   22:             if self.employee_id.contract_id and self.employee_id.contract_id.working_hours and (sheet_by_date_list[sheet_ids.date] > (sum((working_hours.hour_to - working_hours.hour_from) for working_hours in self.employee_id.contract_id.working_hours.attendance_ids if int(working_hours.dayofweek) == datetime.strptime(sheet_ids.date, DEFAULT_SERVER_DATE_FORMAT).weekday()))):\n   23                  raise UserError(_('You Cannot Record Work Hours Bigger Than Work Hours You Should Do! (Please Refer to Working Schedule in Your Contract).'))\n   24          return super(hr_timesheet_sheet, self.sudo()).button_confirm()\n\nG:\\Software\\Work\\falinwa_module\\gleize_timesheet_ext\\views\\hr_timesheet_view.xml:\n   76              <field name=\"view_type\">form</field>\n   77              <field name=\"view_id\" eval=\"False\"/>\n   78:             <field name=\"context\">{'default_is_timesheet':1, 'search_default_my_timesheet': 1, 'search_default_group_state': 1}</field>\n   79              <field name=\"search_view_id\" ref=\"view_hr_timesheet_sheet_filter_gleize_timesheet_ext\"/>\n   80              <field name=\"help\" type=\"html\">\n\nG:\\Software\\Work\\falinwa_module\\gleize_website_ext\\views\\survey_form.xml:\n   45                                      <input type=\"text\" name=\"db\" t-att-value=\"request.db\" id=\"db\" class=\"form-control\" required=\"required\" readonly=\"readonly\"/>\n   46                                      <span class=\"input-group-btn\">\n   47:                                       <a href=\"/web/database/selector\" class=\"btn btn-default\">Select <i class=\"fa fa-database\"></i></a>\n   48                                      </span>\n   49                                  </div>\n\nG:\\Software\\Work\\falinwa_module\\hpg_field_ext\\wizard\\crm_delegate_saleperson_hpgext_wizard_view.xml:\n   13                      <footer>\n   14                          <button name=\"action_delegate\" string=\"Confirm\" type=\"object\" class=\"btn-primary\"/>\n   15:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   16                      </footer>\n   17                  </form>\n\nG:\\Software\\Work\\falinwa_module\\hpg_field_ext\\wizard\\crm_mark_lost_hpgext_wizard_view.xml:\n   13                      <footer>\n   14                          <button name=\"action_apply\" string=\"Confirm\" type=\"object\" class=\"btn-primary\"/>\n   15:                         <button string=\"Cancel\" class=\"btn-default\" special=\"cancel\"/>\n   16                      </footer>\n   17                  </form>\n\nG:\\Software\\Work\\falinwa_module\\hps_field_ext\\mrp.py:\n    4  import openerp.addons.decimal_precision as dp\n    5  import time\n    6: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT, DEFAULT_SERVER_DATETIME_FORMAT, DATETIME_FORMATS_MAP, float_compare\n    7  from openerp import SUPERUSER_ID\n    8  \n    .\n   82                  res[production_id.id] = self._get_display_product_name(production_id)\n   83              else:\n   84:                 if production_id.product_id.default_code:\n   85:                     res[production_id.id] = production_id.product_id.default_code[2:4] + '-' + self._get_display_product_name(self._get_one_fal_production_root(production_id))                    \n   86                  else:    \n   87                      res[production_id.id] = self._get_display_product_name(self._get_one_fal_production_root(production_id))                                    \n   ..\n  103      }\n  104  \n  105:     _defaults = {\n  106          'date_planned': fields.date.today(),\n  107      }\n\nG:\\Software\\Work\\falinwa_module\\hps_field_ext\\mrp_view.xml:\n  133              <field name=\"search_view_id\" ref=\"mrp.view_mrp_production_filter\"/>\n  134              <field name=\"context\">{}</field>\n  135:             <field name=\"domain\">['|',('product_id.default_code','ilike','-vk-'),('product_id.default_code','ilike','-nk-')]</field>\n  136              <field name=\"help\" type=\"html\">\n  137                <p class=\"oe_view_nocontent_create\">\n  ...\n  157              <field name=\"search_view_id\" ref=\"mrp.view_mrp_production_filter\"/>\n  158              <field name=\"context\">{}</field>\n  159:             <field name=\"domain\">['|','|','|','|',('product_id.default_code','ilike','-vk-'),('product_id.default_code','ilike','-nk-'),('product_id.default_code','ilike','-mk-'),('product_id.default_code','ilike','-vb-'),('product_id.default_code','ilike','-nb-')]</field>\n  160              <field name=\"help\" type=\"html\">\n  161                <p class=\"oe_view_nocontent_create\">\n  ...\n  181              <field name=\"search_view_id\" ref=\"mrp.view_mrp_production_filter\"/>\n  182              <field name=\"context\">{}</field>\n  183:             <field name=\"domain\">[('product_id.default_code','ilike','-bd-')]</field>\n  184              <field name=\"help\" type=\"html\">\n  185                <p class=\"oe_view_nocontent_create\">\n  ...\n  205              <field name=\"search_view_id\" ref=\"mrp.view_mrp_production_filter\"/>\n  206              <field name=\"context\">{}</field>\n  207:             <field name=\"domain\">[('product_id.default_code','ilike','-rd-')]</field>\n  208              <field name=\"help\" type=\"html\">\n  209                <p class=\"oe_view_nocontent_create\">\n  ...\n  229              <field name=\"search_view_id\" ref=\"mrp.view_mrp_production_filter\"/>\n  230              <field name=\"context\">{}</field>\n  231:             <field name=\"domain\">[('product_id.default_code','ilike','-tr-')]</field>\n  232              <field name=\"help\" type=\"html\">\n  233                <p class=\"oe_view_nocontent_create\">\n  ...\n  253              <field name=\"search_view_id\" ref=\"mrp.view_mrp_production_filter\"/>\n  254              <field name=\"context\">{}</field>\n  255:             <field name=\"domain\">['|','|',('product_id.default_code','ilike','-mk-'),('product_id.default_code','ilike','-vb-'),('product_id.default_code','ilike','-nb-')]</field>\n  256              <field name=\"help\" type=\"html\">\n  257                <p class=\"oe_view_nocontent_create\">\n\nG:\\Software\\Work\\falinwa_module\\hps_field_ext\\product_view.xml:\n   41                      \n   42                      </field>\n   43:                     <field name=\"default_code\" position=\"after\">\n   44                          <field name=\"active\" string=\"Active\" />\n   45                      </field>\n\nG:\\Software\\Work\\falinwa_module\\hps_field_ext\\sale.py:\n   84      def name_get(self, cr, uid, ids, context=None):\n   85          \"\"\" Return the categories' display name, including their direct\n   86:             parent by default.\n   87  \n   88              If ``context['partner_category_display']`` is ``'short'``, the short\n   89              version of the category name (without the direct parent) is used.\n   90:             The default is the long version.\n   91          \"\"\"\n   92          if not isinstance(ids, list):\n   ..\n  137          (osv.osv._check_recursion, 'Error ! You can not create recursive categories.', ['parent_id'])\n  138      ]\n  139:     _defaults = {\n  140          'active': 1,\n  141      }\n\nG:\\Software\\Work\\falinwa_module\\l10n_cn_fapiao\\fal_report.xml:\n    4          <report auto=\"False\" id=\"report_fapiao\" model=\"fapiao\" name=\"fapiao\"\n    5                  rml=\"l10n_cn_fapiao/report/fapiao.rml\" string=\"Fapiao\"\n    6:                 usage=\"default\"/>\n    7  \n    8      </data>\n\nG:\\Software\\Work\\falinwa_module\\l10n_cn_fapiao\\fapiao.py:\n   70      }\n   71  \n   72:     _defaults = {\n   73          'state': 'Draft',\n   74          'fapiao_date' : fields.date.context_today,\n   ..\n   76      }\n   77  \n   78:     def copy(self, cr, uid, id, default=None, context=None):\n   79:         default = default or {}\n   80:         default.update({\n   81              'fapiao_line_ids':[],\n   82          })        \n   83:         return super(fapiao, self).copy(cr, uid, id, default, context)\n   84          \n   85      def onchange_partner_id(self, cr, uid, ids, partner_id, context=None):\n   ..\n   93          #part need to be fixed\n   94          typeinvoice = False\n   95:         if context.get('default_fapiao_type',False) == 'customer':\n   96              typeinvoice = 'out_invoice'\n   97:         if context.get('default_fapiao_type',False) == 'supplier':\n   98              typeinvoice = 'in_invoice'\n   99          invoice_ids = invoice_obj.search(cr, uid, [('commercial_partner_id','=',partner_id),('state','!=','cancel'),('type','=',typeinvoice)], context=context)\n  ...\n  186      }\n  187      \n  188:     def copy(self, cr, uid, id, default=None, context=None):\n  189:         default = default or {}\n  190:         default.update({\n  191              'fapiao_line_ids':[],\n  192          })        \n  193:         return super(account_invoice, self).copy(cr, uid, id, default, context)\n  194          \n  195  #end of account_invoice()\n\nG:\\Software\\Work\\falinwa_module\\l10n_cn_fapiao\\fapiao_view.xml:\n  208              <field name=\"search_view_id\" ref=\"view_fapiao_filter\" />\n  209              <field name=\"domain\">[('fapiao_type', '=', 'customer')]</field>\n  210:             <field name=\"context\">{'default_fapiao_type':'customer'}</field>\n  211          </record>\n  212  \n  ...\n  234              <field name=\"search_view_id\" ref=\"view_fapiao_filter\" />\n  235              <field name=\"domain\">[('fapiao_type', '=', 'supplier')]</field>\n  236:             <field name=\"context\">{'default_fapiao_type':'supplier'}</field>\n  237          </record>\n  238          \n\nG:\\Software\\Work\\falinwa_module\\multi_company_popup\\multi_company_popup_config.py:\n   20          return company_id and company_id[0] or False\n   21          \n   22:     _defaults = {\n   23          'company_id': _get_company,\n   24      }\n\nG:\\Software\\Work\\falinwa_module\\oecn_base_fonts\\__openerp__.py:\n   27  =====================================\n   28  \n   29: Fonts defined in the default report may not support characters\n   30  in your language, which may cause jarbled characters in the printed\n   31  pdf report.\n\nG:\\Software\\Work\\falinwa_module\\oecn_base_fonts\\oecn_font_installer.py:\n   83      \n   84      def onchange_new_font(self, cr, uid, ids, new_font):\n   85:         \"\"\"get the default 'Font Alias'\"\"\"\n   86  \n   87          for font_path, font_name in self.system_fonts:\n   ..\n  102          cfonts.CustomTTFonts = new_mappings\n  103          if wrap_style:\n  104:             ParagraphStyle.defaults['wordWrap'] = 'CJK'\n  105          return True\n  106                      \n  ...\n  133  \n  134          mappings_obj = self.pool.get('oecn_base_fonts.map')\n  135:         default_fonts = None, None\n  136          ids = []\n  137          if mappings:\n  ...\n  151              for font_path, name, in system_fonts: \n  152                  if name in ('SimHei', 'SimSun', 'WenQuanYiZenHei'):\n  153:                     default_fonts = (font_path, name)\n  154                      break\n  155              for fonts in OE_FONTS:\n  156                  val = {'pdf_font': fonts,\n  157:                        'name': default_fonts[1] or system_fonts[0][1],\n  158:                        'new_font': default_fonts[0] or system_fonts[0][0]}\n  159                  id = mappings_obj.create(cr, uid, val)\n  160                  ids.append(id)                    \n  161          return ids\n  162  \n  163:     _defaults = {\n  164          'wrap': _get_wrap,\n  165          'map_ids': _get_map_ids,\n  ...\n  182                  '''\n  183                  To be improved\n  184:                 Becacuse some report(header and footer, custom_default.xml, \n  185:                 hr_custom_default.xml, hr_custom_default.xml) \n  186                  releady  <setfont='DejaVu sans'/>  in the rml.             \n  187                  '''\n\nG:\\Software\\Work\\falinwa_module\\oecn_base_fonts\\oecn_font_installer.xml:\n   18                  <separator position=\"replace\">\n   19                      <p class=\"oe_grey\">\n   20:                         Fonts used in the default report may not support the characters in your lanuage. Use the setting here to replace the Original font with the font you choose.\n   21                      </p>\n   22                      <group>\n\nG:\\Software\\Work\\falinwa_module\\order_sequence\\purchase.py:\n   30          return super(purchase_order, self).wkf_confirm_order(cr, uid, ids, context)\n   31  \n   32:     def copy(self, cr, uid, id, default=None, context=None):\n   33:         if default is None:\n   34:             default = {}\n   35:         default.update({\n   36              'name': '/',\n   37              'quotation_number': False\n   38          })\n   39:         return super(purchase_order, self).copy(cr, uid, id, default, context)\n   40          \n   41  #end of purchase_order()\n\nG:\\Software\\Work\\falinwa_module\\order_sequence\\sale.py:\n   30          return super(sale_order, self).action_confirm(cr, uid, ids, context)\n   31  \n   32:     def copy(self, cr, uid, id, default=None, context=None):\n   33:         if default is None:\n   34:             default = {}\n   35:         default.update({\n   36              #'name': '/',\n   37              'quotation_number': False\n   38          })\n   39:         return super(sale_order, self).copy(cr, uid, id, default, context)\n   40          \n   41  #end of sale_order()\n\nG:\\Software\\Work\\falinwa_module\\procurement_extends\\product.py:\n   12          'generic_product' : fields.boolean('Generic Product'),\n   13      }\n   14:     _defaults = {\n   15          'generic_product' : 1,\n   16      }\n\nG:\\Software\\Work\\falinwa_module\\procurement_extends\\purchase.py:\n   12  import openerp.addons.decimal_precision as dp\n   13  from openerp.osv.orm import browse_record, browse_null\n   14: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT, DEFAULT_SERVER_DATETIME_FORMAT, DATETIME_FORMATS_MAP\n   15  \n   16  class purchase_order(orm.Model):\n\nG:\\Software\\Work\\falinwa_module\\procurement_extends\\sale.py:\n    4  import openerp.addons.decimal_precision as dp\n    5  from datetime import datetime, timedelta\n    6: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT, DEFAULT_SERVER_DATETIME_FORMAT, DATETIME_FORMATS_MAP, float_compare\n    7  from dateutil.relativedelta import relativedelta\n    8  \n\nG:\\Software\\Work\\falinwa_module\\procurement_request\\purchase.py:\n    4  from openerp.tools.translate import _\n    5  import openerp.addons.decimal_precision as dp\n    6: from openerp.tools import DEFAULT_SERVER_DATE_FORMAT, DEFAULT_SERVER_DATETIME_FORMAT, DATETIME_FORMATS_MAP\n    7  from datetime import datetime\n    8  from dateutil.relativedelta import relativedelta\n    .\n   24      state = fields.Selection(selection_add=[\n   25              ('procurement_request','Procurement Request'),\n   26:             ], default= 'procurement_request')\n   27:     req_product_id = fields.Many2one('product.product', 'Product', domain=[('purchase_ok','=',True)], change_default=True)\n   28      req_product_description = fields.Text('Description')\n   29:     req_product_qty = fields.Float('Quantity', digits_compute=dp.get_precision('Product Unit of Measure'), default= 1.00)\n   30      req_uom_id = fields.Many2one('product.uom', string=\"UOM\")\n   31      warehouse_manager_comment = fields.Text('Warehouse Manager Comment')\n   32:     partner_id = fields.Many2one(default=_get_supplier)\n   33      #end here\n   34      \n   ..\n   70                      #    qty = min_qty\n   71              if supplierinfo:\n   72:                 dt = order_line_obj._get_date_planned(cr, uid, supplierinfo, vals['date_order'], context=context).strftime(DEFAULT_SERVER_DATETIME_FORMAT)\n   73              else:\n   74:                 dt = datetime.strptime(vals['date_order'], DEFAULT_SERVER_DATETIME_FORMAT) + relativedelta(days=product_id.produce_delay)\n   75              vals['order_line'] = [(0,0,{\n   76                  'product_id' : product_id.id,\n   ..\n  120          return super(purchase_order, self).write(cr, uid, ids, vals, context=context)\n  121  \n  122:     def copy(self, cr, uid, id, default=None, context=None):\n  123:         if default is None:\n  124:             default = {}\n  125:         default.update({\n  126              'req_product_id' : False,\n  127              'req_product_description' : '',\n  ...\n  130              'warehouse_manager_comment' : ''\n  131          })\n  132:         return super(purchase_order, self).copy(cr, uid, id, default, context)\n  133          \n  134      def unlink(self, cr, uid, ids, context=None):\n\nG:\\Software\\Work\\falinwa_module\\procurement_request\\purchase_view.xml:\n   31                       <field name=\"name\" string=\"Reference\" readonly=\"1\"/>\n   32                       <field name=\"date_order\" widget=\"date\" />\n   33:                      <field name=\"partner_id\" on_change=\"onchange_partner_id(partner_id)\" context=\"{'search_default_supplier':1,'default_supplier':1,'default_customer':0}\" domain=\"[('supplier','=',True)]\"/>\n   34                       <field name=\"partner_ref\" invisible='1'/>\n   35                       <!-- field domain=\"[('type','=','purchase')]\" name=\"pricelist_id\" groups=\"product.group_purchase_pricelist\" on_change=\"onchange_pricelist(pricelist_id, context)\" invisible='1'/ -->\n   ..\n  108              <field name=\"type\">ir.actions.act_window</field>\n  109              <field name=\"res_model\">purchase.order</field>\n  110:             <field name=\"context\">{'default_state': 'draft'}</field>\n  111              <field name=\"domain\">[('state','in',('draft','sent','confirmed'))]</field>\n  112              <field name=\"view_mode\">tree,form,graph,calendar</field>\n  ...\n  136              <field name=\"view_mode\">tree,form,graph,calendar</field>\n  137              <field name=\"view_id\" ref=\"purchase.purchase_order_tree\" />\n  138:             <field name=\"context\">{'default_state': 'draft'}</field>\n  139              <field name=\"domain\">[('state','not in',('procurement_request','draft','sent','cancel','confirmed'))]</field>\n  140              <field name=\"search_view_id\" ref=\"purchase.view_purchase_order_filter\"/>\n  ...\n  157              <field name=\"view_mode\">tree,form,graph,calendar</field>\n  158              <field name=\"view_id\" ref=\"purchase.purchase_order_tree\" />\n  159:             <field name=\"context\">{'default_state': 'draft'}</field>\n  160              <field name=\"domain\">[('state','=','cancel')]</field>\n  161              <field name=\"search_view_id\" ref=\"purchase.view_purchase_order_filter\"/>\n\nG:\\Software\\Work\\falinwa_module\\procurement_request\\wizard\\procurement_request_wizard.py:\n   32          return res and res[0] or False \n   33          \n   34:     _defaults = {\n   35          'date_order': fields.date.context_today,\n   36          'product_qty': lambda *args: 1.0,\n   ..\n   51              'req_uom_id' : data_wizard.product_id.uom_po_id.id,\n   52              'req_product_qty' : data_wizard.product_qty,\n   53:             'location_id' : wh.in_type_id.default_location_dest_id.id,\n   54              'date_order' : data_wizard.date_order+ ' 00:00:00',\n   55              'partner_id' : data_wizard.partner_id.id,\n\nG:\\Software\\Work\\falinwa_module\\procurement_request\\wizard\\procurement_request_wizard_view.xml:\n   10                          <group>\n   11                              <field name=\"product_id\"/>\n   12:                             <field name=\"product_qty\" default_focus=\"1\"/>\n   13                              <field name=\"date_planned\" />\n   14                          </group>\n   ..\n   27              <field name=\"type\">ir.actions.act_window</field>\n   28              <field name=\"res_model\">procurement.request.wizard</field>\n   29:             <field name=\"context\">{'default_product_id': active_id, 'default_product_qty':1}</field>\n   30              <field name=\"view_type\">form</field>\n   31              <field name=\"view_id\" ref=\"view_procurement_request_wizard\"/>\n\nG:\\Software\\Work\\falinwa_module\\project_gtd\\project_gtd.py:\n   33          'sequence': fields.integer('Sequence', help=\"Gives the sequence order when displaying a list of contexts.\"),\n   34      }\n   35:     _defaults = {\n   36          'sequence': 1\n   37      }\n   ..\n   58       }\n   59  \n   60:     def copy_data(self, cr, uid, id, default=None, context=None):\n   61          if context is None:\n   62              context = {}\n   63:         if not default:\n   64:             default = {}\n   65:         default['timebox_id'] = False\n   66:         default['context_id'] = False\n   67:         return super(project_task,self).copy_data(cr, uid, id, default, context)\n   68  \n   69      def _get_context(self, cr, uid, context=None):\n   ..\n   71          return ids and ids[0] or False\n   72  \n   73:     _defaults = {\n   74          'context_id': _get_context\n   75      }\n\nG:\\Software\\Work\\falinwa_module\\project_gtd\\wizard\\project_gtd_fill.py:\n   43          return False\n   44  \n   45:     _defaults = {\n   46           'timebox_id': _get_from_tb,\n   47           'timebox_to_id': _get_to_tb,\n\nG:\\Software\\Work\\falinwa_module\\project_long_term\\project_long_term.py:\n  110          'previous_phase_ids': fields.many2many('project.phase', 'project_phase_rel', 'next_phase_id', 'prv_phase_id', 'Previous Phases', states={'cancelled':[('readonly',True)]}),\n  111          'sequence': fields.integer('Sequence', select=True, help=\"Gives the sequence order when displaying a list of phases.\"),\n  112:         'duration': fields.float('Duration', required=True, help=\"By default in days\", states={'done':[('readonly',True)], 'cancelled':[('readonly',True)]}),\n  113          'product_uom': fields.many2one('product.uom', 'Duration Unit of Measure', required=True, help=\"Unit of Measure (Unit of Measure) is the unit of measurement for Duration\", states={'done':[('readonly',True)], 'cancelled':[('readonly',True)]}),\n  114          'task_ids': fields.one2many('project.task', 'phase_id', \"Project Tasks\", states={'done':[('readonly',True)], 'cancelled':[('readonly',True)]}),\n  ...\n  121          'progress': fields.function(_compute_progress, string='Progress', help=\"Computed based on related tasks\"),\n  122       }\n  123:     _defaults = {\n  124          'state': 'draft',\n  125          'sequence': 10,\n  ...\n  134          return {}\n  135  \n  136:     def copy(self, cr, uid, id, default=None, context=None):\n  137:         if default is None:\n  138:             default = {}\n  139:         if not default.get('name', False):\n  140:             default.update(name=_('%s (copy)') % (self.browse(cr, uid, id, context=context).name))\n  141:         return super(project_phase, self).copy(cr, uid, id, default, context)\n  142  \n  143      def set_draft(self, cr, uid, ids, *args):\n\nG:\\Software\\Work\\falinwa_module\\project_long_term\\project_long_term_view.xml:\n   10              <field name=\"model\">project.user.allocation</field>\n   11              <field name=\"arch\" type=\"xml\">\n   12:               <gantt date_start=\"date_start\" date_stop=\"date_end\" default_group_by=\"user_id\">\n   13                </gantt>\n   14              </field>\n   ..\n   90              <field name=\"name\">Phases</field>\n   91              <field name=\"view_mode\">tree,form</field>\n   92:             <field name=\"context\">{'search_default_project_id': [active_id], 'default_project_id': active_id}</field>\n   93          </record>\n   94          \n   ..\n  136              <field name=\"name\">Tasks</field>\n  137              <field name=\"view_mode\">tree,form</field>\n  138:             <field name=\"context\">{'search_default_phase_id': [active_id], 'default_phase_id' : active_id}</field>\n  139          </record>\n  140  \n  ...\n  191                          </page>\n  192                          <page string=\"Tasks Details\">\n  193:                             <field name=\"task_ids\" readonly=\"1\" context=\"{'default_project_id' :project_id}\">\n  194                                   <tree string=\"Project's Tasks\">\n  195                                      <field name=\"sequence\"/>\n  ...\n  259              <field eval=\"2\" name=\"priority\"/>\n  260              <field name=\"arch\" type=\"xml\">\n  261:                 <gantt date_stop=\"date_end\" date_start=\"date_start\" default_group_by=\"project_id\">\n  262                  </gantt>\n  263              </field>\n  ...\n  310              <field name=\"arch\" type=\"xml\">\n  311                  <xpath expr=\"//field[@name='user_id']\" position=\"after\">\n  312:                     <field name=\"phase_id\" context=\"{'default_project_id' : project_id}\"/>\n  313                  </xpath>\n  314              </field>\n\nG:\\Software\\Work\\falinwa_module\\project_long_term\\wizard\\project_compute_phases.py:\n   32          'project_id': fields.many2one('project.project', 'Project')\n   33      }\n   34:     _defaults = {\n   35          'target_project': 'one'\n   36      }\n   ..\n   70          result['target'] = 'current'\n   71          project_id = data.get('project_id') and data.get('project_id')[0] or False\n   72:         result['context'] = {\"search_default_project_id\":project_id, \"default_project_id\":project_id, \"search_default_current\": 1}\n   73          return result\n   74  \n\nG:\\Software\\Work\\falinwa_module\\purchase_discount\\purchase_discount.py:\n  156      }\n  157  \n  158:     _defaults = {\n  159          'discount': 0.0,\n  160      }\n\nG:\\Software\\Work\\falinwa_module\\web_groupby_expand_enterprise\\static\\src\\xml\\web_groupby_expand.xml:\n    3      <t t-extend=\"ViewManager.switch-buttons\">\n    4          <t t-jquery=\"t\" t-operation=\"before\">\n    5:             <button id=\"expand_icon\" type=\"button\" class=\"btn btn-default fa fa-expand oe-list-expand\" style=\"display:none;\" title=\"Expand\"/>\n    6          </t>\n    7      </t>\n\nG:\\Software\\Work\\falinwa_module\\web_printscreen_master\\controllers\\trml2pdf.py:\n  120          self.names = {}\n  121          self.table_styles = {}\n  122:         self.default_style = reportlab.lib.styles.getSampleStyleSheet()\n  123  \n  124          for node in nodes:\n  ...\n  129                  self.styles[sname] = self._para_style_update(style)\n  130  \n  131:                 self.styles_obj[sname] = reportlab.lib.styles.ParagraphStyle(sname, self.default_style[\"Normal\"], **self.styles[sname])\n  132  \n  133              for variable in node.findall('initialize'):\n  ...\n  203                  style = self.styles_obj[sname]\n  204              else:\n  205:                 _logger.warning('Warning: style not found, %s - setting default!\\n' % (node.get('style'),) )\n  206          if not style:\n  207:             style = self.default_style['Normal']\n  208          para_update = self._para_style_update(node)\n  209          if para_update:\n  ...\n  413      def _line_mode(self, node):\n  414          ljoin = {'round':1, 'mitered':0, 'bevelled':2}\n  415:         lcap = {'default':0, 'round':1, 'square':2}\n  416  \n  417          if node.get('width'):\n  ...\n  525                      pdfmetrics.getFont(fontname)\n  526                  except Exception:\n  527:                     _logger.debug('Could not locate font %s, substituting default: %s',\n  528                                   fontname,\n  529                                   self.canvas._fontname)\n\nG:\\Software\\Work\\falinwa_module\\web_printscreen_master\\static\\src\\xml\\web_printscreen_export.xml:\n    3      <t t-extend=\"ListView.buttons\">\n    4          <t t-if='widget.options.import_enabled' t-jquery=\"button.o_list_button_add\" t-operation=\"after\">\n    5:             <!-- <button class=\"btn btn-sm btn-default oe_bold oe_list_button_import_pdf\"\n    6                     id=\"button_export_pdf\" type=\"button\"\n    7                     href=\"#\">PDF</button> -->\n    8:             <button class=\"btn btn-sm btn-default oe_bold oe_list_button_import_excel\"\n    9                     id=\"button_export_excel\" type=\"button\"\n   10                     href=\"#\">Excel</button>\n\nG:\\Software\\Work\\falinwa_module\\web_printscreen_zb\\trml2pdf.py:\n  144          self.names = {}\n  145          self.table_styles = {}\n  146:         self.default_style = reportlab.lib.styles.getSampleStyleSheet()\n  147  \n  148          for node in nodes:\n  ...\n  153                  self.styles[sname] = self._para_style_update(style)\n  154  \n  155:                 self.styles_obj[sname] = reportlab.lib.styles.ParagraphStyle(sname, self.default_style[\"Normal\"], **self.styles[sname])\n  156  \n  157              for variable in node.findall('initialize'):\n  ...\n  227                  style = self.styles_obj[sname]\n  228              else:\n  229:                 _logger.warning('Warning: style not found, %s - setting default!\\n' % (node.get('style'),) )\n  230          if not style:\n  231:             style = self.default_style['Normal']\n  232          para_update = self._para_style_update(node)\n  233          if para_update:\n  ...\n  437      def _line_mode(self, node):\n  438          ljoin = {'round':1, 'mitered':0, 'bevelled':2}\n  439:         lcap = {'default':0, 'round':1, 'square':2}\n  440  \n  441          if node.get('width'):\n  ...\n  549                      pdfmetrics.getFont(fontname)\n  550                  except Exception:\n  551:                     _logger.debug('Could not locate font %s, substituting default: %s',\n  552                                   fontname,\n  553                                   self.canvas._fontname)\n\n5996 matches across 961 files\n",
			"settings":
			{
				"buffer_size": 1418216,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "akun.py",
			"settings":
			{
				"buffer_size": 63358,
				"line_ending": "Windows"
			}
		},
		{
			"file": "view/akun.xml",
			"settings":
			{
				"buffer_size": 29074,
				"line_ending": "Windows"
			}
		},
		{
			"file": "view/customer.xml",
			"settings":
			{
				"buffer_size": 8318,
				"line_ending": "Windows"
			}
		},
		{
			"file": "menu/menu_master.xml",
			"settings":
			{
				"buffer_size": 20130,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 150.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 464.0
	},
	"console":
	{
		"height": 146.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/MMR",
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/MMR/menu",
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/MMR/report",
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/MMR/view"
	],
	"file_history":
	[
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/MMR/view/pembayaran.xml",
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/MMR/view/groups.xml",
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/MMR/view/customer.xml",
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/MMR/menu/menu_master.xml",
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/MMR/view/pembelian.xml",
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/MMR/stok.py",
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/MMR/produk.py",
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/MMR/pembelian.py",
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/MMR/view/penjualan.xml",
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/MMR/penjualan.py",
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/account/account_invoice.py",
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/base/ir/ir_ui_view.py",
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/base/ir/ir_actions.py",
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/account/account_installer.xml",
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/base/ir/ir_ui_menu_view.xml",
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/decimal_precision/decimal_precision.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/account/models/account_invoice.py",
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/MMR/report/popembelianreporttanpaharga.xml",
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/addons/MMR/report/popembelianreport.xml",
		"/C/Program Files (x86)/Odoo 8.0-20150121/server/openerp/osv/fields.py",
		"/G/Software/Work/falinwa_module/fal_convention/wizard/fal_convention_wizard_view.xml",
		"/G/Software/Work/falinwa_module/fal_convention/wizard/fal_convention_wizard.py",
		"/G/Software/Work/falinwa_module/fal_convention/models/fal_convention.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/hr_holidays/hr_holidays.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/base/res/res_company.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/auth_ldap/users_ldap.py",
		"/G/Software/Work/falinwa_module/gleize_field_ext/models/sale.py",
		"/G/Software/Work/falinwa_module/gleize_field_ext/data/scheduler.xml",
		"/G/Software/Work/falinwa_module/gleize_field_ext/data/data.xml",
		"/G/Software/Work/falinwa_module/fal_convention/__openerp__.py",
		"/G/Software/Work/falinwa_branch/fal_convention/__openerp__.py",
		"/G/Software/Work/falinwa_module/gleize_field_ext/models/hr.py",
		"/G/Software/Work/falinwa_branch/fal_convention/__init__.py",
		"/G/Software/Work/falinwa_module/fal_convention/__init__.py",
		"/G/Software/Work/falinwa_module/fal_convention/security/ir.model.access.csv",
		"/G/Software/Work/falinwa_module/fal_weekday/security/ir.model.access.csv",
		"/G/Software/Work/falinwa_module/fal_weekday/__openerp__.py",
		"/G/Software/Work/falinwa_module/fal_convention/views/fal_convention_view.xml",
		"/G/Software/Work/falinwa_module/fal_bom_reader/wizard/bom_reader_wizard.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/sales_team/static/src/xml/sales_team_dashboard.xml",
		"/G/Software/Work/falinwa_module/gleize_field_ext/static/src/xml/gleize_field_ext.xml",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/sales_team/sales_team.py",
		"/G/Software/Work/falinwa_module/gleize_field_ext/security/ir.model.access.csv",
		"/G/Software/Work/falinwa_module/gleize_leave_ext/views/hr_holidays_view.xml",
		"/G/Software/Work/falinwa_module/fal_weekday/models/fal_weekday.py",
		"/G/Software/Work/falinwa_module/gleize_field_ext/views/sale_view.xml",
		"/G/Software/Work/falinwa_module/fal_weekday/data/weekday_data.xml",
		"/G/Software/Work/falinwa_module/fal_convention/wizard/__init__.py",
		"/G/Software/Work/falinwa_module/fal_convention/models/__init__.py",
		"/G/Software/Work/falinwa_module/fal_deduplicate_leads/wizard/fal_deduplicate_leads_wizard.py",
		"/G/Software/Work/falinwa_module/fal_easy_reporting/wizard/easy_exporting_wizard.py",
		"/G/Software/Work/falinwa_module/fal_invoice_balance_date/wizard/invoice_balance_wizard.py",
		"/G/Software/Work/falinwa_module/l10n_cn_fapiao/fapiao.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/account/models/res_config.py",
		"/G/Software/Work/falinwa_module/procurement_request/wizard/procurement_request_wizard.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/hr_holidays/hr_holidays_view.xml",
		"/G/Software/Work/falinwa_module/fal_bom_reader/wizard/bom_reader_wizard_view.xml",
		"/G/Software/Work/falinwa_module/gleize_field_ext/__openerp__.py",
		"/G/Software/Work/falinwa_module/gleize_field_ext/views/hr_view.xml",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/website_sale_options/views/templates.xml",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/website_sale_digital/views/website_sale_digital_view.xml",
		"/G/Software/Work/falinwa_module/gleize_leave_ext/models/hr_holidays.py",
		"/G/Software/Work/falinwa_module/fal_convention/wizard/convention_line_wizard.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/account/models/account.py",
		"/G/Software/Work/falinwa_module/fal_convention_company/__openerp__.py",
		"/G/Software/Work/falinwa_module/fal_convention_company/views/fal_convention_view.xml",
		"/G/Software/Work/falinwa_module/fal_convention_company/models/fal_convention.py",
		"/G/Software/Work/falinwa_module/fal_convention_company/models/__init__.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/account/report/account_invoice_report_view.xml",
		"/G/Software/Work/falinwa_module/fal_weekday/models/__init__.py",
		"/G/Software/Work/falinwa_module/fal_convention/data/scheduler.xml",
		"/G/Software/Work/falinwa_module/gleize_leave_ext/__openerp__.py",
		"/G/Software/Work/falinwa_module/gleize_leave_ext/data/scheduler.xml",
		"/G/Software/Work/falinwa_module/fal_france_leave_ext/__init__.py",
		"/G/Software/Work/falinwa_module/fal_france_leave_ext/__openerp__.py",
		"/G/Software/Work/falinwa_module/fal_france_leave_ext/data/scheduler.xml",
		"/G/Software/Work/falinwa_module/fal_france_leave_ext/models/hr_holidays.py",
		"/G/Software/Work/falinwa_module/fal_france_leave_ext/views/hr_holidays_view.xml",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/analytic/models/analytic.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/account_voucher/account_voucher.py",
		"/G/Software/Work/falinwa_module/fal_france_leave_ext/data/hr_holidays_data.xml",
		"/G/Software/Work/falinwa_module/fal_leave_timesheet/models/hr_holidays.py",
		"/G/Software/Work/falinwa_module/fal_france_leave_ext/models/__init__.py",
		"/G/Software/Work/falinwa_module/fal_crm_probability_ext/models/crm.py",
		"/G/Software/Work/falinwa_branch/gleize_field_ext/views/sale_view.xml",
		"/G/Software/Work/falinwa_module/fal_invoice_reminder/data/cron_configuration.xml",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/hr_holidays/hr_holidays_workflow.xml",
		"/G/Software/Work/falinwa_branch/gleize_field_ext/security/security.xml",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/account/models/partner.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/base/res/res_partner.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/hr/hr.py",
		"/G/Software/Work/falinwa_module/fal_crm_project/models/crm_lead.py",
		"/G/Software/Work/falinwa_module/gleize_field_ext/security/security.xml",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/base/res/res_users.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/hr_contract/hr_contract.py",
		"/G/Software/Work/falinwa_branch/fal_sql_query_field_store/models/account.py",
		"/G/Software/Work/falinwa_branch/analytic_multicurrency/analytic.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/account/models/account_move.py",
		"/G/Software/Work/falinwa_branch/account_budget/account_budget.py",
		"/G/Software/Work/falinwa_module/project_long_term/project_long_term.py",
		"/G/Software/Work/falinwa_module/hpg_field_ext/project.py",
		"/G/Software/Work/falinwa_module/falinwa_field_ext/models/account.py",
		"/G/Software/Work/falinwa_module/fal_project_summary/models/project.py",
		"/G/Software/Work/falinwa_module/fal_project_ext/models/project.py",
		"/G/Software/Work/falinwa_module/fal_parent_account/models/account.py",
		"/G/Software/Work/falinwa_module/fal_hps_sale_project/models/project.py",
		"/G/Software/Work/falinwa_module/fal_crm_project/models/project.py",
		"/G/Software/Work/falinwa_module/fal_analytic_account_multicompany_ext/models/analytic.py",
		"/G/Software/Work/falinwa_module/fal_account_sequence/models/account.py",
		"/G/Software/Work/falinwa_module/analytic_multicurrency/analytic_analysis.py",
		"/G/Software/Work/falinwa_module/analytic_multicurrency/analytic.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/project_issue/project_issue.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/project/project.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/l10n_multilang/account.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/hr_timesheet/hr_timesheet.py",
		"/G/Software/Work/falinwa_module/gleize_field_ext/data/email_template.xml",
		"/G/Software/Work/falinwa_module/project_long_term/project_long_term_workflow.xml",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/hr_timesheet_sheet/hr_timesheet_workflow.xml",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/hr_timesheet_sheet/hr_timesheet_sheet_view.xml",
		"/G/Software/Work/falinwa_module/fal_l10n_cn_payroll/models/hr_payroll.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/mail/models/mail_template.py",
		"/G/Software/Work/falinwa_module/gleize_field_ext/models/mail.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/marketing_campaign/marketing_campaign.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/mail/wizard/email_template_preview.py",
		"/G/Software/Work/falinwa_module/falinwa_field_ext/views/project_view.xml",
		"/G/Software/Work/falinwa_module/falinwa_field_ext/views/fal_account_invoice.xml",
		"/G/Software/Work/falinwa_module/fal_account_periods_lock/models/fal_account_periods_lock.py",
		"/C/Program Files (x86)/Odoo 9.0-20160210/server/openerp/addons/account/views/account_view.xml"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 91.0,
		"where_history":
		[
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module,*.py,*.xml",
			"C:\\Program Files (x86)\\Odoo 8.0-20150121\\server\\openerp\\addons, *.xml, *.py",
			"C:\\Program Files (x86)\\Odoo 8.0-20150121\\server\\openerp\\addons, *.xml",
			"C:\\Program Files (x86)\\Odoo 8.0-20150121\\server\\openerp\\addons, *.py,*.xml",
			"C:\\Program Files (x86)\\Odoo 8.0-20150121\\server\\openerp\\addons, *.py,",
			"C:\\Program Files (x86)\\Odoo 8.0-20150121\\server\\openerp\\addons, *.py,*.xml",
			"C:\\Program Files (x86)\\Odoo 8.0-20150121\\server\\openerp\\addons\\MMR, *.py,*.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module,*.py,*.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module,*.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module,*.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module,*.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, G:\\Software\\Work\\falinwa_branch,*.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, G:\\Software\\Work\\falinwa_branch,*.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py, *.xml",
			"C:\\Program Files (x86)\\Odoo 8.0-20160503\\server\\openerp\\addons, C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py,",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py,",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml,",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py,",
			"G:\\Software\\Work\\falinwa_module, *.py,",
			"G:\\Software\\Work\\falinwa_module, *.py, *.xml",
			"G:\\Software\\Work\\falinwa_branch, *.py,",
			"G:\\Software\\Work\\falinwa_branch, *.xml,",
			"G:\\Software\\Work\\falinwa_branch, *.py,",
			"G:\\Software\\Work\\falinwa_branch, *.py, *.xml",
			"G:\\Software\\Work\\falinwa_branch, *.py,",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp, G:\\Software\\Work\\falinwa_module, G:\\Software\\Work\\falinwa_branch, *.py,",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp, G:\\Software\\Work\\falinwa_module, *.py,",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp, G:\\Software\\Work\\falinwa_module, *.xml,",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp, G:\\Software\\Work\\falinwa_module, *.xml, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp, G:\\Software\\Work\\falinwa_module, *.xml, &.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.js",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.js",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server, C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.js",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server, C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server, C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp, C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp, C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp, C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py,",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py, *.xml, *.csv",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.js",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module,",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.js",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.js",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"xmls",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.js",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.js",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml, *.py",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml, *.oy",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.xml",
			"C:\\Program Files (x86)\\Odoo 9.0-20160210\\server\\openerp\\addons, G:\\Software\\Work\\falinwa_module, *.py",
			"G:\\Software\\Work\\falinwa_module\\gleize_field_ext, *.py"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"self.tahun",
			"self.bulan",
			"self.",
			"akundetildummy",
			"mmr.akundummy",
			"self.bulan",
			"tanggal",
			"int",
			"nilaidebit",
			"saldoawal",
			"print",
			"saldoawal",
			"start",
			"semuahasilsearch",
			"start",
			"print",
			"akundetil",
			"akundetillist",
			"listakundetil",
			")",
			"date",
			"strptime",
			"strp",
			"DEFAULT",
			":",
			",",
			"semuaakundetil.kredit",
			"tidak dapat",
			"_ambil_tanggal",
			"field_name",
			":",
			"saldoawal",
			"order",
			"fields.related",
			"idakun",
			"object",
			"idsaveakun",
			"mmr.akundummy",
			"mmr.akun",
			"saldoawal",
			"laporanjurnal",
			"save",
			"multi_action_master_mmr_saveakun",
			"account",
			",  ",
			",",
			"	",
			" :",
			",  ",
			",",
			"sring",
			"group_project_responsible_user",
			"responsible",
			"<field name=\"view_ids\">",
			"ref(",
			"view_ids",
			"\"views\"",
			"ir.actions.act_window",
			"_name",
			"ir.ui.view",
			"form_view\"",
			"form_view",
			"form_view_id",
			"form_view",
			"tree_view_id",
			"view_id",
			"view_type",
			"view_type_tree",
			"view_id",
			"ref(",
			"ref",
			"view_id",
			"default_order",
			"mmr.pembeliansj",
			"	",
			"act_window",
			"	",
			"class mmr_pembelianpodetil",
			"digits_compute",
			"decimal.precision",
			"dp",
			"dp.get_precision",
			"	",
			"round",
			"get_days",
			"check_holidays",
			"_check_holidays",
			"The number of remaining leaves is not sufficient for this leave type.",
			"The number of remaining leaves is not sufficient for this leave type.\nPlease verify also the leaves waiting for validation.",
			"The number of remaining leaves is not sufficient for this leave type.\nPlease verify also the leaves waiting for validation. ",
			"hr.holidays",
			"attrs",
			"res.company",
			"raise",
			"fal_sales_order_consolidation_1",
			"self",
			"fal_is_probation_last_month",
			"check_probation_duration",
			"menu",
			"hr.holidays.status",
			"lambda",
			"default=\"",
			"fal_in_consol",
			"consolidated",
			"is_consolidate",
			"in_consolidate",
			"revenue_source",
			"fal_my",
			"retrieve_sales_dashboard",
			"fal_my",
			"sales.dashboard",
			"o.sales.dashboard",
			"o_sales_dashboard",
			"SalesDashboard",
			"values",
			"development forecast",
			"fal.sales.order.consolidation",
			"base_user",
			"date_to_",
			"morning",
			"mornign",
			"return {\n            'type': 'ir.actions.act_window',",
			"button",
			"	",
			"button",
			"_get_number_of_days",
			"fal.conven",
			"super"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"tahun",
			"bulan",
			"akundetil_id",
			").date()",
			"datetime",
			": ",
			"semuaakundetilkredit",
			": ",
			"akun",
			", ",
			"    ",
			":",
			", ",
			"string",
			"    ",
			"fal_net_margin",
			"fal_planned_revenue",
			"fal_gross_margin",
			"    ",
			"'fal_stage_in_qualification'",
			"gleize_website_ext"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1418216,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										287,
										294
									],
									[
										563,
										570
									],
									[
										845,
										852
									],
									[
										1224,
										1231
									],
									[
										1487,
										1494
									],
									[
										1839,
										1846
									],
									[
										2127,
										2134
									],
									[
										2761,
										2768
									],
									[
										2958,
										2965
									],
									[
										3019,
										3026
									],
									[
										3186,
										3193
									],
									[
										3240,
										3247
									],
									[
										3513,
										3520
									],
									[
										3543,
										3550
									],
									[
										3558,
										3565
									],
									[
										3588,
										3595
									],
									[
										3699,
										3706
									],
									[
										3884,
										3891
									],
									[
										4021,
										4028
									],
									[
										4163,
										4170
									],
									[
										4512,
										4519
									],
									[
										4583,
										4590
									],
									[
										4679,
										4686
									],
									[
										4726,
										4733
									],
									[
										4796,
										4803
									],
									[
										4891,
										4898
									],
									[
										5528,
										5535
									],
									[
										5834,
										5841
									],
									[
										6108,
										6115
									],
									[
										6135,
										6142
									],
									[
										6673,
										6680
									],
									[
										6700,
										6707
									],
									[
										7056,
										7063
									],
									[
										7085,
										7092
									],
									[
										7213,
										7220
									],
									[
										7252,
										7259
									],
									[
										7437,
										7444
									],
									[
										7491,
										7498
									],
									[
										7529,
										7536
									],
									[
										7713,
										7720
									],
									[
										7947,
										7954
									],
									[
										8049,
										8056
									],
									[
										8100,
										8107
									],
									[
										8133,
										8140
									],
									[
										8192,
										8199
									],
									[
										8296,
										8303
									],
									[
										8346,
										8353
									],
									[
										8378,
										8385
									],
									[
										8494,
										8501
									],
									[
										8524,
										8531
									],
									[
										8539,
										8546
									],
									[
										8569,
										8576
									],
									[
										8760,
										8767
									],
									[
										8965,
										8972
									],
									[
										9008,
										9015
									],
									[
										9066,
										9073
									],
									[
										9156,
										9163
									],
									[
										9200,
										9207
									],
									[
										9259,
										9266
									],
									[
										9578,
										9585
									],
									[
										9901,
										9908
									],
									[
										9962,
										9969
									],
									[
										9990,
										9997
									],
									[
										10030,
										10037
									],
									[
										10084,
										10091
									],
									[
										10340,
										10347
									],
									[
										10436,
										10443
									],
									[
										10465,
										10472
									],
									[
										10513,
										10520
									],
									[
										10543,
										10550
									],
									[
										10777,
										10784
									],
									[
										10888,
										10895
									],
									[
										11217,
										11224
									],
									[
										11430,
										11437
									],
									[
										11703,
										11710
									],
									[
										11870,
										11877
									],
									[
										12112,
										12119
									],
									[
										12579,
										12586
									],
									[
										12786,
										12793
									],
									[
										13369,
										13376
									],
									[
										13378,
										13385
									],
									[
										13512,
										13519
									],
									[
										13542,
										13549
									],
									[
										13557,
										13564
									],
									[
										13656,
										13663
									],
									[
										13664,
										13671
									],
									[
										13808,
										13815
									],
									[
										14147,
										14154
									],
									[
										14231,
										14238
									],
									[
										14334,
										14341
									],
									[
										14652,
										14659
									],
									[
										14732,
										14739
									],
									[
										15287,
										15294
									],
									[
										15391,
										15398
									],
									[
										16051,
										16058
									],
									[
										16281,
										16288
									],
									[
										16439,
										16446
									],
									[
										16693,
										16700
									],
									[
										16881,
										16888
									],
									[
										17288,
										17295
									],
									[
										17494,
										17501
									],
									[
										17503,
										17510
									],
									[
										17774,
										17781
									],
									[
										18049,
										18056
									],
									[
										18058,
										18065
									],
									[
										18345,
										18352
									],
									[
										18399,
										18406
									],
									[
										18915,
										18922
									],
									[
										19316,
										19323
									],
									[
										19655,
										19662
									],
									[
										20152,
										20159
									],
									[
										20595,
										20602
									],
									[
										20677,
										20684
									],
									[
										21047,
										21054
									],
									[
										21093,
										21100
									],
									[
										21447,
										21454
									],
									[
										21533,
										21540
									],
									[
										21825,
										21832
									],
									[
										21885,
										21892
									],
									[
										21994,
										22001
									],
									[
										22217,
										22224
									],
									[
										22272,
										22279
									],
									[
										22535,
										22542
									],
									[
										22564,
										22571
									],
									[
										22861,
										22868
									],
									[
										23382,
										23389
									],
									[
										23670,
										23677
									],
									[
										24139,
										24146
									],
									[
										24537,
										24544
									],
									[
										24862,
										24869
									],
									[
										24871,
										24878
									],
									[
										25208,
										25215
									],
									[
										25217,
										25224
									],
									[
										25509,
										25516
									],
									[
										25624,
										25631
									],
									[
										25678,
										25685
									],
									[
										26032,
										26039
									],
									[
										26436,
										26443
									],
									[
										26640,
										26647
									],
									[
										26692,
										26699
									],
									[
										26735,
										26742
									],
									[
										26791,
										26798
									],
									[
										26843,
										26850
									],
									[
										27119,
										27126
									],
									[
										27205,
										27212
									],
									[
										27563,
										27570
									],
									[
										27788,
										27795
									],
									[
										28078,
										28085
									],
									[
										28141,
										28148
									],
									[
										28416,
										28423
									],
									[
										28764,
										28771
									],
									[
										28773,
										28780
									],
									[
										29189,
										29196
									],
									[
										29310,
										29317
									],
									[
										29644,
										29651
									],
									[
										29957,
										29964
									],
									[
										30244,
										30251
									],
									[
										30558,
										30565
									],
									[
										30567,
										30574
									],
									[
										30673,
										30680
									],
									[
										30909,
										30916
									],
									[
										31238,
										31245
									],
									[
										31483,
										31490
									],
									[
										31737,
										31744
									],
									[
										31983,
										31990
									],
									[
										32062,
										32069
									],
									[
										32193,
										32200
									],
									[
										32527,
										32534
									],
									[
										32932,
										32939
									],
									[
										33176,
										33183
									],
									[
										33210,
										33217
									],
									[
										33526,
										33533
									],
									[
										33580,
										33587
									],
									[
										33688,
										33695
									],
									[
										33911,
										33918
									],
									[
										33963,
										33970
									],
									[
										34071,
										34078
									],
									[
										34252,
										34259
									],
									[
										34539,
										34546
									],
									[
										34570,
										34577
									],
									[
										34781,
										34788
									],
									[
										34838,
										34845
									],
									[
										34888,
										34895
									],
									[
										35071,
										35078
									],
									[
										35128,
										35135
									],
									[
										35397,
										35404
									],
									[
										35459,
										35466
									],
									[
										35522,
										35529
									],
									[
										35837,
										35844
									],
									[
										36075,
										36082
									],
									[
										36138,
										36145
									],
									[
										36256,
										36263
									],
									[
										36376,
										36383
									],
									[
										36548,
										36555
									],
									[
										36716,
										36723
									],
									[
										36729,
										36736
									],
									[
										37379,
										37386
									],
									[
										37803,
										37810
									],
									[
										38352,
										38359
									],
									[
										38648,
										38655
									],
									[
										38751,
										38758
									],
									[
										39027,
										39034
									],
									[
										39114,
										39121
									],
									[
										39278,
										39285
									],
									[
										39479,
										39486
									],
									[
										39620,
										39627
									],
									[
										39805,
										39812
									],
									[
										39989,
										39996
									],
									[
										40360,
										40367
									],
									[
										40922,
										40929
									],
									[
										41388,
										41395
									],
									[
										41520,
										41527
									],
									[
										41975,
										41982
									],
									[
										42578,
										42585
									],
									[
										43061,
										43068
									],
									[
										43153,
										43160
									],
									[
										43561,
										43568
									],
									[
										43636,
										43643
									],
									[
										44057,
										44064
									],
									[
										44177,
										44184
									],
									[
										44598,
										44605
									],
									[
										44654,
										44661
									],
									[
										44972,
										44979
									],
									[
										45059,
										45066
									],
									[
										45311,
										45318
									],
									[
										45516,
										45523
									],
									[
										45885,
										45892
									],
									[
										45913,
										45920
									],
									[
										46596,
										46603
									],
									[
										46923,
										46930
									],
									[
										47124,
										47131
									],
									[
										47201,
										47208
									],
									[
										47244,
										47251
									],
									[
										47348,
										47355
									],
									[
										47373,
										47380
									],
									[
										47426,
										47433
									],
									[
										47821,
										47828
									],
									[
										47838,
										47845
									],
									[
										48273,
										48280
									],
									[
										48584,
										48591
									],
									[
										48631,
										48638
									],
									[
										48995,
										49002
									],
									[
										49415,
										49422
									],
									[
										49692,
										49699
									],
									[
										49771,
										49778
									],
									[
										49870,
										49877
									],
									[
										50414,
										50421
									],
									[
										50533,
										50540
									],
									[
										51001,
										51008
									],
									[
										51093,
										51100
									],
									[
										51513,
										51520
									],
									[
										51587,
										51594
									],
									[
										51623,
										51630
									],
									[
										51719,
										51726
									],
									[
										51878,
										51885
									],
									[
										52116,
										52123
									],
									[
										52256,
										52263
									],
									[
										52367,
										52374
									],
									[
										52646,
										52653
									],
									[
										52679,
										52686
									],
									[
										52739,
										52746
									],
									[
										52771,
										52778
									],
									[
										53114,
										53121
									],
									[
										53327,
										53334
									],
									[
										53584,
										53591
									],
									[
										53751,
										53758
									],
									[
										54011,
										54018
									],
									[
										54480,
										54487
									],
									[
										54679,
										54686
									],
									[
										55275,
										55282
									],
									[
										55392,
										55399
									],
									[
										55768,
										55775
									],
									[
										56268,
										56275
									],
									[
										56501,
										56508
									],
									[
										56633,
										56640
									],
									[
										56958,
										56965
									],
									[
										57101,
										57108
									],
									[
										57265,
										57272
									],
									[
										57709,
										57716
									],
									[
										58064,
										58071
									],
									[
										58198,
										58205
									],
									[
										58413,
										58420
									],
									[
										58805,
										58812
									],
									[
										59188,
										59195
									],
									[
										59454,
										59461
									],
									[
										60393,
										60400
									],
									[
										60784,
										60791
									],
									[
										61885,
										61892
									],
									[
										62185,
										62192
									],
									[
										62693,
										62700
									],
									[
										63015,
										63022
									],
									[
										63259,
										63266
									],
									[
										63690,
										63697
									],
									[
										63759,
										63766
									],
									[
										64111,
										64118
									],
									[
										64407,
										64414
									],
									[
										64838,
										64845
									],
									[
										65264,
										65271
									],
									[
										65575,
										65582
									],
									[
										66118,
										66125
									],
									[
										66476,
										66483
									],
									[
										66752,
										66759
									],
									[
										67000,
										67007
									],
									[
										67062,
										67069
									],
									[
										67125,
										67132
									],
									[
										67152,
										67159
									],
									[
										67164,
										67171
									],
									[
										67555,
										67562
									],
									[
										68101,
										68108
									],
									[
										68217,
										68224
									],
									[
										68586,
										68593
									],
									[
										68881,
										68888
									],
									[
										69522,
										69529
									],
									[
										69583,
										69590
									],
									[
										69642,
										69649
									],
									[
										69678,
										69685
									],
									[
										69708,
										69715
									],
									[
										69773,
										69780
									],
									[
										69840,
										69847
									],
									[
										69876,
										69883
									],
									[
										70054,
										70061
									],
									[
										70066,
										70073
									],
									[
										70329,
										70336
									],
									[
										70455,
										70462
									],
									[
										70561,
										70568
									],
									[
										70662,
										70669
									],
									[
										70958,
										70965
									],
									[
										71483,
										71490
									],
									[
										71529,
										71536
									],
									[
										71561,
										71568
									],
									[
										71684,
										71691
									],
									[
										71739,
										71746
									],
									[
										71775,
										71782
									],
									[
										72144,
										72151
									],
									[
										72402,
										72409
									],
									[
										72748,
										72755
									],
									[
										73287,
										73294
									],
									[
										73928,
										73935
									],
									[
										74175,
										74182
									],
									[
										74686,
										74693
									],
									[
										74714,
										74721
									],
									[
										74780,
										74787
									],
									[
										75296,
										75303
									],
									[
										75324,
										75331
									],
									[
										75390,
										75397
									],
									[
										75867,
										75874
									],
									[
										75908,
										75915
									],
									[
										75933,
										75940
									],
									[
										76431,
										76438
									],
									[
										76922,
										76929
									],
									[
										77270,
										77277
									],
									[
										77529,
										77536
									],
									[
										77876,
										77883
									],
									[
										78319,
										78326
									],
									[
										78749,
										78756
									],
									[
										79118,
										79125
									],
									[
										79192,
										79199
									],
									[
										79465,
										79472
									],
									[
										79541,
										79548
									],
									[
										79814,
										79821
									],
									[
										79884,
										79891
									],
									[
										80178,
										80185
									],
									[
										80249,
										80256
									],
									[
										80531,
										80538
									],
									[
										80614,
										80621
									],
									[
										80898,
										80905
									],
									[
										80972,
										80979
									],
									[
										81254,
										81261
									],
									[
										81541,
										81548
									],
									[
										81857,
										81864
									],
									[
										82269,
										82276
									],
									[
										82648,
										82655
									],
									[
										83091,
										83098
									],
									[
										83345,
										83352
									],
									[
										83785,
										83792
									],
									[
										84039,
										84046
									],
									[
										84348,
										84355
									],
									[
										84888,
										84895
									],
									[
										85461,
										85468
									],
									[
										86016,
										86023
									],
									[
										86046,
										86053
									],
									[
										86069,
										86076
									],
									[
										86585,
										86592
									],
									[
										87127,
										87134
									],
									[
										87555,
										87562
									],
									[
										88124,
										88131
									],
									[
										88570,
										88577
									],
									[
										88961,
										88968
									],
									[
										89376,
										89383
									],
									[
										89749,
										89756
									],
									[
										89791,
										89798
									],
									[
										89811,
										89818
									],
									[
										90309,
										90316
									],
									[
										90684,
										90691
									],
									[
										91074,
										91081
									],
									[
										91386,
										91393
									],
									[
										92016,
										92023
									],
									[
										92045,
										92052
									],
									[
										92627,
										92634
									],
									[
										93153,
										93160
									],
									[
										94069,
										94076
									],
									[
										94097,
										94104
									],
									[
										94145,
										94152
									],
									[
										94746,
										94753
									],
									[
										95119,
										95126
									],
									[
										95543,
										95550
									],
									[
										95827,
										95834
									],
									[
										96181,
										96188
									],
									[
										96677,
										96684
									],
									[
										97111,
										97118
									],
									[
										97152,
										97159
									],
									[
										97178,
										97185
									],
									[
										97399,
										97406
									],
									[
										97670,
										97677
									],
									[
										97712,
										97719
									],
									[
										97970,
										97977
									],
									[
										98252,
										98259
									],
									[
										98513,
										98520
									],
									[
										98726,
										98733
									],
									[
										98947,
										98954
									],
									[
										98986,
										98993
									],
									[
										99188,
										99195
									],
									[
										99231,
										99238
									],
									[
										99474,
										99481
									],
									[
										99601,
										99608
									],
									[
										100089,
										100096
									],
									[
										100113,
										100120
									],
									[
										100415,
										100422
									],
									[
										100448,
										100455
									],
									[
										100726,
										100733
									],
									[
										100759,
										100766
									],
									[
										101104,
										101111
									],
									[
										101416,
										101423
									],
									[
										101828,
										101835
									],
									[
										102430,
										102437
									],
									[
										103007,
										103014
									],
									[
										103048,
										103055
									],
									[
										103070,
										103077
									],
									[
										103406,
										103413
									],
									[
										103441,
										103448
									],
									[
										103772,
										103779
									],
									[
										104105,
										104112
									],
									[
										104147,
										104154
									],
									[
										104477,
										104484
									],
									[
										104821,
										104828
									],
									[
										104863,
										104870
									],
									[
										105251,
										105258
									],
									[
										105396,
										105403
									],
									[
										105547,
										105554
									],
									[
										105694,
										105701
									],
									[
										105872,
										105879
									],
									[
										106204,
										106211
									],
									[
										106495,
										106502
									],
									[
										106525,
										106532
									],
									[
										106991,
										106998
									],
									[
										107234,
										107241
									],
									[
										107512,
										107519
									],
									[
										107946,
										107953
									],
									[
										108529,
										108536
									],
									[
										109076,
										109083
									],
									[
										109111,
										109118
									],
									[
										109509,
										109516
									],
									[
										109541,
										109548
									],
									[
										110036,
										110043
									],
									[
										110069,
										110076
									],
									[
										110556,
										110563
									],
									[
										110931,
										110938
									],
									[
										111295,
										111302
									],
									[
										111621,
										111628
									],
									[
										111696,
										111703
									],
									[
										112041,
										112048
									],
									[
										112120,
										112127
									],
									[
										112724,
										112731
									],
									[
										112974,
										112981
									],
									[
										113434,
										113441
									],
									[
										113765,
										113772
									],
									[
										114177,
										114184
									],
									[
										114458,
										114465
									],
									[
										114772,
										114779
									],
									[
										114947,
										114954
									],
									[
										115346,
										115353
									],
									[
										115750,
										115757
									],
									[
										116247,
										116254
									],
									[
										116623,
										116630
									],
									[
										116729,
										116736
									],
									[
										117031,
										117038
									],
									[
										117137,
										117144
									],
									[
										117450,
										117457
									],
									[
										118002,
										118009
									],
									[
										118453,
										118460
									],
									[
										118545,
										118552
									],
									[
										118631,
										118638
									],
									[
										119034,
										119041
									],
									[
										119117,
										119124
									],
									[
										119567,
										119574
									],
									[
										120121,
										120128
									],
									[
										120393,
										120400
									],
									[
										120499,
										120506
									],
									[
										120871,
										120878
									],
									[
										121013,
										121020
									],
									[
										121428,
										121435
									],
									[
										121836,
										121843
									],
									[
										121978,
										121985
									],
									[
										122375,
										122382
									],
									[
										122838,
										122845
									],
									[
										123269,
										123276
									],
									[
										123589,
										123596
									],
									[
										124265,
										124272
									],
									[
										124792,
										124799
									],
									[
										125267,
										125274
									],
									[
										125369,
										125376
									],
									[
										125857,
										125864
									],
									[
										125963,
										125970
									],
									[
										126378,
										126385
									],
									[
										126659,
										126666
									],
									[
										126995,
										127002
									],
									[
										127170,
										127177
									],
									[
										127298,
										127305
									],
									[
										127520,
										127527
									],
									[
										127577,
										127584
									],
									[
										127819,
										127826
									],
									[
										127874,
										127881
									],
									[
										128421,
										128428
									],
									[
										128732,
										128739
									],
									[
										129032,
										129039
									],
									[
										129212,
										129219
									],
									[
										129416,
										129423
									],
									[
										129523,
										129530
									],
									[
										129766,
										129773
									],
									[
										130251,
										130258
									],
									[
										130535,
										130542
									],
									[
										130589,
										130596
									],
									[
										130731,
										130738
									],
									[
										130811,
										130818
									],
									[
										131067,
										131074
									],
									[
										131442,
										131449
									],
									[
										131465,
										131472
									],
									[
										131844,
										131851
									],
									[
										132201,
										132208
									],
									[
										132672,
										132679
									],
									[
										132761,
										132768
									],
									[
										132838,
										132845
									],
									[
										132950,
										132957
									],
									[
										133213,
										133220
									],
									[
										133302,
										133309
									],
									[
										133379,
										133386
									],
									[
										133491,
										133498
									],
									[
										133847,
										133854
									],
									[
										134251,
										134258
									],
									[
										134347,
										134354
									],
									[
										134426,
										134433
									],
									[
										134624,
										134631
									],
									[
										134716,
										134723
									],
									[
										134793,
										134800
									],
									[
										135001,
										135008
									],
									[
										135074,
										135081
									],
									[
										135185,
										135192
									],
									[
										135277,
										135284
									],
									[
										135354,
										135361
									],
									[
										135420,
										135427
									],
									[
										135455,
										135462
									],
									[
										135584,
										135591
									],
									[
										135949,
										135956
									],
									[
										136294,
										136301
									],
									[
										136597,
										136604
									],
									[
										136632,
										136639
									],
									[
										136763,
										136770
									],
									[
										136814,
										136821
									],
									[
										137046,
										137053
									],
									[
										137135,
										137142
									],
									[
										137170,
										137177
									],
									[
										137420,
										137427
									],
									[
										137507,
										137514
									],
									[
										137539,
										137546
									],
									[
										137850,
										137857
									],
									[
										137929,
										137936
									],
									[
										138030,
										138037
									],
									[
										138463,
										138470
									],
									[
										138604,
										138611
									],
									[
										139214,
										139221
									],
									[
										139268,
										139275
									],
									[
										139442,
										139449
									],
									[
										139824,
										139831
									],
									[
										139969,
										139976
									],
									[
										140128,
										140135
									],
									[
										140285,
										140292
									],
									[
										141056,
										141063
									],
									[
										141446,
										141453
									],
									[
										141667,
										141674
									],
									[
										141721,
										141728
									],
									[
										141897,
										141904
									],
									[
										142083,
										142090
									],
									[
										142279,
										142286
									],
									[
										142717,
										142724
									],
									[
										143051,
										143058
									],
									[
										143467,
										143474
									],
									[
										143657,
										143664
									],
									[
										143995,
										144002
									],
									[
										144325,
										144332
									],
									[
										144683,
										144690
									],
									[
										144716,
										144723
									],
									[
										144752,
										144759
									],
									[
										144780,
										144787
									],
									[
										144886,
										144893
									],
									[
										145089,
										145096
									],
									[
										145115,
										145122
									],
									[
										145404,
										145411
									],
									[
										145855,
										145862
									],
									[
										146227,
										146234
									],
									[
										146578,
										146585
									],
									[
										146814,
										146821
									],
									[
										147042,
										147049
									],
									[
										147115,
										147122
									],
									[
										147587,
										147594
									],
									[
										148029,
										148036
									],
									[
										148422,
										148429
									],
									[
										148781,
										148788
									],
									[
										148847,
										148854
									],
									[
										148920,
										148927
									],
									[
										149001,
										149008
									],
									[
										149410,
										149417
									],
									[
										149710,
										149717
									],
									[
										150437,
										150444
									],
									[
										150721,
										150728
									],
									[
										150935,
										150942
									],
									[
										151156,
										151163
									],
									[
										151261,
										151268
									],
									[
										151395,
										151402
									],
									[
										151604,
										151611
									],
									[
										151993,
										152000
									],
									[
										152385,
										152392
									],
									[
										152416,
										152423
									],
									[
										152793,
										152800
									],
									[
										152837,
										152844
									],
									[
										153200,
										153207
									],
									[
										153373,
										153380
									],
									[
										153669,
										153676
									],
									[
										153966,
										153973
									],
									[
										154265,
										154272
									],
									[
										154561,
										154568
									],
									[
										154858,
										154865
									],
									[
										155189,
										155196
									],
									[
										155496,
										155503
									],
									[
										155819,
										155826
									],
									[
										156111,
										156118
									],
									[
										156485,
										156492
									],
									[
										156911,
										156918
									],
									[
										157018,
										157025
									],
									[
										157335,
										157342
									],
									[
										157770,
										157777
									],
									[
										157877,
										157884
									],
									[
										158202,
										158209
									],
									[
										158645,
										158652
									],
									[
										158752,
										158759
									],
									[
										159057,
										159064
									],
									[
										159460,
										159467
									],
									[
										159560,
										159567
									],
									[
										159924,
										159931
									],
									[
										160192,
										160199
									],
									[
										160261,
										160268
									],
									[
										160388,
										160395
									],
									[
										160482,
										160489
									],
									[
										160849,
										160856
									],
									[
										160941,
										160948
									],
									[
										160992,
										160999
									],
									[
										161048,
										161055
									],
									[
										161579,
										161586
									],
									[
										161925,
										161932
									],
									[
										162343,
										162350
									],
									[
										162459,
										162466
									],
									[
										162865,
										162872
									],
									[
										163321,
										163328
									],
									[
										163667,
										163674
									],
									[
										164123,
										164130
									],
									[
										164471,
										164478
									],
									[
										164816,
										164823
									],
									[
										164834,
										164841
									],
									[
										164878,
										164885
									],
									[
										164929,
										164936
									],
									[
										165095,
										165102
									],
									[
										165576,
										165583
									],
									[
										165779,
										165786
									],
									[
										165955,
										165962
									],
									[
										165964,
										165971
									],
									[
										166661,
										166668
									],
									[
										166874,
										166881
									],
									[
										167175,
										167182
									],
									[
										167636,
										167643
									],
									[
										168035,
										168042
									],
									[
										168392,
										168399
									],
									[
										168490,
										168497
									],
									[
										168771,
										168778
									],
									[
										168877,
										168884
									],
									[
										169242,
										169249
									],
									[
										169491,
										169498
									],
									[
										169883,
										169890
									],
									[
										170389,
										170396
									],
									[
										170891,
										170898
									],
									[
										171392,
										171399
									],
									[
										171425,
										171432
									],
									[
										172002,
										172009
									],
									[
										172435,
										172442
									],
									[
										172847,
										172854
									],
									[
										172877,
										172884
									],
									[
										172900,
										172907
									],
									[
										173290,
										173297
									],
									[
										173739,
										173746
									],
									[
										174111,
										174118
									],
									[
										174274,
										174281
									],
									[
										174499,
										174506
									],
									[
										174595,
										174602
									],
									[
										174658,
										174665
									],
									[
										174945,
										174952
									],
									[
										174954,
										174961
									],
									[
										175370,
										175377
									],
									[
										175402,
										175409
									],
									[
										175430,
										175437
									],
									[
										175827,
										175834
									],
									[
										176214,
										176221
									],
									[
										176711,
										176718
									],
									[
										176949,
										176956
									],
									[
										177078,
										177085
									],
									[
										177342,
										177349
									],
									[
										177566,
										177573
									],
									[
										177663,
										177670
									],
									[
										177970,
										177977
									],
									[
										178289,
										178296
									],
									[
										178456,
										178463
									],
									[
										178748,
										178755
									],
									[
										178972,
										178979
									],
									[
										179229,
										179236
									],
									[
										179441,
										179448
									],
									[
										179546,
										179553
									],
									[
										179861,
										179868
									],
									[
										179939,
										179946
									],
									[
										180220,
										180227
									],
									[
										180494,
										180501
									],
									[
										180671,
										180678
									],
									[
										181048,
										181055
									],
									[
										181289,
										181296
									],
									[
										181775,
										181782
									],
									[
										182008,
										182015
									],
									[
										182139,
										182146
									],
									[
										182190,
										182197
									],
									[
										182205,
										182212
									],
									[
										182433,
										182440
									],
									[
										182441,
										182448
									],
									[
										182786,
										182793
									],
									[
										183017,
										183024
									],
									[
										183123,
										183130
									],
									[
										183358,
										183365
									],
									[
										183456,
										183463
									],
									[
										183714,
										183721
									],
									[
										184093,
										184100
									],
									[
										184188,
										184195
									],
									[
										184527,
										184534
									],
									[
										184849,
										184856
									],
									[
										185178,
										185185
									],
									[
										185415,
										185422
									],
									[
										185724,
										185731
									],
									[
										186033,
										186040
									],
									[
										186042,
										186049
									],
									[
										186633,
										186640
									],
									[
										187208,
										187215
									],
									[
										187404,
										187411
									],
									[
										187646,
										187653
									],
									[
										187797,
										187804
									],
									[
										187925,
										187932
									],
									[
										188053,
										188060
									],
									[
										188291,
										188298
									],
									[
										188339,
										188346
									],
									[
										188488,
										188495
									],
									[
										188675,
										188682
									],
									[
										189010,
										189017
									],
									[
										189019,
										189026
									],
									[
										189277,
										189284
									],
									[
										189517,
										189524
									],
									[
										189799,
										189806
									],
									[
										190204,
										190211
									],
									[
										190530,
										190537
									],
									[
										190778,
										190785
									],
									[
										190974,
										190981
									],
									[
										191169,
										191176
									],
									[
										191371,
										191378
									],
									[
										191532,
										191539
									],
									[
										191807,
										191814
									],
									[
										191847,
										191854
									],
									[
										192139,
										192146
									],
									[
										192302,
										192309
									],
									[
										192606,
										192613
									],
									[
										192859,
										192866
									],
									[
										193137,
										193144
									],
									[
										193279,
										193286
									],
									[
										193640,
										193647
									],
									[
										193839,
										193846
									],
									[
										193848,
										193855
									],
									[
										193944,
										193951
									],
									[
										194139,
										194146
									],
									[
										194397,
										194404
									],
									[
										194573,
										194580
									],
									[
										194639,
										194646
									],
									[
										195048,
										195055
									],
									[
										195386,
										195393
									],
									[
										195695,
										195702
									],
									[
										195723,
										195730
									],
									[
										195918,
										195925
									],
									[
										196183,
										196190
									],
									[
										196476,
										196483
									],
									[
										196718,
										196725
									],
									[
										196773,
										196780
									],
									[
										197047,
										197054
									],
									[
										197159,
										197166
									],
									[
										197270,
										197277
									],
									[
										197518,
										197525
									],
									[
										197850,
										197857
									],
									[
										197988,
										197995
									],
									[
										198083,
										198090
									],
									[
										198187,
										198194
									],
									[
										198267,
										198274
									],
									[
										198375,
										198382
									],
									[
										198470,
										198477
									],
									[
										198538,
										198545
									],
									[
										198678,
										198685
									],
									[
										198771,
										198778
									],
									[
										198986,
										198993
									],
									[
										199159,
										199166
									],
									[
										199238,
										199245
									],
									[
										199352,
										199359
									],
									[
										199502,
										199509
									],
									[
										199566,
										199573
									],
									[
										199804,
										199811
									],
									[
										199895,
										199902
									],
									[
										199914,
										199921
									],
									[
										200252,
										200259
									],
									[
										200417,
										200424
									],
									[
										200519,
										200526
									],
									[
										200781,
										200788
									],
									[
										200807,
										200814
									],
									[
										201094,
										201101
									],
									[
										201281,
										201288
									],
									[
										201587,
										201594
									],
									[
										201861,
										201868
									],
									[
										202207,
										202214
									],
									[
										202636,
										202643
									],
									[
										202841,
										202848
									],
									[
										202898,
										202905
									],
									[
										203165,
										203172
									],
									[
										203183,
										203190
									],
									[
										203261,
										203268
									],
									[
										203500,
										203507
									],
									[
										203731,
										203738
									],
									[
										204343,
										204350
									],
									[
										204917,
										204924
									],
									[
										205061,
										205068
									],
									[
										205410,
										205417
									],
									[
										205918,
										205925
									],
									[
										206210,
										206217
									],
									[
										206539,
										206546
									],
									[
										206837,
										206844
									],
									[
										206920,
										206927
									],
									[
										206971,
										206978
									],
									[
										207285,
										207292
									],
									[
										207581,
										207588
									],
									[
										207958,
										207965
									],
									[
										208427,
										208434
									],
									[
										208734,
										208741
									],
									[
										209067,
										209074
									],
									[
										209402,
										209409
									],
									[
										209492,
										209499
									],
									[
										209641,
										209648
									],
									[
										209843,
										209850
									],
									[
										210112,
										210119
									],
									[
										210267,
										210274
									],
									[
										210407,
										210414
									],
									[
										210829,
										210836
									],
									[
										211097,
										211104
									],
									[
										211481,
										211488
									],
									[
										211565,
										211572
									],
									[
										211655,
										211662
									],
									[
										211867,
										211874
									],
									[
										212135,
										212142
									],
									[
										212324,
										212331
									],
									[
										212473,
										212480
									],
									[
										212635,
										212642
									],
									[
										212905,
										212912
									],
									[
										213188,
										213195
									],
									[
										213429,
										213436
									],
									[
										213718,
										213725
									],
									[
										213805,
										213812
									],
									[
										214148,
										214155
									],
									[
										214490,
										214497
									],
									[
										214759,
										214766
									],
									[
										214995,
										215002
									],
									[
										215306,
										215313
									],
									[
										215625,
										215632
									],
									[
										215924,
										215931
									],
									[
										216176,
										216183
									],
									[
										216425,
										216432
									],
									[
										216731,
										216738
									],
									[
										216930,
										216937
									],
									[
										217235,
										217242
									],
									[
										217283,
										217290
									],
									[
										217728,
										217735
									],
									[
										217977,
										217984
									],
									[
										218427,
										218434
									],
									[
										218545,
										218552
									],
									[
										218759,
										218766
									],
									[
										218807,
										218814
									],
									[
										219008,
										219015
									],
									[
										219319,
										219326
									],
									[
										219583,
										219590
									],
									[
										219853,
										219860
									],
									[
										219945,
										219952
									],
									[
										219953,
										219960
									],
									[
										220221,
										220228
									],
									[
										220432,
										220439
									],
									[
										220664,
										220671
									],
									[
										221006,
										221013
									],
									[
										221397,
										221404
									],
									[
										221633,
										221640
									],
									[
										221862,
										221869
									],
									[
										221980,
										221987
									],
									[
										222216,
										222223
									],
									[
										222422,
										222429
									],
									[
										222604,
										222611
									],
									[
										222642,
										222649
									],
									[
										222734,
										222741
									],
									[
										222956,
										222963
									],
									[
										223231,
										223238
									],
									[
										223520,
										223527
									],
									[
										223733,
										223740
									],
									[
										224078,
										224085
									],
									[
										224530,
										224537
									],
									[
										224552,
										224559
									],
									[
										224572,
										224579
									],
									[
										224603,
										224610
									],
									[
										224928,
										224935
									],
									[
										225372,
										225379
									],
									[
										225612,
										225619
									],
									[
										225635,
										225642
									],
									[
										225884,
										225891
									],
									[
										225985,
										225992
									],
									[
										226233,
										226240
									],
									[
										226284,
										226291
									],
									[
										226409,
										226416
									],
									[
										226439,
										226446
									],
									[
										226607,
										226614
									],
									[
										226859,
										226866
									],
									[
										226904,
										226911
									],
									[
										227197,
										227204
									],
									[
										227228,
										227235
									],
									[
										227547,
										227554
									],
									[
										227809,
										227816
									],
									[
										227908,
										227915
									],
									[
										227918,
										227925
									],
									[
										228160,
										228167
									],
									[
										228171,
										228178
									],
									[
										228546,
										228553
									],
									[
										228822,
										228829
									],
									[
										228966,
										228973
									],
									[
										229099,
										229106
									],
									[
										229180,
										229187
									],
									[
										229358,
										229365
									],
									[
										229407,
										229414
									],
									[
										229475,
										229482
									],
									[
										229504,
										229511
									],
									[
										229762,
										229769
									],
									[
										229814,
										229821
									],
									[
										229959,
										229966
									],
									[
										230155,
										230162
									],
									[
										230234,
										230241
									],
									[
										230532,
										230539
									],
									[
										230838,
										230845
									],
									[
										230934,
										230941
									],
									[
										231169,
										231176
									],
									[
										231351,
										231358
									],
									[
										231479,
										231486
									],
									[
										231600,
										231607
									],
									[
										231703,
										231710
									],
									[
										231913,
										231920
									],
									[
										232019,
										232026
									],
									[
										232057,
										232064
									],
									[
										232103,
										232110
									],
									[
										232182,
										232189
									],
									[
										232362,
										232369
									],
									[
										232398,
										232405
									],
									[
										232535,
										232542
									],
									[
										232704,
										232711
									],
									[
										232890,
										232897
									],
									[
										233148,
										233155
									],
									[
										233548,
										233555
									],
									[
										233662,
										233669
									],
									[
										233907,
										233914
									],
									[
										234112,
										234119
									],
									[
										234150,
										234157
									],
									[
										234228,
										234235
									],
									[
										234240,
										234247
									],
									[
										234376,
										234383
									],
									[
										234463,
										234470
									],
									[
										234553,
										234560
									],
									[
										234711,
										234718
									],
									[
										234808,
										234815
									],
									[
										234896,
										234903
									],
									[
										235267,
										235274
									],
									[
										235729,
										235736
									],
									[
										235892,
										235899
									],
									[
										235928,
										235935
									],
									[
										236043,
										236050
									],
									[
										236150,
										236157
									],
									[
										236206,
										236213
									],
									[
										236252,
										236259
									],
									[
										236346,
										236353
									],
									[
										236773,
										236780
									],
									[
										236936,
										236943
									],
									[
										236973,
										236980
									],
									[
										237088,
										237095
									],
									[
										237205,
										237212
									],
									[
										237261,
										237268
									],
									[
										237307,
										237314
									],
									[
										237401,
										237408
									],
									[
										237693,
										237700
									],
									[
										237776,
										237783
									],
									[
										237950,
										237957
									],
									[
										238227,
										238234
									],
									[
										238552,
										238559
									],
									[
										238862,
										238869
									],
									[
										239170,
										239177
									],
									[
										239262,
										239269
									],
									[
										239610,
										239617
									],
									[
										239672,
										239679
									],
									[
										239686,
										239693
									],
									[
										239696,
										239703
									],
									[
										239823,
										239830
									],
									[
										240094,
										240101
									],
									[
										240207,
										240214
									],
									[
										240400,
										240407
									],
									[
										240480,
										240487
									],
									[
										240566,
										240573
									],
									[
										240597,
										240604
									],
									[
										240789,
										240796
									],
									[
										240884,
										240891
									],
									[
										241069,
										241076
									],
									[
										241156,
										241163
									],
									[
										241299,
										241306
									],
									[
										241389,
										241396
									],
									[
										241549,
										241556
									],
									[
										241968,
										241975
									],
									[
										242024,
										242031
									],
									[
										242655,
										242662
									],
									[
										242814,
										242821
									],
									[
										242970,
										242977
									],
									[
										243126,
										243133
									],
									[
										243507,
										243514
									],
									[
										243836,
										243843
									],
									[
										244204,
										244211
									],
									[
										244662,
										244669
									],
									[
										245086,
										245093
									],
									[
										245418,
										245425
									],
									[
										245854,
										245861
									],
									[
										246313,
										246320
									],
									[
										246723,
										246730
									],
									[
										247033,
										247040
									],
									[
										247498,
										247505
									],
									[
										247660,
										247667
									],
									[
										248166,
										248173
									],
									[
										248514,
										248521
									],
									[
										248807,
										248814
									],
									[
										248983,
										248990
									],
									[
										249466,
										249473
									],
									[
										249721,
										249728
									],
									[
										250618,
										250625
									],
									[
										250649,
										250656
									],
									[
										251459,
										251466
									],
									[
										251490,
										251497
									],
									[
										251611,
										251618
									],
									[
										251642,
										251649
									],
									[
										251765,
										251772
									],
									[
										252213,
										252220
									],
									[
										253050,
										253057
									],
									[
										253087,
										253094
									],
									[
										253867,
										253874
									],
									[
										253904,
										253911
									],
									[
										254034,
										254041
									],
									[
										254071,
										254078
									],
									[
										254199,
										254206
									],
									[
										254669,
										254676
									],
									[
										254953,
										254960
									],
									[
										255123,
										255130
									],
									[
										255326,
										255333
									],
									[
										255603,
										255610
									],
									[
										255823,
										255830
									],
									[
										255886,
										255893
									],
									[
										255986,
										255993
									],
									[
										255998,
										256005
									],
									[
										256131,
										256138
									],
									[
										256174,
										256181
									],
									[
										256565,
										256572
									],
									[
										256831,
										256838
									],
									[
										257079,
										257086
									],
									[
										257354,
										257361
									],
									[
										257585,
										257592
									],
									[
										257826,
										257833
									],
									[
										257964,
										257971
									],
									[
										258275,
										258282
									],
									[
										258589,
										258596
									],
									[
										259021,
										259028
									],
									[
										259668,
										259675
									],
									[
										260075,
										260082
									],
									[
										260217,
										260224
									],
									[
										260307,
										260314
									],
									[
										260473,
										260480
									],
									[
										260601,
										260608
									],
									[
										260716,
										260723
									],
									[
										261031,
										261038
									],
									[
										261276,
										261283
									],
									[
										261634,
										261641
									],
									[
										261934,
										261941
									],
									[
										262218,
										262225
									],
									[
										262534,
										262541
									],
									[
										262795,
										262802
									],
									[
										262869,
										262876
									],
									[
										262959,
										262966
									],
									[
										263136,
										263143
									],
									[
										263256,
										263263
									],
									[
										263298,
										263305
									],
									[
										263343,
										263350
									],
									[
										263449,
										263456
									],
									[
										263793,
										263800
									],
									[
										264074,
										264081
									],
									[
										264105,
										264112
									],
									[
										264447,
										264454
									],
									[
										264491,
										264498
									],
									[
										264567,
										264574
									],
									[
										264823,
										264830
									],
									[
										265175,
										265182
									],
									[
										265426,
										265433
									],
									[
										265524,
										265531
									],
									[
										265646,
										265653
									],
									[
										265881,
										265888
									],
									[
										265894,
										265901
									],
									[
										266221,
										266228
									],
									[
										266368,
										266375
									],
									[
										266399,
										266406
									],
									[
										266439,
										266446
									],
									[
										266468,
										266475
									],
									[
										266767,
										266774
									],
									[
										266777,
										266784
									],
									[
										266863,
										266870
									],
									[
										267099,
										267106
									],
									[
										267162,
										267169
									],
									[
										267195,
										267202
									],
									[
										267271,
										267278
									],
									[
										267323,
										267330
									],
									[
										267569,
										267576
									],
									[
										267664,
										267671
									],
									[
										267860,
										267867
									],
									[
										267935,
										267942
									],
									[
										267979,
										267986
									],
									[
										268452,
										268459
									],
									[
										268753,
										268760
									],
									[
										269027,
										269034
									],
									[
										269487,
										269494
									],
									[
										269690,
										269697
									],
									[
										269808,
										269815
									],
									[
										269836,
										269843
									],
									[
										269864,
										269871
									],
									[
										270067,
										270074
									],
									[
										270075,
										270082
									],
									[
										270230,
										270237
									],
									[
										270563,
										270570
									],
									[
										270852,
										270859
									],
									[
										271276,
										271283
									],
									[
										271602,
										271609
									],
									[
										271646,
										271653
									],
									[
										271702,
										271709
									],
									[
										271764,
										271771
									],
									[
										271943,
										271950
									],
									[
										272050,
										272057
									],
									[
										272206,
										272213
									],
									[
										272322,
										272329
									],
									[
										272516,
										272523
									],
									[
										272660,
										272667
									],
									[
										272715,
										272722
									],
									[
										273062,
										273069
									],
									[
										273275,
										273282
									],
									[
										273502,
										273509
									],
									[
										273717,
										273724
									],
									[
										274065,
										274072
									],
									[
										274096,
										274103
									],
									[
										274350,
										274357
									],
									[
										274558,
										274565
									],
									[
										274803,
										274810
									],
									[
										274881,
										274888
									],
									[
										274928,
										274935
									],
									[
										275178,
										275185
									],
									[
										275226,
										275233
									],
									[
										275366,
										275373
									],
									[
										275396,
										275403
									],
									[
										275411,
										275418
									],
									[
										275441,
										275448
									],
									[
										275538,
										275545
									],
									[
										275900,
										275907
									],
									[
										276244,
										276251
									],
									[
										276338,
										276345
									],
									[
										276605,
										276612
									],
									[
										276967,
										276974
									],
									[
										276999,
										277006
									],
									[
										277107,
										277114
									],
									[
										277328,
										277335
									],
									[
										277391,
										277398
									],
									[
										277551,
										277558
									],
									[
										277780,
										277787
									],
									[
										278183,
										278190
									],
									[
										278504,
										278511
									],
									[
										278817,
										278824
									],
									[
										279201,
										279208
									],
									[
										279229,
										279236
									],
									[
										279259,
										279266
									],
									[
										279721,
										279728
									],
									[
										279753,
										279760
									],
									[
										279779,
										279786
									],
									[
										279807,
										279814
									],
									[
										279829,
										279836
									],
									[
										279859,
										279866
									],
									[
										279879,
										279886
									],
									[
										279913,
										279920
									],
									[
										279943,
										279950
									],
									[
										279973,
										279980
									],
									[
										280308,
										280315
									],
									[
										280673,
										280680
									],
									[
										281001,
										281008
									],
									[
										281030,
										281037
									],
									[
										281339,
										281346
									],
									[
										281361,
										281368
									],
									[
										281383,
										281390
									],
									[
										281692,
										281699
									],
									[
										281714,
										281721
									],
									[
										281737,
										281744
									],
									[
										282014,
										282021
									],
									[
										282310,
										282317
									],
									[
										282428,
										282435
									],
									[
										282544,
										282551
									],
									[
										282735,
										282742
									],
									[
										282901,
										282908
									],
									[
										283146,
										283153
									],
									[
										283452,
										283459
									],
									[
										283537,
										283544
									],
									[
										283834,
										283841
									],
									[
										283951,
										283958
									],
									[
										283966,
										283973
									],
									[
										284014,
										284021
									],
									[
										284048,
										284055
									],
									[
										284077,
										284084
									],
									[
										284163,
										284170
									],
									[
										284191,
										284198
									],
									[
										284309,
										284316
									],
									[
										284629,
										284636
									],
									[
										284876,
										284883
									],
									[
										285114,
										285121
									],
									[
										285275,
										285282
									],
									[
										285525,
										285532
									],
									[
										285656,
										285663
									],
									[
										285702,
										285709
									],
									[
										285813,
										285820
									],
									[
										285987,
										285994
									],
									[
										286181,
										286188
									],
									[
										286438,
										286445
									],
									[
										286595,
										286602
									],
									[
										286636,
										286643
									],
									[
										286764,
										286771
									],
									[
										287148,
										287155
									],
									[
										287415,
										287422
									],
									[
										287709,
										287716
									],
									[
										287996,
										288003
									],
									[
										288548,
										288555
									],
									[
										289200,
										289207
									],
									[
										289545,
										289552
									],
									[
										289716,
										289723
									],
									[
										289769,
										289776
									],
									[
										289939,
										289946
									],
									[
										290333,
										290340
									],
									[
										290845,
										290852
									],
									[
										291213,
										291220
									],
									[
										291284,
										291291
									],
									[
										291736,
										291743
									],
									[
										292195,
										292202
									],
									[
										292486,
										292493
									],
									[
										292802,
										292809
									],
									[
										293261,
										293268
									],
									[
										293712,
										293719
									],
									[
										294146,
										294153
									],
									[
										294515,
										294522
									],
									[
										294680,
										294687
									],
									[
										294968,
										294975
									],
									[
										295252,
										295259
									],
									[
										295780,
										295787
									],
									[
										296148,
										296155
									],
									[
										296494,
										296501
									],
									[
										296604,
										296611
									],
									[
										296714,
										296721
									],
									[
										296824,
										296831
									],
									[
										297033,
										297040
									],
									[
										297139,
										297146
									],
									[
										297245,
										297252
									],
									[
										297351,
										297358
									],
									[
										297556,
										297563
									],
									[
										297662,
										297669
									],
									[
										297781,
										297788
									],
									[
										297860,
										297867
									],
									[
										298141,
										298148
									],
									[
										298221,
										298228
									],
									[
										298424,
										298431
									],
									[
										298663,
										298670
									],
									[
										298800,
										298807
									],
									[
										298869,
										298876
									],
									[
										298902,
										298909
									],
									[
										299100,
										299107
									],
									[
										299339,
										299346
									],
									[
										299449,
										299456
									],
									[
										299559,
										299566
									],
									[
										299678,
										299685
									],
									[
										299747,
										299754
									],
									[
										299817,
										299824
									],
									[
										300080,
										300087
									],
									[
										300283,
										300290
									],
									[
										300522,
										300529
									],
									[
										300632,
										300639
									],
									[
										300742,
										300749
									],
									[
										300859,
										300866
									],
									[
										300948,
										300955
									],
									[
										301212,
										301219
									],
									[
										301415,
										301422
									],
									[
										301654,
										301661
									],
									[
										301763,
										301770
									],
									[
										301866,
										301873
									],
									[
										301948,
										301955
									],
									[
										302154,
										302161
									],
									[
										302223,
										302230
									],
									[
										302256,
										302263
									],
									[
										302447,
										302454
									],
									[
										302682,
										302689
									],
									[
										302788,
										302795
									],
									[
										302894,
										302901
									],
									[
										303013,
										303020
									],
									[
										303082,
										303089
									],
									[
										303152,
										303159
									],
									[
										303379,
										303386
									],
									[
										303580,
										303587
									],
									[
										303664,
										303671
									],
									[
										303753,
										303760
									],
									[
										304014,
										304021
									],
									[
										304215,
										304222
									],
									[
										304288,
										304295
									],
									[
										304366,
										304373
									],
									[
										304607,
										304614
									],
									[
										304796,
										304803
									],
									[
										305031,
										305038
									],
									[
										305137,
										305144
									],
									[
										305401,
										305408
									],
									[
										305803,
										305810
									],
									[
										306007,
										306014
									],
									[
										306160,
										306167
									],
									[
										306448,
										306455
									],
									[
										306659,
										306666
									],
									[
										306756,
										306763
									],
									[
										306863,
										306870
									],
									[
										307042,
										307049
									],
									[
										307186,
										307193
									],
									[
										307248,
										307255
									],
									[
										307486,
										307493
									],
									[
										307588,
										307595
									],
									[
										307781,
										307788
									],
									[
										308064,
										308071
									],
									[
										308148,
										308155
									],
									[
										308262,
										308269
									],
									[
										308357,
										308364
									],
									[
										308583,
										308590
									],
									[
										308912,
										308919
									],
									[
										309132,
										309139
									],
									[
										309309,
										309316
									],
									[
										309361,
										309368
									],
									[
										309412,
										309419
									],
									[
										309576,
										309583
									],
									[
										309611,
										309618
									],
									[
										309682,
										309689
									],
									[
										309703,
										309710
									],
									[
										309779,
										309786
									],
									[
										309830,
										309837
									],
									[
										310063,
										310070
									],
									[
										310606,
										310613
									],
									[
										310958,
										310965
									],
									[
										311141,
										311148
									],
									[
										311176,
										311183
									],
									[
										311196,
										311203
									],
									[
										311316,
										311323
									],
									[
										311363,
										311370
									],
									[
										311388,
										311395
									],
									[
										311508,
										311515
									],
									[
										311568,
										311575
									],
									[
										311650,
										311657
									],
									[
										311819,
										311826
									],
									[
										311991,
										311998
									],
									[
										312324,
										312331
									],
									[
										312617,
										312624
									],
									[
										312706,
										312713
									],
									[
										313016,
										313023
									],
									[
										313333,
										313340
									],
									[
										313494,
										313501
									],
									[
										313685,
										313692
									],
									[
										313727,
										313734
									],
									[
										313866,
										313873
									],
									[
										313887,
										313894
									],
									[
										313986,
										313993
									],
									[
										314019,
										314026
									],
									[
										314174,
										314181
									],
									[
										314321,
										314328
									],
									[
										314342,
										314349
									],
									[
										314441,
										314448
									],
									[
										314474,
										314481
									],
									[
										314835,
										314842
									],
									[
										315043,
										315050
									],
									[
										315308,
										315315
									],
									[
										315819,
										315826
									],
									[
										316175,
										316182
									],
									[
										316474,
										316481
									],
									[
										316825,
										316832
									],
									[
										317072,
										317079
									],
									[
										317308,
										317315
									],
									[
										317462,
										317469
									],
									[
										317733,
										317740
									],
									[
										318021,
										318028
									],
									[
										318285,
										318292
									],
									[
										318585,
										318592
									],
									[
										319143,
										319150
									],
									[
										319170,
										319177
									],
									[
										319766,
										319773
									],
									[
										319793,
										319800
									],
									[
										320293,
										320300
									],
									[
										320608,
										320615
									],
									[
										321002,
										321009
									],
									[
										321222,
										321229
									],
									[
										321597,
										321604
									],
									[
										321732,
										321739
									],
									[
										321974,
										321981
									],
									[
										322267,
										322274
									],
									[
										322495,
										322502
									],
									[
										322725,
										322732
									],
									[
										323233,
										323240
									],
									[
										323520,
										323527
									],
									[
										323561,
										323568
									],
									[
										323784,
										323791
									],
									[
										323910,
										323917
									],
									[
										324264,
										324271
									],
									[
										324642,
										324649
									],
									[
										324940,
										324947
									],
									[
										325249,
										325256
									],
									[
										325408,
										325415
									],
									[
										325697,
										325704
									],
									[
										325945,
										325952
									],
									[
										326070,
										326077
									],
									[
										326369,
										326376
									],
									[
										326597,
										326604
									],
									[
										326889,
										326896
									],
									[
										327369,
										327376
									],
									[
										327682,
										327689
									],
									[
										327948,
										327955
									],
									[
										328144,
										328151
									],
									[
										328415,
										328422
									],
									[
										328910,
										328917
									],
									[
										329399,
										329406
									],
									[
										329691,
										329698
									],
									[
										329742,
										329749
									],
									[
										330037,
										330044
									],
									[
										330384,
										330391
									],
									[
										330631,
										330638
									],
									[
										330678,
										330685
									],
									[
										331010,
										331017
									],
									[
										331287,
										331294
									],
									[
										331563,
										331570
									],
									[
										331865,
										331872
									],
									[
										332139,
										332146
									],
									[
										332469,
										332476
									],
									[
										332737,
										332744
									],
									[
										332841,
										332848
									],
									[
										333001,
										333008
									],
									[
										333236,
										333243
									],
									[
										333532,
										333539
									],
									[
										333756,
										333763
									],
									[
										333877,
										333884
									],
									[
										334298,
										334305
									],
									[
										334326,
										334333
									],
									[
										334566,
										334573
									],
									[
										334697,
										334704
									],
									[
										334862,
										334869
									],
									[
										335131,
										335138
									],
									[
										335243,
										335250
									],
									[
										335592,
										335599
									],
									[
										335940,
										335947
									],
									[
										336310,
										336317
									],
									[
										336547,
										336554
									],
									[
										336739,
										336746
									],
									[
										337146,
										337153
									],
									[
										337578,
										337585
									],
									[
										337679,
										337686
									],
									[
										337912,
										337919
									],
									[
										338172,
										338179
									],
									[
										338449,
										338456
									],
									[
										338814,
										338821
									],
									[
										338968,
										338975
									],
									[
										339177,
										339184
									],
									[
										339414,
										339421
									],
									[
										339617,
										339624
									],
									[
										339821,
										339828
									],
									[
										339923,
										339930
									],
									[
										340106,
										340113
									],
									[
										340205,
										340212
									],
									[
										340612,
										340619
									],
									[
										340839,
										340846
									],
									[
										341038,
										341045
									],
									[
										341281,
										341288
									],
									[
										341394,
										341401
									],
									[
										341498,
										341505
									],
									[
										341615,
										341622
									],
									[
										341699,
										341706
									],
									[
										341774,
										341781
									],
									[
										341994,
										342001
									],
									[
										342096,
										342103
									],
									[
										342193,
										342200
									],
									[
										342335,
										342342
									],
									[
										342434,
										342441
									],
									[
										342528,
										342535
									],
									[
										342829,
										342836
									],
									[
										343076,
										343083
									],
									[
										343316,
										343323
									],
									[
										343409,
										343416
									],
									[
										343657,
										343664
									],
									[
										343705,
										343712
									],
									[
										343917,
										343924
									],
									[
										343961,
										343968
									],
									[
										343971,
										343978
									],
									[
										344024,
										344031
									],
									[
										344036,
										344043
									],
									[
										344161,
										344168
									],
									[
										344420,
										344427
									],
									[
										344474,
										344481
									],
									[
										344753,
										344760
									],
									[
										345064,
										345071
									],
									[
										345320,
										345327
									],
									[
										345551,
										345558
									],
									[
										345622,
										345629
									],
									[
										345659,
										345666
									],
									[
										345729,
										345736
									],
									[
										346203,
										346210
									],
									[
										346558,
										346565
									],
									[
										346962,
										346969
									],
									[
										347306,
										347313
									],
									[
										347479,
										347486
									],
									[
										347718,
										347725
									],
									[
										347986,
										347993
									],
									[
										348173,
										348180
									],
									[
										348494,
										348501
									],
									[
										348569,
										348576
									],
									[
										348629,
										348636
									],
									[
										348864,
										348871
									],
									[
										348936,
										348943
									],
									[
										349009,
										349016
									],
									[
										349290,
										349297
									],
									[
										349641,
										349648
									],
									[
										349881,
										349888
									],
									[
										350312,
										350319
									],
									[
										350828,
										350835
									],
									[
										351009,
										351016
									],
									[
										351295,
										351302
									],
									[
										351397,
										351404
									],
									[
										351542,
										351549
									],
									[
										351722,
										351729
									],
									[
										351989,
										351996
									],
									[
										352280,
										352287
									],
									[
										352322,
										352329
									],
									[
										352492,
										352499
									],
									[
										352551,
										352558
									],
									[
										352837,
										352844
									],
									[
										353142,
										353149
									],
									[
										353470,
										353477
									],
									[
										353650,
										353657
									],
									[
										353744,
										353751
									],
									[
										353838,
										353845
									],
									[
										353928,
										353935
									],
									[
										353983,
										353990
									],
									[
										354064,
										354071
									],
									[
										354298,
										354305
									],
									[
										354342,
										354349
									],
									[
										354435,
										354442
									],
									[
										354482,
										354489
									],
									[
										354790,
										354797
									],
									[
										354841,
										354848
									],
									[
										354869,
										354876
									],
									[
										355086,
										355093
									],
									[
										355095,
										355102
									],
									[
										355153,
										355160
									],
									[
										355162,
										355169
									],
									[
										355262,
										355269
									],
									[
										355347,
										355354
									],
									[
										355438,
										355445
									],
									[
										355715,
										355722
									],
									[
										355941,
										355948
									],
									[
										356296,
										356303
									],
									[
										356304,
										356311
									],
									[
										356553,
										356560
									],
									[
										356765,
										356772
									],
									[
										356969,
										356976
									],
									[
										357027,
										357034
									],
									[
										357142,
										357149
									],
									[
										357401,
										357408
									],
									[
										357553,
										357560
									],
									[
										357997,
										358004
									],
									[
										358291,
										358298
									],
									[
										358560,
										358567
									],
									[
										358863,
										358870
									],
									[
										359156,
										359163
									],
									[
										359266,
										359273
									],
									[
										359538,
										359545
									],
									[
										359673,
										359680
									],
									[
										359963,
										359970
									],
									[
										360236,
										360243
									],
									[
										360512,
										360519
									],
									[
										360791,
										360798
									],
									[
										361061,
										361068
									],
									[
										361374,
										361381
									],
									[
										361767,
										361774
									],
									[
										361820,
										361827
									],
									[
										361994,
										362001
									],
									[
										362183,
										362190
									],
									[
										362237,
										362244
									],
									[
										362425,
										362432
									],
									[
										362479,
										362486
									],
									[
										362533,
										362540
									],
									[
										362811,
										362818
									],
									[
										362865,
										362872
									],
									[
										362919,
										362926
									],
									[
										363216,
										363223
									],
									[
										363241,
										363248
									],
									[
										363547,
										363554
									],
									[
										363577,
										363584
									],
									[
										363603,
										363610
									],
									[
										363625,
										363632
									],
									[
										363655,
										363662
									],
									[
										363675,
										363682
									],
									[
										363709,
										363716
									],
									[
										363739,
										363746
									],
									[
										363763,
										363770
									],
									[
										363789,
										363796
									],
									[
										363809,
										363816
									],
									[
										363838,
										363845
									],
									[
										363866,
										363873
									],
									[
										364280,
										364287
									],
									[
										364738,
										364745
									],
									[
										365221,
										365228
									],
									[
										365639,
										365646
									],
									[
										365669,
										365676
									],
									[
										365698,
										365705
									],
									[
										366070,
										366077
									],
									[
										366561,
										366568
									],
									[
										366822,
										366829
									],
									[
										366898,
										366905
									],
									[
										366986,
										366993
									],
									[
										367051,
										367058
									],
									[
										367345,
										367352
									],
									[
										367427,
										367434
									],
									[
										367467,
										367474
									],
									[
										367823,
										367830
									],
									[
										368306,
										368313
									],
									[
										368413,
										368420
									],
									[
										368704,
										368711
									],
									[
										369099,
										369106
									],
									[
										369177,
										369184
									],
									[
										369461,
										369468
									],
									[
										369651,
										369658
									],
									[
										370030,
										370037
									],
									[
										370359,
										370366
									],
									[
										370500,
										370507
									],
									[
										370918,
										370925
									],
									[
										371309,
										371316
									],
									[
										371345,
										371352
									],
									[
										371398,
										371405
									],
									[
										371690,
										371697
									],
									[
										371726,
										371733
									],
									[
										371779,
										371786
									],
									[
										372068,
										372075
									],
									[
										372513,
										372520
									],
									[
										372697,
										372704
									],
									[
										372908,
										372915
									],
									[
										373283,
										373290
									],
									[
										373472,
										373479
									],
									[
										373620,
										373627
									],
									[
										373739,
										373746
									],
									[
										373949,
										373956
									],
									[
										374061,
										374068
									],
									[
										374188,
										374195
									],
									[
										374452,
										374459
									],
									[
										374674,
										374681
									],
									[
										375144,
										375151
									],
									[
										375211,
										375218
									],
									[
										375558,
										375565
									],
									[
										375601,
										375608
									],
									[
										375834,
										375841
									],
									[
										375943,
										375950
									],
									[
										376239,
										376246
									],
									[
										376585,
										376592
									],
									[
										377014,
										377021
									],
									[
										377064,
										377071
									],
									[
										377110,
										377117
									],
									[
										377279,
										377286
									],
									[
										377572,
										377579
									],
									[
										377599,
										377606
									],
									[
										377634,
										377641
									],
									[
										377881,
										377888
									],
									[
										377898,
										377905
									],
									[
										378200,
										378207
									],
									[
										378579,
										378586
									],
									[
										378928,
										378935
									],
									[
										378987,
										378994
									],
									[
										379364,
										379371
									],
									[
										379555,
										379562
									],
									[
										379618,
										379625
									],
									[
										379916,
										379923
									],
									[
										379971,
										379978
									],
									[
										380076,
										380083
									],
									[
										380130,
										380137
									],
									[
										380448,
										380455
									],
									[
										380507,
										380514
									],
									[
										380564,
										380571
									],
									[
										380840,
										380847
									],
									[
										380899,
										380906
									],
									[
										381012,
										381019
									],
									[
										381070,
										381077
									],
									[
										381334,
										381341
									],
									[
										381815,
										381822
									],
									[
										381829,
										381836
									],
									[
										382297,
										382304
									],
									[
										382676,
										382683
									],
									[
										383102,
										383109
									],
									[
										383314,
										383321
									],
									[
										383516,
										383523
									],
									[
										383725,
										383732
									],
									[
										384206,
										384213
									],
									[
										384580,
										384587
									],
									[
										384664,
										384671
									],
									[
										385002,
										385009
									],
									[
										385188,
										385195
									],
									[
										385273,
										385280
									],
									[
										385391,
										385398
									],
									[
										385539,
										385546
									],
									[
										385830,
										385837
									],
									[
										386305,
										386312
									],
									[
										386638,
										386645
									],
									[
										386950,
										386957
									],
									[
										387255,
										387262
									],
									[
										387660,
										387667
									],
									[
										387911,
										387918
									],
									[
										388015,
										388022
									],
									[
										388530,
										388537
									],
									[
										388671,
										388678
									],
									[
										388784,
										388791
									],
									[
										388926,
										388933
									],
									[
										388998,
										389005
									],
									[
										389071,
										389078
									],
									[
										389457,
										389464
									],
									[
										389566,
										389573
									],
									[
										389704,
										389711
									],
									[
										389871,
										389878
									],
									[
										390043,
										390050
									],
									[
										390268,
										390275
									],
									[
										390500,
										390507
									],
									[
										390735,
										390742
									],
									[
										391020,
										391027
									],
									[
										391067,
										391074
									],
									[
										391316,
										391323
									],
									[
										391425,
										391432
									],
									[
										391440,
										391447
									],
									[
										391495,
										391502
									],
									[
										391657,
										391664
									],
									[
										391900,
										391907
									],
									[
										392100,
										392107
									],
									[
										392158,
										392165
									],
									[
										392274,
										392281
									],
									[
										392577,
										392584
									],
									[
										392839,
										392846
									],
									[
										393097,
										393104
									],
									[
										393356,
										393363
									],
									[
										393709,
										393716
									],
									[
										394144,
										394151
									],
									[
										394434,
										394441
									],
									[
										394953,
										394960
									],
									[
										394977,
										394984
									],
									[
										395001,
										395008
									],
									[
										395507,
										395514
									],
									[
										395540,
										395547
									],
									[
										396119,
										396126
									],
									[
										396182,
										396189
									],
									[
										396540,
										396547
									],
									[
										396603,
										396610
									],
									[
										396967,
										396974
									],
									[
										397105,
										397112
									],
									[
										397469,
										397476
									],
									[
										397954,
										397961
									],
									[
										398439,
										398446
									],
									[
										398680,
										398687
									],
									[
										398938,
										398945
									],
									[
										399053,
										399060
									],
									[
										399093,
										399100
									],
									[
										399338,
										399345
									],
									[
										399555,
										399562
									],
									[
										400025,
										400032
									],
									[
										400279,
										400286
									],
									[
										400527,
										400534
									],
									[
										400969,
										400976
									],
									[
										401252,
										401259
									],
									[
										401536,
										401543
									],
									[
										401798,
										401805
									],
									[
										401900,
										401907
									],
									[
										401993,
										402000
									],
									[
										402587,
										402594
									],
									[
										403285,
										403292
									],
									[
										403698,
										403705
									],
									[
										404001,
										404008
									],
									[
										404152,
										404159
									],
									[
										404433,
										404440
									],
									[
										404576,
										404583
									],
									[
										404697,
										404704
									],
									[
										404822,
										404829
									],
									[
										405050,
										405057
									],
									[
										405368,
										405375
									],
									[
										405902,
										405909
									],
									[
										405911,
										405918
									],
									[
										406164,
										406171
									],
									[
										406717,
										406724
									],
									[
										406726,
										406733
									],
									[
										407124,
										407131
									],
									[
										407176,
										407183
									],
									[
										407264,
										407271
									],
									[
										407488,
										407495
									],
									[
										407529,
										407536
									],
									[
										407584,
										407591
									],
									[
										407888,
										407895
									],
									[
										407942,
										407949
									],
									[
										408001,
										408008
									],
									[
										408032,
										408039
									],
									[
										408084,
										408091
									],
									[
										408146,
										408153
									],
									[
										408205,
										408212
									],
									[
										408236,
										408243
									],
									[
										408288,
										408295
									],
									[
										408533,
										408540
									],
									[
										408679,
										408686
									],
									[
										408881,
										408888
									],
									[
										408910,
										408917
									],
									[
										408964,
										408971
									],
									[
										409186,
										409193
									],
									[
										409523,
										409530
									],
									[
										409550,
										409557
									],
									[
										409622,
										409629
									],
									[
										409903,
										409910
									],
									[
										410199,
										410206
									],
									[
										410494,
										410501
									],
									[
										411049,
										411056
									],
									[
										411510,
										411517
									],
									[
										411886,
										411893
									],
									[
										411966,
										411973
									],
									[
										412045,
										412052
									],
									[
										412270,
										412277
									],
									[
										412557,
										412564
									],
									[
										412996,
										413003
									],
									[
										413340,
										413347
									],
									[
										413537,
										413544
									],
									[
										413592,
										413599
									],
									[
										413635,
										413642
									],
									[
										413691,
										413698
									],
									[
										413743,
										413750
									],
									[
										413963,
										413970
									],
									[
										414161,
										414168
									],
									[
										414549,
										414556
									],
									[
										414794,
										414801
									],
									[
										415072,
										415079
									],
									[
										415356,
										415363
									],
									[
										415764,
										415771
									],
									[
										416077,
										416084
									],
									[
										416392,
										416399
									],
									[
										416882,
										416889
									],
									[
										417264,
										417271
									],
									[
										417546,
										417553
									],
									[
										417911,
										417918
									],
									[
										418361,
										418368
									],
									[
										418885,
										418892
									],
									[
										419271,
										419278
									],
									[
										419672,
										419679
									],
									[
										419736,
										419743
									],
									[
										419808,
										419815
									],
									[
										420091,
										420098
									],
									[
										420122,
										420129
									],
									[
										420160,
										420167
									],
									[
										420412,
										420419
									],
									[
										420742,
										420749
									],
									[
										420777,
										420784
									],
									[
										421167,
										421174
									],
									[
										421484,
										421491
									],
									[
										421509,
										421516
									],
									[
										421585,
										421592
									],
									[
										421843,
										421850
									],
									[
										421870,
										421877
									],
									[
										422131,
										422138
									],
									[
										422493,
										422500
									],
									[
										422839,
										422846
									],
									[
										423278,
										423285
									],
									[
										423739,
										423746
									],
									[
										423986,
										423993
									],
									[
										424298,
										424305
									],
									[
										424386,
										424393
									],
									[
										424879,
										424886
									],
									[
										425308,
										425315
									],
									[
										425705,
										425712
									],
									[
										425939,
										425946
									],
									[
										426184,
										426191
									],
									[
										426411,
										426418
									],
									[
										426443,
										426450
									],
									[
										426901,
										426908
									],
									[
										427211,
										427218
									],
									[
										427489,
										427496
									],
									[
										427565,
										427572
									],
									[
										427830,
										427837
									],
									[
										427949,
										427956
									],
									[
										428233,
										428240
									],
									[
										428528,
										428535
									],
									[
										428736,
										428743
									],
									[
										428792,
										428799
									],
									[
										429115,
										429122
									],
									[
										429237,
										429244
									],
									[
										429788,
										429795
									],
									[
										430021,
										430028
									],
									[
										430139,
										430146
									],
									[
										430319,
										430326
									],
									[
										430458,
										430465
									],
									[
										430983,
										430990
									],
									[
										431085,
										431092
									],
									[
										431207,
										431214
									],
									[
										431545,
										431552
									],
									[
										431647,
										431654
									],
									[
										432025,
										432032
									],
									[
										432658,
										432665
									],
									[
										432911,
										432918
									],
									[
										433102,
										433109
									],
									[
										433585,
										433592
									],
									[
										433699,
										433706
									],
									[
										434110,
										434117
									],
									[
										434487,
										434494
									],
									[
										434798,
										434805
									],
									[
										435041,
										435048
									],
									[
										435165,
										435172
									],
									[
										435308,
										435315
									],
									[
										435542,
										435549
									],
									[
										436116,
										436123
									],
									[
										436651,
										436658
									],
									[
										437086,
										437093
									],
									[
										437421,
										437428
									],
									[
										437696,
										437703
									],
									[
										438051,
										438058
									],
									[
										438368,
										438375
									],
									[
										438703,
										438710
									],
									[
										439066,
										439073
									],
									[
										439357,
										439364
									],
									[
										439717,
										439724
									],
									[
										440032,
										440039
									],
									[
										440070,
										440077
									],
									[
										440470,
										440477
									],
									[
										440887,
										440894
									],
									[
										441507,
										441514
									],
									[
										441632,
										441639
									],
									[
										441936,
										441943
									],
									[
										442168,
										442175
									],
									[
										442194,
										442201
									],
									[
										442326,
										442333
									],
									[
										442361,
										442368
									],
									[
										442417,
										442424
									],
									[
										442450,
										442457
									],
									[
										442713,
										442720
									],
									[
										442794,
										442801
									],
									[
										442937,
										442944
									],
									[
										443132,
										443139
									],
									[
										443250,
										443257
									],
									[
										443526,
										443533
									],
									[
										443696,
										443703
									],
									[
										443833,
										443840
									],
									[
										444067,
										444074
									],
									[
										444414,
										444421
									],
									[
										444788,
										444795
									],
									[
										444816,
										444823
									],
									[
										445250,
										445257
									],
									[
										445655,
										445662
									],
									[
										445699,
										445706
									],
									[
										445734,
										445741
									],
									[
										445769,
										445776
									],
									[
										446085,
										446092
									],
									[
										446112,
										446119
									],
									[
										446507,
										446514
									],
									[
										446635,
										446642
									],
									[
										447004,
										447011
									],
									[
										447042,
										447049
									],
									[
										447540,
										447547
									],
									[
										447749,
										447756
									],
									[
										448266,
										448273
									],
									[
										448558,
										448565
									],
									[
										448719,
										448726
									],
									[
										448736,
										448743
									],
									[
										449106,
										449113
									],
									[
										449397,
										449404
									],
									[
										449657,
										449664
									],
									[
										449896,
										449903
									],
									[
										450207,
										450214
									],
									[
										450235,
										450242
									],
									[
										450523,
										450530
									],
									[
										450713,
										450720
									],
									[
										451017,
										451024
									],
									[
										451193,
										451200
									],
									[
										451444,
										451451
									],
									[
										451730,
										451737
									],
									[
										451898,
										451905
									],
									[
										452424,
										452431
									],
									[
										452780,
										452787
									],
									[
										452938,
										452945
									],
									[
										453343,
										453350
									],
									[
										453422,
										453429
									],
									[
										453761,
										453768
									],
									[
										453891,
										453898
									],
									[
										454222,
										454229
									],
									[
										454700,
										454707
									],
									[
										455018,
										455025
									],
									[
										455290,
										455297
									],
									[
										455489,
										455496
									],
									[
										455669,
										455676
									],
									[
										455846,
										455853
									],
									[
										455890,
										455897
									],
									[
										455900,
										455907
									],
									[
										455932,
										455939
									],
									[
										455989,
										455996
									],
									[
										456031,
										456038
									],
									[
										456086,
										456093
									],
									[
										456169,
										456176
									],
									[
										456271,
										456278
									],
									[
										456514,
										456521
									],
									[
										456719,
										456726
									],
									[
										456840,
										456847
									],
									[
										456973,
										456980
									],
									[
										457531,
										457538
									],
									[
										457646,
										457653
									],
									[
										457932,
										457939
									],
									[
										458193,
										458200
									],
									[
										458775,
										458782
									],
									[
										458940,
										458947
									],
									[
										459052,
										459059
									],
									[
										459325,
										459332
									],
									[
										459372,
										459379
									],
									[
										459408,
										459415
									],
									[
										459453,
										459460
									],
									[
										459548,
										459555
									],
									[
										459654,
										459661
									],
									[
										459662,
										459669
									],
									[
										459861,
										459868
									],
									[
										459978,
										459985
									],
									[
										460116,
										460123
									],
									[
										460186,
										460193
									],
									[
										460280,
										460287
									],
									[
										460385,
										460392
									],
									[
										460886,
										460893
									],
									[
										461318,
										461325
									],
									[
										461687,
										461694
									],
									[
										461981,
										461988
									],
									[
										462042,
										462049
									],
									[
										462392,
										462399
									],
									[
										462610,
										462617
									],
									[
										463095,
										463102
									],
									[
										463582,
										463589
									],
									[
										463643,
										463650
									],
									[
										464073,
										464080
									],
									[
										464534,
										464541
									],
									[
										464947,
										464954
									],
									[
										465401,
										465408
									],
									[
										465539,
										465546
									],
									[
										465904,
										465911
									],
									[
										466185,
										466192
									],
									[
										466471,
										466478
									],
									[
										466909,
										466916
									],
									[
										466945,
										466952
									],
									[
										467195,
										467202
									],
									[
										467586,
										467593
									],
									[
										467867,
										467874
									],
									[
										468188,
										468195
									],
									[
										468571,
										468578
									],
									[
										468881,
										468888
									],
									[
										469313,
										469320
									],
									[
										469484,
										469491
									],
									[
										469769,
										469776
									],
									[
										469949,
										469956
									],
									[
										470249,
										470256
									],
									[
										470359,
										470366
									],
									[
										470368,
										470375
									],
									[
										470849,
										470856
									],
									[
										470858,
										470865
									],
									[
										471308,
										471315
									],
									[
										471390,
										471397
									],
									[
										471649,
										471656
									],
									[
										471845,
										471852
									],
									[
										471930,
										471937
									],
									[
										471974,
										471981
									],
									[
										472081,
										472088
									],
									[
										472288,
										472295
									],
									[
										472747,
										472754
									],
									[
										473112,
										473119
									],
									[
										473384,
										473391
									],
									[
										473439,
										473446
									],
									[
										473673,
										473680
									],
									[
										473946,
										473953
									],
									[
										474209,
										474216
									],
									[
										474264,
										474271
									],
									[
										474619,
										474626
									],
									[
										474892,
										474899
									],
									[
										475202,
										475209
									],
									[
										475504,
										475511
									],
									[
										475930,
										475937
									],
									[
										476253,
										476260
									],
									[
										476573,
										476580
									],
									[
										477068,
										477075
									],
									[
										477264,
										477271
									],
									[
										477705,
										477712
									],
									[
										478113,
										478120
									],
									[
										478695,
										478702
									],
									[
										478874,
										478881
									],
									[
										479486,
										479493
									],
									[
										479753,
										479760
									],
									[
										480055,
										480062
									],
									[
										480717,
										480724
									],
									[
										481370,
										481377
									],
									[
										481614,
										481621
									],
									[
										482019,
										482026
									],
									[
										482408,
										482415
									],
									[
										482443,
										482450
									],
									[
										482751,
										482758
									],
									[
										483265,
										483272
									],
									[
										483801,
										483808
									],
									[
										484145,
										484152
									],
									[
										484443,
										484450
									],
									[
										484834,
										484841
									],
									[
										484888,
										484895
									],
									[
										484949,
										484956
									],
									[
										485168,
										485175
									],
									[
										485225,
										485232
									],
									[
										485582,
										485589
									],
									[
										485620,
										485627
									],
									[
										486000,
										486007
									],
									[
										486027,
										486034
									],
									[
										486522,
										486529
									],
									[
										486731,
										486738
									],
									[
										487178,
										487185
									],
									[
										487543,
										487550
									],
									[
										487756,
										487763
									],
									[
										487929,
										487936
									],
									[
										488206,
										488213
									],
									[
										488396,
										488403
									],
									[
										488551,
										488558
									],
									[
										488859,
										488866
									],
									[
										489208,
										489215
									],
									[
										489387,
										489394
									],
									[
										489786,
										489793
									],
									[
										489965,
										489972
									],
									[
										490526,
										490533
									],
									[
										490827,
										490834
									],
									[
										491129,
										491136
									],
									[
										491425,
										491432
									],
									[
										491782,
										491789
									],
									[
										492139,
										492146
									],
									[
										492488,
										492495
									],
									[
										492925,
										492932
									],
									[
										492951,
										492958
									],
									[
										493313,
										493320
									],
									[
										493369,
										493376
									],
									[
										493591,
										493598
									],
									[
										493647,
										493654
									],
									[
										493867,
										493874
									],
									[
										493919,
										493926
									],
									[
										494141,
										494148
									],
									[
										494194,
										494201
									],
									[
										494435,
										494442
									],
									[
										494490,
										494497
									],
									[
										494540,
										494547
									],
									[
										494825,
										494832
									],
									[
										494858,
										494865
									],
									[
										495218,
										495225
									],
									[
										495249,
										495256
									],
									[
										495604,
										495611
									],
									[
										495633,
										495640
									],
									[
										495664,
										495671
									],
									[
										496014,
										496021
									],
									[
										496050,
										496057
									],
									[
										496091,
										496098
									],
									[
										496146,
										496153
									],
									[
										496574,
										496581
									],
									[
										496617,
										496624
									],
									[
										496651,
										496658
									],
									[
										497102,
										497109
									],
									[
										497158,
										497165
									],
									[
										497219,
										497226
									],
									[
										497285,
										497292
									],
									[
										497539,
										497546
									],
									[
										497592,
										497599
									],
									[
										497653,
										497660
									],
									[
										497719,
										497726
									],
									[
										497984,
										497991
									],
									[
										498044,
										498051
									],
									[
										498105,
										498112
									],
									[
										498410,
										498417
									],
									[
										498471,
										498478
									],
									[
										498925,
										498932
									],
									[
										499281,
										499288
									],
									[
										499309,
										499316
									],
									[
										499562,
										499569
									],
									[
										499674,
										499681
									],
									[
										500002,
										500009
									],
									[
										500344,
										500351
									],
									[
										500592,
										500599
									],
									[
										501124,
										501131
									],
									[
										501220,
										501227
									],
									[
										501556,
										501563
									],
									[
										502020,
										502027
									],
									[
										502241,
										502248
									],
									[
										502700,
										502707
									],
									[
										502933,
										502940
									],
									[
										503153,
										503160
									],
									[
										503197,
										503204
									],
									[
										503212,
										503219
									],
									[
										503403,
										503410
									],
									[
										503511,
										503518
									],
									[
										503661,
										503668
									],
									[
										503846,
										503853
									],
									[
										504233,
										504240
									],
									[
										504452,
										504459
									],
									[
										504805,
										504812
									],
									[
										505042,
										505049
									],
									[
										505201,
										505208
									],
									[
										505332,
										505339
									],
									[
										505488,
										505495
									],
									[
										505614,
										505621
									],
									[
										505973,
										505980
									],
									[
										506354,
										506361
									],
									[
										506390,
										506397
									],
									[
										506876,
										506883
									],
									[
										507254,
										507261
									],
									[
										507290,
										507297
									],
									[
										507510,
										507517
									],
									[
										507551,
										507558
									],
									[
										507946,
										507953
									],
									[
										508194,
										508201
									],
									[
										508648,
										508655
									],
									[
										508979,
										508986
									],
									[
										509505,
										509512
									],
									[
										509740,
										509747
									],
									[
										509979,
										509986
									],
									[
										510026,
										510033
									],
									[
										510465,
										510472
									],
									[
										510750,
										510757
									],
									[
										511122,
										511129
									],
									[
										511381,
										511388
									],
									[
										511620,
										511627
									],
									[
										511667,
										511674
									],
									[
										511958,
										511965
									],
									[
										512249,
										512256
									],
									[
										512509,
										512516
									],
									[
										512769,
										512776
									],
									[
										513018,
										513025
									],
									[
										513329,
										513336
									],
									[
										513628,
										513635
									],
									[
										513807,
										513814
									],
									[
										513816,
										513823
									],
									[
										514110,
										514117
									],
									[
										514616,
										514623
									],
									[
										514881,
										514888
									],
									[
										515091,
										515098
									],
									[
										515143,
										515150
									],
									[
										515699,
										515706
									],
									[
										515968,
										515975
									],
									[
										516215,
										516222
									],
									[
										516256,
										516263
									],
									[
										516297,
										516304
									],
									[
										516555,
										516562
									],
									[
										516728,
										516735
									],
									[
										516789,
										516796
									],
									[
										516929,
										516936
									],
									[
										517107,
										517114
									],
									[
										517204,
										517211
									],
									[
										517309,
										517316
									],
									[
										517490,
										517497
									],
									[
										517679,
										517686
									],
									[
										518183,
										518190
									],
									[
										518192,
										518199
									],
									[
										518576,
										518583
									],
									[
										518585,
										518592
									],
									[
										518699,
										518706
									],
									[
										518978,
										518985
									],
									[
										519203,
										519210
									],
									[
										519632,
										519639
									],
									[
										520044,
										520051
									],
									[
										520147,
										520154
									],
									[
										520391,
										520398
									],
									[
										520498,
										520505
									],
									[
										520845,
										520852
									],
									[
										520897,
										520904
									],
									[
										520964,
										520971
									],
									[
										521182,
										521189
									],
									[
										521251,
										521258
									],
									[
										521359,
										521366
									],
									[
										521446,
										521453
									],
									[
										521845,
										521852
									],
									[
										522176,
										522183
									],
									[
										522240,
										522247
									],
									[
										522296,
										522303
									],
									[
										522348,
										522355
									],
									[
										522394,
										522401
									],
									[
										522663,
										522670
									],
									[
										522696,
										522703
									],
									[
										522943,
										522950
									],
									[
										523183,
										523190
									],
									[
										523191,
										523198
									],
									[
										523437,
										523444
									],
									[
										523637,
										523644
									],
									[
										523732,
										523739
									],
									[
										523839,
										523846
									],
									[
										524150,
										524157
									],
									[
										524207,
										524214
									],
									[
										524445,
										524452
									],
									[
										524495,
										524502
									],
									[
										524821,
										524828
									],
									[
										524852,
										524859
									],
									[
										525162,
										525169
									],
									[
										525493,
										525500
									],
									[
										525871,
										525878
									],
									[
										525902,
										525909
									],
									[
										526180,
										526187
									],
									[
										526463,
										526470
									],
									[
										526942,
										526949
									],
									[
										527377,
										527384
									],
									[
										527736,
										527743
									],
									[
										528080,
										528087
									],
									[
										528398,
										528405
									],
									[
										528694,
										528701
									],
									[
										528749,
										528756
									],
									[
										529024,
										529031
									],
									[
										529085,
										529092
									],
									[
										529142,
										529149
									],
									[
										529557,
										529564
									],
									[
										529713,
										529720
									],
									[
										530152,
										530159
									],
									[
										530525,
										530532
									],
									[
										530544,
										530551
									],
									[
										530960,
										530967
									],
									[
										531021,
										531028
									],
									[
										531299,
										531306
									],
									[
										531327,
										531334
									],
									[
										531494,
										531501
									],
									[
										531813,
										531820
									],
									[
										532130,
										532137
									],
									[
										532361,
										532368
									],
									[
										532404,
										532411
									],
									[
										532451,
										532458
									],
									[
										532530,
										532537
									],
									[
										532640,
										532647
									],
									[
										532801,
										532808
									],
									[
										532936,
										532943
									],
									[
										533029,
										533036
									],
									[
										533147,
										533154
									],
									[
										533186,
										533193
									],
									[
										533222,
										533229
									],
									[
										533303,
										533310
									],
									[
										533667,
										533674
									],
									[
										533800,
										533807
									],
									[
										533992,
										533999
									],
									[
										534141,
										534148
									],
									[
										534484,
										534491
									],
									[
										534697,
										534704
									],
									[
										534856,
										534863
									],
									[
										534897,
										534904
									],
									[
										535064,
										535071
									],
									[
										535477,
										535484
									],
									[
										535764,
										535771
									],
									[
										536055,
										536062
									],
									[
										536400,
										536407
									],
									[
										536857,
										536864
									],
									[
										536890,
										536897
									],
									[
										537233,
										537240
									],
									[
										537660,
										537667
									],
									[
										538048,
										538055
									],
									[
										538072,
										538079
									],
									[
										538321,
										538328
									],
									[
										538543,
										538550
									],
									[
										538841,
										538848
									],
									[
										538877,
										538884
									],
									[
										538912,
										538919
									],
									[
										539117,
										539124
									],
									[
										539178,
										539185
									],
									[
										539244,
										539251
									],
									[
										539642,
										539649
									],
									[
										539980,
										539987
									],
									[
										540252,
										540259
									],
									[
										540269,
										540276
									],
									[
										540449,
										540456
									],
									[
										540624,
										540631
									],
									[
										540788,
										540795
									],
									[
										540995,
										541002
									],
									[
										541199,
										541206
									],
									[
										541390,
										541397
									],
									[
										541576,
										541583
									],
									[
										541763,
										541770
									],
									[
										542104,
										542111
									],
									[
										542365,
										542372
									],
									[
										542484,
										542491
									],
									[
										542621,
										542628
									],
									[
										542871,
										542878
									],
									[
										542934,
										542941
									],
									[
										543001,
										543008
									],
									[
										543050,
										543057
									],
									[
										543553,
										543560
									],
									[
										543714,
										543721
									],
									[
										543723,
										543730
									],
									[
										544082,
										544089
									],
									[
										544091,
										544098
									],
									[
										544438,
										544445
									],
									[
										544464,
										544471
									],
									[
										544733,
										544740
									],
									[
										545101,
										545108
									],
									[
										545505,
										545512
									],
									[
										546262,
										546269
									],
									[
										546736,
										546743
									],
									[
										547340,
										547347
									],
									[
										547946,
										547953
									],
									[
										548360,
										548367
									],
									[
										548427,
										548434
									],
									[
										548735,
										548742
									],
									[
										548960,
										548967
									],
									[
										549498,
										549505
									],
									[
										549584,
										549591
									],
									[
										550116,
										550123
									],
									[
										550220,
										550227
									],
									[
										550420,
										550427
									],
									[
										550809,
										550816
									],
									[
										550950,
										550957
									],
									[
										551183,
										551190
									],
									[
										551505,
										551512
									],
									[
										551829,
										551836
									],
									[
										552255,
										552262
									],
									[
										552590,
										552597
									],
									[
										552934,
										552941
									],
									[
										552978,
										552985
									],
									[
										552988,
										552995
									],
									[
										553208,
										553215
									],
									[
										553373,
										553380
									],
									[
										553639,
										553646
									],
									[
										553875,
										553882
									],
									[
										554117,
										554124
									],
									[
										554163,
										554170
									],
									[
										554351,
										554358
									],
									[
										554566,
										554573
									],
									[
										554801,
										554808
									],
									[
										554816,
										554823
									],
									[
										555006,
										555013
									],
									[
										555021,
										555028
									],
									[
										555201,
										555208
									],
									[
										555425,
										555432
									],
									[
										555565,
										555572
									],
									[
										555711,
										555718
									],
									[
										555947,
										555954
									],
									[
										556100,
										556107
									],
									[
										556332,
										556339
									],
									[
										556475,
										556482
									],
									[
										556618,
										556625
									],
									[
										556774,
										556781
									],
									[
										556991,
										556998
									],
									[
										557133,
										557140
									],
									[
										557271,
										557278
									],
									[
										557529,
										557536
									],
									[
										557878,
										557885
									],
									[
										558322,
										558329
									],
									[
										558633,
										558640
									],
									[
										559024,
										559031
									],
									[
										559215,
										559222
									],
									[
										559508,
										559515
									],
									[
										559754,
										559761
									],
									[
										559831,
										559838
									],
									[
										560078,
										560085
									],
									[
										560196,
										560203
									],
									[
										560292,
										560299
									],
									[
										560394,
										560401
									],
									[
										560496,
										560503
									],
									[
										560600,
										560607
									],
									[
										560706,
										560713
									],
									[
										561036,
										561043
									],
									[
										561160,
										561167
									],
									[
										561403,
										561410
									],
									[
										561503,
										561510
									],
									[
										561729,
										561736
									],
									[
										561984,
										561991
									],
									[
										562178,
										562185
									],
									[
										562258,
										562265
									],
									[
										562511,
										562518
									],
									[
										562524,
										562531
									],
									[
										562661,
										562668
									],
									[
										562670,
										562677
									],
									[
										563088,
										563095
									],
									[
										563097,
										563104
									],
									[
										563475,
										563482
									],
									[
										563484,
										563491
									],
									[
										563667,
										563674
									],
									[
										563676,
										563683
									],
									[
										564117,
										564124
									],
									[
										564394,
										564401
									],
									[
										564943,
										564950
									],
									[
										565246,
										565253
									],
									[
										565488,
										565495
									],
									[
										565733,
										565740
									],
									[
										566092,
										566099
									],
									[
										566543,
										566550
									],
									[
										566571,
										566578
									],
									[
										566991,
										566998
									],
									[
										567225,
										567232
									],
									[
										567530,
										567537
									],
									[
										567789,
										567796
									],
									[
										567972,
										567979
									],
									[
										568337,
										568344
									],
									[
										568580,
										568587
									],
									[
										569047,
										569054
									],
									[
										569335,
										569342
									],
									[
										569613,
										569620
									],
									[
										569908,
										569915
									],
									[
										570117,
										570124
									],
									[
										570580,
										570587
									],
									[
										570782,
										570789
									],
									[
										571216,
										571223
									],
									[
										571548,
										571555
									],
									[
										571575,
										571582
									],
									[
										571958,
										571965
									],
									[
										572222,
										572229
									],
									[
										572531,
										572538
									],
									[
										572619,
										572626
									],
									[
										573135,
										573142
									],
									[
										573412,
										573419
									],
									[
										573477,
										573484
									],
									[
										573790,
										573797
									],
									[
										573879,
										573886
									],
									[
										574163,
										574170
									],
									[
										574545,
										574552
									],
									[
										574573,
										574580
									],
									[
										574904,
										574911
									],
									[
										575262,
										575269
									],
									[
										575300,
										575307
									],
									[
										575599,
										575606
									],
									[
										575633,
										575640
									],
									[
										575949,
										575956
									],
									[
										576308,
										576315
									],
									[
										576624,
										576631
									],
									[
										577008,
										577015
									],
									[
										577387,
										577394
									],
									[
										577866,
										577873
									],
									[
										578245,
										578252
									],
									[
										578625,
										578632
									],
									[
										579002,
										579009
									],
									[
										579020,
										579027
									],
									[
										579376,
										579383
									],
									[
										579828,
										579835
									],
									[
										580262,
										580269
									],
									[
										580459,
										580466
									],
									[
										580564,
										580571
									],
									[
										581600,
										581607
									],
									[
										582215,
										582222
									],
									[
										582821,
										582828
									],
									[
										583256,
										583263
									],
									[
										583772,
										583779
									],
									[
										583796,
										583803
									],
									[
										583828,
										583835
									],
									[
										583990,
										583997
									],
									[
										584380,
										584387
									],
									[
										584714,
										584721
									],
									[
										584953,
										584960
									],
									[
										584992,
										584999
									],
									[
										585068,
										585075
									],
									[
										585476,
										585483
									],
									[
										585829,
										585836
									],
									[
										585937,
										585944
									],
									[
										586106,
										586113
									],
									[
										586408,
										586415
									],
									[
										586461,
										586468
									],
									[
										586890,
										586897
									],
									[
										587331,
										587338
									],
									[
										587484,
										587491
									],
									[
										587598,
										587605
									],
									[
										587707,
										587714
									],
									[
										587949,
										587956
									],
									[
										588080,
										588087
									],
									[
										588187,
										588194
									],
									[
										588505,
										588512
									],
									[
										588775,
										588782
									],
									[
										589092,
										589099
									],
									[
										589105,
										589112
									],
									[
										589500,
										589507
									],
									[
										589842,
										589849
									],
									[
										589977,
										589984
									],
									[
										590126,
										590133
									],
									[
										590213,
										590220
									],
									[
										590295,
										590302
									],
									[
										590559,
										590566
									],
									[
										590725,
										590732
									],
									[
										591070,
										591077
									],
									[
										591269,
										591276
									],
									[
										591611,
										591618
									],
									[
										591912,
										591919
									],
									[
										592232,
										592239
									],
									[
										592374,
										592381
									],
									[
										592434,
										592441
									],
									[
										592632,
										592639
									],
									[
										592770,
										592777
									],
									[
										592834,
										592841
									],
									[
										593109,
										593116
									],
									[
										593463,
										593470
									],
									[
										593763,
										593770
									],
									[
										594039,
										594046
									],
									[
										594223,
										594230
									],
									[
										594294,
										594301
									],
									[
										594596,
										594603
									],
									[
										594865,
										594872
									],
									[
										594878,
										594885
									],
									[
										595171,
										595178
									],
									[
										595184,
										595191
									],
									[
										595563,
										595570
									],
									[
										595762,
										595769
									],
									[
										595783,
										595790
									],
									[
										596057,
										596064
									],
									[
										596405,
										596412
									],
									[
										596489,
										596496
									],
									[
										596836,
										596843
									],
									[
										596894,
										596901
									],
									[
										597087,
										597094
									],
									[
										597188,
										597195
									],
									[
										597310,
										597317
									],
									[
										597415,
										597422
									],
									[
										597628,
										597635
									],
									[
										597693,
										597700
									],
									[
										597896,
										597903
									],
									[
										598192,
										598199
									],
									[
										598643,
										598650
									],
									[
										598669,
										598676
									],
									[
										598679,
										598686
									],
									[
										598712,
										598719
									],
									[
										598789,
										598796
									],
									[
										599327,
										599334
									],
									[
										599453,
										599460
									],
									[
										599826,
										599833
									],
									[
										600152,
										600159
									],
									[
										600406,
										600413
									],
									[
										600480,
										600487
									],
									[
										600904,
										600911
									],
									[
										601045,
										601052
									],
									[
										601090,
										601097
									],
									[
										601132,
										601139
									],
									[
										601578,
										601585
									],
									[
										601997,
										602004
									],
									[
										602377,
										602384
									],
									[
										602570,
										602577
									],
									[
										602600,
										602607
									],
									[
										602615,
										602622
									],
									[
										602746,
										602753
									],
									[
										602754,
										602761
									],
									[
										602925,
										602932
									],
									[
										602966,
										602973
									],
									[
										602994,
										603001
									],
									[
										603281,
										603288
									],
									[
										603560,
										603567
									],
									[
										603603,
										603610
									],
									[
										603636,
										603643
									],
									[
										603693,
										603700
									],
									[
										603796,
										603803
									],
									[
										604112,
										604119
									],
									[
										604383,
										604390
									],
									[
										604762,
										604769
									],
									[
										605187,
										605194
									],
									[
										605396,
										605403
									],
									[
										605527,
										605534
									],
									[
										605718,
										605725
									],
									[
										605880,
										605887
									],
									[
										606150,
										606157
									],
									[
										606383,
										606390
									],
									[
										606391,
										606398
									],
									[
										606679,
										606686
									],
									[
										606887,
										606894
									],
									[
										607048,
										607055
									],
									[
										607148,
										607155
									],
									[
										607349,
										607356
									],
									[
										607685,
										607692
									],
									[
										607989,
										607996
									],
									[
										608258,
										608265
									],
									[
										608711,
										608718
									],
									[
										609115,
										609122
									],
									[
										609434,
										609441
									],
									[
										609862,
										609869
									],
									[
										610249,
										610256
									],
									[
										610486,
										610493
									],
									[
										610857,
										610864
									],
									[
										611214,
										611221
									],
									[
										611428,
										611435
									],
									[
										611490,
										611497
									],
									[
										611535,
										611542
									],
									[
										611587,
										611594
									],
									[
										611972,
										611979
									],
									[
										612238,
										612245
									],
									[
										612384,
										612391
									],
									[
										612737,
										612744
									],
									[
										613149,
										613156
									],
									[
										613206,
										613213
									],
									[
										613377,
										613384
									],
									[
										613434,
										613441
									],
									[
										613750,
										613757
									],
									[
										613854,
										613861
									],
									[
										614181,
										614188
									],
									[
										614285,
										614292
									],
									[
										614551,
										614558
									],
									[
										614810,
										614817
									],
									[
										614941,
										614948
									],
									[
										615065,
										615072
									],
									[
										615457,
										615464
									],
									[
										615687,
										615694
									],
									[
										616138,
										616145
									],
									[
										616524,
										616531
									],
									[
										616913,
										616920
									],
									[
										617232,
										617239
									],
									[
										617281,
										617288
									],
									[
										617337,
										617344
									],
									[
										617376,
										617383
									],
									[
										617495,
										617502
									],
									[
										617689,
										617696
									],
									[
										617862,
										617869
									],
									[
										618159,
										618166
									],
									[
										618468,
										618475
									],
									[
										618484,
										618491
									],
									[
										618669,
										618676
									],
									[
										618692,
										618699
									],
									[
										618872,
										618879
									],
									[
										618895,
										618902
									],
									[
										619071,
										619078
									],
									[
										619129,
										619136
									],
									[
										619145,
										619152
									],
									[
										619258,
										619265
									],
									[
										619389,
										619396
									],
									[
										619399,
										619406
									],
									[
										619439,
										619446
									],
									[
										619462,
										619469
									],
									[
										619619,
										619626
									],
									[
										619802,
										619809
									],
									[
										620024,
										620031
									],
									[
										620273,
										620280
									],
									[
										620482,
										620489
									],
									[
										620499,
										620506
									],
									[
										620836,
										620843
									],
									[
										621457,
										621464
									],
									[
										621609,
										621616
									],
									[
										621766,
										621773
									],
									[
										622106,
										622113
									],
									[
										622334,
										622341
									],
									[
										622683,
										622690
									],
									[
										622739,
										622746
									],
									[
										623162,
										623169
									],
									[
										623220,
										623227
									],
									[
										623272,
										623279
									],
									[
										623516,
										623523
									],
									[
										623574,
										623581
									],
									[
										623631,
										623638
									],
									[
										623877,
										623884
									],
									[
										623937,
										623944
									],
									[
										623989,
										623996
									],
									[
										624224,
										624231
									],
									[
										624507,
										624514
									],
									[
										624567,
										624574
									],
									[
										625051,
										625058
									],
									[
										625167,
										625174
									],
									[
										625279,
										625286
									],
									[
										625390,
										625397
									],
									[
										625511,
										625518
									],
									[
										625569,
										625576
									],
									[
										625612,
										625619
									],
									[
										625996,
										626003
									],
									[
										626236,
										626243
									],
									[
										626652,
										626659
									],
									[
										626958,
										626965
									],
									[
										627250,
										627257
									],
									[
										627569,
										627576
									],
									[
										628073,
										628080
									],
									[
										628131,
										628138
									],
									[
										628183,
										628190
									],
									[
										628240,
										628247
									],
									[
										628290,
										628297
									],
									[
										628565,
										628572
									],
									[
										628625,
										628632
									],
									[
										628668,
										628675
									],
									[
										628720,
										628727
									],
									[
										628777,
										628784
									],
									[
										629074,
										629081
									],
									[
										629132,
										629139
									],
									[
										629184,
										629191
									],
									[
										629455,
										629462
									],
									[
										630007,
										630014
									],
									[
										630316,
										630323
									],
									[
										630562,
										630569
									],
									[
										630877,
										630884
									],
									[
										631156,
										631163
									],
									[
										631688,
										631695
									],
									[
										631724,
										631731
									],
									[
										632133,
										632140
									],
									[
										632393,
										632400
									],
									[
										632849,
										632856
									],
									[
										632957,
										632964
									],
									[
										633183,
										633190
									],
									[
										633413,
										633420
									],
									[
										634011,
										634018
									],
									[
										634042,
										634049
									],
									[
										634358,
										634365
									],
									[
										634671,
										634678
									],
									[
										634747,
										634754
									],
									[
										634828,
										634835
									],
									[
										634893,
										634900
									],
									[
										635245,
										635252
									],
									[
										635281,
										635288
									],
									[
										635560,
										635567
									],
									[
										635662,
										635669
									],
									[
										635742,
										635749
									],
									[
										635987,
										635994
									],
									[
										636350,
										636357
									],
									[
										636421,
										636428
									],
									[
										636733,
										636740
									],
									[
										636984,
										636991
									],
									[
										637401,
										637408
									],
									[
										637714,
										637721
									],
									[
										637831,
										637838
									],
									[
										637965,
										637972
									],
									[
										638047,
										638054
									],
									[
										638102,
										638109
									],
									[
										638226,
										638233
									],
									[
										638380,
										638387
									],
									[
										638437,
										638444
									],
									[
										638602,
										638609
									],
									[
										638701,
										638708
									],
									[
										638852,
										638859
									],
									[
										639172,
										639179
									],
									[
										639202,
										639209
									],
									[
										639583,
										639590
									],
									[
										639916,
										639923
									],
									[
										640178,
										640185
									],
									[
										640401,
										640408
									],
									[
										640745,
										640752
									],
									[
										640898,
										640905
									],
									[
										641086,
										641093
									],
									[
										641370,
										641377
									],
									[
										641489,
										641496
									],
									[
										641605,
										641612
									],
									[
										641640,
										641647
									],
									[
										641683,
										641690
									],
									[
										641704,
										641711
									],
									[
										641727,
										641734
									],
									[
										641928,
										641935
									],
									[
										642067,
										642074
									],
									[
										642242,
										642249
									],
									[
										642335,
										642342
									],
									[
										642567,
										642574
									],
									[
										642624,
										642631
									],
									[
										642869,
										642876
									],
									[
										643343,
										643350
									],
									[
										643367,
										643374
									],
									[
										643394,
										643401
									],
									[
										643675,
										643682
									],
									[
										643901,
										643908
									],
									[
										644082,
										644089
									],
									[
										644395,
										644402
									],
									[
										644471,
										644478
									],
									[
										644552,
										644559
									],
									[
										644817,
										644824
									],
									[
										645068,
										645075
									],
									[
										645221,
										645228
									],
									[
										645371,
										645378
									],
									[
										645513,
										645520
									],
									[
										645725,
										645732
									],
									[
										645746,
										645753
									],
									[
										645991,
										645998
									],
									[
										646233,
										646240
									],
									[
										646484,
										646491
									],
									[
										646865,
										646872
									],
									[
										646901,
										646908
									],
									[
										647136,
										647143
									],
									[
										647172,
										647179
									],
									[
										647416,
										647423
									],
									[
										647452,
										647459
									],
									[
										647677,
										647684
									],
									[
										647709,
										647716
									],
									[
										648047,
										648054
									],
									[
										648608,
										648615
									],
									[
										649041,
										649048
									],
									[
										649466,
										649473
									],
									[
										649940,
										649947
									],
									[
										650549,
										650556
									],
									[
										650935,
										650942
									],
									[
										651117,
										651124
									],
									[
										651444,
										651451
									],
									[
										651525,
										651532
									],
									[
										651675,
										651682
									],
									[
										651852,
										651859
									],
									[
										652042,
										652049
									],
									[
										652145,
										652152
									],
									[
										652484,
										652491
									],
									[
										652617,
										652624
									],
									[
										652949,
										652956
									],
									[
										653454,
										653461
									],
									[
										653746,
										653753
									],
									[
										653931,
										653938
									],
									[
										654027,
										654034
									],
									[
										654322,
										654329
									],
									[
										654491,
										654498
									],
									[
										654617,
										654624
									],
									[
										654876,
										654883
									],
									[
										654987,
										654994
									],
									[
										655002,
										655009
									],
									[
										655153,
										655160
									],
									[
										655463,
										655470
									],
									[
										655960,
										655967
									],
									[
										656184,
										656191
									],
									[
										656418,
										656425
									],
									[
										656779,
										656786
									],
									[
										657140,
										657147
									],
									[
										657714,
										657721
									],
									[
										658233,
										658240
									],
									[
										658478,
										658485
									],
									[
										658490,
										658497
									],
									[
										658820,
										658827
									],
									[
										659072,
										659079
									],
									[
										659317,
										659324
									],
									[
										659354,
										659361
									],
									[
										659672,
										659679
									],
									[
										659957,
										659964
									],
									[
										660380,
										660387
									],
									[
										660797,
										660804
									],
									[
										661219,
										661226
									],
									[
										661741,
										661748
									],
									[
										662057,
										662064
									],
									[
										662329,
										662336
									],
									[
										662401,
										662408
									],
									[
										662644,
										662651
									],
									[
										662716,
										662723
									],
									[
										662960,
										662967
									],
									[
										663032,
										663039
									],
									[
										663102,
										663109
									],
									[
										663355,
										663362
									],
									[
										663603,
										663610
									],
									[
										663917,
										663924
									],
									[
										664158,
										664165
									],
									[
										664396,
										664403
									],
									[
										664635,
										664642
									],
									[
										664868,
										664875
									],
									[
										665050,
										665057
									],
									[
										665229,
										665236
									],
									[
										665409,
										665416
									],
									[
										665655,
										665662
									],
									[
										665758,
										665765
									],
									[
										666142,
										666149
									],
									[
										666438,
										666445
									],
									[
										666790,
										666797
									],
									[
										667196,
										667203
									],
									[
										667224,
										667231
									],
									[
										667581,
										667588
									],
									[
										667607,
										667614
									],
									[
										668063,
										668070
									],
									[
										668093,
										668100
									],
									[
										668120,
										668127
									],
									[
										668148,
										668155
									],
									[
										668179,
										668186
									],
									[
										668488,
										668495
									],
									[
										668726,
										668733
									],
									[
										669175,
										669182
									],
									[
										669453,
										669460
									],
									[
										669737,
										669744
									],
									[
										669960,
										669967
									],
									[
										670173,
										670180
									],
									[
										670562,
										670569
									],
									[
										670764,
										670771
									],
									[
										670914,
										670921
									],
									[
										671178,
										671185
									],
									[
										671437,
										671444
									],
									[
										671720,
										671727
									],
									[
										672044,
										672051
									],
									[
										672175,
										672182
									],
									[
										672513,
										672520
									],
									[
										672615,
										672622
									],
									[
										672846,
										672853
									],
									[
										672893,
										672900
									],
									[
										672929,
										672936
									],
									[
										673027,
										673034
									],
									[
										673158,
										673165
									],
									[
										673444,
										673451
									],
									[
										673629,
										673636
									],
									[
										673907,
										673914
									],
									[
										674152,
										674159
									],
									[
										674550,
										674557
									],
									[
										674643,
										674650
									],
									[
										674696,
										674703
									],
									[
										674948,
										674955
									],
									[
										675443,
										675450
									],
									[
										675927,
										675934
									],
									[
										676178,
										676185
									],
									[
										676519,
										676526
									],
									[
										676921,
										676928
									],
									[
										677523,
										677530
									],
									[
										678128,
										678135
									],
									[
										678549,
										678556
									],
									[
										678583,
										678590
									],
									[
										678838,
										678845
									],
									[
										679318,
										679325
									],
									[
										679923,
										679930
									],
									[
										680148,
										680155
									],
									[
										680193,
										680200
									],
									[
										680526,
										680533
									],
									[
										680566,
										680573
									],
									[
										680896,
										680903
									],
									[
										681252,
										681259
									],
									[
										681718,
										681725
									],
									[
										682048,
										682055
									],
									[
										682345,
										682352
									],
									[
										682713,
										682720
									],
									[
										682988,
										682995
									],
									[
										683043,
										683050
									],
									[
										683341,
										683348
									],
									[
										683408,
										683415
									],
									[
										683457,
										683464
									],
									[
										683517,
										683524
									],
									[
										683843,
										683850
									],
									[
										684160,
										684167
									],
									[
										684488,
										684495
									],
									[
										684797,
										684804
									],
									[
										684998,
										685005
									],
									[
										685268,
										685275
									],
									[
										685477,
										685484
									],
									[
										685508,
										685515
									],
									[
										685641,
										685648
									],
									[
										685765,
										685772
									],
									[
										686215,
										686222
									],
									[
										686489,
										686496
									],
									[
										686565,
										686572
									],
									[
										686813,
										686820
									],
									[
										687076,
										687083
									],
									[
										687605,
										687612
									],
									[
										687965,
										687972
									],
									[
										688332,
										688339
									],
									[
										688772,
										688779
									],
									[
										689244,
										689251
									],
									[
										689619,
										689626
									],
									[
										689896,
										689903
									],
									[
										690022,
										690029
									],
									[
										690192,
										690199
									],
									[
										690703,
										690710
									],
									[
										691077,
										691084
									],
									[
										691375,
										691382
									],
									[
										691700,
										691707
									],
									[
										692221,
										692228
									],
									[
										692587,
										692594
									],
									[
										692805,
										692812
									],
									[
										693088,
										693095
									],
									[
										693510,
										693517
									],
									[
										693792,
										693799
									],
									[
										694208,
										694215
									],
									[
										694417,
										694424
									],
									[
										694958,
										694965
									],
									[
										695000,
										695007
									],
									[
										695188,
										695195
									],
									[
										695424,
										695431
									],
									[
										695749,
										695756
									],
									[
										695994,
										696001
									],
									[
										696185,
										696192
									],
									[
										696329,
										696336
									],
									[
										696819,
										696826
									],
									[
										697330,
										697337
									],
									[
										697857,
										697864
									],
									[
										698442,
										698449
									],
									[
										698898,
										698905
									],
									[
										699321,
										699328
									],
									[
										699763,
										699770
									],
									[
										699834,
										699841
									],
									[
										700048,
										700055
									],
									[
										700099,
										700106
									],
									[
										700422,
										700429
									],
									[
										700558,
										700565
									],
									[
										700769,
										700776
									],
									[
										701056,
										701063
									],
									[
										701431,
										701438
									],
									[
										701772,
										701779
									],
									[
										701823,
										701830
									],
									[
										701851,
										701858
									],
									[
										702071,
										702078
									],
									[
										702163,
										702170
									],
									[
										702394,
										702401
									],
									[
										702647,
										702654
									],
									[
										702751,
										702758
									],
									[
										702853,
										702860
									],
									[
										703128,
										703135
									],
									[
										703364,
										703371
									],
									[
										703611,
										703618
									],
									[
										703766,
										703773
									],
									[
										704076,
										704083
									],
									[
										704553,
										704560
									],
									[
										704744,
										704751
									],
									[
										704927,
										704934
									],
									[
										705284,
										705291
									],
									[
										705574,
										705581
									],
									[
										705685,
										705692
									],
									[
										706064,
										706071
									],
									[
										706496,
										706503
									],
									[
										706936,
										706943
									],
									[
										707363,
										707370
									],
									[
										707620,
										707627
									],
									[
										707865,
										707872
									],
									[
										708177,
										708184
									],
									[
										708369,
										708376
									],
									[
										708748,
										708755
									],
									[
										709164,
										709171
									],
									[
										709591,
										709598
									],
									[
										709941,
										709948
									],
									[
										710292,
										710299
									],
									[
										710658,
										710665
									],
									[
										711081,
										711088
									],
									[
										711851,
										711858
									],
									[
										712269,
										712276
									],
									[
										712651,
										712658
									],
									[
										712875,
										712882
									],
									[
										713120,
										713127
									],
									[
										713321,
										713328
									],
									[
										713568,
										713575
									],
									[
										713738,
										713745
									],
									[
										713826,
										713833
									],
									[
										714016,
										714023
									],
									[
										714068,
										714075
									],
									[
										714132,
										714139
									],
									[
										714454,
										714461
									],
									[
										714489,
										714496
									],
									[
										714544,
										714551
									],
									[
										714580,
										714587
									],
									[
										714691,
										714698
									],
									[
										714795,
										714802
									],
									[
										715084,
										715091
									],
									[
										715389,
										715396
									],
									[
										715997,
										716004
									],
									[
										716269,
										716276
									],
									[
										716563,
										716570
									],
									[
										716646,
										716653
									],
									[
										716939,
										716946
									],
									[
										717150,
										717157
									],
									[
										717316,
										717323
									],
									[
										717574,
										717581
									],
									[
										717889,
										717896
									],
									[
										718197,
										718204
									],
									[
										718466,
										718473
									],
									[
										718629,
										718636
									],
									[
										718902,
										718909
									],
									[
										719101,
										719108
									],
									[
										719376,
										719383
									],
									[
										719745,
										719752
									],
									[
										719981,
										719988
									],
									[
										720228,
										720235
									],
									[
										720255,
										720262
									],
									[
										720406,
										720413
									],
									[
										720523,
										720530
									],
									[
										720772,
										720779
									],
									[
										721112,
										721119
									],
									[
										721165,
										721172
									],
									[
										721387,
										721394
									],
									[
										721440,
										721447
									],
									[
										721669,
										721676
									],
									[
										721722,
										721729
									],
									[
										722156,
										722163
									],
									[
										722378,
										722385
									],
									[
										722947,
										722954
									],
									[
										723039,
										723046
									],
									[
										723425,
										723432
									],
									[
										723677,
										723684
									],
									[
										724226,
										724233
									],
									[
										724726,
										724733
									],
									[
										725190,
										725197
									],
									[
										725217,
										725224
									],
									[
										725597,
										725604
									],
									[
										725873,
										725880
									],
									[
										725906,
										725913
									],
									[
										726160,
										726167
									],
									[
										726669,
										726676
									],
									[
										727122,
										727129
									],
									[
										727527,
										727534
									],
									[
										727998,
										728005
									],
									[
										728614,
										728621
									],
									[
										728832,
										728839
									],
									[
										729298,
										729305
									],
									[
										729656,
										729663
									],
									[
										730064,
										730071
									],
									[
										730415,
										730422
									],
									[
										730859,
										730866
									],
									[
										731169,
										731176
									],
									[
										731551,
										731558
									],
									[
										731980,
										731987
									],
									[
										732218,
										732225
									],
									[
										732385,
										732392
									],
									[
										732661,
										732668
									],
									[
										732705,
										732712
									],
									[
										732826,
										732833
									],
									[
										733182,
										733189
									],
									[
										733509,
										733516
									],
									[
										733898,
										733905
									],
									[
										733956,
										733963
									],
									[
										734008,
										734015
									],
									[
										734306,
										734313
									],
									[
										734364,
										734371
									],
									[
										734668,
										734675
									],
									[
										735028,
										735035
									],
									[
										735084,
										735091
									],
									[
										735382,
										735389
									],
									[
										735602,
										735609
									],
									[
										735644,
										735651
									],
									[
										735995,
										736002
									],
									[
										736390,
										736397
									],
									[
										736790,
										736797
									],
									[
										736850,
										736857
									],
									[
										737089,
										737096
									],
									[
										737149,
										737156
									],
									[
										737553,
										737560
									],
									[
										738040,
										738047
									],
									[
										738281,
										738288
									],
									[
										738678,
										738685
									],
									[
										739056,
										739063
									],
									[
										739299,
										739306
									],
									[
										739696,
										739703
									],
									[
										739888,
										739895
									],
									[
										740244,
										740251
									],
									[
										740617,
										740624
									],
									[
										740730,
										740737
									],
									[
										740971,
										740978
									],
									[
										741283,
										741290
									],
									[
										741524,
										741531
									],
									[
										741663,
										741670
									],
									[
										741915,
										741922
									],
									[
										742254,
										742261
									],
									[
										742608,
										742615
									],
									[
										742937,
										742944
									],
									[
										743308,
										743315
									],
									[
										743329,
										743336
									],
									[
										743840,
										743847
									],
									[
										744185,
										744192
									],
									[
										744415,
										744422
									],
									[
										744598,
										744605
									],
									[
										744914,
										744921
									],
									[
										745269,
										745276
									],
									[
										745632,
										745639
									],
									[
										745912,
										745919
									],
									[
										746571,
										746578
									],
									[
										746747,
										746754
									],
									[
										747108,
										747115
									],
									[
										747523,
										747530
									],
									[
										747908,
										747915
									],
									[
										748270,
										748277
									],
									[
										748302,
										748309
									],
									[
										748594,
										748601
									],
									[
										748799,
										748806
									],
									[
										749085,
										749092
									],
									[
										749288,
										749295
									],
									[
										749395,
										749402
									],
									[
										749623,
										749630
									],
									[
										749718,
										749725
									],
									[
										749896,
										749903
									],
									[
										750075,
										750082
									],
									[
										750457,
										750464
									],
									[
										751379,
										751386
									],
									[
										751949,
										751956
									],
									[
										752114,
										752121
									],
									[
										752205,
										752212
									],
									[
										752596,
										752603
									],
									[
										752650,
										752657
									],
									[
										752950,
										752957
									],
									[
										753198,
										753205
									],
									[
										753247,
										753254
									],
									[
										753270,
										753277
									],
									[
										753485,
										753492
									],
									[
										753532,
										753539
									],
									[
										753568,
										753575
									],
									[
										753664,
										753671
									],
									[
										753788,
										753795
									],
									[
										753796,
										753803
									],
									[
										753842,
										753849
									],
									[
										753938,
										753945
									],
									[
										754175,
										754182
									],
									[
										754339,
										754346
									],
									[
										754603,
										754610
									],
									[
										754833,
										754840
									],
									[
										755064,
										755071
									],
									[
										755162,
										755169
									],
									[
										755383,
										755390
									],
									[
										755733,
										755740
									],
									[
										756457,
										756464
									],
									[
										756704,
										756711
									],
									[
										756901,
										756908
									],
									[
										756933,
										756940
									],
									[
										757213,
										757220
									],
									[
										757254,
										757261
									],
									[
										757497,
										757504
									],
									[
										757520,
										757527
									],
									[
										757767,
										757774
									],
									[
										758277,
										758284
									],
									[
										758798,
										758805
									],
									[
										759145,
										759152
									],
									[
										759561,
										759568
									],
									[
										759681,
										759688
									],
									[
										759717,
										759724
									],
									[
										759941,
										759948
									],
									[
										760031,
										760038
									],
									[
										760059,
										760066
									],
									[
										760187,
										760194
									],
									[
										760195,
										760202
									],
									[
										760439,
										760446
									],
									[
										760532,
										760539
									],
									[
										760816,
										760823
									],
									[
										761281,
										761288
									],
									[
										761557,
										761564
									],
									[
										762141,
										762148
									],
									[
										762350,
										762357
									],
									[
										762828,
										762835
									],
									[
										763050,
										763057
									],
									[
										763432,
										763439
									],
									[
										763626,
										763633
									],
									[
										763938,
										763945
									],
									[
										764342,
										764349
									],
									[
										764746,
										764753
									],
									[
										765228,
										765235
									],
									[
										765480,
										765487
									],
									[
										765712,
										765719
									],
									[
										765990,
										765997
									],
									[
										766222,
										766229
									],
									[
										766499,
										766506
									],
									[
										766731,
										766738
									],
									[
										766963,
										766970
									],
									[
										767234,
										767241
									],
									[
										767639,
										767646
									],
									[
										767871,
										767878
									],
									[
										768105,
										768112
									],
									[
										768339,
										768346
									],
									[
										768573,
										768580
									],
									[
										768806,
										768813
									],
									[
										769040,
										769047
									],
									[
										769320,
										769327
									],
									[
										769554,
										769561
									],
									[
										769785,
										769792
									],
									[
										770017,
										770024
									],
									[
										770249,
										770256
									],
									[
										770481,
										770488
									],
									[
										770642,
										770649
									],
									[
										770804,
										770811
									],
									[
										771072,
										771079
									],
									[
										771306,
										771313
									],
									[
										771540,
										771547
									],
									[
										771773,
										771780
									],
									[
										771996,
										772003
									],
									[
										772294,
										772301
									],
									[
										772555,
										772562
									],
									[
										772790,
										772797
									],
									[
										773023,
										773030
									],
									[
										773254,
										773261
									],
									[
										773522,
										773529
									],
									[
										773754,
										773761
									],
									[
										773984,
										773991
									],
									[
										774216,
										774223
									],
									[
										774447,
										774454
									],
									[
										774776,
										774783
									],
									[
										775009,
										775016
									],
									[
										775272,
										775279
									],
									[
										775506,
										775513
									],
									[
										775741,
										775748
									],
									[
										775970,
										775977
									],
									[
										776201,
										776208
									],
									[
										776432,
										776439
									],
									[
										776665,
										776672
									],
									[
										776897,
										776904
									],
									[
										777130,
										777137
									],
									[
										777361,
										777368
									],
									[
										777594,
										777601
									],
									[
										777827,
										777834
									],
									[
										778062,
										778069
									],
									[
										778275,
										778282
									],
									[
										778474,
										778481
									],
									[
										778673,
										778680
									],
									[
										779049,
										779056
									],
									[
										779317,
										779324
									],
									[
										779714,
										779721
									],
									[
										780167,
										780174
									],
									[
										780196,
										780203
									],
									[
										780633,
										780640
									],
									[
										780927,
										780934
									],
									[
										780967,
										780974
									],
									[
										781287,
										781294
									],
									[
										781836,
										781843
									],
									[
										782154,
										782161
									],
									[
										782188,
										782195
									],
									[
										782523,
										782530
									],
									[
										782849,
										782856
									],
									[
										782872,
										782879
									],
									[
										783127,
										783134
									],
									[
										783454,
										783461
									],
									[
										783733,
										783740
									],
									[
										784085,
										784092
									],
									[
										784115,
										784122
									],
									[
										784138,
										784145
									],
									[
										784418,
										784425
									],
									[
										785005,
										785012
									],
									[
										785283,
										785290
									],
									[
										785725,
										785732
									],
									[
										786020,
										786027
									],
									[
										786401,
										786408
									],
									[
										786911,
										786918
									],
									[
										787476,
										787483
									],
									[
										787548,
										787555
									],
									[
										787608,
										787615
									],
									[
										787945,
										787952
									],
									[
										788041,
										788048
									],
									[
										788256,
										788263
									],
									[
										788336,
										788343
									],
									[
										788464,
										788471
									],
									[
										788783,
										788790
									],
									[
										789103,
										789110
									],
									[
										789423,
										789430
									],
									[
										789743,
										789750
									],
									[
										790244,
										790251
									],
									[
										790482,
										790489
									],
									[
										790579,
										790586
									],
									[
										791023,
										791030
									],
									[
										791262,
										791269
									],
									[
										791535,
										791542
									],
									[
										791992,
										791999
									],
									[
										792453,
										792460
									],
									[
										792665,
										792672
									],
									[
										793105,
										793112
									],
									[
										793402,
										793409
									],
									[
										793658,
										793665
									],
									[
										793915,
										793922
									],
									[
										794230,
										794237
									],
									[
										794350,
										794357
									],
									[
										794380,
										794387
									],
									[
										794424,
										794431
									],
									[
										794447,
										794454
									],
									[
										794496,
										794503
									],
									[
										794574,
										794581
									],
									[
										794951,
										794958
									],
									[
										795202,
										795209
									],
									[
										795228,
										795235
									],
									[
										795365,
										795372
									],
									[
										795588,
										795595
									],
									[
										795755,
										795762
									],
									[
										796028,
										796035
									],
									[
										796075,
										796082
									],
									[
										796111,
										796118
									],
									[
										796301,
										796308
									],
									[
										796341,
										796348
									],
									[
										796451,
										796458
									],
									[
										796810,
										796817
									],
									[
										797100,
										797107
									],
									[
										797526,
										797533
									],
									[
										797780,
										797787
									],
									[
										797912,
										797919
									],
									[
										798031,
										798038
									],
									[
										798232,
										798239
									],
									[
										798304,
										798311
									],
									[
										798456,
										798463
									],
									[
										798779,
										798786
									],
									[
										798882,
										798889
									],
									[
										799137,
										799144
									],
									[
										799184,
										799191
									],
									[
										799220,
										799227
									],
									[
										799322,
										799329
									],
									[
										799362,
										799369
									],
									[
										799453,
										799460
									],
									[
										799481,
										799488
									],
									[
										799603,
										799610
									],
									[
										799929,
										799936
									],
									[
										800569,
										800576
									],
									[
										801008,
										801015
									],
									[
										801053,
										801060
									],
									[
										801141,
										801148
									],
									[
										801494,
										801501
									],
									[
										801616,
										801623
									],
									[
										801900,
										801907
									],
									[
										802239,
										802246
									],
									[
										802281,
										802288
									],
									[
										802416,
										802423
									],
									[
										802492,
										802499
									],
									[
										802542,
										802549
									],
									[
										802780,
										802787
									],
									[
										803154,
										803161
									],
									[
										803162,
										803169
									],
									[
										803417,
										803424
									],
									[
										803611,
										803618
									],
									[
										803729,
										803736
									],
									[
										804075,
										804082
									],
									[
										804236,
										804243
									],
									[
										804764,
										804771
									],
									[
										805134,
										805141
									],
									[
										805192,
										805199
									],
									[
										805443,
										805450
									],
									[
										805748,
										805755
									],
									[
										806022,
										806029
									],
									[
										806312,
										806319
									],
									[
										806586,
										806593
									],
									[
										806905,
										806912
									],
									[
										807229,
										807236
									],
									[
										807551,
										807558
									],
									[
										807898,
										807905
									],
									[
										808337,
										808344
									],
									[
										808395,
										808402
									],
									[
										808792,
										808799
									],
									[
										809221,
										809228
									],
									[
										809607,
										809614
									],
									[
										809892,
										809899
									],
									[
										810320,
										810327
									],
									[
										810688,
										810695
									],
									[
										811275,
										811282
									],
									[
										811541,
										811548
									],
									[
										811573,
										811580
									],
									[
										812094,
										812101
									],
									[
										812119,
										812126
									],
									[
										812383,
										812390
									],
									[
										812431,
										812438
									],
									[
										812486,
										812493
									],
									[
										812544,
										812551
									],
									[
										812843,
										812850
									],
									[
										812901,
										812908
									],
									[
										813121,
										813128
									],
									[
										813329,
										813336
									],
									[
										813730,
										813737
									],
									[
										813763,
										813770
									],
									[
										814491,
										814498
									],
									[
										814974,
										814981
									],
									[
										815648,
										815655
									],
									[
										816008,
										816015
									],
									[
										816204,
										816211
									],
									[
										816336,
										816343
									],
									[
										816455,
										816462
									],
									[
										816656,
										816663
									],
									[
										816728,
										816735
									],
									[
										816880,
										816887
									],
									[
										817242,
										817249
									],
									[
										817345,
										817352
									],
									[
										817643,
										817650
									],
									[
										817983,
										817990
									],
									[
										818135,
										818142
									],
									[
										818491,
										818498
									],
									[
										818947,
										818954
									],
									[
										819139,
										819146
									],
									[
										819291,
										819298
									],
									[
										819674,
										819681
									],
									[
										820003,
										820010
									],
									[
										820116,
										820123
									],
									[
										820209,
										820216
									],
									[
										820442,
										820449
									],
									[
										820571,
										820578
									],
									[
										820599,
										820606
									],
									[
										820627,
										820634
									],
									[
										820637,
										820644
									],
									[
										820667,
										820674
									],
									[
										820788,
										820795
									],
									[
										820796,
										820803
									],
									[
										820995,
										821002
									],
									[
										821045,
										821052
									],
									[
										821400,
										821407
									],
									[
										821762,
										821769
									],
									[
										821998,
										822005
									],
									[
										822169,
										822176
									],
									[
										822548,
										822555
									],
									[
										822556,
										822563
									],
									[
										822838,
										822845
									],
									[
										823043,
										823050
									],
									[
										823173,
										823180
									],
									[
										823467,
										823474
									],
									[
										823814,
										823821
									],
									[
										824121,
										824128
									],
									[
										824398,
										824405
									],
									[
										824691,
										824698
									],
									[
										824965,
										824972
									],
									[
										825286,
										825293
									],
									[
										825611,
										825618
									],
									[
										826024,
										826031
									],
									[
										826602,
										826609
									],
									[
										826761,
										826768
									],
									[
										827020,
										827027
									],
									[
										827451,
										827458
									],
									[
										827513,
										827520
									],
									[
										827820,
										827827
									],
									[
										827853,
										827860
									],
									[
										828219,
										828226
									],
									[
										828248,
										828255
									],
									[
										828275,
										828282
									],
									[
										828775,
										828782
									],
									[
										828799,
										828806
									],
									[
										828829,
										828836
									],
									[
										829161,
										829168
									],
									[
										829209,
										829216
									],
									[
										829263,
										829270
									],
									[
										829314,
										829321
									],
									[
										829372,
										829379
									],
									[
										829848,
										829855
									],
									[
										829873,
										829880
									],
									[
										829917,
										829924
									],
									[
										830321,
										830328
									],
									[
										830396,
										830403
									],
									[
										830469,
										830476
									],
									[
										830686,
										830693
									],
									[
										831196,
										831203
									],
									[
										831240,
										831247
									],
									[
										831354,
										831361
									],
									[
										831793,
										831800
									],
									[
										832068,
										832075
									],
									[
										832256,
										832263
									],
									[
										832697,
										832704
									],
									[
										833117,
										833124
									],
									[
										833552,
										833559
									],
									[
										833632,
										833639
									],
									[
										834100,
										834107
									],
									[
										834643,
										834650
									],
									[
										835028,
										835035
									],
									[
										835061,
										835068
									],
									[
										835498,
										835505
									],
									[
										835700,
										835707
									],
									[
										835995,
										836002
									],
									[
										836417,
										836424
									],
									[
										836776,
										836783
									],
									[
										837235,
										837242
									],
									[
										837526,
										837533
									],
									[
										837873,
										837880
									],
									[
										838264,
										838271
									],
									[
										838377,
										838384
									],
									[
										838815,
										838822
									],
									[
										838993,
										839000
									],
									[
										839002,
										839009
									],
									[
										839113,
										839120
									],
									[
										839188,
										839195
									],
									[
										839574,
										839581
									],
									[
										839853,
										839860
									],
									[
										840017,
										840024
									],
									[
										840071,
										840078
									],
									[
										840121,
										840128
									],
									[
										840183,
										840190
									],
									[
										840238,
										840245
									],
									[
										840481,
										840488
									],
									[
										840649,
										840656
									],
									[
										840908,
										840915
									],
									[
										840985,
										840992
									],
									[
										841094,
										841101
									],
									[
										841372,
										841379
									],
									[
										841475,
										841482
									],
									[
										841537,
										841544
									],
									[
										841560,
										841567
									],
									[
										841715,
										841722
									],
									[
										842131,
										842138
									],
									[
										842606,
										842613
									],
									[
										842943,
										842950
									],
									[
										843276,
										843283
									],
									[
										843352,
										843359
									],
									[
										843670,
										843677
									],
									[
										843894,
										843901
									],
									[
										844247,
										844254
									],
									[
										844612,
										844619
									],
									[
										844864,
										844871
									],
									[
										845254,
										845261
									],
									[
										845567,
										845574
									],
									[
										845626,
										845633
									],
									[
										845802,
										845809
									],
									[
										845861,
										845868
									],
									[
										845956,
										845963
									],
									[
										846324,
										846331
									],
									[
										846604,
										846611
									],
									[
										846876,
										846883
									],
									[
										847245,
										847252
									],
									[
										847595,
										847602
									],
									[
										847617,
										847624
									],
									[
										847639,
										847646
									],
									[
										848157,
										848164
									],
									[
										848756,
										848763
									],
									[
										849276,
										849283
									],
									[
										849855,
										849862
									],
									[
										849923,
										849930
									],
									[
										850034,
										850041
									],
									[
										850486,
										850493
									],
									[
										850976,
										850983
									],
									[
										851411,
										851418
									],
									[
										851910,
										851917
									],
									[
										852481,
										852488
									],
									[
										852525,
										852532
									],
									[
										852535,
										852542
									],
									[
										852610,
										852617
									],
									[
										852768,
										852775
									],
									[
										852868,
										852875
									],
									[
										853012,
										853019
									],
									[
										853262,
										853269
									],
									[
										853723,
										853730
									],
									[
										853917,
										853924
									],
									[
										854262,
										854269
									],
									[
										854633,
										854640
									],
									[
										854901,
										854908
									],
									[
										855160,
										855167
									],
									[
										855436,
										855443
									],
									[
										855725,
										855732
									],
									[
										856026,
										856033
									],
									[
										856058,
										856065
									],
									[
										856301,
										856308
									],
									[
										856479,
										856486
									],
									[
										856963,
										856970
									],
									[
										857260,
										857267
									],
									[
										857319,
										857326
									],
									[
										857539,
										857546
									],
									[
										857954,
										857961
									],
									[
										858241,
										858248
									],
									[
										858478,
										858485
									],
									[
										858891,
										858898
									],
									[
										859258,
										859265
									],
									[
										859499,
										859506
									],
									[
										859604,
										859611
									],
									[
										859726,
										859733
									],
									[
										859997,
										860004
									],
									[
										860154,
										860161
									],
									[
										860482,
										860489
									],
									[
										861122,
										861129
									],
									[
										861408,
										861415
									],
									[
										861730,
										861737
									],
									[
										862170,
										862177
									],
									[
										862446,
										862453
									],
									[
										862854,
										862861
									],
									[
										862877,
										862884
									],
									[
										863173,
										863180
									],
									[
										863656,
										863663
									],
									[
										863834,
										863841
									],
									[
										864345,
										864352
									],
									[
										864656,
										864663
									],
									[
										864687,
										864694
									],
									[
										865109,
										865116
									],
									[
										865298,
										865305
									],
									[
										865580,
										865587
									],
									[
										865596,
										865603
									],
									[
										865908,
										865915
									],
									[
										866452,
										866459
									],
									[
										866886,
										866893
									],
									[
										867056,
										867063
									],
									[
										867154,
										867161
									],
									[
										867730,
										867737
									],
									[
										868055,
										868062
									],
									[
										868434,
										868441
									],
									[
										868729,
										868736
									],
									[
										869151,
										869158
									],
									[
										869408,
										869415
									],
									[
										869434,
										869441
									],
									[
										869666,
										869673
									],
									[
										869811,
										869818
									],
									[
										870139,
										870146
									],
									[
										870450,
										870457
									],
									[
										870715,
										870722
									],
									[
										870899,
										870906
									],
									[
										871230,
										871237
									],
									[
										871491,
										871498
									],
									[
										871544,
										871551
									],
									[
										871595,
										871602
									],
									[
										872012,
										872019
									],
									[
										872455,
										872462
									],
									[
										872761,
										872768
									],
									[
										872884,
										872891
									],
									[
										872995,
										873002
									],
									[
										873222,
										873229
									],
									[
										873412,
										873419
									],
									[
										873596,
										873603
									],
									[
										873674,
										873681
									],
									[
										873694,
										873701
									],
									[
										874045,
										874052
									],
									[
										874251,
										874258
									],
									[
										874620,
										874627
									],
									[
										875022,
										875029
									],
									[
										875066,
										875073
									],
									[
										875138,
										875145
									],
									[
										875227,
										875234
									],
									[
										875318,
										875325
									],
									[
										875604,
										875611
									],
									[
										875878,
										875885
									],
									[
										876010,
										876017
									],
									[
										876093,
										876100
									],
									[
										876200,
										876207
									],
									[
										876623,
										876630
									],
									[
										876953,
										876960
									],
									[
										877231,
										877238
									],
									[
										877551,
										877558
									],
									[
										877568,
										877575
									],
									[
										877832,
										877839
									],
									[
										878228,
										878235
									],
									[
										878272,
										878279
									],
									[
										878344,
										878351
									],
									[
										878433,
										878440
									],
									[
										878524,
										878531
									],
									[
										878860,
										878867
									],
									[
										878877,
										878884
									],
									[
										879232,
										879239
									],
									[
										879496,
										879503
									],
									[
										879749,
										879756
									],
									[
										880006,
										880013
									],
									[
										880203,
										880210
									],
									[
										880597,
										880604
									],
									[
										880641,
										880648
									],
									[
										880713,
										880720
									],
									[
										880802,
										880809
									],
									[
										880893,
										880900
									],
									[
										881248,
										881255
									],
									[
										881265,
										881272
									],
									[
										881616,
										881623
									],
									[
										881877,
										881884
									],
									[
										882100,
										882107
									],
									[
										882354,
										882361
									],
									[
										882603,
										882610
									],
									[
										882815,
										882822
									],
									[
										883080,
										883087
									],
									[
										883342,
										883349
									],
									[
										883470,
										883477
									],
									[
										884075,
										884082
									],
									[
										884313,
										884320
									],
									[
										884535,
										884542
									],
									[
										884654,
										884661
									],
									[
										884701,
										884708
									],
									[
										884737,
										884744
									],
									[
										884772,
										884779
									],
									[
										884819,
										884826
									],
									[
										884977,
										884984
									],
									[
										885232,
										885239
									],
									[
										885498,
										885505
									],
									[
										885846,
										885853
									],
									[
										886114,
										886121
									],
									[
										886431,
										886438
									],
									[
										886555,
										886562
									],
									[
										887034,
										887041
									],
									[
										887846,
										887853
									],
									[
										888122,
										888129
									],
									[
										888142,
										888149
									],
									[
										888359,
										888366
									],
									[
										888609,
										888616
									],
									[
										888688,
										888695
									],
									[
										888767,
										888774
									],
									[
										888957,
										888964
									],
									[
										889117,
										889124
									],
									[
										889319,
										889326
									],
									[
										889485,
										889492
									],
									[
										889669,
										889676
									],
									[
										890075,
										890082
									],
									[
										890508,
										890515
									],
									[
										890951,
										890958
									],
									[
										891117,
										891124
									],
									[
										891402,
										891409
									],
									[
										891680,
										891687
									],
									[
										891807,
										891814
									],
									[
										891842,
										891849
									],
									[
										891886,
										891893
									],
									[
										891954,
										891961
									],
									[
										892204,
										892211
									],
									[
										892617,
										892624
									],
									[
										892821,
										892828
									],
									[
										893261,
										893268
									],
									[
										893480,
										893487
									],
									[
										894206,
										894213
									],
									[
										894282,
										894289
									],
									[
										894291,
										894298
									],
									[
										894775,
										894782
									],
									[
										894829,
										894836
									],
									[
										894926,
										894933
									],
									[
										894940,
										894947
									],
									[
										894953,
										894960
									],
									[
										895296,
										895303
									],
									[
										895400,
										895407
									],
									[
										895499,
										895506
									],
									[
										895804,
										895811
									],
									[
										896159,
										896166
									],
									[
										896301,
										896308
									],
									[
										896351,
										896358
									],
									[
										896401,
										896408
									],
									[
										896463,
										896470
									],
									[
										896518,
										896525
									],
									[
										896781,
										896788
									],
									[
										896919,
										896926
									],
									[
										897128,
										897135
									],
									[
										897455,
										897462
									],
									[
										897878,
										897885
									],
									[
										898323,
										898330
									],
									[
										898714,
										898721
									],
									[
										898836,
										898843
									],
									[
										899151,
										899158
									],
									[
										899289,
										899296
									],
									[
										899467,
										899474
									],
									[
										899727,
										899734
									],
									[
										899865,
										899872
									],
									[
										900081,
										900088
									],
									[
										900290,
										900297
									],
									[
										900610,
										900617
									],
									[
										900728,
										900735
									],
									[
										901097,
										901104
									],
									[
										901152,
										901159
									],
									[
										901284,
										901291
									],
									[
										901449,
										901456
									],
									[
										901484,
										901491
									],
									[
										901528,
										901535
									],
									[
										901596,
										901603
									],
									[
										901691,
										901698
									],
									[
										901704,
										901711
									],
									[
										901957,
										901964
									],
									[
										902145,
										902152
									],
									[
										902208,
										902215
									],
									[
										902521,
										902528
									],
									[
										902748,
										902755
									],
									[
										903157,
										903164
									],
									[
										903442,
										903449
									],
									[
										903927,
										903934
									],
									[
										904423,
										904430
									],
									[
										904918,
										904925
									],
									[
										905119,
										905126
									],
									[
										905272,
										905279
									],
									[
										905372,
										905379
									],
									[
										905413,
										905420
									],
									[
										905879,
										905886
									],
									[
										906254,
										906261
									],
									[
										906759,
										906766
									],
									[
										906794,
										906801
									],
									[
										907179,
										907186
									],
									[
										907414,
										907421
									],
									[
										907473,
										907480
									],
									[
										907685,
										907692
									],
									[
										907744,
										907751
									],
									[
										907986,
										907993
									],
									[
										908045,
										908052
									],
									[
										908290,
										908297
									],
									[
										908349,
										908356
									],
									[
										908406,
										908413
									],
									[
										908748,
										908755
									],
									[
										909422,
										909429
									],
									[
										910101,
										910108
									],
									[
										910512,
										910519
									],
									[
										910794,
										910801
									],
									[
										910849,
										910856
									],
									[
										910902,
										910909
									],
									[
										911245,
										911252
									],
									[
										911438,
										911445
									],
									[
										911485,
										911492
									],
									[
										911582,
										911589
									],
									[
										912110,
										912117
									],
									[
										912560,
										912567
									],
									[
										912583,
										912590
									],
									[
										912610,
										912617
									],
									[
										913094,
										913101
									],
									[
										913421,
										913428
									],
									[
										913935,
										913942
									],
									[
										913972,
										913979
									],
									[
										914252,
										914259
									],
									[
										914291,
										914298
									],
									[
										914697,
										914704
									],
									[
										914777,
										914784
									],
									[
										914856,
										914863
									],
									[
										915102,
										915109
									],
									[
										915182,
										915189
									],
									[
										915262,
										915269
									],
									[
										915610,
										915617
									],
									[
										915651,
										915658
									],
									[
										916102,
										916109
									],
									[
										916136,
										916143
									],
									[
										916177,
										916184
									],
									[
										916729,
										916736
									],
									[
										916760,
										916767
									],
									[
										917210,
										917217
									],
									[
										917366,
										917373
									],
									[
										917669,
										917676
									],
									[
										917933,
										917940
									],
									[
										918229,
										918236
									],
									[
										918576,
										918583
									],
									[
										918972,
										918979
									],
									[
										919155,
										919162
									],
									[
										919371,
										919378
									],
									[
										919636,
										919643
									],
									[
										919985,
										919992
									],
									[
										920201,
										920208
									],
									[
										920421,
										920428
									],
									[
										920471,
										920478
									],
									[
										920522,
										920529
									],
									[
										920606,
										920613
									],
									[
										920636,
										920643
									],
									[
										920747,
										920754
									],
									[
										920955,
										920962
									],
									[
										920994,
										921001
									],
									[
										921079,
										921086
									],
									[
										921119,
										921126
									],
									[
										921204,
										921211
									],
									[
										921508,
										921515
									],
									[
										921830,
										921837
									],
									[
										921984,
										921991
									],
									[
										922372,
										922379
									],
									[
										922690,
										922697
									],
									[
										922699,
										922706
									],
									[
										923097,
										923104
									],
									[
										923626,
										923633
									],
									[
										923865,
										923872
									],
									[
										924155,
										924162
									],
									[
										924339,
										924346
									],
									[
										924636,
										924643
									],
									[
										924742,
										924749
									],
									[
										925247,
										925254
									],
									[
										925920,
										925927
									],
									[
										926011,
										926018
									],
									[
										926241,
										926248
									],
									[
										926641,
										926648
									],
									[
										926873,
										926880
									],
									[
										927123,
										927130
									],
									[
										927359,
										927366
									],
									[
										927737,
										927744
									],
									[
										927794,
										927801
									],
									[
										927999,
										928006
									],
									[
										928138,
										928145
									],
									[
										928467,
										928474
									],
									[
										928853,
										928860
									],
									[
										929307,
										929314
									],
									[
										929656,
										929663
									],
									[
										929998,
										930005
									],
									[
										930346,
										930353
									],
									[
										930764,
										930771
									],
									[
										931051,
										931058
									],
									[
										931338,
										931345
									],
									[
										931625,
										931632
									],
									[
										932020,
										932027
									],
									[
										932812,
										932819
									],
									[
										933148,
										933155
									],
									[
										933445,
										933452
									],
									[
										933870,
										933877
									],
									[
										934242,
										934249
									],
									[
										934597,
										934604
									],
									[
										934984,
										934991
									],
									[
										935344,
										935351
									],
									[
										935640,
										935647
									],
									[
										936109,
										936116
									],
									[
										936481,
										936488
									],
									[
										936876,
										936883
									],
									[
										937600,
										937607
									],
									[
										938013,
										938020
									],
									[
										938583,
										938590
									],
									[
										938914,
										938921
									],
									[
										939193,
										939200
									],
									[
										939221,
										939228
									],
									[
										939415,
										939422
									],
									[
										939823,
										939830
									],
									[
										940237,
										940244
									],
									[
										940575,
										940582
									],
									[
										940979,
										940986
									],
									[
										941346,
										941353
									],
									[
										941718,
										941725
									],
									[
										942257,
										942264
									],
									[
										942590,
										942597
									],
									[
										942625,
										942632
									],
									[
										942902,
										942909
									],
									[
										942957,
										942964
									],
									[
										943316,
										943323
									],
									[
										943531,
										943538
									],
									[
										944003,
										944010
									],
									[
										944470,
										944477
									],
									[
										944912,
										944919
									],
									[
										944941,
										944948
									],
									[
										944970,
										944977
									],
									[
										945309,
										945316
									],
									[
										945338,
										945345
									],
									[
										945367,
										945374
									],
									[
										945787,
										945794
									],
									[
										946474,
										946481
									],
									[
										946602,
										946609
									],
									[
										946803,
										946810
									],
									[
										947040,
										947047
									],
									[
										947336,
										947343
									],
									[
										947379,
										947386
									],
									[
										947647,
										947654
									],
									[
										947679,
										947686
									],
									[
										947977,
										947984
									],
									[
										948456,
										948463
									],
									[
										948827,
										948834
									],
									[
										949158,
										949165
									],
									[
										949330,
										949337
									],
									[
										949631,
										949638
									],
									[
										949677,
										949684
									],
									[
										949727,
										949734
									],
									[
										949754,
										949761
									],
									[
										949858,
										949865
									],
									[
										950048,
										950055
									],
									[
										950276,
										950283
									],
									[
										951015,
										951022
									],
									[
										951425,
										951432
									],
									[
										951661,
										951668
									],
									[
										952153,
										952160
									],
									[
										952574,
										952581
									],
									[
										952679,
										952686
									],
									[
										952897,
										952904
									],
									[
										953233,
										953240
									],
									[
										953679,
										953686
									],
									[
										954151,
										954158
									],
									[
										954458,
										954465
									],
									[
										954532,
										954539
									],
									[
										954850,
										954857
									],
									[
										955005,
										955012
									],
									[
										955186,
										955193
									],
									[
										955332,
										955339
									],
									[
										955381,
										955388
									],
									[
										955557,
										955564
									],
									[
										955703,
										955710
									],
									[
										955938,
										955945
									],
									[
										955947,
										955954
									],
									[
										956198,
										956205
									],
									[
										956207,
										956214
									],
									[
										956920,
										956927
									],
									[
										957073,
										957080
									],
									[
										957331,
										957338
									],
									[
										957616,
										957623
									],
									[
										957973,
										957980
									],
									[
										958323,
										958330
									],
									[
										958343,
										958350
									],
									[
										958736,
										958743
									],
									[
										958956,
										958963
									],
									[
										959179,
										959186
									],
									[
										959528,
										959535
									],
									[
										959906,
										959913
									],
									[
										960360,
										960367
									],
									[
										960872,
										960879
									],
									[
										961051,
										961058
									],
									[
										961944,
										961951
									],
									[
										962221,
										962228
									],
									[
										962331,
										962338
									],
									[
										962448,
										962455
									],
									[
										962562,
										962569
									],
									[
										962695,
										962702
									],
									[
										962738,
										962745
									],
									[
										963008,
										963015
									],
									[
										963265,
										963272
									],
									[
										963523,
										963530
									],
									[
										963648,
										963655
									],
									[
										963941,
										963948
									],
									[
										964101,
										964108
									],
									[
										964450,
										964457
									],
									[
										964718,
										964725
									],
									[
										965002,
										965009
									],
									[
										965343,
										965350
									],
									[
										965721,
										965728
									],
									[
										966007,
										966014
									],
									[
										966285,
										966292
									],
									[
										966498,
										966505
									],
									[
										966675,
										966682
									],
									[
										966861,
										966868
									],
									[
										966995,
										967002
									],
									[
										967105,
										967112
									],
									[
										967257,
										967264
									],
									[
										967671,
										967678
									],
									[
										967830,
										967837
									],
									[
										968066,
										968073
									],
									[
										968248,
										968255
									],
									[
										968331,
										968338
									],
									[
										968639,
										968646
									],
									[
										969101,
										969108
									],
									[
										969369,
										969376
									],
									[
										969583,
										969590
									],
									[
										969953,
										969960
									],
									[
										970289,
										970296
									],
									[
										970905,
										970912
									],
									[
										971381,
										971388
									],
									[
										971892,
										971899
									],
									[
										972447,
										972454
									],
									[
										972508,
										972515
									],
									[
										972650,
										972657
									],
									[
										972693,
										972700
									],
									[
										972907,
										972914
									],
									[
										972955,
										972962
									],
									[
										972987,
										972994
									],
									[
										973050,
										973057
									],
									[
										973324,
										973331
									],
									[
										973689,
										973696
									],
									[
										973789,
										973796
									],
									[
										973813,
										973820
									],
									[
										973994,
										974001
									],
									[
										974099,
										974106
									],
									[
										974456,
										974463
									],
									[
										974708,
										974715
									],
									[
										975077,
										975084
									],
									[
										975211,
										975218
									],
									[
										975437,
										975444
									],
									[
										975853,
										975860
									],
									[
										975906,
										975913
									],
									[
										976178,
										976185
									],
									[
										976239,
										976246
									],
									[
										976493,
										976500
									],
									[
										976556,
										976563
									],
									[
										976824,
										976831
									],
									[
										976892,
										976899
									],
									[
										977177,
										977184
									],
									[
										977240,
										977247
									],
									[
										977597,
										977604
									],
									[
										978085,
										978092
									],
									[
										978712,
										978719
									],
									[
										978966,
										978973
									],
									[
										979031,
										979038
									],
									[
										979119,
										979126
									],
									[
										979228,
										979235
									],
									[
										979476,
										979483
									],
									[
										979727,
										979734
									],
									[
										979971,
										979978
									],
									[
										980275,
										980282
									],
									[
										980438,
										980445
									],
									[
										980712,
										980719
									],
									[
										980806,
										980813
									],
									[
										981127,
										981134
									],
									[
										981221,
										981228
									],
									[
										981520,
										981527
									],
									[
										981692,
										981699
									],
									[
										982038,
										982045
									],
									[
										982294,
										982301
									],
									[
										982320,
										982327
									],
									[
										982447,
										982454
									],
									[
										982483,
										982490
									],
									[
										982551,
										982558
									],
									[
										982604,
										982611
									],
									[
										982867,
										982874
									],
									[
										982969,
										982976
									],
									[
										983031,
										983038
									],
									[
										983058,
										983065
									],
									[
										983098,
										983105
									],
									[
										983181,
										983188
									],
									[
										983244,
										983251
									],
									[
										983304,
										983311
									],
									[
										983331,
										983338
									],
									[
										983376,
										983383
									],
									[
										983459,
										983466
									],
									[
										984007,
										984014
									],
									[
										984318,
										984325
									],
									[
										984542,
										984549
									],
									[
										984590,
										984597
									],
									[
										984862,
										984869
									],
									[
										985122,
										985129
									],
									[
										985320,
										985327
									],
									[
										985746,
										985753
									],
									[
										986018,
										986025
									],
									[
										986127,
										986134
									],
									[
										986302,
										986309
									],
									[
										986357,
										986364
									],
									[
										986902,
										986909
									],
									[
										987397,
										987404
									],
									[
										987592,
										987599
									],
									[
										987649,
										987656
									],
									[
										987777,
										987784
									],
									[
										987948,
										987955
									],
									[
										988149,
										988156
									],
									[
										988646,
										988653
									],
									[
										988707,
										988714
									],
									[
										988751,
										988758
									],
									[
										989003,
										989010
									],
									[
										989065,
										989072
									],
									[
										989114,
										989121
									],
									[
										989661,
										989668
									],
									[
										989706,
										989713
									],
									[
										990232,
										990239
									],
									[
										990269,
										990276
									],
									[
										990303,
										990310
									],
									[
										990334,
										990341
									],
									[
										990368,
										990375
									],
									[
										991520,
										991527
									],
									[
										992245,
										992252
									],
									[
										992530,
										992537
									],
									[
										992572,
										992579
									],
									[
										992648,
										992655
									],
									[
										992692,
										992699
									],
									[
										993042,
										993049
									],
									[
										993392,
										993399
									],
									[
										993774,
										993781
									],
									[
										993844,
										993851
									],
									[
										993867,
										993874
									],
									[
										994069,
										994076
									],
									[
										994092,
										994099
									],
									[
										994305,
										994312
									],
									[
										994656,
										994663
									],
									[
										995362,
										995369
									],
									[
										995388,
										995395
									],
									[
										995424,
										995431
									],
									[
										996188,
										996195
									],
									[
										996214,
										996221
									],
									[
										996250,
										996257
									],
									[
										996296,
										996303
									],
									[
										997001,
										997008
									],
									[
										997045,
										997052
									],
									[
										997081,
										997088
									],
									[
										997682,
										997689
									],
									[
										997726,
										997733
									],
									[
										997762,
										997769
									],
									[
										998058,
										998065
									],
									[
										998125,
										998132
									],
									[
										998381,
										998388
									],
									[
										998448,
										998455
									],
									[
										998585,
										998592
									],
									[
										998785,
										998792
									],
									[
										998852,
										998859
									],
									[
										998989,
										998996
									],
									[
										999194,
										999201
									],
									[
										999261,
										999268
									],
									[
										999398,
										999405
									],
									[
										999619,
										999626
									],
									[
										999686,
										999693
									],
									[
										999823,
										999830
									],
									[
										1000026,
										1000033
									],
									[
										1000093,
										1000100
									],
									[
										1000230,
										1000237
									],
									[
										1000283,
										1000290
									],
									[
										1000488,
										1000495
									],
									[
										1000555,
										1000562
									],
									[
										1000692,
										1000699
									],
									[
										1000750,
										1000757
									],
									[
										1000955,
										1000962
									],
									[
										1001022,
										1001029
									],
									[
										1001278,
										1001285
									],
									[
										1001345,
										1001352
									],
									[
										1001830,
										1001837
									],
									[
										1002234,
										1002241
									],
									[
										1002267,
										1002274
									],
									[
										1002596,
										1002603
									],
									[
										1003144,
										1003151
									],
									[
										1003448,
										1003455
									],
									[
										1003577,
										1003584
									],
									[
										1004018,
										1004025
									],
									[
										1004308,
										1004315
									],
									[
										1004425,
										1004432
									],
									[
										1004655,
										1004662
									],
									[
										1004690,
										1004697
									],
									[
										1004974,
										1004981
									],
									[
										1005272,
										1005279
									],
									[
										1005605,
										1005612
									],
									[
										1006042,
										1006049
									],
									[
										1006424,
										1006431
									],
									[
										1006464,
										1006471
									],
									[
										1006849,
										1006856
									],
									[
										1006883,
										1006890
									],
									[
										1006916,
										1006923
									],
									[
										1007306,
										1007313
									],
									[
										1007340,
										1007347
									],
									[
										1007828,
										1007835
									],
									[
										1008162,
										1008169
									],
									[
										1008321,
										1008328
									],
									[
										1008553,
										1008560
									],
									[
										1008994,
										1009001
									],
									[
										1009428,
										1009435
									],
									[
										1009680,
										1009687
									],
									[
										1010201,
										1010208
									],
									[
										1010818,
										1010825
									],
									[
										1011142,
										1011149
									],
									[
										1011326,
										1011333
									],
									[
										1011430,
										1011437
									],
									[
										1011953,
										1011960
									],
									[
										1011985,
										1011992
									],
									[
										1012485,
										1012492
									],
									[
										1012733,
										1012740
									],
									[
										1013146,
										1013153
									],
									[
										1013360,
										1013367
									],
									[
										1013456,
										1013463
									],
									[
										1013529,
										1013536
									],
									[
										1013747,
										1013754
									],
									[
										1013838,
										1013845
									],
									[
										1014000,
										1014007
									],
									[
										1014479,
										1014486
									],
									[
										1014960,
										1014967
									],
									[
										1015195,
										1015202
									],
									[
										1015287,
										1015294
									],
									[
										1015539,
										1015546
									],
									[
										1015651,
										1015658
									],
									[
										1015968,
										1015975
									],
									[
										1016245,
										1016252
									],
									[
										1016312,
										1016319
									],
									[
										1016362,
										1016369
									],
									[
										1016415,
										1016422
									],
									[
										1016469,
										1016476
									],
									[
										1016519,
										1016526
									],
									[
										1016568,
										1016575
									],
									[
										1016960,
										1016967
									],
									[
										1017180,
										1017187
									],
									[
										1017636,
										1017643
									],
									[
										1018207,
										1018214
									],
									[
										1018748,
										1018755
									],
									[
										1018996,
										1019003
									],
									[
										1019333,
										1019340
									],
									[
										1019616,
										1019623
									],
									[
										1019962,
										1019969
									],
									[
										1020572,
										1020579
									],
									[
										1020616,
										1020623
									],
									[
										1020652,
										1020659
									],
									[
										1020917,
										1020924
									],
									[
										1020993,
										1021000
									],
									[
										1021245,
										1021252
									],
									[
										1021542,
										1021549
									],
									[
										1021976,
										1021983
									],
									[
										1022215,
										1022222
									],
									[
										1022428,
										1022435
									],
									[
										1022489,
										1022496
									],
									[
										1022762,
										1022769
									],
									[
										1023270,
										1023277
									],
									[
										1023583,
										1023590
									],
									[
										1023615,
										1023622
									],
									[
										1023945,
										1023952
									],
									[
										1024260,
										1024267
									],
									[
										1024386,
										1024393
									],
									[
										1024639,
										1024646
									],
									[
										1024923,
										1024930
									],
									[
										1025272,
										1025279
									],
									[
										1025546,
										1025553
									],
									[
										1025952,
										1025959
									],
									[
										1026272,
										1026279
									],
									[
										1026802,
										1026809
									],
									[
										1027142,
										1027149
									],
									[
										1027174,
										1027181
									],
									[
										1027415,
										1027422
									],
									[
										1027615,
										1027622
									],
									[
										1028001,
										1028008
									],
									[
										1028097,
										1028104
									],
									[
										1028331,
										1028338
									],
									[
										1028563,
										1028570
									],
									[
										1028773,
										1028780
									],
									[
										1029254,
										1029261
									],
									[
										1029814,
										1029821
									],
									[
										1030227,
										1030234
									],
									[
										1030545,
										1030552
									],
									[
										1030881,
										1030888
									],
									[
										1031280,
										1031287
									],
									[
										1031635,
										1031642
									],
									[
										1031973,
										1031980
									],
									[
										1032422,
										1032429
									],
									[
										1032929,
										1032936
									],
									[
										1033256,
										1033263
									],
									[
										1033570,
										1033577
									],
									[
										1033601,
										1033608
									],
									[
										1033816,
										1033823
									],
									[
										1034022,
										1034029
									],
									[
										1034312,
										1034319
									],
									[
										1034599,
										1034606
									],
									[
										1034820,
										1034827
									],
									[
										1035381,
										1035388
									],
									[
										1035791,
										1035798
									],
									[
										1036146,
										1036153
									],
									[
										1036406,
										1036413
									],
									[
										1036642,
										1036649
									],
									[
										1036759,
										1036766
									],
									[
										1036973,
										1036980
									],
									[
										1037069,
										1037076
									],
									[
										1037202,
										1037209
									],
									[
										1037400,
										1037407
									],
									[
										1037415,
										1037422
									],
									[
										1037515,
										1037522
									],
									[
										1037645,
										1037652
									],
									[
										1037706,
										1037713
									],
									[
										1037759,
										1037766
									],
									[
										1037815,
										1037822
									],
									[
										1037885,
										1037892
									],
									[
										1037948,
										1037955
									],
									[
										1038105,
										1038112
									],
									[
										1038200,
										1038207
									],
									[
										1038527,
										1038534
									],
									[
										1038722,
										1038729
									],
									[
										1038927,
										1038934
									],
									[
										1039021,
										1039028
									],
									[
										1039083,
										1039090
									],
									[
										1039255,
										1039262
									],
									[
										1039538,
										1039545
									],
									[
										1039591,
										1039598
									],
									[
										1039647,
										1039654
									],
									[
										1039706,
										1039713
									],
									[
										1039768,
										1039775
									],
									[
										1039823,
										1039830
									],
									[
										1040173,
										1040180
									],
									[
										1040617,
										1040624
									],
									[
										1041011,
										1041018
									],
									[
										1041432,
										1041439
									],
									[
										1041741,
										1041748
									],
									[
										1042042,
										1042049
									],
									[
										1042210,
										1042217
									],
									[
										1042385,
										1042392
									],
									[
										1042559,
										1042566
									],
									[
										1043160,
										1043167
									],
									[
										1043426,
										1043433
									],
									[
										1044079,
										1044086
									],
									[
										1044456,
										1044463
									],
									[
										1044488,
										1044495
									],
									[
										1044856,
										1044863
									],
									[
										1045187,
										1045194
									],
									[
										1045426,
										1045433
									],
									[
										1045460,
										1045467
									],
									[
										1045624,
										1045631
									],
									[
										1045658,
										1045665
									],
									[
										1046054,
										1046061
									],
									[
										1046399,
										1046406
									],
									[
										1046509,
										1046516
									],
									[
										1046539,
										1046546
									],
									[
										1047058,
										1047065
									],
									[
										1047595,
										1047602
									],
									[
										1048034,
										1048041
									],
									[
										1048298,
										1048305
									],
									[
										1048574,
										1048581
									],
									[
										1048614,
										1048621
									],
									[
										1048835,
										1048842
									],
									[
										1049048,
										1049055
									],
									[
										1049160,
										1049167
									],
									[
										1049578,
										1049585
									],
									[
										1049616,
										1049623
									],
									[
										1049697,
										1049704
									],
									[
										1049776,
										1049783
									],
									[
										1050030,
										1050037
									],
									[
										1050339,
										1050346
									],
									[
										1050369,
										1050376
									],
									[
										1050758,
										1050765
									],
									[
										1051273,
										1051280
									],
									[
										1051564,
										1051571
									],
									[
										1051894,
										1051901
									],
									[
										1051959,
										1051966
									],
									[
										1052235,
										1052242
									],
									[
										1052347,
										1052354
									],
									[
										1052691,
										1052698
									],
									[
										1052865,
										1052872
									],
									[
										1053138,
										1053145
									],
									[
										1053279,
										1053286
									],
									[
										1053461,
										1053468
									],
									[
										1053635,
										1053642
									],
									[
										1053737,
										1053744
									],
									[
										1053798,
										1053805
									],
									[
										1053966,
										1053973
									],
									[
										1054224,
										1054231
									],
									[
										1054293,
										1054300
									],
									[
										1054405,
										1054412
									],
									[
										1054492,
										1054499
									],
									[
										1054778,
										1054785
									],
									[
										1054971,
										1054978
									],
									[
										1055030,
										1055037
									],
									[
										1055187,
										1055194
									],
									[
										1055253,
										1055260
									],
									[
										1055528,
										1055535
									],
									[
										1055667,
										1055674
									],
									[
										1055731,
										1055738
									],
									[
										1055799,
										1055806
									],
									[
										1055926,
										1055933
									],
									[
										1056068,
										1056075
									],
									[
										1056136,
										1056143
									],
									[
										1056206,
										1056213
									],
									[
										1056570,
										1056577
									],
									[
										1056882,
										1056889
									],
									[
										1057076,
										1057083
									],
									[
										1057135,
										1057142
									],
									[
										1057428,
										1057435
									],
									[
										1057715,
										1057722
									],
									[
										1057936,
										1057943
									],
									[
										1058188,
										1058195
									],
									[
										1058228,
										1058235
									],
									[
										1058328,
										1058335
									],
									[
										1058372,
										1058379
									],
									[
										1058424,
										1058431
									],
									[
										1058483,
										1058490
									],
									[
										1058525,
										1058532
									],
									[
										1058581,
										1058588
									],
									[
										1058855,
										1058862
									],
									[
										1058921,
										1058928
									],
									[
										1059054,
										1059061
									],
									[
										1059341,
										1059348
									],
									[
										1059544,
										1059551
									],
									[
										1059915,
										1059922
									],
									[
										1059943,
										1059950
									],
									[
										1060134,
										1060141
									],
									[
										1060291,
										1060298
									],
									[
										1060334,
										1060341
									],
									[
										1060864,
										1060871
									],
									[
										1061203,
										1061210
									],
									[
										1061683,
										1061690
									],
									[
										1061882,
										1061889
									],
									[
										1062169,
										1062176
									],
									[
										1062569,
										1062576
									],
									[
										1062758,
										1062765
									],
									[
										1063040,
										1063047
									],
									[
										1063227,
										1063234
									],
									[
										1063508,
										1063515
									],
									[
										1063699,
										1063706
									],
									[
										1063982,
										1063989
									],
									[
										1064165,
										1064172
									],
									[
										1064444,
										1064451
									],
									[
										1064627,
										1064634
									],
									[
										1065138,
										1065145
									],
									[
										1065433,
										1065440
									],
									[
										1065736,
										1065743
									],
									[
										1066082,
										1066089
									],
									[
										1066431,
										1066438
									],
									[
										1066780,
										1066787
									],
									[
										1067132,
										1067139
									],
									[
										1067478,
										1067485
									],
									[
										1067820,
										1067827
									],
									[
										1068150,
										1068157
									],
									[
										1068424,
										1068431
									],
									[
										1068550,
										1068557
									],
									[
										1068709,
										1068716
									],
									[
										1068787,
										1068794
									],
									[
										1068896,
										1068903
									],
									[
										1069005,
										1069012
									],
									[
										1069249,
										1069256
									],
									[
										1069394,
										1069401
									],
									[
										1069660,
										1069667
									],
									[
										1069716,
										1069723
									],
									[
										1070059,
										1070066
									],
									[
										1070356,
										1070363
									],
									[
										1070373,
										1070380
									],
									[
										1070685,
										1070692
									],
									[
										1070968,
										1070975
									],
									[
										1071340,
										1071347
									],
									[
										1071602,
										1071609
									],
									[
										1072227,
										1072234
									],
									[
										1072495,
										1072502
									],
									[
										1072834,
										1072841
									],
									[
										1073043,
										1073050
									],
									[
										1073109,
										1073116
									],
									[
										1073217,
										1073224
									],
									[
										1073295,
										1073302
									],
									[
										1073532,
										1073539
									],
									[
										1073694,
										1073701
									],
									[
										1073837,
										1073844
									],
									[
										1074114,
										1074121
									],
									[
										1074155,
										1074162
									],
									[
										1074335,
										1074342
									],
									[
										1074459,
										1074466
									],
									[
										1074696,
										1074703
									],
									[
										1074762,
										1074769
									],
									[
										1074870,
										1074877
									],
									[
										1074948,
										1074955
									],
									[
										1074985,
										1074992
									],
									[
										1075014,
										1075021
									],
									[
										1075253,
										1075260
									],
									[
										1075411,
										1075418
									],
									[
										1075637,
										1075644
									],
									[
										1075847,
										1075854
									],
									[
										1075990,
										1075997
									],
									[
										1076267,
										1076274
									],
									[
										1076308,
										1076315
									],
									[
										1076488,
										1076495
									],
									[
										1076612,
										1076619
									],
									[
										1076929,
										1076936
									],
									[
										1077176,
										1077183
									],
									[
										1077570,
										1077577
									],
									[
										1077896,
										1077903
									],
									[
										1078300,
										1078307
									],
									[
										1078339,
										1078346
									],
									[
										1078353,
										1078360
									],
									[
										1078412,
										1078419
									],
									[
										1078813,
										1078820
									],
									[
										1078956,
										1078963
									],
									[
										1079272,
										1079279
									],
									[
										1079515,
										1079522
									],
									[
										1079796,
										1079803
									],
									[
										1080031,
										1080038
									],
									[
										1080380,
										1080387
									],
									[
										1080564,
										1080571
									],
									[
										1080752,
										1080759
									],
									[
										1080858,
										1080865
									],
									[
										1081017,
										1081024
									],
									[
										1081276,
										1081283
									],
									[
										1081496,
										1081503
									],
									[
										1081756,
										1081763
									],
									[
										1081890,
										1081897
									],
									[
										1082130,
										1082137
									],
									[
										1082244,
										1082251
									],
									[
										1082497,
										1082504
									],
									[
										1082602,
										1082609
									],
									[
										1082708,
										1082715
									],
									[
										1082877,
										1082884
									],
									[
										1083130,
										1083137
									],
									[
										1083232,
										1083239
									],
									[
										1083411,
										1083418
									],
									[
										1083685,
										1083692
									],
									[
										1083782,
										1083789
									],
									[
										1084058,
										1084065
									],
									[
										1084186,
										1084193
									],
									[
										1084278,
										1084285
									],
									[
										1084471,
										1084478
									],
									[
										1084672,
										1084679
									],
									[
										1084876,
										1084883
									],
									[
										1085136,
										1085143
									],
									[
										1085302,
										1085309
									],
									[
										1085677,
										1085684
									],
									[
										1085982,
										1085989
									],
									[
										1086229,
										1086236
									],
									[
										1086424,
										1086431
									],
									[
										1086765,
										1086772
									],
									[
										1087041,
										1087048
									],
									[
										1087343,
										1087350
									],
									[
										1087370,
										1087377
									],
									[
										1087447,
										1087454
									],
									[
										1087768,
										1087775
									],
									[
										1088078,
										1088085
									],
									[
										1088601,
										1088608
									],
									[
										1088953,
										1088960
									],
									[
										1089356,
										1089363
									],
									[
										1089468,
										1089475
									],
									[
										1089582,
										1089589
									],
									[
										1089860,
										1089867
									],
									[
										1090161,
										1090168
									],
									[
										1090189,
										1090196
									],
									[
										1090420,
										1090427
									],
									[
										1090624,
										1090631
									],
									[
										1090924,
										1090931
									],
									[
										1091108,
										1091115
									],
									[
										1091433,
										1091440
									],
									[
										1091780,
										1091787
									],
									[
										1092460,
										1092467
									],
									[
										1092758,
										1092765
									],
									[
										1093098,
										1093105
									],
									[
										1093404,
										1093411
									],
									[
										1093789,
										1093796
									],
									[
										1093821,
										1093828
									],
									[
										1094216,
										1094223
									],
									[
										1094491,
										1094498
									],
									[
										1094771,
										1094778
									],
									[
										1095045,
										1095052
									],
									[
										1095054,
										1095061
									],
									[
										1095326,
										1095333
									],
									[
										1095775,
										1095782
									],
									[
										1096107,
										1096114
									],
									[
										1096597,
										1096604
									],
									[
										1096745,
										1096752
									],
									[
										1096902,
										1096909
									],
									[
										1097196,
										1097203
									],
									[
										1097857,
										1097864
									],
									[
										1098328,
										1098335
									],
									[
										1098714,
										1098721
									],
									[
										1098981,
										1098988
									],
									[
										1099411,
										1099418
									],
									[
										1099815,
										1099822
									],
									[
										1100194,
										1100201
									],
									[
										1100553,
										1100560
									],
									[
										1100831,
										1100838
									],
									[
										1101152,
										1101159
									],
									[
										1101317,
										1101324
									],
									[
										1101740,
										1101747
									],
									[
										1101859,
										1101866
									],
									[
										1102363,
										1102370
									],
									[
										1102686,
										1102693
									],
									[
										1102738,
										1102745
									],
									[
										1103029,
										1103036
									],
									[
										1103487,
										1103494
									],
									[
										1103838,
										1103845
									],
									[
										1104124,
										1104131
									],
									[
										1104423,
										1104430
									],
									[
										1104663,
										1104670
									],
									[
										1104903,
										1104910
									],
									[
										1105138,
										1105145
									],
									[
										1105504,
										1105511
									],
									[
										1105823,
										1105830
									],
									[
										1106226,
										1106233
									],
									[
										1106597,
										1106604
									],
									[
										1107011,
										1107018
									],
									[
										1107533,
										1107540
									],
									[
										1107778,
										1107785
									],
									[
										1107887,
										1107894
									],
									[
										1108015,
										1108022
									],
									[
										1108133,
										1108140
									],
									[
										1108267,
										1108274
									],
									[
										1108455,
										1108462
									],
									[
										1108621,
										1108628
									],
									[
										1108920,
										1108927
									],
									[
										1109264,
										1109271
									],
									[
										1109714,
										1109721
									],
									[
										1110218,
										1110225
									],
									[
										1110235,
										1110242
									],
									[
										1110453,
										1110460
									],
									[
										1110689,
										1110696
									],
									[
										1110912,
										1110919
									],
									[
										1110946,
										1110953
									],
									[
										1111266,
										1111273
									],
									[
										1111709,
										1111716
									],
									[
										1111757,
										1111764
									],
									[
										1111821,
										1111828
									],
									[
										1111857,
										1111864
									],
									[
										1111907,
										1111914
									],
									[
										1111948,
										1111955
									],
									[
										1112184,
										1112191
									],
									[
										1112526,
										1112533
									],
									[
										1112628,
										1112635
									],
									[
										1112806,
										1112813
									],
									[
										1113030,
										1113037
									],
									[
										1113334,
										1113341
									],
									[
										1113388,
										1113395
									],
									[
										1113424,
										1113431
									],
									[
										1113460,
										1113467
									],
									[
										1113507,
										1113514
									],
									[
										1113822,
										1113829
									],
									[
										1114246,
										1114253
									],
									[
										1114444,
										1114451
									],
									[
										1114675,
										1114682
									],
									[
										1114736,
										1114743
									],
									[
										1114990,
										1114997
									],
									[
										1115195,
										1115202
									],
									[
										1115354,
										1115361
									],
									[
										1115383,
										1115390
									],
									[
										1115409,
										1115416
									],
									[
										1115461,
										1115468
									],
									[
										1115638,
										1115645
									],
									[
										1115819,
										1115826
									],
									[
										1116062,
										1116069
									],
									[
										1116130,
										1116137
									],
									[
										1116240,
										1116247
									],
									[
										1116372,
										1116379
									],
									[
										1116418,
										1116425
									],
									[
										1116601,
										1116608
									],
									[
										1116634,
										1116641
									],
									[
										1116682,
										1116689
									],
									[
										1116747,
										1116754
									],
									[
										1117141,
										1117148
									],
									[
										1117566,
										1117573
									],
									[
										1117981,
										1117988
									],
									[
										1118345,
										1118352
									],
									[
										1118410,
										1118417
									],
									[
										1118527,
										1118534
									],
									[
										1118623,
										1118630
									],
									[
										1118936,
										1118943
									],
									[
										1119271,
										1119278
									],
									[
										1119543,
										1119550
									],
									[
										1119815,
										1119822
									],
									[
										1120261,
										1120268
									],
									[
										1120480,
										1120487
									],
									[
										1120781,
										1120788
									],
									[
										1120865,
										1120872
									],
									[
										1121040,
										1121047
									],
									[
										1121502,
										1121509
									],
									[
										1121721,
										1121728
									],
									[
										1122129,
										1122136
									],
									[
										1122368,
										1122375
									],
									[
										1122583,
										1122590
									],
									[
										1122803,
										1122810
									],
									[
										1123055,
										1123062
									],
									[
										1123361,
										1123368
									],
									[
										1123635,
										1123642
									],
									[
										1123973,
										1123980
									],
									[
										1124299,
										1124306
									],
									[
										1124593,
										1124600
									],
									[
										1124847,
										1124854
									],
									[
										1125121,
										1125128
									],
									[
										1125473,
										1125480
									],
									[
										1125600,
										1125607
									],
									[
										1125728,
										1125735
									],
									[
										1125841,
										1125848
									],
									[
										1126201,
										1126208
									],
									[
										1126413,
										1126420
									],
									[
										1126761,
										1126768
									],
									[
										1127068,
										1127075
									],
									[
										1127417,
										1127424
									],
									[
										1127598,
										1127605
									],
									[
										1127801,
										1127808
									],
									[
										1127985,
										1127992
									],
									[
										1128052,
										1128059
									],
									[
										1128568,
										1128575
									],
									[
										1129059,
										1129066
									],
									[
										1129507,
										1129514
									],
									[
										1129918,
										1129925
									],
									[
										1130241,
										1130248
									],
									[
										1130315,
										1130322
									],
									[
										1130687,
										1130694
									],
									[
										1130867,
										1130874
									],
									[
										1130938,
										1130945
									],
									[
										1131196,
										1131203
									],
									[
										1131506,
										1131513
									],
									[
										1131878,
										1131885
									],
									[
										1132082,
										1132089
									],
									[
										1132197,
										1132204
									],
									[
										1132450,
										1132457
									],
									[
										1132861,
										1132868
									],
									[
										1133168,
										1133175
									],
									[
										1133218,
										1133225
									],
									[
										1133268,
										1133275
									],
									[
										1133459,
										1133466
									],
									[
										1133574,
										1133581
									],
									[
										1133847,
										1133854
									],
									[
										1134106,
										1134113
									],
									[
										1134211,
										1134218
									],
									[
										1134565,
										1134572
									],
									[
										1134989,
										1134996
									],
									[
										1135272,
										1135279
									],
									[
										1135644,
										1135651
									],
									[
										1135671,
										1135678
									],
									[
										1135933,
										1135940
									],
									[
										1136286,
										1136293
									],
									[
										1136493,
										1136500
									],
									[
										1136699,
										1136706
									],
									[
										1136909,
										1136916
									],
									[
										1137094,
										1137101
									],
									[
										1137310,
										1137317
									],
									[
										1137748,
										1137755
									],
									[
										1138158,
										1138165
									],
									[
										1138413,
										1138420
									],
									[
										1138794,
										1138801
									],
									[
										1139062,
										1139069
									],
									[
										1139389,
										1139396
									],
									[
										1139829,
										1139836
									],
									[
										1140159,
										1140166
									],
									[
										1140560,
										1140567
									],
									[
										1140818,
										1140825
									],
									[
										1141124,
										1141131
									],
									[
										1141395,
										1141402
									],
									[
										1141924,
										1141931
									],
									[
										1142278,
										1142285
									],
									[
										1142591,
										1142598
									],
									[
										1142622,
										1142629
									],
									[
										1142958,
										1142965
									],
									[
										1142989,
										1142996
									],
									[
										1143314,
										1143321
									],
									[
										1143541,
										1143548
									],
									[
										1143937,
										1143944
									],
									[
										1144220,
										1144227
									],
									[
										1144418,
										1144425
									],
									[
										1144774,
										1144781
									],
									[
										1144809,
										1144816
									],
									[
										1144845,
										1144852
									],
									[
										1144877,
										1144884
									],
									[
										1144938,
										1144945
									],
									[
										1144969,
										1144976
									],
									[
										1145215,
										1145222
									],
									[
										1145364,
										1145371
									],
									[
										1145410,
										1145417
									],
									[
										1145575,
										1145582
									],
									[
										1145929,
										1145936
									],
									[
										1146554,
										1146561
									],
									[
										1146735,
										1146742
									],
									[
										1146765,
										1146772
									],
									[
										1146788,
										1146795
									],
									[
										1146878,
										1146885
									],
									[
										1147132,
										1147139
									],
									[
										1147293,
										1147300
									],
									[
										1147377,
										1147384
									],
									[
										1147513,
										1147520
									],
									[
										1147669,
										1147676
									],
									[
										1147956,
										1147963
									],
									[
										1148284,
										1148291
									],
									[
										1148686,
										1148693
									],
									[
										1148953,
										1148960
									],
									[
										1149394,
										1149401
									],
									[
										1149696,
										1149703
									],
									[
										1149971,
										1149978
									],
									[
										1150247,
										1150254
									],
									[
										1150523,
										1150530
									],
									[
										1150834,
										1150841
									],
									[
										1151132,
										1151139
									],
									[
										1151234,
										1151241
									],
									[
										1151488,
										1151495
									],
									[
										1151501,
										1151508
									],
									[
										1151644,
										1151651
									],
									[
										1152011,
										1152018
									],
									[
										1152301,
										1152308
									],
									[
										1152562,
										1152569
									],
									[
										1152593,
										1152600
									],
									[
										1152695,
										1152702
									],
									[
										1152958,
										1152965
									],
									[
										1152982,
										1152989
									],
									[
										1153164,
										1153171
									],
									[
										1153194,
										1153201
									],
									[
										1153374,
										1153381
									],
									[
										1153448,
										1153455
									],
									[
										1153578,
										1153585
									],
									[
										1153645,
										1153652
									],
									[
										1154060,
										1154067
									],
									[
										1154535,
										1154542
									],
									[
										1154627,
										1154634
									],
									[
										1154723,
										1154730
									],
									[
										1154812,
										1154819
									],
									[
										1154905,
										1154912
									],
									[
										1154999,
										1155006
									],
									[
										1155090,
										1155097
									],
									[
										1155180,
										1155187
									],
									[
										1155289,
										1155296
									],
									[
										1155368,
										1155375
									],
									[
										1155447,
										1155454
									],
									[
										1155526,
										1155533
									],
									[
										1155609,
										1155616
									],
									[
										1155692,
										1155699
									],
									[
										1155777,
										1155784
									],
									[
										1155862,
										1155869
									],
									[
										1155934,
										1155941
									],
									[
										1156007,
										1156014
									],
									[
										1156115,
										1156122
									],
									[
										1156223,
										1156230
									],
									[
										1156310,
										1156317
									],
									[
										1156395,
										1156402
									],
									[
										1156517,
										1156524
									],
									[
										1156640,
										1156647
									],
									[
										1156736,
										1156743
									],
									[
										1156831,
										1156838
									],
									[
										1156915,
										1156922
									],
									[
										1157001,
										1157008
									],
									[
										1157165,
										1157172
									],
									[
										1157303,
										1157310
									],
									[
										1157435,
										1157442
									],
									[
										1157530,
										1157537
									],
									[
										1157611,
										1157618
									],
									[
										1157733,
										1157740
									],
									[
										1157775,
										1157782
									],
									[
										1157824,
										1157831
									],
									[
										1157919,
										1157926
									],
									[
										1158018,
										1158025
									],
									[
										1158134,
										1158141
									],
									[
										1158191,
										1158198
									],
									[
										1158613,
										1158620
									],
									[
										1158684,
										1158691
									],
									[
										1158740,
										1158747
									],
									[
										1158949,
										1158956
									],
									[
										1159246,
										1159253
									],
									[
										1159645,
										1159652
									],
									[
										1159912,
										1159919
									],
									[
										1160284,
										1160291
									],
									[
										1160605,
										1160612
									],
									[
										1160995,
										1161002
									],
									[
										1161132,
										1161139
									],
									[
										1161584,
										1161591
									],
									[
										1162194,
										1162201
									],
									[
										1162241,
										1162248
									],
									[
										1162612,
										1162619
									],
									[
										1163049,
										1163056
									],
									[
										1163229,
										1163236
									],
									[
										1163655,
										1163662
									],
									[
										1163941,
										1163948
									],
									[
										1164173,
										1164180
									],
									[
										1164615,
										1164622
									],
									[
										1165460,
										1165467
									],
									[
										1165531,
										1165538
									],
									[
										1165633,
										1165640
									],
									[
										1165730,
										1165737
									],
									[
										1166000,
										1166007
									],
									[
										1166276,
										1166283
									],
									[
										1166576,
										1166583
									],
									[
										1166951,
										1166958
									],
									[
										1167420,
										1167427
									],
									[
										1167869,
										1167876
									],
									[
										1168196,
										1168203
									],
									[
										1168651,
										1168658
									],
									[
										1168975,
										1168982
									],
									[
										1169536,
										1169543
									],
									[
										1169773,
										1169780
									],
									[
										1169832,
										1169839
									],
									[
										1170107,
										1170114
									],
									[
										1170512,
										1170519
									],
									[
										1170894,
										1170901
									],
									[
										1171255,
										1171262
									],
									[
										1171536,
										1171543
									],
									[
										1171860,
										1171867
									],
									[
										1172177,
										1172184
									],
									[
										1172463,
										1172470
									],
									[
										1172759,
										1172766
									],
									[
										1172939,
										1172946
									],
									[
										1172993,
										1173000
									],
									[
										1173160,
										1173167
									],
									[
										1173170,
										1173177
									],
									[
										1173466,
										1173473
									],
									[
										1173923,
										1173930
									],
									[
										1174231,
										1174238
									],
									[
										1174529,
										1174536
									],
									[
										1174833,
										1174840
									],
									[
										1175141,
										1175148
									],
									[
										1175439,
										1175446
									],
									[
										1175743,
										1175750
									],
									[
										1176051,
										1176058
									],
									[
										1176349,
										1176356
									],
									[
										1176653,
										1176660
									],
									[
										1176961,
										1176968
									],
									[
										1177259,
										1177266
									],
									[
										1177563,
										1177570
									],
									[
										1177871,
										1177878
									],
									[
										1178169,
										1178176
									],
									[
										1178473,
										1178480
									],
									[
										1178781,
										1178788
									],
									[
										1179079,
										1179086
									],
									[
										1179402,
										1179409
									],
									[
										1179710,
										1179717
									],
									[
										1180008,
										1180015
									],
									[
										1180422,
										1180429
									],
									[
										1180718,
										1180725
									],
									[
										1181120,
										1181127
									],
									[
										1181541,
										1181548
									],
									[
										1181866,
										1181873
									],
									[
										1182361,
										1182368
									],
									[
										1182483,
										1182490
									],
									[
										1183043,
										1183050
									],
									[
										1183708,
										1183715
									],
									[
										1183940,
										1183947
									],
									[
										1184010,
										1184017
									],
									[
										1184046,
										1184053
									],
									[
										1184154,
										1184161
									],
									[
										1184180,
										1184187
									],
									[
										1184303,
										1184310
									],
									[
										1184511,
										1184518
									],
									[
										1184523,
										1184530
									],
									[
										1184588,
										1184595
									],
									[
										1184950,
										1184957
									],
									[
										1185442,
										1185449
									],
									[
										1186047,
										1186054
									],
									[
										1186174,
										1186181
									],
									[
										1186302,
										1186309
									],
									[
										1186415,
										1186422
									],
									[
										1186669,
										1186676
									],
									[
										1187048,
										1187055
									],
									[
										1187415,
										1187422
									],
									[
										1187840,
										1187847
									],
									[
										1188071,
										1188078
									],
									[
										1188300,
										1188307
									],
									[
										1188707,
										1188714
									],
									[
										1189018,
										1189025
									],
									[
										1189280,
										1189287
									],
									[
										1189422,
										1189429
									],
									[
										1189739,
										1189746
									],
									[
										1189848,
										1189855
									],
									[
										1189919,
										1189926
									],
									[
										1190203,
										1190210
									],
									[
										1190250,
										1190257
									],
									[
										1190294,
										1190301
									],
									[
										1190342,
										1190349
									],
									[
										1190387,
										1190394
									],
									[
										1190517,
										1190524
									],
									[
										1190536,
										1190543
									],
									[
										1190619,
										1190626
									],
									[
										1190723,
										1190730
									],
									[
										1190776,
										1190783
									],
									[
										1191019,
										1191026
									],
									[
										1191409,
										1191416
									],
									[
										1191473,
										1191480
									],
									[
										1191941,
										1191948
									],
									[
										1192362,
										1192369
									],
									[
										1192816,
										1192823
									],
									[
										1193078,
										1193085
									],
									[
										1193418,
										1193425
									],
									[
										1193731,
										1193738
									],
									[
										1194064,
										1194071
									],
									[
										1194379,
										1194386
									],
									[
										1194607,
										1194614
									],
									[
										1194948,
										1194955
									],
									[
										1195191,
										1195198
									],
									[
										1195645,
										1195652
									],
									[
										1196098,
										1196105
									],
									[
										1196387,
										1196394
									],
									[
										1196771,
										1196778
									],
									[
										1196847,
										1196854
									],
									[
										1197298,
										1197305
									],
									[
										1197555,
										1197562
									],
									[
										1197812,
										1197819
									],
									[
										1198027,
										1198034
									],
									[
										1198332,
										1198339
									],
									[
										1198472,
										1198479
									],
									[
										1198723,
										1198730
									],
									[
										1198786,
										1198793
									],
									[
										1198982,
										1198989
									],
									[
										1198998,
										1199005
									],
									[
										1199129,
										1199136
									],
									[
										1199571,
										1199578
									],
									[
										1199666,
										1199673
									],
									[
										1200071,
										1200078
									],
									[
										1200367,
										1200374
									],
									[
										1200623,
										1200630
									],
									[
										1201081,
										1201088
									],
									[
										1201474,
										1201481
									],
									[
										1201902,
										1201909
									],
									[
										1202371,
										1202378
									],
									[
										1202424,
										1202431
									],
									[
										1202610,
										1202617
									],
									[
										1202773,
										1202780
									],
									[
										1203072,
										1203079
									],
									[
										1203223,
										1203230
									],
									[
										1203583,
										1203590
									],
									[
										1203860,
										1203867
									],
									[
										1204173,
										1204180
									],
									[
										1204559,
										1204566
									],
									[
										1204923,
										1204930
									],
									[
										1205290,
										1205297
									],
									[
										1205657,
										1205664
									],
									[
										1205980,
										1205987
									],
									[
										1206007,
										1206014
									],
									[
										1206158,
										1206165
									],
									[
										1206275,
										1206282
									],
									[
										1206528,
										1206535
									],
									[
										1206776,
										1206783
									],
									[
										1206897,
										1206904
									],
									[
										1207118,
										1207125
									],
									[
										1207451,
										1207458
									],
									[
										1207637,
										1207644
									],
									[
										1208097,
										1208104
									],
									[
										1208608,
										1208615
									],
									[
										1209100,
										1209107
									],
									[
										1209328,
										1209335
									],
									[
										1209774,
										1209781
									],
									[
										1209948,
										1209955
									],
									[
										1210420,
										1210427
									],
									[
										1210786,
										1210793
									],
									[
										1211056,
										1211063
									],
									[
										1211071,
										1211078
									],
									[
										1211616,
										1211623
									],
									[
										1211958,
										1211965
									],
									[
										1212269,
										1212276
									],
									[
										1212594,
										1212601
									],
									[
										1213000,
										1213007
									],
									[
										1213444,
										1213451
									],
									[
										1213661,
										1213668
									],
									[
										1213773,
										1213780
									],
									[
										1214134,
										1214141
									],
									[
										1214527,
										1214534
									],
									[
										1214943,
										1214950
									],
									[
										1215281,
										1215288
									],
									[
										1215776,
										1215783
									],
									[
										1215802,
										1215809
									],
									[
										1216000,
										1216007
									],
									[
										1216026,
										1216033
									],
									[
										1216361,
										1216368
									],
									[
										1216966,
										1216973
									],
									[
										1217228,
										1217235
									],
									[
										1217676,
										1217683
									],
									[
										1218062,
										1218069
									],
									[
										1218735,
										1218742
									],
									[
										1219096,
										1219103
									],
									[
										1219433,
										1219440
									],
									[
										1219700,
										1219707
									],
									[
										1220051,
										1220058
									],
									[
										1220404,
										1220411
									],
									[
										1220972,
										1220979
									],
									[
										1221355,
										1221362
									],
									[
										1221790,
										1221797
									],
									[
										1222152,
										1222159
									],
									[
										1222573,
										1222580
									],
									[
										1222865,
										1222872
									],
									[
										1223175,
										1223182
									],
									[
										1223490,
										1223497
									],
									[
										1223939,
										1223946
									],
									[
										1224405,
										1224412
									],
									[
										1224652,
										1224659
									],
									[
										1224930,
										1224937
									],
									[
										1225296,
										1225303
									],
									[
										1225599,
										1225606
									],
									[
										1225956,
										1225963
									],
									[
										1226303,
										1226310
									],
									[
										1226885,
										1226892
									],
									[
										1227375,
										1227382
									],
									[
										1227826,
										1227833
									],
									[
										1228329,
										1228336
									],
									[
										1228779,
										1228786
									],
									[
										1229189,
										1229196
									],
									[
										1229640,
										1229647
									],
									[
										1230004,
										1230011
									],
									[
										1230289,
										1230296
									],
									[
										1230525,
										1230532
									],
									[
										1230942,
										1230949
									],
									[
										1231128,
										1231135
									],
									[
										1231509,
										1231516
									],
									[
										1231820,
										1231827
									],
									[
										1232504,
										1232511
									],
									[
										1232951,
										1232958
									],
									[
										1233342,
										1233349
									],
									[
										1233880,
										1233887
									],
									[
										1233926,
										1233933
									],
									[
										1234299,
										1234306
									],
									[
										1234349,
										1234356
									],
									[
										1234644,
										1234651
									],
									[
										1234694,
										1234701
									],
									[
										1235050,
										1235057
									],
									[
										1235100,
										1235107
									],
									[
										1235496,
										1235503
									],
									[
										1235546,
										1235553
									],
									[
										1235975,
										1235982
									],
									[
										1236314,
										1236321
									],
									[
										1236632,
										1236639
									],
									[
										1237044,
										1237051
									],
									[
										1237156,
										1237163
									],
									[
										1237857,
										1237864
									],
									[
										1238275,
										1238282
									],
									[
										1238437,
										1238444
									],
									[
										1238799,
										1238806
									],
									[
										1238895,
										1238902
									],
									[
										1239183,
										1239190
									],
									[
										1239835,
										1239842
									],
									[
										1239945,
										1239952
									],
									[
										1240351,
										1240358
									],
									[
										1240757,
										1240764
									],
									[
										1241278,
										1241285
									],
									[
										1241937,
										1241944
									],
									[
										1242514,
										1242521
									],
									[
										1243226,
										1243233
									],
									[
										1243565,
										1243572
									],
									[
										1243838,
										1243845
									],
									[
										1244074,
										1244081
									],
									[
										1244388,
										1244395
									],
									[
										1244468,
										1244475
									],
									[
										1244737,
										1244744
									],
									[
										1244901,
										1244908
									],
									[
										1245306,
										1245313
									],
									[
										1245386,
										1245393
									],
									[
										1245655,
										1245662
									],
									[
										1245819,
										1245826
									],
									[
										1246298,
										1246305
									],
									[
										1246582,
										1246589
									],
									[
										1246662,
										1246669
									],
									[
										1246729,
										1246736
									],
									[
										1246990,
										1246997
									],
									[
										1247198,
										1247205
									],
									[
										1247522,
										1247529
									],
									[
										1247763,
										1247770
									],
									[
										1248090,
										1248097
									],
									[
										1248327,
										1248334
									],
									[
										1248645,
										1248652
									],
									[
										1248903,
										1248910
									],
									[
										1249277,
										1249284
									],
									[
										1249305,
										1249312
									],
									[
										1249645,
										1249652
									],
									[
										1249982,
										1249989
									],
									[
										1250082,
										1250089
									],
									[
										1250168,
										1250175
									],
									[
										1250435,
										1250442
									],
									[
										1250967,
										1250974
									],
									[
										1251262,
										1251269
									],
									[
										1251421,
										1251428
									],
									[
										1251851,
										1251858
									],
									[
										1252427,
										1252434
									],
									[
										1252862,
										1252869
									],
									[
										1252919,
										1252926
									],
									[
										1253115,
										1253122
									],
									[
										1253431,
										1253438
									],
									[
										1253481,
										1253488
									],
									[
										1253748,
										1253755
									],
									[
										1253757,
										1253764
									],
									[
										1253990,
										1253997
									],
									[
										1254089,
										1254096
									],
									[
										1254351,
										1254358
									],
									[
										1254667,
										1254674
									],
									[
										1254717,
										1254724
									],
									[
										1254988,
										1254995
									],
									[
										1254997,
										1255004
									],
									[
										1255332,
										1255339
									],
									[
										1255655,
										1255662
									],
									[
										1255918,
										1255925
									],
									[
										1256209,
										1256216
									],
									[
										1256611,
										1256618
									],
									[
										1256639,
										1256646
									],
									[
										1256959,
										1256966
									],
									[
										1257356,
										1257363
									],
									[
										1257384,
										1257391
									],
									[
										1257526,
										1257533
									],
									[
										1257752,
										1257759
									],
									[
										1257870,
										1257877
									],
									[
										1257980,
										1257987
									],
									[
										1258383,
										1258390
									],
									[
										1258707,
										1258714
									],
									[
										1259023,
										1259030
									],
									[
										1259242,
										1259249
									],
									[
										1259439,
										1259446
									],
									[
										1259879,
										1259886
									],
									[
										1260310,
										1260317
									],
									[
										1260758,
										1260765
									],
									[
										1261130,
										1261137
									],
									[
										1261417,
										1261424
									],
									[
										1261777,
										1261784
									],
									[
										1261947,
										1261954
									],
									[
										1262056,
										1262063
									],
									[
										1262069,
										1262076
									],
									[
										1262227,
										1262234
									],
									[
										1262542,
										1262549
									],
									[
										1262619,
										1262626
									],
									[
										1263061,
										1263068
									],
									[
										1263313,
										1263320
									],
									[
										1263922,
										1263929
									],
									[
										1264288,
										1264295
									],
									[
										1264657,
										1264664
									],
									[
										1264928,
										1264935
									],
									[
										1265102,
										1265109
									],
									[
										1265336,
										1265343
									],
									[
										1265513,
										1265520
									],
									[
										1265977,
										1265984
									],
									[
										1266460,
										1266467
									],
									[
										1266948,
										1266955
									],
									[
										1266997,
										1267004
									],
									[
										1267581,
										1267588
									],
									[
										1268063,
										1268070
									],
									[
										1268111,
										1268118
									],
									[
										1268577,
										1268584
									],
									[
										1268625,
										1268632
									],
									[
										1269094,
										1269101
									],
									[
										1269644,
										1269651
									],
									[
										1269674,
										1269681
									],
									[
										1269714,
										1269721
									],
									[
										1270471,
										1270478
									],
									[
										1271043,
										1271050
									],
									[
										1271488,
										1271495
									],
									[
										1272061,
										1272068
									],
									[
										1272451,
										1272458
									],
									[
										1272797,
										1272804
									],
									[
										1273207,
										1273214
									],
									[
										1273650,
										1273657
									],
									[
										1274089,
										1274096
									],
									[
										1274133,
										1274140
									],
									[
										1274143,
										1274150
									],
									[
										1274172,
										1274179
									],
									[
										1274316,
										1274323
									],
									[
										1274492,
										1274499
									],
									[
										1274614,
										1274621
									],
									[
										1274937,
										1274944
									],
									[
										1274968,
										1274975
									],
									[
										1274991,
										1274998
									],
									[
										1275021,
										1275028
									],
									[
										1275439,
										1275446
									],
									[
										1275461,
										1275468
									],
									[
										1275491,
										1275498
									],
									[
										1275897,
										1275904
									],
									[
										1275919,
										1275926
									],
									[
										1276313,
										1276320
									],
									[
										1276335,
										1276342
									],
									[
										1276370,
										1276377
									],
									[
										1276654,
										1276661
									],
									[
										1276789,
										1276796
									],
									[
										1276833,
										1276840
									],
									[
										1277127,
										1277134
									],
									[
										1277428,
										1277435
									],
									[
										1277831,
										1277838
									],
									[
										1278320,
										1278327
									],
									[
										1278710,
										1278717
									],
									[
										1279168,
										1279175
									],
									[
										1279374,
										1279381
									],
									[
										1279700,
										1279707
									],
									[
										1280118,
										1280125
									],
									[
										1280531,
										1280538
									],
									[
										1280830,
										1280837
									],
									[
										1281127,
										1281134
									],
									[
										1281353,
										1281360
									],
									[
										1281414,
										1281421
									],
									[
										1281498,
										1281505
									],
									[
										1281562,
										1281569
									],
									[
										1281789,
										1281796
									],
									[
										1282150,
										1282157
									],
									[
										1282255,
										1282262
									],
									[
										1282582,
										1282589
									],
									[
										1282857,
										1282864
									],
									[
										1282885,
										1282892
									],
									[
										1283040,
										1283047
									],
									[
										1283308,
										1283315
									],
									[
										1283697,
										1283704
									],
									[
										1283725,
										1283732
									],
									[
										1284036,
										1284043
									],
									[
										1284357,
										1284364
									],
									[
										1284724,
										1284731
									],
									[
										1285123,
										1285130
									],
									[
										1285562,
										1285569
									],
									[
										1285622,
										1285629
									],
									[
										1285859,
										1285866
									],
									[
										1286081,
										1286088
									],
									[
										1286691,
										1286698
									],
									[
										1287249,
										1287256
									],
									[
										1287918,
										1287925
									],
									[
										1288382,
										1288389
									],
									[
										1288720,
										1288727
									],
									[
										1288748,
										1288755
									],
									[
										1289051,
										1289058
									],
									[
										1289137,
										1289144
									],
									[
										1289359,
										1289366
									],
									[
										1289673,
										1289680
									],
									[
										1290178,
										1290185
									],
									[
										1290621,
										1290628
									],
									[
										1290702,
										1290709
									],
									[
										1290867,
										1290874
									],
									[
										1291232,
										1291239
									],
									[
										1291260,
										1291267
									],
									[
										1291375,
										1291382
									],
									[
										1291779,
										1291786
									],
									[
										1292169,
										1292176
									],
									[
										1292351,
										1292358
									],
									[
										1292522,
										1292529
									],
									[
										1292792,
										1292799
									],
									[
										1293180,
										1293187
									],
									[
										1293761,
										1293768
									],
									[
										1294040,
										1294047
									],
									[
										1294571,
										1294578
									],
									[
										1295004,
										1295011
									],
									[
										1295513,
										1295520
									],
									[
										1295522,
										1295529
									],
									[
										1295981,
										1295988
									],
									[
										1296473,
										1296480
									],
									[
										1296504,
										1296511
									],
									[
										1297097,
										1297104
									],
									[
										1297346,
										1297353
									],
									[
										1297440,
										1297447
									],
									[
										1297982,
										1297989
									],
									[
										1298233,
										1298240
									],
									[
										1298325,
										1298332
									],
									[
										1298869,
										1298876
									],
									[
										1299195,
										1299202
									],
									[
										1299483,
										1299490
									],
									[
										1299991,
										1299998
									],
									[
										1300429,
										1300436
									],
									[
										1300793,
										1300800
									],
									[
										1301234,
										1301241
									],
									[
										1301243,
										1301250
									],
									[
										1301674,
										1301681
									],
									[
										1302184,
										1302191
									],
									[
										1302215,
										1302222
									],
									[
										1302774,
										1302781
									],
									[
										1302840,
										1302847
									],
									[
										1302980,
										1302987
									],
									[
										1303077,
										1303084
									],
									[
										1303284,
										1303291
									],
									[
										1303311,
										1303318
									],
									[
										1303440,
										1303447
									],
									[
										1303572,
										1303579
									],
									[
										1303598,
										1303605
									],
									[
										1303718,
										1303725
									],
									[
										1303909,
										1303916
									],
									[
										1304240,
										1304247
									],
									[
										1304275,
										1304282
									],
									[
										1304690,
										1304697
									],
									[
										1305055,
										1305062
									],
									[
										1305423,
										1305430
									],
									[
										1305894,
										1305901
									],
									[
										1305972,
										1305979
									],
									[
										1306276,
										1306283
									],
									[
										1306298,
										1306305
									],
									[
										1306676,
										1306683
									],
									[
										1306698,
										1306705
									],
									[
										1307127,
										1307134
									],
									[
										1307604,
										1307611
									],
									[
										1308044,
										1308051
									],
									[
										1308074,
										1308081
									],
									[
										1308104,
										1308111
									],
									[
										1308492,
										1308499
									],
									[
										1308803,
										1308810
									],
									[
										1309011,
										1309018
									],
									[
										1309068,
										1309075
									],
									[
										1309270,
										1309277
									],
									[
										1309478,
										1309485
									],
									[
										1309535,
										1309542
									],
									[
										1309762,
										1309769
									],
									[
										1309790,
										1309797
									],
									[
										1310146,
										1310153
									],
									[
										1310405,
										1310412
									],
									[
										1310947,
										1310954
									],
									[
										1311245,
										1311252
									],
									[
										1311516,
										1311523
									],
									[
										1311793,
										1311800
									],
									[
										1311880,
										1311887
									],
									[
										1311952,
										1311959
									],
									[
										1312390,
										1312397
									],
									[
										1312605,
										1312612
									],
									[
										1313274,
										1313281
									],
									[
										1313400,
										1313407
									],
									[
										1313480,
										1313487
									],
									[
										1313870,
										1313877
									],
									[
										1314351,
										1314358
									],
									[
										1314543,
										1314550
									],
									[
										1314894,
										1314901
									],
									[
										1315206,
										1315213
									],
									[
										1315828,
										1315835
									],
									[
										1315949,
										1315956
									],
									[
										1316363,
										1316370
									],
									[
										1316388,
										1316395
									],
									[
										1316416,
										1316423
									],
									[
										1316789,
										1316796
									],
									[
										1316825,
										1316832
									],
									[
										1317295,
										1317302
									],
									[
										1317916,
										1317923
									],
									[
										1318294,
										1318301
									],
									[
										1318327,
										1318334
									],
									[
										1318355,
										1318362
									],
									[
										1318745,
										1318752
									],
									[
										1318771,
										1318778
									],
									[
										1318807,
										1318814
									],
									[
										1318825,
										1318832
									],
									[
										1319180,
										1319187
									],
									[
										1319215,
										1319222
									],
									[
										1319554,
										1319561
									],
									[
										1319596,
										1319603
									],
									[
										1320056,
										1320063
									],
									[
										1320113,
										1320120
									],
									[
										1320402,
										1320409
									],
									[
										1320458,
										1320465
									],
									[
										1320709,
										1320716
									],
									[
										1320765,
										1320772
									],
									[
										1320998,
										1321005
									],
									[
										1321054,
										1321061
									],
									[
										1321377,
										1321384
									],
									[
										1321640,
										1321647
									],
									[
										1321668,
										1321675
									],
									[
										1321828,
										1321835
									],
									[
										1322087,
										1322094
									],
									[
										1322609,
										1322616
									],
									[
										1322965,
										1322972
									],
									[
										1323227,
										1323234
									],
									[
										1323446,
										1323453
									],
									[
										1323723,
										1323730
									],
									[
										1324062,
										1324069
									],
									[
										1324411,
										1324418
									],
									[
										1324728,
										1324735
									],
									[
										1325115,
										1325122
									],
									[
										1325124,
										1325131
									],
									[
										1325561,
										1325568
									],
									[
										1325965,
										1325972
									],
									[
										1326089,
										1326096
									],
									[
										1326172,
										1326179
									],
									[
										1326340,
										1326347
									],
									[
										1326366,
										1326373
									],
									[
										1326488,
										1326495
									],
									[
										1326900,
										1326907
									],
									[
										1326935,
										1326942
									],
									[
										1327327,
										1327334
									],
									[
										1327449,
										1327456
									],
									[
										1327888,
										1327895
									],
									[
										1328192,
										1328199
									],
									[
										1328214,
										1328221
									],
									[
										1328588,
										1328595
									],
									[
										1328610,
										1328617
									],
									[
										1329039,
										1329046
									],
									[
										1329512,
										1329519
									],
									[
										1329954,
										1329961
									],
									[
										1330341,
										1330348
									],
									[
										1330647,
										1330654
									],
									[
										1330935,
										1330942
									],
									[
										1331285,
										1331292
									],
									[
										1331603,
										1331610
									],
									[
										1331909,
										1331916
									],
									[
										1332197,
										1332204
									],
									[
										1332547,
										1332554
									],
									[
										1332867,
										1332874
									],
									[
										1333173,
										1333180
									],
									[
										1333461,
										1333468
									],
									[
										1333811,
										1333818
									],
									[
										1334129,
										1334136
									],
									[
										1334435,
										1334442
									],
									[
										1334723,
										1334730
									],
									[
										1335073,
										1335080
									],
									[
										1335411,
										1335418
									],
									[
										1335607,
										1335614
									],
									[
										1336062,
										1336069
									],
									[
										1336369,
										1336376
									],
									[
										1336691,
										1336698
									],
									[
										1336835,
										1336842
									],
									[
										1337121,
										1337128
									],
									[
										1337758,
										1337765
									],
									[
										1337915,
										1337922
									],
									[
										1337945,
										1337952
									],
									[
										1337960,
										1337967
									],
									[
										1338244,
										1338251
									],
									[
										1338453,
										1338460
									],
									[
										1338778,
										1338785
									],
									[
										1338990,
										1338997
									],
									[
										1339349,
										1339356
									],
									[
										1339689,
										1339696
									],
									[
										1340030,
										1340037
									],
									[
										1340703,
										1340710
									],
									[
										1341658,
										1341665
									],
									[
										1342052,
										1342059
									],
									[
										1342264,
										1342271
									],
									[
										1342671,
										1342678
									],
									[
										1343106,
										1343113
									],
									[
										1343266,
										1343273
									],
									[
										1343731,
										1343738
									],
									[
										1343892,
										1343899
									],
									[
										1344216,
										1344223
									],
									[
										1344253,
										1344260
									],
									[
										1344510,
										1344517
									],
									[
										1344792,
										1344799
									],
									[
										1345094,
										1345101
									],
									[
										1345208,
										1345215
									],
									[
										1345532,
										1345539
									],
									[
										1345543,
										1345550
									],
									[
										1345590,
										1345597
									],
									[
										1345791,
										1345798
									],
									[
										1345916,
										1345923
									],
									[
										1346119,
										1346126
									],
									[
										1346221,
										1346228
									],
									[
										1346513,
										1346520
									],
									[
										1346896,
										1346903
									],
									[
										1347266,
										1347273
									],
									[
										1347657,
										1347664
									],
									[
										1348097,
										1348104
									],
									[
										1348510,
										1348517
									],
									[
										1348749,
										1348756
									],
									[
										1349299,
										1349306
									],
									[
										1349806,
										1349813
									],
									[
										1350115,
										1350122
									],
									[
										1350300,
										1350307
									],
									[
										1350672,
										1350679
									],
									[
										1350773,
										1350780
									],
									[
										1350868,
										1350875
									],
									[
										1350958,
										1350965
									],
									[
										1351185,
										1351192
									],
									[
										1351657,
										1351664
									],
									[
										1351985,
										1351992
									],
									[
										1352214,
										1352221
									],
									[
										1352397,
										1352404
									],
									[
										1352723,
										1352730
									],
									[
										1353155,
										1353162
									],
									[
										1353717,
										1353724
									],
									[
										1354379,
										1354386
									],
									[
										1354676,
										1354683
									],
									[
										1354987,
										1354994
									],
									[
										1355057,
										1355064
									],
									[
										1355152,
										1355159
									],
									[
										1355248,
										1355255
									],
									[
										1355345,
										1355352
									],
									[
										1355440,
										1355447
									],
									[
										1355535,
										1355542
									],
									[
										1355634,
										1355641
									],
									[
										1355731,
										1355738
									],
									[
										1355829,
										1355836
									],
									[
										1355936,
										1355943
									],
									[
										1356247,
										1356254
									],
									[
										1356347,
										1356354
									],
									[
										1356589,
										1356596
									],
									[
										1356661,
										1356668
									],
									[
										1357030,
										1357037
									],
									[
										1357287,
										1357294
									],
									[
										1357499,
										1357506
									],
									[
										1357819,
										1357826
									],
									[
										1357851,
										1357858
									],
									[
										1358013,
										1358020
									],
									[
										1358099,
										1358106
									],
									[
										1358241,
										1358248
									],
									[
										1358393,
										1358400
									],
									[
										1358866,
										1358873
									],
									[
										1358875,
										1358882
									],
									[
										1359457,
										1359464
									],
									[
										1360046,
										1360053
									],
									[
										1360133,
										1360140
									],
									[
										1360653,
										1360660
									],
									[
										1361052,
										1361059
									],
									[
										1361444,
										1361451
									],
									[
										1361522,
										1361529
									],
									[
										1361805,
										1361812
									],
									[
										1362086,
										1362093
									],
									[
										1362389,
										1362396
									],
									[
										1362676,
										1362683
									],
									[
										1362985,
										1362992
									],
									[
										1363268,
										1363275
									],
									[
										1363618,
										1363625
									],
									[
										1364201,
										1364208
									],
									[
										1364777,
										1364784
									],
									[
										1364989,
										1364996
									],
									[
										1365089,
										1365096
									],
									[
										1365583,
										1365590
									],
									[
										1365828,
										1365835
									],
									[
										1366298,
										1366305
									],
									[
										1366307,
										1366314
									],
									[
										1366477,
										1366484
									],
									[
										1366755,
										1366762
									],
									[
										1367159,
										1367166
									],
									[
										1367526,
										1367533
									],
									[
										1367588,
										1367595
									],
									[
										1367654,
										1367661
									],
									[
										1367712,
										1367719
									],
									[
										1367763,
										1367770
									],
									[
										1367855,
										1367862
									],
									[
										1368076,
										1368083
									],
									[
										1368122,
										1368129
									],
									[
										1368421,
										1368428
									],
									[
										1368481,
										1368488
									],
									[
										1368540,
										1368547
									],
									[
										1368591,
										1368598
									],
									[
										1368683,
										1368690
									],
									[
										1368904,
										1368911
									],
									[
										1368950,
										1368957
									],
									[
										1369249,
										1369256
									],
									[
										1369309,
										1369316
									],
									[
										1369369,
										1369376
									],
									[
										1369420,
										1369427
									],
									[
										1369526,
										1369533
									],
									[
										1369747,
										1369754
									],
									[
										1369793,
										1369800
									],
									[
										1370147,
										1370154
									],
									[
										1370338,
										1370345
									],
									[
										1370401,
										1370408
									],
									[
										1370464,
										1370471
									],
									[
										1370538,
										1370545
									],
									[
										1370848,
										1370855
									],
									[
										1371277,
										1371284
									],
									[
										1371577,
										1371584
									],
									[
										1371697,
										1371704
									],
									[
										1372118,
										1372125
									],
									[
										1372501,
										1372508
									],
									[
										1372790,
										1372797
									],
									[
										1373177,
										1373184
									],
									[
										1373256,
										1373263
									],
									[
										1373335,
										1373342
									],
									[
										1373408,
										1373415
									],
									[
										1373708,
										1373715
									],
									[
										1373787,
										1373794
									],
									[
										1373866,
										1373873
									],
									[
										1373939,
										1373946
									],
									[
										1374380,
										1374387
									],
									[
										1374421,
										1374428
									],
									[
										1374440,
										1374447
									],
									[
										1374513,
										1374520
									],
									[
										1374582,
										1374589
									],
									[
										1375102,
										1375109
									],
									[
										1375143,
										1375150
									],
									[
										1375162,
										1375169
									],
									[
										1375235,
										1375242
									],
									[
										1375304,
										1375311
									],
									[
										1375886,
										1375893
									],
									[
										1375920,
										1375927
									],
									[
										1375961,
										1375968
									],
									[
										1376544,
										1376551
									],
									[
										1376578,
										1376585
									],
									[
										1376619,
										1376626
									],
									[
										1377104,
										1377111
									],
									[
										1377778,
										1377785
									],
									[
										1378496,
										1378503
									],
									[
										1378586,
										1378593
									],
									[
										1379165,
										1379172
									],
									[
										1379255,
										1379262
									],
									[
										1379840,
										1379847
									],
									[
										1379930,
										1379937
									],
									[
										1380508,
										1380515
									],
									[
										1381087,
										1381094
									],
									[
										1381672,
										1381679
									],
									[
										1382209,
										1382216
									],
									[
										1382578,
										1382585
									],
									[
										1382805,
										1382812
									],
									[
										1383113,
										1383120
									],
									[
										1383434,
										1383441
									],
									[
										1383539,
										1383546
									],
									[
										1383956,
										1383963
									],
									[
										1384483,
										1384490
									],
									[
										1384778,
										1384785
									],
									[
										1385082,
										1385089
									],
									[
										1385409,
										1385416
									],
									[
										1385530,
										1385537
									],
									[
										1385742,
										1385749
									],
									[
										1385822,
										1385829
									],
									[
										1385975,
										1385982
									],
									[
										1386497,
										1386504
									],
									[
										1386947,
										1386954
									],
									[
										1387002,
										1387009
									],
									[
										1387052,
										1387059
									],
									[
										1387106,
										1387113
									],
									[
										1387358,
										1387365
									],
									[
										1387414,
										1387421
									],
									[
										1387467,
										1387474
									],
									[
										1387697,
										1387704
									],
									[
										1387749,
										1387756
									],
									[
										1387802,
										1387809
									],
									[
										1388135,
										1388142
									],
									[
										1388321,
										1388328
									],
									[
										1388709,
										1388716
									],
									[
										1388954,
										1388961
									],
									[
										1389453,
										1389460
									],
									[
										1389976,
										1389983
									],
									[
										1390009,
										1390016
									],
									[
										1390043,
										1390050
									],
									[
										1390645,
										1390652
									],
									[
										1391112,
										1391119
									],
									[
										1391514,
										1391521
									],
									[
										1391770,
										1391777
									],
									[
										1391798,
										1391805
									],
									[
										1392089,
										1392096
									],
									[
										1392179,
										1392186
									],
									[
										1392546,
										1392553
									],
									[
										1392882,
										1392889
									],
									[
										1392925,
										1392932
									],
									[
										1393288,
										1393295
									],
									[
										1393331,
										1393338
									],
									[
										1393374,
										1393381
									],
									[
										1393417,
										1393424
									],
									[
										1393460,
										1393467
									],
									[
										1393807,
										1393814
									],
									[
										1394154,
										1394161
									],
									[
										1394501,
										1394508
									],
									[
										1394856,
										1394863
									],
									[
										1394899,
										1394906
									],
									[
										1394942,
										1394949
									],
									[
										1395259,
										1395266
									],
									[
										1395621,
										1395628
									],
									[
										1395834,
										1395841
									],
									[
										1396067,
										1396074
									],
									[
										1396377,
										1396384
									],
									[
										1396507,
										1396514
									],
									[
										1396677,
										1396684
									],
									[
										1396721,
										1396728
									],
									[
										1396731,
										1396738
									],
									[
										1396760,
										1396767
									],
									[
										1396904,
										1396911
									],
									[
										1397130,
										1397137
									],
									[
										1397251,
										1397258
									],
									[
										1397577,
										1397584
									],
									[
										1397621,
										1397628
									],
									[
										1397631,
										1397638
									],
									[
										1397660,
										1397667
									],
									[
										1397813,
										1397820
									],
									[
										1398147,
										1398154
									],
									[
										1398429,
										1398436
									],
									[
										1398683,
										1398690
									],
									[
										1398898,
										1398905
									],
									[
										1399209,
										1399216
									],
									[
										1399424,
										1399431
									],
									[
										1399604,
										1399611
									],
									[
										1399849,
										1399856
									],
									[
										1400045,
										1400052
									],
									[
										1400127,
										1400134
									],
									[
										1400333,
										1400340
									],
									[
										1400561,
										1400568
									],
									[
										1400608,
										1400615
									],
									[
										1400631,
										1400638
									],
									[
										1400979,
										1400986
									],
									[
										1401384,
										1401391
									],
									[
										1401431,
										1401438
									],
									[
										1401467,
										1401474
									],
									[
										1401495,
										1401502
									],
									[
										1401675,
										1401682
									],
									[
										1401929,
										1401936
									],
									[
										1401976,
										1401983
									],
									[
										1402012,
										1402019
									],
									[
										1402040,
										1402047
									],
									[
										1402217,
										1402224
									],
									[
										1402439,
										1402446
									],
									[
										1402717,
										1402724
									],
									[
										1402745,
										1402752
									],
									[
										1403042,
										1403049
									],
									[
										1403070,
										1403077
									],
									[
										1403399,
										1403406
									],
									[
										1403427,
										1403434
									],
									[
										1403719,
										1403726
									],
									[
										1403867,
										1403874
									],
									[
										1404059,
										1404066
									],
									[
										1404263,
										1404270
									],
									[
										1404537,
										1404544
									],
									[
										1404660,
										1404667
									],
									[
										1404986,
										1404993
									],
									[
										1405033,
										1405040
									],
									[
										1405069,
										1405076
									],
									[
										1405097,
										1405104
									],
									[
										1405354,
										1405361
									],
									[
										1405783,
										1405790
									],
									[
										1405804,
										1405811
									],
									[
										1405825,
										1405832
									],
									[
										1406344,
										1406351
									],
									[
										1406751,
										1406758
									],
									[
										1407209,
										1407216
									],
									[
										1407573,
										1407580
									],
									[
										1407881,
										1407888
									],
									[
										1408301,
										1408308
									],
									[
										1408621,
										1408628
									],
									[
										1408654,
										1408661
									],
									[
										1409033,
										1409040
									],
									[
										1409160,
										1409167
									],
									[
										1409278,
										1409285
									],
									[
										1409306,
										1409313
									],
									[
										1409334,
										1409341
									],
									[
										1409379,
										1409386
									],
									[
										1409479,
										1409486
									],
									[
										1409635,
										1409642
									],
									[
										1409824,
										1409831
									],
									[
										1410397,
										1410404
									],
									[
										1411056,
										1411063
									],
									[
										1411211,
										1411218
									],
									[
										1411258,
										1411265
									],
									[
										1411294,
										1411301
									],
									[
										1411329,
										1411336
									],
									[
										1411376,
										1411383
									],
									[
										1411530,
										1411537
									],
									[
										1411882,
										1411889
									],
									[
										1412138,
										1412145
									],
									[
										1412173,
										1412180
									],
									[
										1412423,
										1412430
									],
									[
										1412456,
										1412463
									],
									[
										1412716,
										1412723
									],
									[
										1413075,
										1413082
									],
									[
										1413363,
										1413370
									],
									[
										1413645,
										1413652
									],
									[
										1413894,
										1413901
									],
									[
										1413927,
										1413934
									],
									[
										1413967,
										1413974
									],
									[
										1414131,
										1414138
									],
									[
										1414470,
										1414477
									],
									[
										1414752,
										1414759
									],
									[
										1415038,
										1415045
									],
									[
										1415320,
										1415327
									],
									[
										1415418,
										1415425
									],
									[
										1415663,
										1415670
									],
									[
										1415927,
										1415934
									],
									[
										1416362,
										1416369
									],
									[
										1416569,
										1416576
									],
									[
										1416883,
										1416890
									],
									[
										1417169,
										1417176
									],
									[
										1417451,
										1417458
									],
									[
										1417549,
										1417556
									],
									[
										1417794,
										1417801
									],
									[
										1418058,
										1418065
									],
									[
										1418216,
										1418216
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								1254,
								1198
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										1469,
										1470
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"default_dir": "C:\\Program Files (x86)\\Odoo 8.0-20150121\\server\\openerp\\addons\\MMR",
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 31,
							"result_base_dir": "",
							"result_file_regex": "^([^ 	].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 270.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "akun.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 63358,
						"regions":
						{
						},
						"selection":
						[
							[
								25372,
								25372
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 8293.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "view/akun.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29074,
						"regions":
						{
						},
						"selection":
						[
							[
								11681,
								11681
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										11681,
										11682
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										11658,
										11659
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5590.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "view/customer.xml",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 8318,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										1,
										8
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "menu/menu_master.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20130,
						"regions":
						{
						},
						"selection":
						[
							[
								15149,
								15153
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										15157,
										15158
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										15130,
										15131
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5993.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "MMR.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"fal_leave_timesheethr_holida",
				"falinwa_module\\fal_leave_timesheet\\models\\hr_holidays.py"
			],
			[
				"fal_total_amount_hkd_storemodelsaccount_invoice",
				"falinwa_branch\\fal_total_amount_hkd_store\\models\\account_invoice.py"
			],
			[
				"gleize",
				"falinwa_module\\gleize_field_ext\\static\\src\\js\\gleize_field_ext.js"
			],
			[
				"sale_timesheetsale_timesheet.py",
				"addons\\sale_timesheet\\models\\sale_timesheet.py"
			],
			[
				"crmcrm_lead_view",
				"addons\\crm\\crm_lead_view.xml"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 287.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
